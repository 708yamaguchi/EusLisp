static pointer (*ftab[12])();

#define QUOTE_STRINGS_SIZE 44
static char *quote_strings[QUOTE_STRINGS_SIZE]={
    "hidden",
    "get-layer-by-name",
    "init-layer",
    "output",
    "(input hidden)",
    "get-link-by-name",
    "init-link",
    "(hidden output)",
    "input",
    "v=",
    "f-propagate-sigmoid-layer",
    "b-propagate-sigmoid-output-layer",
    "b-propagate-sigmoid-hidden-layer",
    "learn-layer",
    "(hidden output)",
    "learn-link",
    "(input hidden)",
    "*xor-dat*",
    "\"~a -> ~a : ~a ~%\"",
    "zerop",
    "\"~a:~%\"",
    "*xor-net*",
    "nn",
    "*package*",
    "\"no such package\"",
    ":vtype",
    ":global",
    "(layered-network xor-net (parameters (temperature 1.0) (alpha 0.8) (eta 0.1)) (layers (input 2) (hidden 4) (output 1)) (links ((input hidden)) ((hidden output))))",
    "construct-layered-network",
    "((#f(0.0 0.0) #f(0.0)) (#f(0.0 1.0) #f(1.0)) (#f(1.0 0.0) #f(1.0)) (#f(1.0 1.0) #f(0.0)))",
    "init-xor-net",
    "\"(net)\"",
    "fp-xor-net",
    "\"(net inp)\"",
    "bp-xor-net",
    "\"(net tgt)\"",
    "fbp-xor-net",
    "\"(net inp tgt)\"",
    "cycle-fbp-xor-net",
    "\"(net &optional (silent nil) (tset *xor-dat*))\"",
    "loop-fbp-xor-net",
    "\"(net n &optional (silent nil) (tset *xor-dat*))\"",
    "foo",
    "\"(&optional (xor-net *xor-net*) (count 10000))\"",
  };
