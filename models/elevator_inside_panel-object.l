;;
;;
;; this file is automatically generated from euslisp+euslib version EusLisp 8.26(r473M 630 46425) for Linux64 created on k-okada-t410s(Sat Apr 23 16:48:15 JST 2011)
;;
;;
(defclass elevator_inside_panel-object
  :super cascaded-link
  :slots (sensors))
(defmethod elevator_inside_panel-object
  (:init
   (&rest args &key (name "elevator_inside_panel") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
         joint0
        
         attention0
         button0 button1 button2 button3 button4 button5 button6 button7 button8 button9 button10
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :bodyset96242232
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 235.0 175.0) (float-vector -0.5 235.0 175.0) (float-vector -0.5 -235.0 175.0) (float-vector 0.5 -235.0 175.0)))
         (instance face :init :vertices (list (float-vector -0.5 235.0 -175.0) (float-vector 0.5 235.0 -175.0) (float-vector 0.5 -235.0 -175.0) (float-vector -0.5 -235.0 -175.0)))
         (instance face :init :vertices (list (float-vector 0.5 235.0 175.0) (float-vector 0.5 235.0 -175.0) (float-vector -0.5 235.0 -175.0) (float-vector -0.5 235.0 175.0)))
         (instance face :init :vertices (list (float-vector 0.5 -235.0 175.0) (float-vector 0.5 -235.0 -175.0) (float-vector 0.5 235.0 -175.0) (float-vector 0.5 235.0 175.0)))
         (instance face :init :vertices (list (float-vector -0.5 -235.0 175.0) (float-vector -0.5 -235.0 -175.0) (float-vector 0.5 -235.0 -175.0) (float-vector 0.5 -235.0 175.0)))
         (instance face :init :vertices (list (float-vector -0.5 235.0 175.0) (float-vector -0.5 235.0 -175.0) (float-vector -0.5 -235.0 -175.0) (float-vector -0.5 -235.0 175.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     ;; paste texture elevator_inside_panel_eng8.png
     (send (elt bc 0) :paste-texture-to-face (elt (send (elt bc 0) :faces)3) :file "models/elevator_inside_panel_eng8.png")
     (send (elt bc 0) :set-color (list))
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset96242232 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; definition of :attention
     (setq attention0 (make-cascoords :pos (float-vector 0.0 115.0 90.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "/elevator_number"))
     (send self :assoc attention0)

     ;; definition of :button
     (setq button0 (make-cascoords :pos (float-vector 0.0 140.0 35.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "close"))
     (send self :assoc button0)
     (setq button1 (make-cascoords :pos (float-vector 0.0 85.0 35.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "open"))
     (send self :assoc button1)
     (setq button2 (make-cascoords :pos (float-vector 0.0 140.0 -30.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "7F"))
     (send self :assoc button2)
     (setq button3 (make-cascoords :pos (float-vector 0.0 85.0 -30.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "6F"))
     (send self :assoc button3)
     (setq button4 (make-cascoords :pos (float-vector 0.0 30.0 -30.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "5F"))
     (send self :assoc button4)
     (setq button5 (make-cascoords :pos (float-vector 0.0 -25.0 -30.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "4F"))
     (send self :assoc button5)
     (setq button6 (make-cascoords :pos (float-vector 0.0 85.0 -95.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "3F"))
     (send self :assoc button6)
     (setq button7 (make-cascoords :pos (float-vector 0.0 30.0 -95.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "2F"))
     (send self :assoc button7)
     (setq button8 (make-cascoords :pos (float-vector 0.0 -25.0 -95.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "1F"))
     (send self :assoc button8)
     (setq button9 (make-cascoords :pos (float-vector 0.0 -80.0 -95.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "B1F"))
     (send self :assoc button9)
     (setq button10 (make-cascoords :pos (float-vector 0.0 -135.0 -95.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "B2F"))
     (send self :assoc button10)

     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))
  (:handle () (list ))
  (:attention () (list  attention0))
  (:attention-/elevator_number () attention0)
  (:button () (list  button0 button1 button2 button3 button4 button5 button6 button7 button8 button9 button10))
  (:button-close () button0)
  (:button-open () button1)
  (:button-7F () button2)
  (:button-6F () button3)
  (:button-5F () button4)
  (:button-4F () button5)
  (:button-3F () button6)
  (:button-2F () button7)
  (:button-1F () button8)
  (:button-B1F () button9)
  (:button-B2F () button10)
  )

(defun elevator_inside_panel (&rest args) (instance* elevator_inside_panel-object :init args))
;; (format *error-output* "(instance elevator_inside_panel-object :init) for generating model~%")
