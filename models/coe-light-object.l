;;
;;
;; this file is automatically generated from euslisp+euslib
;;
;;
(defclass coe-light-object
  :super cascaded-link
  :slots (sensors))
(defmethod coe-light-object
  (:init
   (&rest args &key (name "coe-light") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
         joint0
        
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :bodyset177123468
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 47.6314 -27.5 140.0) (float-vector 55.0 0.0 140.0) (float-vector 47.6314 27.5 140.0) (float-vector 27.5 47.6314 140.0) (float-vector 1.946112e-05 55.0 140.0) (float-vector -27.5 47.6314 140.0) (float-vector -47.6314 27.5 140.0) (float-vector -55.0 3.483849e-05 140.0) (float-vector -47.6314 -27.5 140.0) (float-vector -27.5 -47.6314 140.0) (float-vector -5.021588e-05 -55.0 140.0) (float-vector 27.4999 -47.6314 140.0)))
         (instance face :init :vertices (list (float-vector 55.0 0.0 0.0) (float-vector 47.6314 -27.5 0.0) (float-vector 27.4999 -47.6314 0.0) (float-vector -5.021588e-05 -55.0 0.0) (float-vector -27.5 -47.6314 0.0) (float-vector -47.6314 -27.5 0.0) (float-vector -55.0 3.483849e-05 0.0) (float-vector -47.6314 27.5 0.0) (float-vector -27.5 47.6314 0.0) (float-vector 1.946112e-05 55.0 0.0) (float-vector 27.5 47.6314 0.0) (float-vector 47.6314 27.5 0.0)))
         (instance face :init :vertices (list (float-vector 47.6314 -27.5 140.0) (float-vector 47.6314 -27.5 0.0) (float-vector 55.0 0.0 0.0) (float-vector 55.0 0.0 140.0)))
         (instance face :init :vertices (list (float-vector 27.4999 -47.6314 140.0) (float-vector 27.4999 -47.6314 0.0) (float-vector 47.6314 -27.5 0.0) (float-vector 47.6314 -27.5 140.0)))
         (instance face :init :vertices (list (float-vector -5.021588e-05 -55.0 140.0) (float-vector -5.021588e-05 -55.0 0.0) (float-vector 27.4999 -47.6314 0.0) (float-vector 27.4999 -47.6314 140.0)))
         (instance face :init :vertices (list (float-vector -27.5 -47.6314 140.0) (float-vector -27.5 -47.6314 0.0) (float-vector -5.021588e-05 -55.0 0.0) (float-vector -5.021588e-05 -55.0 140.0)))
         (instance face :init :vertices (list (float-vector -47.6314 -27.5 140.0) (float-vector -47.6314 -27.5 0.0) (float-vector -27.5 -47.6314 0.0) (float-vector -27.5 -47.6314 140.0)))
         (instance face :init :vertices (list (float-vector -55.0 3.483849e-05 140.0) (float-vector -55.0 3.483849e-05 0.0) (float-vector -47.6314 -27.5 0.0) (float-vector -47.6314 -27.5 140.0)))
         (instance face :init :vertices (list (float-vector -47.6314 27.5 140.0) (float-vector -47.6314 27.5 0.0) (float-vector -55.0 3.483849e-05 0.0) (float-vector -55.0 3.483849e-05 140.0)))
         (instance face :init :vertices (list (float-vector -27.5 47.6314 140.0) (float-vector -27.5 47.6314 0.0) (float-vector -47.6314 27.5 0.0) (float-vector -47.6314 27.5 140.0)))
         (instance face :init :vertices (list (float-vector 1.946112e-05 55.0 140.0) (float-vector 1.946112e-05 55.0 0.0) (float-vector -27.5 47.6314 0.0) (float-vector -27.5 47.6314 140.0)))
         (instance face :init :vertices (list (float-vector 27.5 47.6314 140.0) (float-vector 27.5 47.6314 0.0) (float-vector 1.946112e-05 55.0 0.0) (float-vector 1.946112e-05 55.0 140.0)))
         (instance face :init :vertices (list (float-vector 47.6314 27.5 140.0) (float-vector 47.6314 27.5 0.0) (float-vector 27.5 47.6314 0.0) (float-vector 27.5 47.6314 140.0)))
         (instance face :init :vertices (list (float-vector 55.0 0.0 140.0) (float-vector 55.0 0.0 0.0) (float-vector 47.6314 27.5 0.0) (float-vector 47.6314 27.5 140.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 65.0 30.0 620.0) (float-vector -65.0 30.0 620.0) (float-vector -65.0 -30.0 620.0) (float-vector 65.0 -30.0 620.0)))
         (instance face :init :vertices (list (float-vector -65.0 30.0 140.0) (float-vector 65.0 30.0 140.0) (float-vector 65.0 -30.0 140.0) (float-vector -65.0 -30.0 140.0)))
         (instance face :init :vertices (list (float-vector 65.0 30.0 620.0) (float-vector 65.0 30.0 140.0) (float-vector -65.0 30.0 140.0) (float-vector -65.0 30.0 620.0)))
         (instance face :init :vertices (list (float-vector 65.0 -30.0 620.0) (float-vector 65.0 -30.0 140.0) (float-vector 65.0 30.0 140.0) (float-vector 65.0 30.0 620.0)))
         (instance face :init :vertices (list (float-vector -65.0 -30.0 620.0) (float-vector -65.0 -30.0 140.0) (float-vector 65.0 -30.0 140.0) (float-vector 65.0 -30.0 620.0)))
         (instance face :init :vertices (list (float-vector -65.0 30.0 620.0) (float-vector -65.0 30.0 140.0) (float-vector -65.0 -30.0 140.0) (float-vector -65.0 -30.0 620.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 375.0 20.0 645.0) (float-vector -65.0 20.0 645.0) (float-vector -65.0 -20.0 645.0) (float-vector 375.0 -20.0 645.0)))
         (instance face :init :vertices (list (float-vector -65.0 20.0 615.0) (float-vector 375.0 20.0 615.0) (float-vector 375.0 -20.0 615.0) (float-vector -65.0 -20.0 615.0)))
         (instance face :init :vertices (list (float-vector 375.0 20.0 645.0) (float-vector 375.0 20.0 615.0) (float-vector -65.0 20.0 615.0) (float-vector -65.0 20.0 645.0)))
         (instance face :init :vertices (list (float-vector 375.0 -20.0 645.0) (float-vector 375.0 -20.0 615.0) (float-vector 375.0 20.0 615.0) (float-vector 375.0 20.0 645.0)))
         (instance face :init :vertices (list (float-vector -65.0 -20.0 645.0) (float-vector -65.0 -20.0 615.0) (float-vector 375.0 -20.0 615.0) (float-vector 375.0 -20.0 645.0)))
         (instance face :init :vertices (list (float-vector -65.0 20.0 645.0) (float-vector -65.0 20.0 615.0) (float-vector -65.0 -20.0 615.0) (float-vector -65.0 -20.0 645.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 530.0 0.0 620.0) (float-vector 523.149 -34.4422 620.0) (float-vector 503.639 -63.6401 620.0) (float-vector 474.441 -83.1494 620.0) (float-vector 439.999 -90.0 620.0) (float-vector 405.558 -83.149 620.0) (float-vector 376.36 -63.6393 620.0) (float-vector 356.851 -34.4411 620.0) (float-vector 350.0 0.000314 620.0) (float-vector 356.851 34.4417 620.0) (float-vector 376.36 63.6397 620.0) (float-vector 405.559 83.1492 620.0) (float-vector 440.0 90.0 620.0) (float-vector 474.442 83.1491 620.0) (float-vector 503.64 63.6396 620.0) (float-vector 523.149 34.4415 620.0)))
         (instance face :init :vertices (list (float-vector 490.813 -21.048 730.0) (float-vector 523.149 -34.4422 620.0) (float-vector 530.0 0.0 620.0) (float-vector 495.0 0.0 730.0)))
         (instance face :init :vertices (list (float-vector 478.891 -38.8911 730.0) (float-vector 503.639 -63.6401 620.0) (float-vector 523.149 -34.4422 620.0) (float-vector 490.813 -21.048 730.0)))
         (instance face :init :vertices (list (float-vector 461.047 -50.8135 730.0) (float-vector 474.441 -83.1494 620.0) (float-vector 503.639 -63.6401 620.0) (float-vector 478.891 -38.8911 730.0)))
         (instance face :init :vertices (list (float-vector 440.0 -55.0 730.0) (float-vector 439.999 -90.0 620.0) (float-vector 474.441 -83.1494 620.0) (float-vector 461.047 -50.8135 730.0)))
         (instance face :init :vertices (list (float-vector 418.952 -50.8133 730.0) (float-vector 405.558 -83.149 620.0) (float-vector 439.999 -90.0 620.0) (float-vector 440.0 -55.0 730.0)))
         (instance face :init :vertices (list (float-vector 401.109 -38.8907 730.0) (float-vector 376.36 -63.6393 620.0) (float-vector 405.558 -83.149 620.0) (float-vector 418.952 -50.8133 730.0)))
         (instance face :init :vertices (list (float-vector 389.187 -21.0474 730.0) (float-vector 356.851 -34.4411 620.0) (float-vector 376.36 -63.6393 620.0) (float-vector 401.109 -38.8907 730.0)))
         (instance face :init :vertices (list (float-vector 385.0 0.000192 730.0) (float-vector 350.0 0.000314 620.0) (float-vector 356.851 -34.4411 620.0) (float-vector 389.187 -21.0474 730.0)))
         (instance face :init :vertices (list (float-vector 389.187 21.0477 730.0) (float-vector 356.851 34.4417 620.0) (float-vector 350.0 0.000314 620.0) (float-vector 385.0 0.000192 730.0)))
         (instance face :init :vertices (list (float-vector 401.109 38.8909 730.0) (float-vector 376.36 63.6397 620.0) (float-vector 356.851 34.4417 620.0) (float-vector 389.187 21.0477 730.0)))
         (instance face :init :vertices (list (float-vector 418.952 50.8134 730.0) (float-vector 405.559 83.1492 620.0) (float-vector 376.36 63.6397 620.0) (float-vector 401.109 38.8909 730.0)))
         (instance face :init :vertices (list (float-vector 440.0 55.0 730.0) (float-vector 440.0 90.0 620.0) (float-vector 405.559 83.1492 620.0) (float-vector 418.952 50.8134 730.0)))
         (instance face :init :vertices (list (float-vector 461.048 50.8134 730.0) (float-vector 474.442 83.1491 620.0) (float-vector 440.0 90.0 620.0) (float-vector 440.0 55.0 730.0)))
         (instance face :init :vertices (list (float-vector 478.891 38.8909 730.0) (float-vector 503.64 63.6396 620.0) (float-vector 474.442 83.1491 620.0) (float-vector 461.048 50.8134 730.0)))
         (instance face :init :vertices (list (float-vector 490.813 21.0476 730.0) (float-vector 523.149 34.4415 620.0) (float-vector 503.64 63.6396 620.0) (float-vector 478.891 38.8909 730.0)))
         (instance face :init :vertices (list (float-vector 495.0 0.0 730.0) (float-vector 530.0 0.0 620.0) (float-vector 523.149 34.4415 620.0) (float-vector 490.813 21.0476 730.0)))
         (instance face :init :vertices (list (float-vector 490.813 -21.048 730.0) (float-vector 495.0 0.0 730.0) (float-vector 490.813 21.0476 730.0) (float-vector 478.891 38.8909 730.0) (float-vector 461.048 50.8134 730.0) (float-vector 440.0 55.0 730.0) (float-vector 418.952 50.8134 730.0) (float-vector 401.109 38.8909 730.0) (float-vector 389.187 21.0477 730.0) (float-vector 385.0 0.000192 730.0) (float-vector 389.187 -21.0474 730.0) (float-vector 401.109 -38.8907 730.0) (float-vector 418.952 -50.8133 730.0) (float-vector 440.0 -55.0 730.0) (float-vector 461.047 -50.8135 730.0) (float-vector 478.891 -38.8911 730.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray50)
     (send (elt bc 1) :set-color :gray50)
     (send (elt bc 2) :set-color :gray50)
     (send (elt bc 3) :set-color :orange)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset177123468 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)
     self))
  )

(defun coe-light (&rest args) (instance* coe-light-object :init args))
;; (format *error-output* "(instance coe-light-object :init) for generating model~%")
