;;
;;
;; this file is automatically generated from euslisp+euslib version EusLisp 8.26(r472M 630 46425) for Linux64 created on k-okada-t410s(Tue Mar 8 13:24:11 JST 2011)
;;
;;
(defclass audio_shelf-object
  :super cascaded-link
  :slots (sensors))
(defmethod audio_shelf-object
  (:init
   (&rest args &key (name "audio_shelf") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5
         joint0 joint1 joint2 joint3 joint4 joint5
        
         handle0
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 232.5 575.0 620.0) (float-vector -232.5 575.0 620.0) (float-vector -232.5 -575.0 620.0) (float-vector 232.5 -575.0 620.0)))
         (instance face :init :vertices (list (float-vector -232.5 575.0 600.0) (float-vector 232.5 575.0 600.0) (float-vector 232.5 -575.0 600.0) (float-vector -232.5 -575.0 600.0)))
         (instance face :init :vertices (list (float-vector 232.5 575.0 620.0) (float-vector 232.5 575.0 600.0) (float-vector -232.5 575.0 600.0) (float-vector -232.5 575.0 620.0)))
         (instance face :init :vertices (list (float-vector 232.5 -575.0 620.0) (float-vector 232.5 -575.0 600.0) (float-vector 232.5 575.0 600.0) (float-vector 232.5 575.0 620.0)))
         (instance face :init :vertices (list (float-vector -232.5 -575.0 620.0) (float-vector -232.5 -575.0 600.0) (float-vector 232.5 -575.0 600.0) (float-vector 232.5 -575.0 620.0)))
         (instance face :init :vertices (list (float-vector -232.5 575.0 620.0) (float-vector -232.5 575.0 600.0) (float-vector -232.5 -575.0 600.0) (float-vector -232.5 -575.0 620.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 222.5 575.0 84.5) (float-vector -232.5 575.0 84.5) (float-vector -232.5 -575.0 84.5) (float-vector 222.5 -575.0 84.5)))
         (instance face :init :vertices (list (float-vector -232.5 575.0 -0.5) (float-vector 222.5 575.0 -0.5) (float-vector 222.5 -575.0 -0.5) (float-vector -232.5 -575.0 -0.5)))
         (instance face :init :vertices (list (float-vector 222.5 575.0 84.5) (float-vector 222.5 575.0 -0.5) (float-vector -232.5 575.0 -0.5) (float-vector -232.5 575.0 84.5)))
         (instance face :init :vertices (list (float-vector 222.5 -575.0 84.5) (float-vector 222.5 -575.0 -0.5) (float-vector 222.5 575.0 -0.5) (float-vector 222.5 575.0 84.5)))
         (instance face :init :vertices (list (float-vector -232.5 -575.0 84.5) (float-vector -232.5 -575.0 -0.5) (float-vector 222.5 -575.0 -0.5) (float-vector 222.5 -575.0 84.5)))
         (instance face :init :vertices (list (float-vector -232.5 575.0 84.5) (float-vector -232.5 575.0 -0.5) (float-vector -232.5 -575.0 -0.5) (float-vector -232.5 -575.0 84.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -202.0 545.0 599.5) (float-vector -232.0 545.0 599.5) (float-vector -232.0 -545.0 599.5) (float-vector -202.0 -545.0 599.5)))
         (instance face :init :vertices (list (float-vector -232.0 545.0 84.5) (float-vector -202.0 545.0 84.5) (float-vector -202.0 -545.0 84.5) (float-vector -232.0 -545.0 84.5)))
         (instance face :init :vertices (list (float-vector -202.0 545.0 599.5) (float-vector -202.0 545.0 84.5) (float-vector -232.0 545.0 84.5) (float-vector -232.0 545.0 599.5)))
         (instance face :init :vertices (list (float-vector -202.0 -545.0 599.5) (float-vector -202.0 -545.0 84.5) (float-vector -202.0 545.0 84.5) (float-vector -202.0 545.0 599.5)))
         (instance face :init :vertices (list (float-vector -232.0 -545.0 599.5) (float-vector -232.0 -545.0 84.5) (float-vector -202.0 -545.0 84.5) (float-vector -202.0 -545.0 599.5)))
         (instance face :init :vertices (list (float-vector -232.0 545.0 599.5) (float-vector -232.0 545.0 84.5) (float-vector -232.0 -545.0 84.5) (float-vector -232.0 -545.0 599.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 222.5 575.0 599.5) (float-vector -232.5 575.0 599.5) (float-vector -232.5 545.0 599.5) (float-vector 222.5 545.0 599.5)))
         (instance face :init :vertices (list (float-vector -232.5 575.0 84.5) (float-vector 222.5 575.0 84.5) (float-vector 222.5 545.0 84.5) (float-vector -232.5 545.0 84.5)))
         (instance face :init :vertices (list (float-vector 222.5 575.0 599.5) (float-vector 222.5 575.0 84.5) (float-vector -232.5 575.0 84.5) (float-vector -232.5 575.0 599.5)))
         (instance face :init :vertices (list (float-vector 222.5 545.0 599.5) (float-vector 222.5 545.0 84.5) (float-vector 222.5 575.0 84.5) (float-vector 222.5 575.0 599.5)))
         (instance face :init :vertices (list (float-vector -232.5 545.0 599.5) (float-vector -232.5 545.0 84.5) (float-vector 222.5 545.0 84.5) (float-vector 222.5 545.0 599.5)))
         (instance face :init :vertices (list (float-vector -232.5 575.0 599.5) (float-vector -232.5 575.0 84.5) (float-vector -232.5 545.0 84.5) (float-vector -232.5 545.0 599.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 222.5 -545.0 599.5) (float-vector -232.5 -545.0 599.5) (float-vector -232.5 -575.0 599.5) (float-vector 222.5 -575.0 599.5)))
         (instance face :init :vertices (list (float-vector -232.5 -545.0 84.5) (float-vector 222.5 -545.0 84.5) (float-vector 222.5 -575.0 84.5) (float-vector -232.5 -575.0 84.5)))
         (instance face :init :vertices (list (float-vector 222.5 -545.0 599.5) (float-vector 222.5 -545.0 84.5) (float-vector -232.5 -545.0 84.5) (float-vector -232.5 -545.0 599.5)))
         (instance face :init :vertices (list (float-vector 222.5 -575.0 599.5) (float-vector 222.5 -575.0 84.5) (float-vector 222.5 -545.0 84.5) (float-vector 222.5 -545.0 599.5)))
         (instance face :init :vertices (list (float-vector -232.5 -575.0 599.5) (float-vector -232.5 -575.0 84.5) (float-vector 222.5 -575.0 84.5) (float-vector 222.5 -575.0 599.5)))
         (instance face :init :vertices (list (float-vector -232.5 -545.0 599.5) (float-vector -232.5 -545.0 84.5) (float-vector -232.5 -575.0 84.5) (float-vector -232.5 -575.0 599.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 222.5 545.0 300.0) (float-vector -202.5 545.0 300.0) (float-vector -202.5 -545.0 300.0) (float-vector 222.5 -545.0 300.0)))
         (instance face :init :vertices (list (float-vector -202.5 545.0 270.0) (float-vector 222.5 545.0 270.0) (float-vector 222.5 -545.0 270.0) (float-vector -202.5 -545.0 270.0)))
         (instance face :init :vertices (list (float-vector 222.5 545.0 300.0) (float-vector 222.5 545.0 270.0) (float-vector -202.5 545.0 270.0) (float-vector -202.5 545.0 300.0)))
         (instance face :init :vertices (list (float-vector 222.5 -545.0 300.0) (float-vector 222.5 -545.0 270.0) (float-vector 222.5 545.0 270.0) (float-vector 222.5 545.0 300.0)))
         (instance face :init :vertices (list (float-vector -202.5 -545.0 300.0) (float-vector -202.5 -545.0 270.0) (float-vector 222.5 -545.0 270.0) (float-vector 222.5 -545.0 300.0)))
         (instance face :init :vertices (list (float-vector -202.5 545.0 300.0) (float-vector -202.5 545.0 270.0) (float-vector -202.5 -545.0 270.0) (float-vector -202.5 -545.0 300.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 222.5 545.0 400.0) (float-vector -202.5 545.0 400.0) (float-vector -202.5 -545.0 400.0) (float-vector 222.5 -545.0 400.0)))
         (instance face :init :vertices (list (float-vector -202.5 545.0 370.0) (float-vector 222.5 545.0 370.0) (float-vector 222.5 -545.0 370.0) (float-vector -202.5 -545.0 370.0)))
         (instance face :init :vertices (list (float-vector 222.5 545.0 400.0) (float-vector 222.5 545.0 370.0) (float-vector -202.5 545.0 370.0) (float-vector -202.5 545.0 400.0)))
         (instance face :init :vertices (list (float-vector 222.5 -545.0 400.0) (float-vector 222.5 -545.0 370.0) (float-vector 222.5 545.0 370.0) (float-vector 222.5 545.0 400.0)))
         (instance face :init :vertices (list (float-vector -202.5 -545.0 400.0) (float-vector -202.5 -545.0 370.0) (float-vector 222.5 -545.0 370.0) (float-vector 222.5 -545.0 400.0)))
         (instance face :init :vertices (list (float-vector -202.5 545.0 400.0) (float-vector -202.5 545.0 370.0) (float-vector -202.5 -545.0 370.0) (float-vector -202.5 -545.0 400.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :peru)
     (send (elt bc 1) :set-color :peru)
     (send (elt bc 2) :set-color :peru)
     (send (elt bc 3) :set-color :peru)
     (send (elt bc 4) :set-color :peru)
     (send (elt bc 5) :set-color :peru)
     (send (elt bc 6) :set-color :peru)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :bodyset128706768
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 10.0 540.0) (float-vector -10.0 10.0 540.0) (float-vector -10.0 -380.0 540.0) (float-vector 10.0 -380.0 540.0)))
         (instance face :init :vertices (list (float-vector -10.0 10.0 0.0) (float-vector 10.0 10.0 0.0) (float-vector 10.0 -380.0 0.0) (float-vector -10.0 -380.0 0.0)))
         (instance face :init :vertices (list (float-vector 10.0 10.0 540.0) (float-vector 10.0 10.0 0.0) (float-vector -10.0 10.0 0.0) (float-vector -10.0 10.0 540.0)))
         (instance face :init :vertices (list (float-vector 10.0 -380.0 540.0) (float-vector 10.0 -380.0 0.0) (float-vector 10.0 10.0 0.0) (float-vector 10.0 10.0 540.0)))
         (instance face :init :vertices (list (float-vector -10.0 -380.0 540.0) (float-vector -10.0 -380.0 0.0) (float-vector 10.0 -380.0 0.0) (float-vector 10.0 -380.0 540.0)))
         (instance face :init :vertices (list (float-vector -10.0 10.0 540.0) (float-vector -10.0 10.0 0.0) (float-vector -10.0 -380.0 0.0) (float-vector -10.0 -380.0 540.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :peru)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset128706768 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :bodyset128667584
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 380.0 540.0) (float-vector -10.0 380.0 540.0) (float-vector -10.0 -10.0 540.0) (float-vector 10.0 -10.0 540.0)))
         (instance face :init :vertices (list (float-vector -10.0 380.0 0.0) (float-vector 10.0 380.0 0.0) (float-vector 10.0 -10.0 0.0) (float-vector -10.0 -10.0 0.0)))
         (instance face :init :vertices (list (float-vector 10.0 380.0 540.0) (float-vector 10.0 380.0 0.0) (float-vector -10.0 380.0 0.0) (float-vector -10.0 380.0 540.0)))
         (instance face :init :vertices (list (float-vector 10.0 -10.0 540.0) (float-vector 10.0 -10.0 0.0) (float-vector 10.0 380.0 0.0) (float-vector 10.0 380.0 540.0)))
         (instance face :init :vertices (list (float-vector -10.0 -10.0 540.0) (float-vector -10.0 -10.0 0.0) (float-vector 10.0 -10.0 0.0) (float-vector 10.0 -10.0 540.0)))
         (instance face :init :vertices (list (float-vector -10.0 380.0 540.0) (float-vector -10.0 380.0 0.0) (float-vector -10.0 -10.0 0.0) (float-vector -10.0 -10.0 540.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :peru)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset128667584 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :bodyset128694728
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -222.5 175.0 -60.0) (float-vector -222.5 -175.0 -60.0) (float-vector -222.5 -175.0 60.0) (float-vector -222.5 175.0 60.0)))
         (instance face :init :vertices (list (float-vector 222.5 -175.0 -60.0) (float-vector 222.5 -175.0 60.0) (float-vector -222.5 -175.0 60.0) (float-vector -222.5 -175.0 -60.0)))
         (instance face :init :vertices (list (float-vector 222.5 175.0 -60.0) (float-vector 222.5 175.0 60.0) (float-vector 222.5 165.0 60.0) (float-vector 222.5 165.0 -50.0) (float-vector 222.5 -165.0 -50.0) (float-vector 222.5 -165.0 60.0) (float-vector 222.5 -175.0 60.0) (float-vector 222.5 -175.0 -60.0)))
         (instance face :init :vertices (list (float-vector -222.5 175.0 60.0) (float-vector -222.5 -175.0 60.0) (float-vector 222.5 -175.0 60.0) (float-vector 222.5 -165.0 60.0) (float-vector -212.5 -165.0 60.0) (float-vector -212.5 165.0 60.0) (float-vector 222.5 165.0 60.0) (float-vector 222.5 175.0 60.0)))
         (instance face :init :vertices (list (float-vector 222.5 175.0 -60.0) (float-vector 222.5 -175.0 -60.0) (float-vector -222.5 -175.0 -60.0) (float-vector -222.5 175.0 -60.0)))
         (instance face :init :vertices (list (float-vector -222.5 175.0 -60.0) (float-vector -222.5 175.0 60.0) (float-vector 222.5 175.0 60.0) (float-vector 222.5 175.0 -60.0)))
         (instance face :init :vertices (list (float-vector -212.5 165.0 60.0) (float-vector -212.5 -165.0 60.0) (float-vector -212.5 -165.0 -50.0) (float-vector -212.5 165.0 -50.0)))
         (instance face :init :vertices (list (float-vector -212.5 -165.0 -50.0) (float-vector -212.5 -165.0 60.0) (float-vector 222.5 -165.0 60.0) (float-vector 222.5 -165.0 -50.0)))
         (instance face :init :vertices (list (float-vector 222.5 165.0 -50.0) (float-vector 222.5 165.0 60.0) (float-vector -212.5 165.0 60.0) (float-vector -212.5 165.0 -50.0)))
         (instance face :init :vertices (list (float-vector -212.5 165.0 -50.0) (float-vector -212.5 -165.0 -50.0) (float-vector 222.5 -165.0 -50.0) (float-vector 222.5 165.0 -50.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 232.0 185.0 70.0) (float-vector 222.0 185.0 70.0) (float-vector 222.0 -185.0 70.0) (float-vector 232.0 -185.0 70.0)))
         (instance face :init :vertices (list (float-vector 222.0 185.0 -60.0) (float-vector 232.0 185.0 -60.0) (float-vector 232.0 -185.0 -60.0) (float-vector 222.0 -185.0 -60.0)))
         (instance face :init :vertices (list (float-vector 232.0 185.0 70.0) (float-vector 232.0 185.0 -60.0) (float-vector 222.0 185.0 -60.0) (float-vector 222.0 185.0 70.0)))
         (instance face :init :vertices (list (float-vector 232.0 -185.0 70.0) (float-vector 232.0 -185.0 -60.0) (float-vector 232.0 185.0 -60.0) (float-vector 232.0 185.0 70.0)))
         (instance face :init :vertices (list (float-vector 222.0 -185.0 70.0) (float-vector 222.0 -185.0 -60.0) (float-vector 232.0 -185.0 -60.0) (float-vector 232.0 -185.0 70.0)))
         (instance face :init :vertices (list (float-vector 222.0 185.0 70.0) (float-vector 222.0 185.0 -60.0) (float-vector 222.0 -185.0 -60.0) (float-vector 222.0 -185.0 70.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :peru)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset128694728 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :bodyset128634808
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -222.5 175.0 -80.0) (float-vector -222.5 -175.0 -80.0) (float-vector -222.5 -175.0 80.0) (float-vector -222.5 175.0 80.0)))
         (instance face :init :vertices (list (float-vector 222.5 -175.0 -80.0) (float-vector 222.5 -175.0 80.0) (float-vector -222.5 -175.0 80.0) (float-vector -222.5 -175.0 -80.0)))
         (instance face :init :vertices (list (float-vector 222.5 175.0 -80.0) (float-vector 222.5 175.0 80.0) (float-vector 222.5 165.0 80.0) (float-vector 222.5 165.0 -70.0) (float-vector 222.5 -165.0 -70.0) (float-vector 222.5 -165.0 80.0) (float-vector 222.5 -175.0 80.0) (float-vector 222.5 -175.0 -80.0)))
         (instance face :init :vertices (list (float-vector -222.5 175.0 80.0) (float-vector -222.5 -175.0 80.0) (float-vector 222.5 -175.0 80.0) (float-vector 222.5 -165.0 80.0) (float-vector -212.5 -165.0 80.0) (float-vector -212.5 165.0 80.0) (float-vector 222.5 165.0 80.0) (float-vector 222.5 175.0 80.0)))
         (instance face :init :vertices (list (float-vector 222.5 175.0 -80.0) (float-vector 222.5 -175.0 -80.0) (float-vector -222.5 -175.0 -80.0) (float-vector -222.5 175.0 -80.0)))
         (instance face :init :vertices (list (float-vector -222.5 175.0 -80.0) (float-vector -222.5 175.0 80.0) (float-vector 222.5 175.0 80.0) (float-vector 222.5 175.0 -80.0)))
         (instance face :init :vertices (list (float-vector -212.5 165.0 80.0) (float-vector -212.5 -165.0 80.0) (float-vector -212.5 -165.0 -70.0) (float-vector -212.5 165.0 -70.0)))
         (instance face :init :vertices (list (float-vector -212.5 -165.0 -70.0) (float-vector -212.5 -165.0 80.0) (float-vector 222.5 -165.0 80.0) (float-vector 222.5 -165.0 -70.0)))
         (instance face :init :vertices (list (float-vector 222.5 165.0 -70.0) (float-vector 222.5 165.0 80.0) (float-vector -212.5 165.0 80.0) (float-vector -212.5 165.0 -70.0)))
         (instance face :init :vertices (list (float-vector -212.5 165.0 -70.0) (float-vector -212.5 -165.0 -70.0) (float-vector 222.5 -165.0 -70.0) (float-vector 222.5 165.0 -70.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 232.0 185.0 90.0) (float-vector 222.0 185.0 90.0) (float-vector 222.0 -185.0 90.0) (float-vector 232.0 -185.0 90.0)))
         (instance face :init :vertices (list (float-vector 222.0 185.0 -80.0) (float-vector 232.0 185.0 -80.0) (float-vector 232.0 -185.0 -80.0) (float-vector 222.0 -185.0 -80.0)))
         (instance face :init :vertices (list (float-vector 232.0 185.0 90.0) (float-vector 232.0 185.0 -80.0) (float-vector 222.0 185.0 -80.0) (float-vector 222.0 185.0 90.0)))
         (instance face :init :vertices (list (float-vector 232.0 -185.0 90.0) (float-vector 232.0 -185.0 -80.0) (float-vector 232.0 185.0 -80.0) (float-vector 232.0 185.0 90.0)))
         (instance face :init :vertices (list (float-vector 222.0 -185.0 90.0) (float-vector 222.0 -185.0 -80.0) (float-vector 232.0 -185.0 -80.0) (float-vector 232.0 -185.0 90.0)))
         (instance face :init :vertices (list (float-vector 222.0 185.0 90.0) (float-vector 222.0 185.0 -80.0) (float-vector 222.0 -185.0 -80.0) (float-vector 222.0 -185.0 90.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :peru)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset128634808 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :bodyset128643040
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -222.5 175.0 -100.0) (float-vector -222.5 -175.0 -100.0) (float-vector -222.5 -175.0 100.0) (float-vector -222.5 175.0 100.0)))
         (instance face :init :vertices (list (float-vector 222.5 -175.0 -100.0) (float-vector 222.5 -175.0 100.0) (float-vector -222.5 -175.0 100.0) (float-vector -222.5 -175.0 -100.0)))
         (instance face :init :vertices (list (float-vector 222.5 175.0 -100.0) (float-vector 222.5 175.0 100.0) (float-vector 222.5 165.0 100.0) (float-vector 222.5 165.0 -90.0) (float-vector 222.5 -165.0 -90.0) (float-vector 222.5 -165.0 100.0) (float-vector 222.5 -175.0 100.0) (float-vector 222.5 -175.0 -100.0)))
         (instance face :init :vertices (list (float-vector -222.5 175.0 100.0) (float-vector -222.5 -175.0 100.0) (float-vector 222.5 -175.0 100.0) (float-vector 222.5 -165.0 100.0) (float-vector -212.5 -165.0 100.0) (float-vector -212.5 165.0 100.0) (float-vector 222.5 165.0 100.0) (float-vector 222.5 175.0 100.0)))
         (instance face :init :vertices (list (float-vector 222.5 175.0 -100.0) (float-vector 222.5 -175.0 -100.0) (float-vector -222.5 -175.0 -100.0) (float-vector -222.5 175.0 -100.0)))
         (instance face :init :vertices (list (float-vector -222.5 175.0 -100.0) (float-vector -222.5 175.0 100.0) (float-vector 222.5 175.0 100.0) (float-vector 222.5 175.0 -100.0)))
         (instance face :init :vertices (list (float-vector -212.5 165.0 100.0) (float-vector -212.5 -165.0 100.0) (float-vector -212.5 -165.0 -90.0) (float-vector -212.5 165.0 -90.0)))
         (instance face :init :vertices (list (float-vector -212.5 -165.0 -90.0) (float-vector -212.5 -165.0 100.0) (float-vector 222.5 -165.0 100.0) (float-vector 222.5 -165.0 -90.0)))
         (instance face :init :vertices (list (float-vector 222.5 165.0 -90.0) (float-vector 222.5 165.0 100.0) (float-vector -212.5 165.0 100.0) (float-vector -212.5 165.0 -90.0)))
         (instance face :init :vertices (list (float-vector -212.5 165.0 -90.0) (float-vector -212.5 -165.0 -90.0) (float-vector 222.5 -165.0 -90.0) (float-vector 222.5 165.0 -90.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 232.0 185.0 110.0) (float-vector 222.0 185.0 110.0) (float-vector 222.0 -185.0 110.0) (float-vector 232.0 -185.0 110.0)))
         (instance face :init :vertices (list (float-vector 222.0 185.0 -100.0) (float-vector 232.0 185.0 -100.0) (float-vector 232.0 -185.0 -100.0) (float-vector 222.0 -185.0 -100.0)))
         (instance face :init :vertices (list (float-vector 232.0 185.0 110.0) (float-vector 232.0 185.0 -100.0) (float-vector 222.0 185.0 -100.0) (float-vector 222.0 185.0 110.0)))
         (instance face :init :vertices (list (float-vector 232.0 -185.0 110.0) (float-vector 232.0 -185.0 -100.0) (float-vector 232.0 185.0 -100.0) (float-vector 232.0 185.0 110.0)))
         (instance face :init :vertices (list (float-vector 222.0 -185.0 110.0) (float-vector 222.0 -185.0 -100.0) (float-vector 232.0 -185.0 -100.0) (float-vector 232.0 -185.0 110.0)))
         (instance face :init :vertices (list (float-vector 222.0 185.0 110.0) (float-vector 222.0 185.0 -100.0) (float-vector 222.0 -185.0 -100.0) (float-vector 222.0 -185.0 110.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :peru)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset128643040 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink1 :newcoords (make-coords :pos (float-vector 0.0 390.0 180.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send blink2 :newcoords (make-coords :pos (float-vector 0.0 390.0 370.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink2)
     (send blink3 :newcoords (make-coords :pos (float-vector 0.0 390.0 520.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink3)
     (send blink4 :newcoords (make-coords :pos (float-vector 222.0 -565.0 80.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink4)
     (send blink5 :newcoords (make-coords :pos (float-vector 222.0 195.0 80.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink5)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :drawer1
     (setq joint0 (instance linear-joint :init
			     :parent-link blink0 :child-link blink1 :name :drawer1   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  465.0))

     ;; definition of :drawer2
     (setq joint1 (instance linear-joint :init
			     :parent-link blink0 :child-link blink2 :name :drawer2   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  465.0))

     ;; definition of :drawer3
     (setq joint2 (instance linear-joint :init
			     :parent-link blink0 :child-link blink3 :name :drawer3   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  465.0))

     ;; definition of :door-right
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink4 :name :door-right :axis :-z
			     :min    0.0 :max   90.0))

     ;; definition of :door-left
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink5 :name :door-left :axis :z 
			     :min    0.0 :max   90.0))


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "handle0"))
     (send self :assoc handle0)

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))
  (:handle () (list  handle0))
  (:handle-handle0 () handle0)
  (:attention () (list ))
  (:button () (list ))
  )

(defun audio_shelf (&rest args) (instance* audio_shelf-object :init args))
;; (format *error-output* "(instance audio_shelf-object :init) for generating model~%")
