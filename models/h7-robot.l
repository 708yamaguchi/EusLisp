;;
;;
;; this file is automatically generated from euslisp+euslib
;;
;;
(defclass h7-robot
  :super robot-model
  :slots (sensors))
(defmethod h7-robot
  (:init
   (&rest args &key (name "h7") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink17 blink18 blink19 blink20 blink21 blink22 blink23 blink24 blink25 blink26 blink27 blink28 blink29 blink30 blink31 blink32 blink33 blink34 blink35 blink36
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16 joint17 joint18 joint19 joint20 joint21 joint22 joint23 joint24 joint25 joint26 joint27 joint28 joint29 joint30 joint31 joint32 joint33 joint34 joint35 joint36
         sensor0 sensor1 sensor2 sensor3 sensor4 sensor5 sensor6 sensor7 sensor8 sensor9 sensor10 sensor11 sensor12 sensor13 sensor14 sensor15 sensor16 sensor17 sensor18 sensor19 sensor20 sensor21 sensor22 sensor23 sensor24 sensor25 sensor26 sensor27
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.0 -110.0 565.0) (float-vector -15.0 -100.0 565.0) (float-vector -25.0 -100.0 565.0) (float-vector -24.9999 -110.0 565.0)))
         (instance face :init :vertices (list (float-vector -15.0 -100.0 555.0) (float-vector -15.0 -110.0 555.0) (float-vector -24.9999 -110.0 555.0) (float-vector -25.0 -100.0 555.0)))
         (instance face :init :vertices (list (float-vector -15.0 -110.0 565.0) (float-vector -15.0 -110.0 555.0) (float-vector -15.0 -100.0 555.0) (float-vector -15.0 -100.0 565.0)))
         (instance face :init :vertices (list (float-vector -24.9999 -110.0 565.0) (float-vector -24.9999 -110.0 555.0) (float-vector -15.0 -110.0 555.0) (float-vector -15.0 -110.0 565.0)))
         (instance face :init :vertices (list (float-vector -25.0 -100.0 565.0) (float-vector -25.0 -100.0 555.0) (float-vector -24.9999 -110.0 555.0) (float-vector -24.9999 -110.0 565.0)))
         (instance face :init :vertices (list (float-vector -15.0 -100.0 565.0) (float-vector -15.0 -100.0 555.0) (float-vector -25.0 -100.0 555.0) (float-vector -25.0 -100.0 565.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.0 100.0 565.0) (float-vector -15.0 110.0 565.0) (float-vector -25.0 110.0 565.0) (float-vector -25.0 100.0 565.0)))
         (instance face :init :vertices (list (float-vector -15.0 110.0 555.0) (float-vector -15.0 100.0 555.0) (float-vector -25.0 100.0 555.0) (float-vector -25.0 110.0 555.0)))
         (instance face :init :vertices (list (float-vector -15.0 100.0 565.0) (float-vector -15.0 100.0 555.0) (float-vector -15.0 110.0 555.0) (float-vector -15.0 110.0 565.0)))
         (instance face :init :vertices (list (float-vector -25.0 100.0 565.0) (float-vector -25.0 100.0 555.0) (float-vector -15.0 100.0 555.0) (float-vector -15.0 100.0 565.0)))
         (instance face :init :vertices (list (float-vector -25.0 110.0 565.0) (float-vector -25.0 110.0 555.0) (float-vector -25.0 100.0 555.0) (float-vector -25.0 100.0 565.0)))
         (instance face :init :vertices (list (float-vector -15.0 110.0 565.0) (float-vector -15.0 110.0 555.0) (float-vector -25.0 110.0 555.0) (float-vector -25.0 110.0 565.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.5 -114.847 185.5) (float-vector 5.129470e-05 -119.0 185.5) (float-vector 15.5 -114.847 185.5) (float-vector 26.8468 -103.5 185.5) (float-vector 31.0 -88.0 185.5) (float-vector 26.8468 -72.5 185.5) (float-vector 15.5 -61.1532 185.5) (float-vector 4.317590e-05 -57.0 185.5) (float-vector -15.5 -61.1532 185.5) (float-vector -26.8467 -72.5 185.5) (float-vector -31.0 -88.0 185.5) (float-vector -26.8468 -103.5 185.5)))
         (instance face :init :vertices (list (float-vector 5.129470e-05 -119.0 180.5) (float-vector -15.5 -114.847 180.5) (float-vector -26.8468 -103.5 180.5) (float-vector -31.0 -88.0 180.5) (float-vector -26.8467 -72.5 180.5) (float-vector -15.5 -61.1532 180.5) (float-vector 4.317590e-05 -57.0 180.5) (float-vector 15.5 -61.1532 180.5) (float-vector 26.8468 -72.5 180.5) (float-vector 31.0 -88.0 180.5) (float-vector 26.8468 -103.5 180.5) (float-vector 15.5 -114.847 180.5)))
         (instance face :init :vertices (list (float-vector -15.5 -114.847 185.5) (float-vector -15.5 -114.847 180.5) (float-vector 5.129470e-05 -119.0 180.5) (float-vector 5.129470e-05 -119.0 185.5)))
         (instance face :init :vertices (list (float-vector -26.8468 -103.5 185.5) (float-vector -26.8468 -103.5 180.5) (float-vector -15.5 -114.847 180.5) (float-vector -15.5 -114.847 185.5)))
         (instance face :init :vertices (list (float-vector -31.0 -88.0 185.5) (float-vector -31.0 -88.0 180.5) (float-vector -26.8468 -103.5 180.5) (float-vector -26.8468 -103.5 185.5)))
         (instance face :init :vertices (list (float-vector -26.8467 -72.5 185.5) (float-vector -26.8467 -72.5 180.5) (float-vector -31.0 -88.0 180.5) (float-vector -31.0 -88.0 185.5)))
         (instance face :init :vertices (list (float-vector -15.5 -61.1532 185.5) (float-vector -15.5 -61.1532 180.5) (float-vector -26.8467 -72.5 180.5) (float-vector -26.8467 -72.5 185.5)))
         (instance face :init :vertices (list (float-vector 4.317590e-05 -57.0 185.5) (float-vector 4.317590e-05 -57.0 180.5) (float-vector -15.5 -61.1532 180.5) (float-vector -15.5 -61.1532 185.5)))
         (instance face :init :vertices (list (float-vector 15.5 -61.1532 185.5) (float-vector 15.5 -61.1532 180.5) (float-vector 4.317590e-05 -57.0 180.5) (float-vector 4.317590e-05 -57.0 185.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -72.5 185.5) (float-vector 26.8468 -72.5 180.5) (float-vector 15.5 -61.1532 180.5) (float-vector 15.5 -61.1532 185.5)))
         (instance face :init :vertices (list (float-vector 31.0 -88.0 185.5) (float-vector 31.0 -88.0 180.5) (float-vector 26.8468 -72.5 180.5) (float-vector 26.8468 -72.5 185.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -103.5 185.5) (float-vector 26.8468 -103.5 180.5) (float-vector 31.0 -88.0 180.5) (float-vector 31.0 -88.0 185.5)))
         (instance face :init :vertices (list (float-vector 15.5 -114.847 185.5) (float-vector 15.5 -114.847 180.5) (float-vector 26.8468 -103.5 180.5) (float-vector 26.8468 -103.5 185.5)))
         (instance face :init :vertices (list (float-vector 5.129470e-05 -119.0 185.5) (float-vector 5.129470e-05 -119.0 180.5) (float-vector 15.5 -114.847 180.5) (float-vector 15.5 -114.847 185.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.5001 61.1532 185.5) (float-vector -2.499924e-05 57.0 185.5) (float-vector 15.5 61.1532 185.5) (float-vector 26.8467 72.5 185.5) (float-vector 31.0 88.0 185.5) (float-vector 26.8467 103.5 185.5) (float-vector 15.5 114.847 185.5) (float-vector -3.311803e-05 119.0 185.5) (float-vector -15.5 114.847 185.5) (float-vector -26.8468 103.5 185.5) (float-vector -31.0 88.0 185.5) (float-vector -26.8468 72.5 185.5)))
         (instance face :init :vertices (list (float-vector -2.499924e-05 57.0 180.5) (float-vector -15.5001 61.1532 180.5) (float-vector -26.8468 72.5 180.5) (float-vector -31.0 88.0 180.5) (float-vector -26.8468 103.5 180.5) (float-vector -15.5 114.847 180.5) (float-vector -3.311803e-05 119.0 180.5) (float-vector 15.5 114.847 180.5) (float-vector 26.8467 103.5 180.5) (float-vector 31.0 88.0 180.5) (float-vector 26.8467 72.5 180.5) (float-vector 15.5 61.1532 180.5)))
         (instance face :init :vertices (list (float-vector -15.5001 61.1532 185.5) (float-vector -15.5001 61.1532 180.5) (float-vector -2.499924e-05 57.0 180.5) (float-vector -2.499924e-05 57.0 185.5)))
         (instance face :init :vertices (list (float-vector -26.8468 72.5 185.5) (float-vector -26.8468 72.5 180.5) (float-vector -15.5001 61.1532 180.5) (float-vector -15.5001 61.1532 185.5)))
         (instance face :init :vertices (list (float-vector -31.0 88.0 185.5) (float-vector -31.0 88.0 180.5) (float-vector -26.8468 72.5 180.5) (float-vector -26.8468 72.5 185.5)))
         (instance face :init :vertices (list (float-vector -26.8468 103.5 185.5) (float-vector -26.8468 103.5 180.5) (float-vector -31.0 88.0 180.5) (float-vector -31.0 88.0 185.5)))
         (instance face :init :vertices (list (float-vector -15.5 114.847 185.5) (float-vector -15.5 114.847 180.5) (float-vector -26.8468 103.5 180.5) (float-vector -26.8468 103.5 185.5)))
         (instance face :init :vertices (list (float-vector -3.311803e-05 119.0 185.5) (float-vector -3.311803e-05 119.0 180.5) (float-vector -15.5 114.847 180.5) (float-vector -15.5 114.847 185.5)))
         (instance face :init :vertices (list (float-vector 15.5 114.847 185.5) (float-vector 15.5 114.847 180.5) (float-vector -3.311803e-05 119.0 180.5) (float-vector -3.311803e-05 119.0 185.5)))
         (instance face :init :vertices (list (float-vector 26.8467 103.5 185.5) (float-vector 26.8467 103.5 180.5) (float-vector 15.5 114.847 180.5) (float-vector 15.5 114.847 185.5)))
         (instance face :init :vertices (list (float-vector 31.0 88.0 185.5) (float-vector 31.0 88.0 180.5) (float-vector 26.8467 103.5 180.5) (float-vector 26.8467 103.5 185.5)))
         (instance face :init :vertices (list (float-vector 26.8467 72.5 185.5) (float-vector 26.8467 72.5 180.5) (float-vector 31.0 88.0 180.5) (float-vector 31.0 88.0 185.5)))
         (instance face :init :vertices (list (float-vector 15.5 61.1532 185.5) (float-vector 15.5 61.1532 180.5) (float-vector 26.8467 72.5 180.5) (float-vector 26.8467 72.5 185.5)))
         (instance face :init :vertices (list (float-vector -2.499924e-05 57.0 185.5) (float-vector -2.499924e-05 57.0 180.5) (float-vector 15.5 61.1532 180.5) (float-vector 15.5 61.1532 185.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -53.5 37.5 638.5) (float-vector -43.5102 37.5 636.417) (float-vector -34.363 37.5 629.587) (float-vector -29.294 37.5 619.75) (float-vector -28.326 37.5 619.0) (float-vector -22.5 37.5 619.0) (float-vector -22.5 37.5 589.5) (float-vector -84.5 37.5 589.5) (float-vector -84.5 37.5 619.0) (float-vector -78.674 37.5 619.0) (float-vector -77.706 37.5 619.75) (float-vector -72.637 37.5 629.587) (float-vector -63.4898 37.5 636.417)))
         (instance face :init :vertices (list (float-vector -43.5102 -37.5 636.417) (float-vector -53.5 -37.5 638.5) (float-vector -63.4898 -37.5 636.417) (float-vector -72.637 -37.5 629.587) (float-vector -77.706 -37.5 619.75) (float-vector -78.674 -37.5 619.0) (float-vector -84.5 -37.5 619.0) (float-vector -84.5 -37.5 589.5) (float-vector -22.5 -37.5 589.5) (float-vector -22.5 -37.5 619.0) (float-vector -28.326 -37.5 619.0) (float-vector -29.294 -37.5 619.75) (float-vector -34.363 -37.5 629.587)))
         (instance face :init :vertices (list (float-vector -53.5 37.5 638.5) (float-vector -53.5 -37.5 638.5) (float-vector -43.5102 -37.5 636.417) (float-vector -43.5102 37.5 636.417)))
         (instance face :init :vertices (list (float-vector -63.4898 37.5 636.417) (float-vector -63.4898 -37.5 636.417) (float-vector -53.5 -37.5 638.5) (float-vector -53.5 37.5 638.5)))
         (instance face :init :vertices (list (float-vector -72.637 37.5 629.587) (float-vector -72.637 -37.5 629.587) (float-vector -63.4898 -37.5 636.417) (float-vector -63.4898 37.5 636.417)))
         (instance face :init :vertices (list (float-vector -77.706 37.5 619.75) (float-vector -77.706 -37.5 619.75) (float-vector -72.637 -37.5 629.587) (float-vector -72.637 37.5 629.587)))
         (instance face :init :vertices (list (float-vector -78.674 37.5 619.0) (float-vector -78.674 -37.5 619.0) (float-vector -77.706 -37.5 619.75) (float-vector -77.706 37.5 619.75)))
         (instance face :init :vertices (list (float-vector -84.5 37.5 619.0) (float-vector -84.5 -37.5 619.0) (float-vector -78.674 -37.5 619.0) (float-vector -78.674 37.5 619.0)))
         (instance face :init :vertices (list (float-vector -84.5 37.5 589.5) (float-vector -84.5 -37.5 589.5) (float-vector -84.5 -37.5 619.0) (float-vector -84.5 37.5 619.0)))
         (instance face :init :vertices (list (float-vector -22.5 37.5 589.5) (float-vector -22.5 -37.5 589.5) (float-vector -84.5 -37.5 589.5) (float-vector -84.5 37.5 589.5)))
         (instance face :init :vertices (list (float-vector -22.5 37.5 619.0) (float-vector -22.5 -37.5 619.0) (float-vector -22.5 -37.5 589.5) (float-vector -22.5 37.5 589.5)))
         (instance face :init :vertices (list (float-vector -28.326 37.5 619.0) (float-vector -28.326 -37.5 619.0) (float-vector -22.5 -37.5 619.0) (float-vector -22.5 37.5 619.0)))
         (instance face :init :vertices (list (float-vector -29.294 37.5 619.75) (float-vector -29.294 -37.5 619.75) (float-vector -28.326 -37.5 619.0) (float-vector -28.326 37.5 619.0)))
         (instance face :init :vertices (list (float-vector -34.363 37.5 629.587) (float-vector -34.363 -37.5 629.587) (float-vector -29.294 -37.5 619.75) (float-vector -29.294 37.5 619.75)))
         (instance face :init :vertices (list (float-vector -43.5102 37.5 636.417) (float-vector -43.5102 -37.5 636.417) (float-vector -34.363 -37.5 629.587) (float-vector -34.363 37.5 629.587)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -5.0 -61.994 518.75) (float-vector -5.0 -197.0 518.75) (float-vector 30.8317 -197.0 518.75) (float-vector 41.0167 -196.732 518.75) (float-vector 56.8815 -190.7 518.75) (float-vector 73.0571 -176.729 518.75) (float-vector 80.0 -164.0 518.75) (float-vector 80.0 -148.231 518.75) (float-vector 80.0 -61.994 518.75)))
         (instance face :init :vertices (list (float-vector -5.0 -61.994 518.75) (float-vector 80.0 -61.994 518.75) (float-vector 80.0 -61.9939 522.5) (float-vector 68.7316 -61.994 594.179) (float-vector 62.6681 -61.994 632.75) (float-vector -5.0 -61.994 632.75)))
         (instance face :init :vertices (list (float-vector -5.0 -61.994 632.75) (float-vector 62.6681 -61.994 632.75) (float-vector 62.6681 -183.6 632.75) (float-vector 62.6681 -195.775 632.75) (float-vector 62.3974 -196.271 632.75) (float-vector 61.816 -196.774 632.75) (float-vector 61.2205 -197.0 632.75) (float-vector 56.8669 -197.0 632.75) (float-vector 33.7679 -197.0 632.75) (float-vector -5.0 -197.0 632.75)))
         (instance face :init :vertices (list (float-vector -5.0 -197.0 518.75) (float-vector -5.0 -61.994 518.75) (float-vector -5.0 -61.994 632.75) (float-vector -5.0 -197.0 632.75) (float-vector -4.99999 -197.0 626.914) (float-vector -4.99999 -197.0 581.527)))
         (instance face :init :vertices (list (float-vector -170.5 197.0 602.0) (float-vector -170.5 197.0 444.5) (float-vector -170.5 -197.0 444.5)))
         (instance face :init :vertices (list (float-vector -170.5 -56.9939 602.0) (float-vector -170.5 -56.994 589.5) (float-vector -170.5 56.994 589.5) (float-vector -170.5 56.994 602.0) (float-vector -170.5 197.0 602.0) (float-vector -170.5 -197.0 444.5) (float-vector -170.5 -197.0 602.0)))
         (instance face :init :vertices (list (float-vector -158.749 197.0 626.749) (float-vector -158.749 56.9939 626.749) (float-vector -149.954 56.994 630.391)))
         (instance face :init :vertices (list (float-vector -142.794 -56.9939 633.357) (float-vector -158.749 -56.994 626.749) (float-vector -158.749 -197.0 626.749) (float-vector -134.0 -197.0 637.0)))
         (instance face :init :vertices (list (float-vector -134.0 -56.9939 637.0) (float-vector -142.794 -56.9939 633.357) (float-vector -134.0 -197.0 637.0)))
         (instance face :init :vertices (list (float-vector -158.749 197.0 626.749) (float-vector -149.954 56.994 630.391) (float-vector -134.0 56.994 637.0) (float-vector -134.0 197.0 637.0)))
         (instance face :init :vertices (list (float-vector -7.64772 56.9939 637.0) (float-vector 62.0 56.994 637.0) (float-vector 62.0 197.0 637.0)))
         (instance face :init :vertices (list (float-vector 62.0 -197.0 637.0) (float-vector 62.0 -56.9939 637.0) (float-vector -64.3524 -56.994 637.0) (float-vector -134.0 -197.0 637.0)))
         (instance face :init :vertices (list (float-vector 62.0 -197.0 637.0) (float-vector -134.0 -197.0 637.0) (float-vector -170.5 -197.0 602.0) (float-vector -4.99999 -197.0 626.914) (float-vector -5.0 -197.0 632.75) (float-vector 33.7679 -197.0 632.75)))
         (instance face :init :vertices (list (float-vector -64.3524 -56.994 637.0) (float-vector -134.0 -56.9939 637.0) (float-vector -134.0 -197.0 637.0)))
         (instance face :init :vertices (list (float-vector -134.0 197.0 637.0) (float-vector -134.0 56.994 637.0) (float-vector -7.64772 56.9939 637.0) (float-vector 62.0 197.0 637.0)))
         (instance face :init :vertices (list (float-vector 80.0 -164.0 444.5) (float-vector 80.0 164.0 444.5) (float-vector 80.0 -148.231 518.75) (float-vector 80.0 -164.0 518.75)))
         (instance face :init :vertices (list (float-vector 80.0 -164.0 444.5) (float-vector 80.0 -164.0 518.75) (float-vector 73.0571 -176.729 518.75)))
         (instance face :init :vertices (list (float-vector 62.0 -197.0 637.0) (float-vector 62.3974 -196.271 632.75) (float-vector 62.6681 -195.775 632.75)))
         (instance face :init :vertices (list (float-vector 62.0 -197.0 637.0) (float-vector 62.6681 -195.775 632.75) (float-vector 62.6681 -183.6 632.75)))
         (instance face :init :vertices (list (float-vector 68.9809 -56.994 592.594) (float-vector 62.0 -56.9939 637.0) (float-vector 62.0 -197.0 637.0) (float-vector 62.6681 -183.6 632.75) (float-vector 62.6681 -61.994 632.75) (float-vector 68.7316 -61.994 594.179)))
         (instance face :init :vertices (list (float-vector 62.0 197.0 637.0) (float-vector 62.0 56.994 637.0) (float-vector 69.4671 56.994 589.5) (float-vector 69.4672 -47.2402 589.5) (float-vector 74.9138 61.994 554.854) (float-vector 62.6682 61.994 632.75) (float-vector 62.6681 195.775 632.75)))
         (instance face :init :vertices (list (float-vector 74.9138 61.994 554.854) (float-vector 69.4672 -47.2402 589.5) (float-vector 69.4673 -56.994 589.5) (float-vector 68.9809 -56.994 592.594) (float-vector 68.7316 -61.994 594.179) (float-vector 80.0 -61.9939 522.5) (float-vector 80.0 61.994 522.5)))
         (instance face :init :vertices (list (float-vector -170.5 197.0 444.5) (float-vector -170.5 197.0 602.0) (float-vector -158.749 197.0 626.749)))
         (instance face :init :vertices (list (float-vector -158.749 197.0 626.749) (float-vector -170.5 197.0 602.0) (float-vector -170.5 56.994 602.0) (float-vector -162.924 56.994 617.954)))
         (instance face :init :vertices (list (float-vector -166.324 -56.9939 610.794) (float-vector -170.5 -56.9939 602.0) (float-vector -170.5 -197.0 602.0)))
         (instance face :init :vertices (list (float-vector -170.5 -197.0 602.0) (float-vector -134.0 -197.0 637.0) (float-vector -158.749 -197.0 626.749)))
         (instance face :init :vertices (list (float-vector -162.924 56.994 617.954) (float-vector -158.749 56.9939 626.749) (float-vector -158.749 197.0 626.749)))
         (instance face :init :vertices (list (float-vector -158.749 -197.0 626.749) (float-vector -158.749 -56.994 626.749) (float-vector -166.324 -56.9939 610.794) (float-vector -170.5 -197.0 602.0)))
         (instance face :init :vertices (list (float-vector -4.99999 -197.0 581.527) (float-vector -4.99999 -197.0 626.914) (float-vector -170.5 -197.0 602.0) (float-vector -170.5 -197.0 444.5)))
         (instance face :init :vertices (list (float-vector 62.0 -197.0 637.0) (float-vector 33.7679 -197.0 632.75) (float-vector 56.8669 -197.0 632.75)))
         (instance face :init :vertices (list (float-vector 30.8317 -197.0 518.75) (float-vector -5.0 -197.0 518.75) (float-vector -4.99999 -197.0 581.527) (float-vector -170.5 -197.0 444.5)))
         (instance face :init :vertices (list (float-vector 62.0 -197.0 637.0) (float-vector 56.8669 -197.0 632.75) (float-vector 61.2205 -197.0 632.75)))
         (instance face :init :vertices (list (float-vector 61.816 -196.774 632.75) (float-vector 62.3974 -196.271 632.75) (float-vector 62.0 -197.0 637.0)))
         (instance face :init :vertices (list (float-vector 62.0 -197.0 637.0) (float-vector 61.2205 -197.0 632.75) (float-vector 61.816 -196.774 632.75)))
         (instance face :init :vertices (list (float-vector 56.8815 -190.7 518.75) (float-vector 41.0167 -196.732 518.75) (float-vector 42.5 -173.0 186.5)))
         (instance face :init :vertices (list (float-vector 80.0 -164.0 444.5) (float-vector 73.0571 -176.729 518.75) (float-vector 56.8815 -190.7 518.75) (float-vector 42.5 -173.0 186.5)))
         (instance face :init :vertices (list (float-vector 42.5 173.0 186.5) (float-vector 42.5 -173.0 186.5) (float-vector -112.5 -173.0 186.5)))
         (instance face :init :vertices (list (float-vector 42.5 173.0 186.5) (float-vector -112.5 -173.0 186.5) (float-vector -112.5 173.0 186.5)))
         (instance face :init :vertices (list (float-vector -158.749 197.0 626.749) (float-vector -134.0 197.0 637.0) (float-vector 62.0 197.0 637.0)))
         (instance face :init :vertices (list (float-vector 80.0 61.994 522.5) (float-vector 80.0 -61.9939 522.5) (float-vector 80.0 -61.994 518.75) (float-vector 80.0 -148.231 518.75) (float-vector 80.0 164.0 444.5) (float-vector 80.0 164.0 518.75) (float-vector 80.0 61.994 518.75)))
         (instance face :init :vertices (list (float-vector 62.0 197.0 637.0) (float-vector 62.6681 195.775 632.75) (float-vector 62.3974 196.271 632.75)))
         (instance face :init :vertices (list (float-vector 80.0 164.0 518.75) (float-vector 80.0 164.0 444.5) (float-vector 73.0571 176.729 518.75)))
         (instance face :init :vertices (list (float-vector 42.5 -173.0 186.5) (float-vector 41.0167 -196.732 518.75) (float-vector 30.8317 -197.0 518.75) (float-vector -170.5 -197.0 444.5)))
         (instance face :init :vertices (list (float-vector -112.5 -173.0 186.5) (float-vector 42.5 -173.0 186.5) (float-vector -170.5 -197.0 444.5)))
         (instance face :init :vertices (list (float-vector -112.5 -173.0 186.5) (float-vector -170.5 -197.0 444.5) (float-vector -170.5 197.0 444.5)))
         (instance face :init :vertices (list (float-vector -112.5 173.0 186.5) (float-vector -112.5 -173.0 186.5) (float-vector -170.5 197.0 444.5)))
         (instance face :init :vertices (list (float-vector 42.5 173.0 186.5) (float-vector -112.5 173.0 186.5) (float-vector -170.5 197.0 444.5)))
         (instance face :init :vertices (list (float-vector 42.5 173.0 186.5) (float-vector -170.5 197.0 444.5) (float-vector 30.8317 197.0 518.75) (float-vector 41.0167 196.732 518.75)))
         (instance face :init :vertices (list (float-vector 30.8317 197.0 518.75) (float-vector -170.5 197.0 444.5) (float-vector -158.749 197.0 626.749) (float-vector -5.0 197.0 546.507) (float-vector -5.0 197.0 518.75)))
         (instance face :init :vertices (list (float-vector 80.0 -164.0 444.5) (float-vector 42.5 -173.0 186.5) (float-vector 42.5 173.0 186.5)))
         (instance face :init :vertices (list (float-vector 80.0 164.0 444.5) (float-vector 80.0 -164.0 444.5) (float-vector 42.5 173.0 186.5)))
         (instance face :init :vertices (list (float-vector 62.0 197.0 637.0) (float-vector 62.3974 196.271 632.75) (float-vector 61.816 196.774 632.75)))
         (instance face :init :vertices (list (float-vector 73.0571 176.729 518.75) (float-vector 80.0 164.0 444.5) (float-vector 42.5 173.0 186.5) (float-vector 56.8815 190.7 518.75)))
         (instance face :init :vertices (list (float-vector -5.0 197.0 546.507) (float-vector -158.749 197.0 626.749) (float-vector 62.0 197.0 637.0) (float-vector 61.2205 197.0 632.75) (float-vector -5.0 197.0 632.75)))
         (instance face :init :vertices (list (float-vector 56.8815 190.7 518.75) (float-vector 42.5 173.0 186.5) (float-vector 41.0167 196.732 518.75)))
         (instance face :init :vertices (list (float-vector 61.2205 197.0 632.75) (float-vector 62.0 197.0 637.0) (float-vector 61.816 196.774 632.75)))
         (instance face :init :vertices (list (float-vector -5.0 197.0 518.75) (float-vector -5.0 197.0 546.507) (float-vector -5.0 197.0 632.75) (float-vector -5.0 61.994 632.75) (float-vector -5.0 61.994 518.75)))
         (instance face :init :vertices (list (float-vector -5.0 61.994 632.75) (float-vector -5.0 197.0 632.75) (float-vector 61.2205 197.0 632.75) (float-vector 61.816 196.774 632.75) (float-vector 62.3974 196.271 632.75) (float-vector 62.6681 195.775 632.75) (float-vector 62.6682 61.994 632.75)))
         (instance face :init :vertices (list (float-vector -5.0 61.994 518.75) (float-vector -5.0 61.994 632.75) (float-vector 62.6682 61.994 632.75) (float-vector 74.9138 61.994 554.854) (float-vector 80.0 61.994 522.5) (float-vector 80.0 61.994 518.75)))
         (instance face :init :vertices (list (float-vector 80.0 61.994 518.75) (float-vector 80.0 164.0 518.75) (float-vector 73.0571 176.729 518.75) (float-vector 56.8815 190.7 518.75) (float-vector 41.0167 196.732 518.75) (float-vector 30.8317 197.0 518.75) (float-vector -5.0 197.0 518.75) (float-vector -5.0 61.994 518.75)))
         (instance face :init :vertices (list (float-vector -170.5 -56.994 589.5) (float-vector -170.5 -56.9939 602.0) (float-vector -166.324 -56.9939 610.794) (float-vector -158.749 -56.994 626.749) (float-vector -142.794 -56.9939 633.357) (float-vector -134.0 -56.9939 637.0) (float-vector -64.3524 -56.994 637.0) (float-vector 62.0 -56.9939 637.0) (float-vector 68.9809 -56.994 592.594) (float-vector 69.4673 -56.994 589.5)))
         (instance face :init :vertices (list (float-vector 69.4671 56.994 589.5) (float-vector 62.0 56.994 637.0) (float-vector -7.64772 56.9939 637.0) (float-vector -134.0 56.994 637.0) (float-vector -149.954 56.994 630.391) (float-vector -158.749 56.9939 626.749) (float-vector -162.924 56.994 617.954) (float-vector -170.5 56.994 602.0) (float-vector -170.5 56.994 589.5)))
         (instance face :init :vertices (list (float-vector -170.5 56.994 589.5) (float-vector -170.5 -56.994 589.5) (float-vector 69.4673 -56.994 589.5) (float-vector 69.4672 -47.2402 589.5) (float-vector 69.4671 56.994 589.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 88.5 140.0 490.0) (float-vector 87.5 140.0 490.0) (float-vector 87.5 0.0 490.0) (float-vector 88.5 0.0 490.0)))
         (instance face :init :vertices (list (float-vector 87.5 140.0 450.0) (float-vector 88.5 140.0 450.0) (float-vector 88.5 0.0 450.0) (float-vector 87.5 0.0 450.0)))
         (instance face :init :vertices (list (float-vector 88.5 140.0 490.0) (float-vector 88.5 140.0 450.0) (float-vector 87.5 140.0 450.0) (float-vector 87.5 140.0 490.0)))
         (instance face :init :vertices (list (float-vector 88.5 0.0 490.0) (float-vector 88.5 0.0 450.0) (float-vector 88.5 140.0 450.0) (float-vector 88.5 140.0 490.0)))
         (instance face :init :vertices (list (float-vector 87.5 0.0 490.0) (float-vector 87.5 0.0 450.0) (float-vector 88.5 0.0 450.0) (float-vector 88.5 0.0 490.0)))
         (instance face :init :vertices (list (float-vector 87.5 140.0 490.0) (float-vector 87.5 140.0 450.0) (float-vector 87.5 0.0 450.0) (float-vector 87.5 0.0 490.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 28.0 -23.0 296.0) (float-vector 28.0 -23.0 294.0) (float-vector 41.5 -13.5 294.0) (float-vector 41.5 -13.5 296.0)))
         (instance face :init :vertices (list (float-vector 41.5 -13.5 294.0) (float-vector 41.5 13.5 294.0) (float-vector 41.5 13.5 296.0) (float-vector 41.5 -13.5 296.0)))
         (instance face :init :vertices (list (float-vector 41.5 13.5 294.0) (float-vector 28.0 23.0 294.0) (float-vector 28.0 23.0 296.0) (float-vector 41.5 13.5 296.0)))
         (instance face :init :vertices (list (float-vector 28.0 23.0 294.0) (float-vector 14.5 13.5 294.0) (float-vector 14.5 13.5 296.0) (float-vector 28.0 23.0 296.0)))
         (instance face :init :vertices (list (float-vector 14.5 13.5 294.0) (float-vector 14.5 -13.5 294.0) (float-vector 14.5 -13.5 296.0) (float-vector 14.5 13.5 296.0)))
         (instance face :init :vertices (list (float-vector 14.5 -13.5 296.0) (float-vector 28.0 -23.0 296.0) (float-vector 41.5 -13.5 296.0) (float-vector 41.5 13.5 296.0) (float-vector 28.0 23.0 296.0) (float-vector 14.5 13.5 296.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 15.0 13.0 296.0) (float-vector 41.0 13.0 296.0) (float-vector 41.0 -13.0 296.0) (float-vector 15.0 -13.0 296.0)))
))
         (instance face :init :vertices (list (float-vector 14.5 -13.5 294.0) (float-vector 28.0 -23.0 294.0) (float-vector 28.0 -23.0 296.0) (float-vector 14.5 -13.5 296.0)))
         (instance face :init :vertices (list (float-vector 28.0 -23.0 294.0) (float-vector 14.5 -13.5 294.0) (float-vector 14.5 13.5 294.0) (float-vector 28.0 23.0 294.0) (float-vector 41.5 13.5 294.0) (float-vector 41.5 -13.5 294.0)))
         (instance face :init :vertices (list (float-vector 15.0 -13.0 314.0) (float-vector 15.0 -13.0 296.0) (float-vector 41.0 -13.0 296.0) (float-vector 41.0 -13.0 314.0)))
         (instance face :init :vertices (list (float-vector 41.0 13.0 296.0) (float-vector 41.0 13.0 314.0) (float-vector 41.0 -13.0 314.0) (float-vector 41.0 -13.0 296.0)))
         (instance face :init :vertices (list (float-vector 15.0 13.0 296.0) (float-vector 15.0 13.0 314.0) (float-vector 41.0 13.0 314.0) (float-vector 41.0 13.0 296.0)))
         (instance face :init :vertices (list (float-vector 15.0 13.0 314.0) (float-vector 15.0 -13.0 314.0) (float-vector 41.0 -13.0 314.0) (float-vector 41.0 13.0 314.0)))
         (instance face :init :vertices (list (float-vector 15.0 -13.0 314.0) (float-vector 15.0 13.0 314.0) (float-vector 15.0 13.0 296.0) (float-vector 15.0 -13.0 296.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (send (elt bc 1) :set-color :gray)
     (send (elt bc 2) :set-color :gray)
     (send (elt bc 3) :set-color :gray)
     (send (elt bc 4) :set-color :gray)
     (send (elt bc 5) :set-color :gray)
     (send (elt bc 6) :set-color :gray)
     (send (elt bc 7) :set-color :gray40)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 16412.3 :centroid (float-vector -49.6091 0.004262 414.385) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-shoulder-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 32.09 -92.851 71.0) (float-vector 32.0 0.031013 71.0) (float-vector 24.843 20.17 71.0) (float-vector 13.298 29.106 71.0) (float-vector -9.536743e-06 32.0 71.0) (float-vector -9.536743e-06 31.0 71.0) (float-vector -15.454 26.873 71.0) (float-vector -26.439 16.186 71.0) (float-vector -31.0 1.525879e-05 71.0) (float-vector -32.0 7.629395e-06 71.0) (float-vector -32.0 -93.0 71.0)))
         (instance face :init :vertices (list (float-vector 32.0 0.030952 -36.5) (float-vector 32.09 -92.851 -36.5) (float-vector -32.0 -93.0001 -36.5) (float-vector -32.0 -6.103516e-05 -36.5) (float-vector -31.0 -5.340576e-05 -36.5) (float-vector -26.439 16.1859 -36.5) (float-vector -15.454 26.8729 -36.5) (float-vector -9.536743e-06 31.0 -36.5) (float-vector -9.536743e-06 32.0 -36.5) (float-vector 13.298 29.106 -36.5) (float-vector 24.843 20.17 -36.5)))
         (instance face :init :vertices (list (float-vector 32.09 -92.851 71.0) (float-vector 32.09 -92.851 -36.5) (float-vector 32.0 0.030952 -36.5) (float-vector 32.0 0.031013 71.0)))
         (instance face :init :vertices (list (float-vector -32.0 -93.0 71.0) (float-vector -32.0 -93.0001 -36.5) (float-vector 32.09 -92.851 -36.5) (float-vector 32.09 -92.851 71.0)))
         (instance face :init :vertices (list (float-vector -32.0 7.629395e-06 71.0) (float-vector -32.0 -6.103516e-05 -36.5) (float-vector -32.0 -93.0001 -36.5) (float-vector -32.0 -93.0 71.0)))
         (instance face :init :vertices (list (float-vector -31.0 1.525879e-05 71.0) (float-vector -31.0 -5.340576e-05 -36.5) (float-vector -32.0 -6.103516e-05 -36.5) (float-vector -32.0 7.629395e-06 71.0)))
         (instance face :init :vertices (list (float-vector -26.439 16.186 71.0) (float-vector -26.439 16.1859 -36.5) (float-vector -31.0 -5.340576e-05 -36.5) (float-vector -31.0 1.525879e-05 71.0)))
         (instance face :init :vertices (list (float-vector -15.454 26.873 71.0) (float-vector -15.454 26.8729 -36.5) (float-vector -26.439 16.1859 -36.5) (float-vector -26.439 16.186 71.0)))
         (instance face :init :vertices (list (float-vector -9.536743e-06 31.0 71.0) (float-vector -9.536743e-06 31.0 -36.5) (float-vector -15.454 26.8729 -36.5) (float-vector -15.454 26.873 71.0)))
         (instance face :init :vertices (list (float-vector -9.536743e-06 32.0 71.0) (float-vector -9.536743e-06 32.0 -36.5) (float-vector -9.536743e-06 31.0 -36.5) (float-vector -9.536743e-06 31.0 71.0)))
         (instance face :init :vertices (list (float-vector 13.298 29.106 71.0) (float-vector 13.298 29.106 -36.5) (float-vector -9.536743e-06 32.0 -36.5) (float-vector -9.536743e-06 32.0 71.0)))
         (instance face :init :vertices (list (float-vector 24.843 20.17 71.0) (float-vector 24.843 20.17 -36.5) (float-vector 13.298 29.106 -36.5) (float-vector 13.298 29.106 71.0)))
         (instance face :init :vertices (list (float-vector 32.0 0.031013 71.0) (float-vector 32.0 0.030952 -36.5) (float-vector 24.843 20.17 -36.5) (float-vector 24.843 20.17 71.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-y :weight 1150.23 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -67.0 77.0 -0.999985) (float-vector -67.0 73.671 13.898) (float-vector 33.9999 73.671 13.8981) (float-vector 34.0001 77.0 -0.999924)))
         (instance face :init :vertices (list (float-vector -67.0001 65.665 24.787) (float-vector 34.0 65.665 24.7871) (float-vector 33.9999 73.671 13.8981) (float-vector -67.0 73.671 13.898)))
         (instance face :init :vertices (list (float-vector -67.0001 49.395 33.21) (float-vector 34.0 49.395 33.2101) (float-vector 34.0 65.665 24.7871) (float-vector -67.0001 65.665 24.787)))
         (instance face :init :vertices (list (float-vector -67.0001 -12.8309 46.661) (float-vector -64.0001 -12.831 46.661) (float-vector -64.0 39.9999 35.2409) (float-vector 30.9999 40.0001 35.2409) (float-vector 30.9999 -12.831 46.6611) (float-vector 33.9999 -12.831 46.6611) (float-vector 34.0 49.395 33.2101) (float-vector -67.0001 49.395 33.21)))
         (instance face :init :vertices (list (float-vector 34.0 -19.926 46.477) (float-vector 33.9999 -12.831 46.6611) (float-vector 30.9999 -12.831 46.6611) (float-vector 31.0 -19.926 46.477)))
         (instance face :init :vertices (list (float-vector -67.0001 -19.926 46.477) (float-vector -64.0001 -19.926 46.477) (float-vector -64.0001 -12.831 46.661) (float-vector -67.0001 -12.8309 46.661)))
         (instance face :init :vertices (list (float-vector 34.0 -28.0811 40.891) (float-vector 34.0 -19.926 46.477) (float-vector 31.0 -19.926 46.477) (float-vector 31.0 -28.0811 40.891)))
         (instance face :init :vertices (list (float-vector -67.0 -28.081 40.891) (float-vector -64.0 -28.081 40.891) (float-vector -64.0001 -19.926 46.477) (float-vector -67.0001 -19.926 46.477)))
         (instance face :init :vertices (list (float-vector 33.9999 -31.0 32.0) (float-vector 34.0 -28.0811 40.891) (float-vector 31.0 -28.0811 40.891) (float-vector 30.9999 -31.0 32.0)))
         (instance face :init :vertices (list (float-vector -67.0 -31.0001 32.0) (float-vector -64.0001 -30.9999 32.0) (float-vector -64.0 -28.081 40.891) (float-vector -67.0 -28.081 40.891)))
         (instance face :init :vertices (list (float-vector -66.9999 -31.0 -48.0) (float-vector 34.0 -30.9999 -48.0) (float-vector 33.9999 -31.0 32.0) (float-vector 30.9999 -31.0 32.0) (float-vector 31.0 -30.9999 -39.0) (float-vector -63.9999 -31.0 -39.0) (float-vector -64.0001 -30.9999 32.0) (float-vector -67.0 -31.0001 32.0)))
         (instance face :init :vertices (list (float-vector -67.0 77.0001 -48.0) (float-vector 34.0001 77.0 -47.9999) (float-vector 34.0 -30.9999 -48.0) (float-vector -66.9999 -31.0 -48.0)))
         (instance face :init :vertices (list (float-vector 34.0001 77.0 -0.999924) (float-vector 33.9999 73.671 13.8981) (float-vector 34.0 65.665 24.7871) (float-vector 34.0 49.395 33.2101) (float-vector 33.9999 -12.831 46.6611) (float-vector 34.0 -19.926 46.477) (float-vector 34.0 -28.0811 40.891) (float-vector 33.9999 -31.0 32.0) (float-vector 34.0 -30.9999 -48.0) (float-vector 34.0001 77.0 -47.9999)))
         (instance face :init :vertices (list (float-vector -67.0 77.0001 -48.0) (float-vector -66.9999 -31.0 -48.0) (float-vector -67.0 -31.0001 32.0) (float-vector -67.0 -28.081 40.891) (float-vector -67.0001 -19.926 46.477) (float-vector -67.0001 -12.8309 46.661) (float-vector -67.0001 49.395 33.21) (float-vector -67.0001 65.665 24.787) (float-vector -67.0 73.671 13.898) (float-vector -67.0 77.0 -0.999985)))
         (instance face :init :vertices (list (float-vector -67.0 77.0 -0.999985) (float-vector 34.0001 77.0 -0.999924) (float-vector 34.0001 77.0 -47.9999) (float-vector -67.0 77.0001 -48.0)))
         (instance face :init :vertices (list (float-vector 31.0 -30.9999 -39.0) (float-vector 30.9999 -31.0 32.0) (float-vector 31.0 -28.0811 40.891) (float-vector 31.0 -19.926 46.477) (float-vector 30.9999 -12.831 46.6611) (float-vector 30.9999 40.0001 35.2409) (float-vector 31.0001 40.0 -38.9999)))
         (instance face :init :vertices (list (float-vector -63.9999 -31.0 -39.0) (float-vector 31.0 -30.9999 -39.0) (float-vector 31.0001 40.0 -38.9999) (float-vector -63.9999 40.0 -39.0)))
         (instance face :init :vertices (list (float-vector -63.9999 40.0 -39.0) (float-vector 31.0001 40.0 -38.9999) (float-vector 30.9999 40.0001 35.2409) (float-vector -64.0 39.9999 35.2409)))
         (instance face :init :vertices (list (float-vector -64.0 39.9999 35.2409) (float-vector -64.0001 -12.831 46.661) (float-vector -64.0001 -19.926 46.477) (float-vector -64.0 -28.081 40.891) (float-vector -64.0001 -30.9999 32.0) (float-vector -63.9999 -31.0 -39.0) (float-vector -63.9999 40.0 -39.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-p :weight 1190.93 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-shoulder-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.9999 0.0 -35.9999) (float-vector 28.591 -11.982 -36.0) (float-vector 22.5521 -21.27 -36.0001) (float-vector 12.119 -28.533 -36.0) (float-vector 6.103516e-05 -31.0 -36.0001) (float-vector -10.014 -29.338 -36.0) (float-vector -23.69 -21.839 -36.0) (float-vector -28.616 -21.0 -36.0001) (float-vector -52.0001 -20.957 -36.0) (float-vector -52.0 37.9938 -36.0001) (float-vector 0.0 32.199 -36.0) (float-vector 10.5681 30.205 -36.0001) (float-vector 20.152 24.857 -36.0) (float-vector 27.713 16.0 -36.0) (float-vector 26.847 15.5 -36.0001) (float-vector 29.687 8.92599 -36.0)))
         (instance face :init :vertices (list (float-vector 28.5909 -11.982 36.0001) (float-vector 31.0 0.0 36.0) (float-vector 29.687 8.92599 36.0) (float-vector 26.847 15.5 36.0) (float-vector 27.713 16.0 36.0001) (float-vector 20.1519 24.857 36.0) (float-vector 10.568 30.205 36.0) (float-vector -6.103516e-05 32.199 36.0) (float-vector -52.0001 37.9938 36.0) (float-vector -52.0 -20.957 35.9999) (float-vector -28.616 -21.0 36.0) (float-vector -23.69 -21.839 35.9999) (float-vector -10.014 -29.338 35.9999) (float-vector 0.0 -31.0 36.0) (float-vector 12.119 -28.533 35.9999) (float-vector 22.552 -21.27 36.0)))
         (instance face :init :vertices (list (float-vector 30.9999 0.0 -35.9999) (float-vector 31.0 0.0 36.0) (float-vector 28.5909 -11.982 36.0001) (float-vector 28.591 -11.982 -36.0)))
         (instance face :init :vertices (list (float-vector 29.687 8.92599 -36.0) (float-vector 29.687 8.92599 36.0) (float-vector 31.0 0.0 36.0) (float-vector 30.9999 0.0 -35.9999)))
         (instance face :init :vertices (list (float-vector 26.847 15.5 -36.0001) (float-vector 26.847 15.5 36.0) (float-vector 29.687 8.92599 36.0) (float-vector 29.687 8.92599 -36.0)))
         (instance face :init :vertices (list (float-vector 27.713 16.0 -36.0) (float-vector 27.713 16.0 36.0001) (float-vector 26.847 15.5 36.0) (float-vector 26.847 15.5 -36.0001)))
         (instance face :init :vertices (list (float-vector 20.152 24.857 -36.0) (float-vector 20.1519 24.857 36.0) (float-vector 27.713 16.0 36.0001) (float-vector 27.713 16.0 -36.0)))
         (instance face :init :vertices (list (float-vector 10.5681 30.205 -36.0001) (float-vector 10.568 30.205 36.0) (float-vector 20.1519 24.857 36.0) (float-vector 20.152 24.857 -36.0)))
         (instance face :init :vertices (list (float-vector 0.0 32.199 -36.0) (float-vector -6.103516e-05 32.199 36.0) (float-vector 10.568 30.205 36.0) (float-vector 10.5681 30.205 -36.0001)))
         (instance face :init :vertices (list (float-vector -52.0 37.9938 -36.0001) (float-vector -52.0001 37.9938 36.0) (float-vector -6.103516e-05 32.199 36.0) (float-vector 0.0 32.199 -36.0)))
         (instance face :init :vertices (list (float-vector -52.0001 -20.957 -36.0) (float-vector -52.0 -20.957 35.9999) (float-vector -52.0001 37.9938 36.0) (float-vector -52.0 37.9938 -36.0001)))
         (instance face :init :vertices (list (float-vector -28.616 -21.0 -36.0001) (float-vector -28.616 -21.0 36.0) (float-vector -52.0 -20.957 35.9999) (float-vector -52.0001 -20.957 -36.0)))
         (instance face :init :vertices (list (float-vector -23.69 -21.839 -36.0) (float-vector -23.69 -21.839 35.9999) (float-vector -28.616 -21.0 36.0) (float-vector -28.616 -21.0 -36.0001)))
         (instance face :init :vertices (list (float-vector -10.014 -29.338 -36.0) (float-vector -10.014 -29.338 35.9999) (float-vector -23.69 -21.839 35.9999) (float-vector -23.69 -21.839 -36.0)))
         (instance face :init :vertices (list (float-vector 6.103516e-05 -31.0 -36.0001) (float-vector 0.0 -31.0 36.0) (float-vector -10.014 -29.338 35.9999) (float-vector -10.014 -29.338 -36.0)))
         (instance face :init :vertices (list (float-vector 12.119 -28.533 -36.0) (float-vector 12.119 -28.533 35.9999) (float-vector 0.0 -31.0 36.0) (float-vector 6.103516e-05 -31.0 -36.0001)))
         (instance face :init :vertices (list (float-vector 22.5521 -21.27 -36.0001) (float-vector 22.552 -21.27 36.0) (float-vector 12.119 -28.533 35.9999) (float-vector 12.119 -28.533 -36.0)))
         (instance face :init :vertices (list (float-vector 28.591 -11.982 -36.0) (float-vector 28.5909 -11.982 36.0001) (float-vector 22.552 -21.27 36.0) (float-vector 22.5521 -21.27 -36.0001)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -185.0 47.0 -0.000122) (float-vector -185.0 47.0 -6.00012) (float-vector -185.0 44.476 -16.4571) (float-vector -185.0 38.958 -25.2141) (float-vector -185.0 29.697 -32.4251) (float-vector -185.0 17.0615 -36.0001) (float-vector -185.0 7.99997 -36.0001) (float-vector -185.0 -1.06152 -36.0001) (float-vector -185.0 -13.697 -32.4251) (float-vector -185.0 -22.958 -25.2141) (float-vector -185.0 -28.476 -16.457) (float-vector -185.0 -31.0 -6.00006) (float-vector -185.0 -31.0 -6.103516e-05) (float-vector -185.0 -31.0 5.99994) (float-vector -185.0 -28.476 16.4569) (float-vector -185.0 -22.958 25.2139) (float-vector -185.0 -13.697 32.4249) (float-vector -185.0 -1.06151 35.9999) (float-vector -185.0 8.0 35.9999) (float-vector -185.0 17.0615 35.9999) (float-vector -185.0 29.697 32.4249) (float-vector -185.0 38.958 25.2139) (float-vector -185.0 44.476 16.4568) (float-vector -185.0 47.0 5.99988)))
         (instance face :init :vertices (list (float-vector -51.9999 47.0 -6.00012) (float-vector -52.0 47.0 -6.103516e-05) (float-vector -52.0 47.0 5.99994) (float-vector -52.0 44.476 16.4569) (float-vector -52.0 38.958 25.2139) (float-vector -52.0001 29.697 32.425) (float-vector -52.0 17.0615 35.9999) (float-vector -52.0 8.00003 35.9999) (float-vector -52.0 -1.06149 35.9999) (float-vector -52.0001 -13.697 32.425) (float-vector -52.0 -22.958 25.214) (float-vector -52.0 -28.476 16.457) (float-vector -52.0001 -31.0 6.0) (float-vector -52.0 -31.0 0.0) (float-vector -52.0 -31.0 -6.00006) (float-vector -52.0 -28.476 -16.457) (float-vector -52.0 -22.958 -25.214) (float-vector -51.9999 -13.697 -32.425) (float-vector -52.0 -1.06152 -36.0) (float-vector -52.0 7.99997 -36.0) (float-vector -52.0 17.0615 -36.0) (float-vector -51.9999 29.697 -32.425) (float-vector -52.0 38.958 -25.2141) (float-vector -52.0 44.476 -16.457)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 -0.000122) (float-vector -52.0 47.0 -6.103516e-05) (float-vector -51.9999 47.0 -6.00012) (float-vector -185.0 47.0 -6.00012)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 5.99988) (float-vector -52.0 47.0 5.99994) (float-vector -52.0 47.0 -6.103516e-05) (float-vector -185.0 47.0 -0.000122)))
         (instance face :init :vertices (list (float-vector -185.0 44.476 16.4568) (float-vector -52.0 44.476 16.4569) (float-vector -52.0 47.0 5.99994) (float-vector -185.0 47.0 5.99988)))
         (instance face :init :vertices (list (float-vector -185.0 38.958 25.2139) (float-vector -52.0 38.958 25.2139) (float-vector -52.0 44.476 16.4569) (float-vector -185.0 44.476 16.4568)))
         (instance face :init :vertices (list (float-vector -185.0 29.697 32.4249) (float-vector -52.0001 29.697 32.425) (float-vector -52.0 38.958 25.2139) (float-vector -185.0 38.958 25.2139)))
         (instance face :init :vertices (list (float-vector -185.0 17.0615 35.9999) (float-vector -52.0 17.0615 35.9999) (float-vector -52.0001 29.697 32.425) (float-vector -185.0 29.697 32.4249)))
         (instance face :init :vertices (list (float-vector -185.0 8.0 35.9999) (float-vector -52.0 8.00003 35.9999) (float-vector -52.0 17.0615 35.9999) (float-vector -185.0 17.0615 35.9999)))
         (instance face :init :vertices (list (float-vector -185.0 -1.06151 35.9999) (float-vector -52.0 -1.06149 35.9999) (float-vector -52.0 8.00003 35.9999) (float-vector -185.0 8.0 35.9999)))
         (instance face :init :vertices (list (float-vector -185.0 -13.697 32.4249) (float-vector -52.0001 -13.697 32.425) (float-vector -52.0 -1.06149 35.9999) (float-vector -185.0 -1.06151 35.9999)))
         (instance face :init :vertices (list (float-vector -185.0 -22.958 25.2139) (float-vector -52.0 -22.958 25.214) (float-vector -52.0001 -13.697 32.425) (float-vector -185.0 -13.697 32.4249)))
         (instance face :init :vertices (list (float-vector -185.0 -28.476 16.4569) (float-vector -52.0 -28.476 16.457) (float-vector -52.0 -22.958 25.214) (float-vector -185.0 -22.958 25.2139)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 5.99994) (float-vector -52.0001 -31.0 6.0) (float-vector -52.0 -28.476 16.457) (float-vector -185.0 -28.476 16.4569)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 -6.103516e-05) (float-vector -52.0 -31.0 0.0) (float-vector -52.0001 -31.0 6.0) (float-vector -185.0 -31.0 5.99994)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 -6.00006) (float-vector -52.0 -31.0 -6.00006) (float-vector -52.0 -31.0 0.0) (float-vector -185.0 -31.0 -6.103516e-05)))
         (instance face :init :vertices (list (float-vector -185.0 -28.476 -16.457) (float-vector -52.0 -28.476 -16.457) (float-vector -52.0 -31.0 -6.00006) (float-vector -185.0 -31.0 -6.00006)))
         (instance face :init :vertices (list (float-vector -185.0 -22.958 -25.2141) (float-vector -52.0 -22.958 -25.214) (float-vector -52.0 -28.476 -16.457) (float-vector -185.0 -28.476 -16.457)))
         (instance face :init :vertices (list (float-vector -185.0 -13.697 -32.4251) (float-vector -51.9999 -13.697 -32.425) (float-vector -52.0 -22.958 -25.214) (float-vector -185.0 -22.958 -25.2141)))
         (instance face :init :vertices (list (float-vector -185.0 -1.06152 -36.0001) (float-vector -52.0 -1.06152 -36.0) (float-vector -51.9999 -13.697 -32.425) (float-vector -185.0 -13.697 -32.4251)))
         (instance face :init :vertices (list (float-vector -185.0 7.99997 -36.0001) (float-vector -52.0 7.99997 -36.0) (float-vector -52.0 -1.06152 -36.0) (float-vector -185.0 -1.06152 -36.0001)))
         (instance face :init :vertices (list (float-vector -185.0 17.0615 -36.0001) (float-vector -52.0 17.0615 -36.0) (float-vector -52.0 7.99997 -36.0) (float-vector -185.0 7.99997 -36.0001)))
         (instance face :init :vertices (list (float-vector -185.0 29.697 -32.4251) (float-vector -51.9999 29.697 -32.425) (float-vector -52.0 17.0615 -36.0) (float-vector -185.0 17.0615 -36.0001)))
         (instance face :init :vertices (list (float-vector -185.0 38.958 -25.2141) (float-vector -52.0 38.958 -25.2141) (float-vector -51.9999 29.697 -32.425) (float-vector -185.0 29.697 -32.4251)))
         (instance face :init :vertices (list (float-vector -185.0 44.476 -16.4571) (float-vector -52.0 44.476 -16.457) (float-vector -52.0 38.958 -25.2141) (float-vector -185.0 38.958 -25.2141)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 -6.00012) (float-vector -51.9999 47.0 -6.00012) (float-vector -52.0 44.476 -16.457) (float-vector -185.0 44.476 -16.4571)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -185.0 46.9999 -36.0001) (float-vector -250.0 47.0 -36.0001) (float-vector -250.0 46.9999 -34.0002) (float-vector -271.007 47.0 -5.70886) (float-vector -279.433 47.0 8.26733) (float-vector -281.0 47.0 17.9998) (float-vector -282.0 47.0 17.9998) (float-vector -280.002 47.0 29.1288) (float-vector -274.407 47.0 38.6948) (float-vector -263.32 47.0 47.0958) (float-vector -250.0 47.0 49.9998) (float-vector -241.132 47.0 48.7468) (float-vector -190.0 47.0 33.9999) (float-vector -185.0 47.0 33.9999)))
         (instance face :init :vertices (list (float-vector -250.0 -31.0001 -36.0001) (float-vector -185.0 -31.0001 -36.0) (float-vector -185.0 -31.0 33.9999) (float-vector -190.0 -31.0 33.9999) (float-vector -241.132 -31.0 48.7469) (float-vector -250.0 -31.0 49.9999) (float-vector -263.32 -31.0 47.0959) (float-vector -274.407 -31.0 38.6949) (float-vector -280.002 -31.0 29.1289) (float-vector -282.0 -31.0 17.9999) (float-vector -281.0 -31.0 17.9999) (float-vector -279.433 -31.0 8.2674) (float-vector -271.007 -31.0 -5.7088) (float-vector -250.0 -31.0 -34.0001)))
         (instance face :init :vertices (list (float-vector -185.0 46.9999 -36.0001) (float-vector -185.0 -31.0001 -36.0) (float-vector -250.0 -31.0001 -36.0001) (float-vector -250.0 47.0 -36.0001)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 33.9999) (float-vector -185.0 -31.0 33.9999) (float-vector -185.0 -31.0001 -36.0) (float-vector -185.0 46.9999 -36.0001)))
         (instance face :init :vertices (list (float-vector -190.0 47.0 33.9999) (float-vector -190.0 -31.0 33.9999) (float-vector -185.0 -31.0 33.9999) (float-vector -185.0 47.0 33.9999)))
         (instance face :init :vertices (list (float-vector -241.132 47.0 48.7468) (float-vector -241.132 -31.0 48.7469) (float-vector -190.0 -31.0 33.9999) (float-vector -190.0 47.0 33.9999)))
         (instance face :init :vertices (list (float-vector -250.0 47.0 49.9998) (float-vector -250.0 -31.0 49.9999) (float-vector -241.132 -31.0 48.7469) (float-vector -241.132 47.0 48.7468)))
         (instance face :init :vertices (list (float-vector -263.32 47.0 47.0958) (float-vector -263.32 -31.0 47.0959) (float-vector -250.0 -31.0 49.9999) (float-vector -250.0 47.0 49.9998)))
         (instance face :init :vertices (list (float-vector -274.407 47.0 38.6948) (float-vector -274.407 -31.0 38.6949) (float-vector -263.32 -31.0 47.0959) (float-vector -263.32 47.0 47.0958)))
         (instance face :init :vertices (list (float-vector -280.002 47.0 29.1288) (float-vector -280.002 -31.0 29.1289) (float-vector -274.407 -31.0 38.6949) (float-vector -274.407 47.0 38.6948)))
         (instance face :init :vertices (list (float-vector -282.0 47.0 17.9998) (float-vector -282.0 -31.0 17.9999) (float-vector -280.002 -31.0 29.1289) (float-vector -280.002 47.0 29.1288)))
         (instance face :init :vertices (list (float-vector -281.0 47.0 17.9998) (float-vector -281.0 -31.0 17.9999) (float-vector -282.0 -31.0 17.9999) (float-vector -282.0 47.0 17.9998)))
         (instance face :init :vertices (list (float-vector -279.433 47.0 8.26733) (float-vector -279.433 -31.0 8.2674) (float-vector -281.0 -31.0 17.9999) (float-vector -281.0 47.0 17.9998)))
         (instance face :init :vertices (list (float-vector -271.007 47.0 -5.70886) (float-vector -271.007 -31.0 -5.7088) (float-vector -279.433 -31.0 8.2674) (float-vector -279.433 47.0 8.26733)))
         (instance face :init :vertices (list (float-vector -250.0 46.9999 -34.0002) (float-vector -250.0 -31.0 -34.0001) (float-vector -271.007 -31.0 -5.7088) (float-vector -271.007 47.0 -5.70886)))
         (instance face :init :vertices (list (float-vector -250.0 47.0 -36.0001) (float-vector -250.0 -31.0001 -36.0001) (float-vector -250.0 -31.0 -34.0001) (float-vector -250.0 46.9999 -34.0002)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (send (elt bc 1) :set-color :gray)
     (send (elt bc 2) :set-color :gray)
     (setq blink11 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-r :weight 2106.72 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 62.0 97.0 43.0) (float-vector 62.0 97.0 -43.0) (float-vector 42.9999 111.0 -43.0) (float-vector 43.0 111.0 43.0)))
         (instance face :init :vertices (list (float-vector 42.9999 111.0 -43.0) (float-vector -9.00006 111.0 -43.0) (float-vector -9.0 111.0 43.0) (float-vector 43.0 111.0 43.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 37.7845 111.0 -12.0) (float-vector 41.0 111.0 3.051758e-05) (float-vector 37.7845 111.0 12.0) (float-vector 28.9999 111.0 20.7846) (float-vector 16.9999 111.0 24.0) (float-vector 5.0 111.0 20.7846) (float-vector -3.78461 111.0 12.0) (float-vector -7.00006 111.0 3.051758e-05) (float-vector -3.78467 111.0 -12.0) (float-vector 4.99994 111.0 -20.7846) (float-vector 17.0 111.0 -24.0) (float-vector 28.9999 111.0 -20.7846)))
))
         (instance face :init :vertices (list (float-vector -9.00006 111.0 -43.0) (float-vector -9.00006 83.0 -43.0) (float-vector -9.00006 83.0 43.0) (float-vector -9.0 111.0 43.0)))
         (instance face :init :vertices (list (float-vector -9.00006 83.0 -43.0) (float-vector -35.0 0.0 -43.0) (float-vector -35.0001 0.0 43.0) (float-vector -9.00006 83.0 43.0)))
         (instance face :init :vertices (list (float-vector -35.0 0.0 -43.0) (float-vector -25.0 -24.0 -43.0) (float-vector -25.0001 -24.0 43.0) (float-vector -35.0001 0.0 43.0)))
         (instance face :init :vertices (list (float-vector -25.0 -24.0 -43.0) (float-vector -6.103516e-05 -35.0 -43.0) (float-vector 0.0 -35.0 43.0) (float-vector -25.0001 -24.0 43.0)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 -35.0 -43.0) (float-vector 45.0 -35.0 -43.0) (float-vector 45.0 -35.0 43.0) (float-vector 0.0 -35.0 43.0)))
         (instance face :init :vertices (list (float-vector 45.0 -35.0 -43.0) (float-vector 61.9999 -20.0 -43.0) (float-vector 62.0 -20.0 43.0) (float-vector 45.0 -35.0 43.0)))
         (instance face :init :vertices (list (float-vector 62.0 -20.0 43.0) (float-vector 62.0 97.0 43.0) (float-vector 43.0 111.0 43.0) (float-vector -9.0 111.0 43.0) (float-vector -9.00006 83.0 43.0) (float-vector -35.0001 0.0 43.0) (float-vector -25.0001 -24.0 43.0) (float-vector 0.0 -35.0 43.0) (float-vector 45.0 -35.0 43.0)))
         (instance face :init :vertices (list (float-vector 61.9999 -20.0 -43.0) (float-vector 62.0 97.0 -43.0) (float-vector 62.0 97.0 43.0) (float-vector 62.0 -20.0 43.0)))
         (instance face :init :vertices (list (float-vector 62.0 97.0 -43.0) (float-vector 61.9999 -20.0 -43.0) (float-vector 45.0 -35.0 -43.0) (float-vector -6.103516e-05 -35.0 -43.0) (float-vector -25.0 -24.0 -43.0) (float-vector -35.0 0.0 -43.0) (float-vector -9.00006 83.0 -43.0) (float-vector -9.00006 111.0 -43.0) (float-vector 42.9999 111.0 -43.0)))
         (instance face :init :vertices (list (float-vector 41.0 111.0 3.051758e-05) (float-vector 40.9999 147.0 0.0) (float-vector 37.7845 147.0 12.0) (float-vector 37.7845 111.0 12.0)))
         (instance face :init :vertices (list (float-vector 37.7845 147.0 12.0) (float-vector 28.9999 147.0 20.7846) (float-vector 28.9999 111.0 20.7846) (float-vector 37.7845 111.0 12.0)))
         (instance face :init :vertices (list (float-vector 28.9999 147.0 20.7846) (float-vector 17.0 147.0 24.0) (float-vector 16.9999 111.0 24.0) (float-vector 28.9999 111.0 20.7846)))
         (instance face :init :vertices (list (float-vector 17.0 147.0 24.0) (float-vector 5.0 147.0 20.7846) (float-vector 5.0 111.0 20.7846) (float-vector 16.9999 111.0 24.0)))
         (instance face :init :vertices (list (float-vector 5.0 147.0 20.7846) (float-vector -3.78461 147.0 12.0) (float-vector -3.78461 111.0 12.0) (float-vector 5.0 111.0 20.7846)))
         (instance face :init :vertices (list (float-vector -3.78461 147.0 12.0) (float-vector -7.00006 147.0 3.051758e-05) (float-vector -7.00006 111.0 3.051758e-05) (float-vector -3.78461 111.0 12.0)))
         (instance face :init :vertices (list (float-vector -7.00006 147.0 3.051758e-05) (float-vector -3.78467 147.0 -12.0) (float-vector -3.78467 111.0 -12.0) (float-vector -7.00006 111.0 3.051758e-05)))
         (instance face :init :vertices (list (float-vector -3.78467 147.0 -12.0) (float-vector 4.99994 147.0 -20.7846) (float-vector 4.99994 111.0 -20.7846) (float-vector -3.78467 111.0 -12.0)))
         (instance face :init :vertices (list (float-vector 4.99994 147.0 -20.7846) (float-vector 16.9999 147.0 -24.0) (float-vector 17.0 111.0 -24.0) (float-vector 4.99994 111.0 -20.7846)))
         (instance face :init :vertices (list (float-vector 16.9999 147.0 -24.0) (float-vector 28.9999 147.0 -20.7846) (float-vector 28.9999 111.0 -20.7846) (float-vector 17.0 111.0 -24.0)))
         (instance face :init :vertices (list (float-vector 28.9999 147.0 -20.7846) (float-vector 37.7845 147.0 -12.0) (float-vector 37.7845 111.0 -12.0) (float-vector 28.9999 111.0 -20.7846)))
         (instance face :init :vertices (list (float-vector 37.7845 147.0 -12.0) (float-vector 40.9999 147.0 0.0) (float-vector 41.0 111.0 3.051758e-05) (float-vector 37.7845 111.0 -12.0)))
         (instance face :init :vertices (list (float-vector 40.9999 147.0 0.0) (float-vector 37.7845 147.0 -12.0) (float-vector 28.9999 147.0 -20.7846) (float-vector 16.9999 147.0 -24.0) (float-vector 4.99994 147.0 -20.7846) (float-vector -3.78467 147.0 -12.0) (float-vector -7.00006 147.0 3.051758e-05) (float-vector -3.78461 147.0 12.0) (float-vector 5.0 147.0 20.7846) (float-vector 17.0 147.0 24.0) (float-vector 28.9999 147.0 20.7846) (float-vector 37.7845 147.0 12.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink12 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-elbow-p :weight 572.353 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-wrist-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -29.0 27.0 -65.0) (float-vector -29.0 22.0 -88.0) (float-vector -34.0 22.0 -88.0) (float-vector -34.0 27.0 -65.0)))
         (instance face :init :vertices (list (float-vector 34.0 27.0001 -65.0) (float-vector 34.0 22.0001 -88.0) (float-vector 29.0 22.0001 -88.0) (float-vector 29.0 27.0001 -65.0)))
         (instance face :init :vertices (list (float-vector -34.0 25.0 -104.0) (float-vector -34.0 22.0 -88.0) (float-vector -29.0 22.0 -88.0) (float-vector -29.0 25.0 -104.0)))
         (instance face :init :vertices (list (float-vector 34.0 25.0 -104.0) (float-vector 29.0 25.0001 -104.0) (float-vector 29.0 22.0001 -88.0) (float-vector 34.0 22.0001 -88.0)))
         (instance face :init :vertices (list (float-vector -34.0 23.0 -115.0) (float-vector -34.0 25.0 -104.0) (float-vector -29.0 25.0 -104.0) (float-vector -29.0 23.0 -115.0)))
         (instance face :init :vertices (list (float-vector 34.0 23.0 -115.0) (float-vector 29.0 23.0001 -115.0) (float-vector 29.0 25.0001 -104.0) (float-vector 34.0 25.0 -104.0)))
         (instance face :init :vertices (list (float-vector -34.0 12.0001 -127.0) (float-vector -34.0 23.0 -115.0) (float-vector -29.0 23.0 -115.0) (float-vector -29.0 12.0001 -127.0)))
         (instance face :init :vertices (list (float-vector 34.0 12.0001 -127.0) (float-vector 29.0 12.0 -127.0) (float-vector 29.0 23.0001 -115.0) (float-vector 34.0 23.0 -115.0)))
         (instance face :init :vertices (list (float-vector -34.0 6.103516e-05 -130.0) (float-vector -34.0 12.0001 -127.0) (float-vector -29.0 12.0001 -127.0) (float-vector -29.0 6.103516e-05 -130.0)))
         (instance face :init :vertices (list (float-vector 34.0 0.0 -130.0) (float-vector 29.0 0.0 -130.0) (float-vector 29.0 12.0 -127.0) (float-vector 34.0 12.0001 -127.0)))
         (instance face :init :vertices (list (float-vector -34.0 -12.0 -127.0) (float-vector -34.0 6.103516e-05 -130.0) (float-vector -29.0 6.103516e-05 -130.0) (float-vector -29.0 -12.0 -127.0)))
         (instance face :init :vertices (list (float-vector 34.0 -12.0 -127.0) (float-vector 29.0 -12.0 -127.0) (float-vector 29.0 0.0 -130.0) (float-vector 34.0 0.0 -130.0)))
         (instance face :init :vertices (list (float-vector -34.0 -23.0 -115.0) (float-vector -34.0 -12.0 -127.0) (float-vector -29.0 -12.0 -127.0) (float-vector -29.0 -23.0 -115.0)))
         (instance face :init :vertices (list (float-vector 34.0 -23.0 -115.0) (float-vector 29.0 -23.0 -115.0) (float-vector 29.0 -12.0 -127.0) (float-vector 34.0 -12.0 -127.0)))
         (instance face :init :vertices (list (float-vector -34.0 -25.0 -104.0) (float-vector -34.0 -23.0 -115.0) (float-vector -29.0 -23.0 -115.0) (float-vector -29.0 -25.0 -104.0)))
         (instance face :init :vertices (list (float-vector 34.0 -25.0 -104.0) (float-vector 29.0 -25.0 -104.0) (float-vector 29.0 -23.0 -115.0) (float-vector 34.0 -23.0 -115.0)))
         (instance face :init :vertices (list (float-vector -34.0 -22.0 -88.0) (float-vector -34.0 -25.0 -104.0) (float-vector -29.0 -25.0 -104.0) (float-vector -29.0 -22.0 -88.0)))
         (instance face :init :vertices (list (float-vector 34.0 -22.0 -88.0) (float-vector 29.0 -22.0 -88.0) (float-vector 29.0 -25.0 -104.0) (float-vector 34.0 -25.0 -104.0)))
         (instance face :init :vertices (list (float-vector -34.0 -26.9999 -65.0) (float-vector -34.0 -22.0 -88.0) (float-vector -29.0 -22.0 -88.0) (float-vector -29.0 -26.9999 -65.0)))
         (instance face :init :vertices (list (float-vector 34.0 -26.9999 -65.0) (float-vector 29.0 -27.0 -65.0) (float-vector 29.0 -22.0 -88.0) (float-vector 34.0 -22.0 -88.0)))
         (instance face :init :vertices (list (float-vector 34.0 -27.0 0.0) (float-vector -34.0 -27.0 0.0) (float-vector -34.0 -26.9999 -65.0) (float-vector -29.0 -26.9999 -65.0) (float-vector -29.0 -27.0 -50.0) (float-vector 29.0 -26.9999 -50.0) (float-vector 29.0 -27.0 -65.0) (float-vector 34.0 -26.9999 -65.0)))
         (instance face :init :vertices (list (float-vector 34.0 27.0 0.0) (float-vector -34.0 27.0001 0.0) (float-vector -34.0 -27.0 0.0) (float-vector 34.0 -27.0 0.0)))
         (instance face :init :vertices (list (float-vector -34.0 27.0 -65.0) (float-vector -34.0 22.0 -88.0) (float-vector -34.0 25.0 -104.0) (float-vector -34.0 23.0 -115.0) (float-vector -34.0 12.0001 -127.0) (float-vector -34.0 6.103516e-05 -130.0) (float-vector -34.0 -12.0 -127.0) (float-vector -34.0 -23.0 -115.0) (float-vector -34.0 -25.0 -104.0) (float-vector -34.0 -22.0 -88.0) (float-vector -34.0 -26.9999 -65.0) (float-vector -34.0 -27.0 0.0) (float-vector -34.0 27.0001 0.0)))
         (instance face :init :vertices (list (float-vector 34.0 27.0 0.0) (float-vector 34.0 -27.0 0.0) (float-vector 34.0 -26.9999 -65.0) (float-vector 34.0 -22.0 -88.0) (float-vector 34.0 -25.0 -104.0) (float-vector 34.0 -23.0 -115.0) (float-vector 34.0 -12.0 -127.0) (float-vector 34.0 0.0 -130.0) (float-vector 34.0 12.0001 -127.0) (float-vector 34.0 23.0 -115.0) (float-vector 34.0 25.0 -104.0) (float-vector 34.0 22.0001 -88.0) (float-vector 34.0 27.0001 -65.0)))
         (instance face :init :vertices (list (float-vector 34.0 27.0001 -65.0) (float-vector 29.0 27.0001 -65.0) (float-vector 29.0 27.0001 -50.0) (float-vector -29.0 27.0 -50.0) (float-vector -29.0 27.0 -65.0) (float-vector -34.0 27.0 -65.0) (float-vector -34.0 27.0001 0.0) (float-vector 34.0 27.0 0.0)))
         (instance face :init :vertices (list (float-vector 29.0 -26.9999 -50.0) (float-vector -29.0 -27.0 -50.0) (float-vector -29.0 27.0 -50.0) (float-vector 29.0 27.0001 -50.0)))
         (instance face :init :vertices (list (float-vector -29.0 27.0 -50.0) (float-vector -29.0 -27.0 -50.0) (float-vector -29.0 -26.9999 -65.0) (float-vector -29.0 -22.0 -88.0) (float-vector -29.0 -25.0 -104.0) (float-vector -29.0 -23.0 -115.0) (float-vector -29.0 -12.0 -127.0) (float-vector -29.0 6.103516e-05 -130.0) (float-vector -29.0 12.0001 -127.0) (float-vector -29.0 23.0 -115.0) (float-vector -29.0 25.0 -104.0) (float-vector -29.0 22.0 -88.0) (float-vector -29.0 27.0 -65.0)))
         (instance face :init :vertices (list (float-vector 29.0 27.0001 -65.0) (float-vector 29.0 22.0001 -88.0) (float-vector 29.0 25.0001 -104.0) (float-vector 29.0 23.0001 -115.0) (float-vector 29.0 12.0 -127.0) (float-vector 29.0 0.0 -130.0) (float-vector 29.0 -12.0 -127.0) (float-vector 29.0 -23.0 -115.0) (float-vector 29.0 -25.0 -104.0) (float-vector 29.0 -22.0 -88.0) (float-vector 29.0 -27.0 -65.0) (float-vector 29.0 -26.9999 -50.0) (float-vector 29.0 27.0001 -50.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink13 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-wrist-y :weight 867.544 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-wrist-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 29.0 15.0 26.4999) (float-vector -29.0 15.0 26.5) (float-vector -29.0 -15.0 26.4999) (float-vector 29.0 -15.0 26.5)))
         (instance face :init :vertices (list (float-vector -29.0 15.0 -26.5) (float-vector 29.0 15.0 -26.5) (float-vector 29.0 -15.0 -26.5001) (float-vector -29.0 -15.0 -26.5)))
         (instance face :init :vertices (list (float-vector 29.0 15.0 26.4999) (float-vector 29.0 15.0 -26.5) (float-vector -29.0 15.0 -26.5) (float-vector -29.0 15.0 26.5)))
         (instance face :init :vertices (list (float-vector 29.0 -15.0 26.5) (float-vector 29.0 -15.0 -26.5001) (float-vector 29.0 15.0 -26.5) (float-vector 29.0 15.0 26.4999)))
         (instance face :init :vertices (list (float-vector -29.0 -15.0 26.4999) (float-vector -29.0 -15.0 -26.5) (float-vector 29.0 -15.0 -26.5001) (float-vector 29.0 -15.0 26.5)))
         (instance face :init :vertices (list (float-vector -29.0 15.0 26.5) (float-vector -29.0 15.0 -26.5) (float-vector -29.0 -15.0 -26.5) (float-vector -29.0 -15.0 26.4999)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink14 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-wrist-r :weight 867.544 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-wrist-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 39.6 16.0) (float-vector 17.0 39.6 9.0) (float-vector 17.0 44.5999 9.0) (float-vector 10.0 44.5999 16.0)))
         (instance face :init :vertices (list (float-vector 10.0 -35.0 16.0) (float-vector 17.0 -35.0 9.0) (float-vector 17.0 -30.0 9.0) (float-vector 10.0 -30.0 16.0)))
         (instance face :init :vertices (list (float-vector 19.0 44.6 0.0) (float-vector 17.0 44.5999 9.0) (float-vector 17.0 39.6 9.0) (float-vector 19.0 39.5999 0.0)))
         (instance face :init :vertices (list (float-vector 19.0 -35.0 0.0) (float-vector 19.0 -30.0 0.0) (float-vector 17.0 -30.0 9.0) (float-vector 17.0 -35.0 9.0)))
         (instance face :init :vertices (list (float-vector 17.0 44.6 -10.0) (float-vector 19.0 44.6 0.0) (float-vector 19.0 39.5999 0.0) (float-vector 17.0 39.6 -10.0)))
         (instance face :init :vertices (list (float-vector 17.0 -35.0 -10.0) (float-vector 17.0 -30.0 -10.0) (float-vector 19.0 -30.0 0.0) (float-vector 19.0 -35.0 0.0)))
         (instance face :init :vertices (list (float-vector 11.0 44.6 -17.0) (float-vector 17.0 44.6 -10.0) (float-vector 17.0 39.6 -10.0) (float-vector 11.0 39.6 -17.0)))
         (instance face :init :vertices (list (float-vector 11.0 -35.0 -17.0) (float-vector 11.0 -30.0 -17.0) (float-vector 17.0 -30.0 -10.0) (float-vector 17.0 -35.0 -10.0)))
         (instance face :init :vertices (list (float-vector 11.0 -35.0 -58.0) (float-vector 11.0 44.6 -58.0) (float-vector 11.0 44.6 -17.0) (float-vector 11.0 39.6 -17.0) (float-vector 11.0001 39.6 -53.0) (float-vector 11.0 -30.0 -53.0) (float-vector 11.0 -30.0 -17.0) (float-vector 11.0 -35.0 -17.0)))
         (instance face :init :vertices (list (float-vector -11.0 -35.0 -58.0) (float-vector -11.0 44.6 -58.0) (float-vector 11.0 44.6 -58.0) (float-vector 11.0 -35.0 -58.0)))
         (instance face :init :vertices (list (float-vector -11.0 -35.0 -17.0) (float-vector -11.0 -30.0 -17.0) (float-vector -11.0 -30.0 -53.0) (float-vector -11.0 39.6 -53.0) (float-vector -11.0 39.6 -17.0) (float-vector -11.0 44.6 -17.0) (float-vector -11.0 44.6 -58.0) (float-vector -11.0 -35.0 -58.0)))
         (instance face :init :vertices (list (float-vector -17.0 44.6 -10.0) (float-vector -11.0 44.6 -17.0) (float-vector -11.0 39.6 -17.0) (float-vector -17.0 39.5999 -10.0)))
         (instance face :init :vertices (list (float-vector -17.0 -35.0 -10.0) (float-vector -17.0 -30.0 -10.0) (float-vector -11.0 -30.0 -17.0) (float-vector -11.0 -35.0 -17.0)))
         (instance face :init :vertices (list (float-vector -19.0 44.5999 0.0) (float-vector -17.0 44.6 -10.0) (float-vector -17.0 39.5999 -10.0) (float-vector -19.0 39.6 0.0)))
         (instance face :init :vertices (list (float-vector -19.0 -35.0 0.0) (float-vector -19.0 -30.0 0.0) (float-vector -17.0 -30.0 -10.0) (float-vector -17.0 -35.0 -10.0)))
         (instance face :init :vertices (list (float-vector -17.0 44.5999 9.0) (float-vector -19.0 44.5999 0.0) (float-vector -19.0 39.6 0.0) (float-vector -17.0 39.6 9.0)))
         (instance face :init :vertices (list (float-vector -17.0 -35.0 9.0) (float-vector -17.0 -30.0 9.0) (float-vector -19.0 -30.0 0.0) (float-vector -19.0 -35.0 0.0)))
         (instance face :init :vertices (list (float-vector -10.0 44.6 16.0) (float-vector -17.0 44.5999 9.0) (float-vector -17.0 39.6 9.0) (float-vector -10.0 39.6 16.0)))
         (instance face :init :vertices (list (float-vector -10.0 -35.0 16.0) (float-vector -10.0 -30.0 16.0) (float-vector -17.0 -30.0 9.0) (float-vector -17.0 -35.0 9.0)))
         (instance face :init :vertices (list (float-vector 0.0 44.6 19.0) (float-vector -10.0 44.6 16.0) (float-vector -10.0 39.6 16.0) (float-vector 0.0 39.5999 19.0)))
         (instance face :init :vertices (list (float-vector 0.0 -35.0 19.0) (float-vector 0.0 -30.0 19.0) (float-vector -10.0 -30.0 16.0) (float-vector -10.0 -35.0 16.0)))
         (instance face :init :vertices (list (float-vector 10.0 44.5999 16.0) (float-vector 17.0 44.5999 9.0) (float-vector 19.0 44.6 0.0) (float-vector 17.0 44.6 -10.0) (float-vector 11.0 44.6 -17.0) (float-vector 11.0 44.6 -58.0) (float-vector -11.0 44.6 -58.0) (float-vector -11.0 44.6 -17.0) (float-vector -17.0 44.6 -10.0) (float-vector -19.0 44.5999 0.0) (float-vector -17.0 44.5999 9.0) (float-vector -10.0 44.6 16.0) (float-vector 0.0 44.6 19.0)))
         (instance face :init :vertices (list (float-vector 0.0 -35.0 19.0) (float-vector -10.0 -35.0 16.0) (float-vector -17.0 -35.0 9.0) (float-vector -19.0 -35.0 0.0) (float-vector -17.0 -35.0 -10.0) (float-vector -11.0 -35.0 -17.0) (float-vector -11.0 -35.0 -58.0) (float-vector 11.0 -35.0 -58.0) (float-vector 11.0 -35.0 -17.0) (float-vector 17.0 -35.0 -10.0) (float-vector 19.0 -35.0 0.0) (float-vector 17.0 -35.0 9.0) (float-vector 10.0 -35.0 16.0)))
         (instance face :init :vertices (list (float-vector 0.0 44.6 19.0) (float-vector 0.0 39.5999 19.0) (float-vector 10.0 39.6 16.0) (float-vector 10.0 44.5999 16.0)))
         (instance face :init :vertices (list (float-vector 10.0 -35.0 16.0) (float-vector 10.0 -30.0 16.0) (float-vector 0.0 -30.0 19.0) (float-vector 0.0 -35.0 19.0)))
         (instance face :init :vertices (list (float-vector 11.0 -30.0 -53.0) (float-vector 11.0001 39.6 -53.0) (float-vector -11.0 39.6 -53.0) (float-vector -11.0 -30.0 -53.0)))
         (instance face :init :vertices (list (float-vector 0.0 39.5999 19.0) (float-vector -10.0 39.6 16.0) (float-vector -17.0 39.6 9.0) (float-vector -19.0 39.6 0.0) (float-vector -17.0 39.5999 -10.0) (float-vector -11.0 39.6 -17.0) (float-vector -11.0 39.6 -53.0) (float-vector 11.0001 39.6 -53.0) (float-vector 11.0 39.6 -17.0) (float-vector 17.0 39.6 -10.0) (float-vector 19.0 39.5999 0.0) (float-vector 17.0 39.6 9.0) (float-vector 10.0 39.6 16.0)))
         (instance face :init :vertices (list (float-vector 10.0 -30.0 16.0) (float-vector 17.0 -30.0 9.0) (float-vector 19.0 -30.0 0.0) (float-vector 17.0 -30.0 -10.0) (float-vector 11.0 -30.0 -17.0) (float-vector 11.0 -30.0 -53.0) (float-vector -11.0 -30.0 -53.0) (float-vector -11.0 -30.0 -17.0) (float-vector -17.0 -30.0 -10.0) (float-vector -19.0 -30.0 0.0) (float-vector -17.0 -30.0 9.0) (float-vector -10.0 -30.0 16.0) (float-vector 0.0 -30.0 19.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 29.4448 -17.0 -58.0) (float-vector 34.0 0.0 -58.0) (float-vector 29.4448 17.0 -58.0) (float-vector 17.0 29.4449 -58.0) (float-vector 0.0 34.0 -58.0) (float-vector -17.0 29.4449 -58.0) (float-vector -29.4449 17.0 -58.0) (float-vector -34.0 0.0 -58.0) (float-vector -29.4449 -17.0 -58.0) (float-vector -17.0 -29.4449 -58.0) (float-vector -6.103516e-05 -34.0 -58.0) (float-vector 17.0 -29.4449 -58.0)))
         (instance face :init :vertices (list (float-vector 34.0 0.0 -85.0) (float-vector 29.4448 -17.0 -85.0) (float-vector 17.0 -29.4449 -85.0) (float-vector 0.0 -34.0 -85.0) (float-vector -17.0 -29.4449 -85.0) (float-vector -29.4449 -17.0 -85.0) (float-vector -34.0 3.051758e-05 -85.0) (float-vector -29.4448 17.0 -85.0) (float-vector -17.0 29.4449 -85.0) (float-vector 0.0 34.0 -85.0) (float-vector 17.0 29.4449 -85.0) (float-vector 29.4449 17.0 -85.0)))
         (instance face :init :vertices (list (float-vector 29.4448 -17.0 -58.0) (float-vector 29.4448 -17.0 -85.0) (float-vector 34.0 0.0 -85.0) (float-vector 34.0 0.0 -58.0)))
         (instance face :init :vertices (list (float-vector 17.0 -29.4449 -58.0) (float-vector 17.0 -29.4449 -85.0) (float-vector 29.4448 -17.0 -85.0) (float-vector 29.4448 -17.0 -58.0)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 -34.0 -58.0) (float-vector 0.0 -34.0 -85.0) (float-vector 17.0 -29.4449 -85.0) (float-vector 17.0 -29.4449 -58.0)))
         (instance face :init :vertices (list (float-vector -17.0 -29.4449 -58.0) (float-vector -17.0 -29.4449 -85.0) (float-vector 0.0 -34.0 -85.0) (float-vector -6.103516e-05 -34.0 -58.0)))
         (instance face :init :vertices (list (float-vector -29.4449 -17.0 -58.0) (float-vector -29.4449 -17.0 -85.0) (float-vector -17.0 -29.4449 -85.0) (float-vector -17.0 -29.4449 -58.0)))
         (instance face :init :vertices (list (float-vector -34.0 0.0 -58.0) (float-vector -34.0 3.051758e-05 -85.0) (float-vector -29.4449 -17.0 -85.0) (float-vector -29.4449 -17.0 -58.0)))
         (instance face :init :vertices (list (float-vector -29.4449 17.0 -58.0) (float-vector -29.4448 17.0 -85.0) (float-vector -34.0 3.051758e-05 -85.0) (float-vector -34.0 0.0 -58.0)))
         (instance face :init :vertices (list (float-vector -17.0 29.4449 -58.0) (float-vector -17.0 29.4449 -85.0) (float-vector -29.4448 17.0 -85.0) (float-vector -29.4449 17.0 -58.0)))
         (instance face :init :vertices (list (float-vector 0.0 34.0 -58.0) (float-vector 0.0 34.0 -85.0) (float-vector -17.0 29.4449 -85.0) (float-vector -17.0 29.4449 -58.0)))
         (instance face :init :vertices (list (float-vector 17.0 29.4449 -58.0) (float-vector 17.0 29.4449 -85.0) (float-vector 0.0 34.0 -85.0) (float-vector 0.0 34.0 -58.0)))
         (instance face :init :vertices (list (float-vector 29.4448 17.0 -58.0) (float-vector 29.4449 17.0 -85.0) (float-vector 17.0 29.4449 -85.0) (float-vector 17.0 29.4449 -58.0)))
         (instance face :init :vertices (list (float-vector 34.0 0.0 -58.0) (float-vector 34.0 0.0 -85.0) (float-vector 29.4449 17.0 -85.0) (float-vector 29.4448 17.0 -58.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -51.9999 -35.0 -149.0) (float-vector -51.9999 -35.0 -85.0) (float-vector -51.9999 11.0 -85.0) (float-vector -51.9999 37.0 -116.0) (float-vector -51.9999 37.0 -149.0)))
         (instance face :init :vertices (list (float-vector 52.0001 -35.0 -85.0) (float-vector 52.0001 -35.0 -149.0) (float-vector 52.0001 37.0 -149.0) (float-vector 52.0001 37.0 -116.0) (float-vector 52.0001 11.0 -85.0)))
         (instance face :init :vertices (list (float-vector -51.9999 -35.0 -149.0) (float-vector 52.0001 -35.0 -149.0) (float-vector 52.0001 -35.0 -85.0) (float-vector -51.9999 -35.0 -85.0)))
         (instance face :init :vertices (list (float-vector -51.9999 37.0 -149.0) (float-vector 52.0001 37.0 -149.0) (float-vector 52.0001 -35.0 -149.0) (float-vector -51.9999 -35.0 -149.0)))
         (instance face :init :vertices (list (float-vector -51.9999 37.0 -116.0) (float-vector 52.0001 37.0 -116.0) (float-vector 52.0001 37.0 -149.0) (float-vector -51.9999 37.0 -149.0)))
         (instance face :init :vertices (list (float-vector -51.9999 11.0 -85.0) (float-vector 52.0001 11.0 -85.0) (float-vector 52.0001 37.0 -116.0) (float-vector -51.9999 37.0 -116.0)))
         (instance face :init :vertices (list (float-vector -51.9999 -35.0 -85.0) (float-vector 52.0001 -35.0 -85.0) (float-vector 52.0001 11.0 -85.0) (float-vector -51.9999 11.0 -85.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (send (elt bc 1) :set-color :blue)
     (send (elt bc 2) :set-color :gray)
     (setq blink15 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-wrist-p :weight 654.58 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-finger2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 41.5 -14.0 -3.99998) (float-vector -41.5 -14.0 -3.99998) (float-vector -41.4999 3.00003 -8.00002) (float-vector 41.5001 3.0 -8.00002)))
         (instance face :init :vertices (list (float-vector -41.4999 3.00003 -8.00002) (float-vector -41.4999 7.00003 -19.0) (float-vector 41.5001 7.0 -19.0) (float-vector 41.5001 3.0 -8.00002)))
         (instance face :init :vertices (list (float-vector -41.4999 7.00003 -19.0) (float-vector -41.5 10.0 -27.0) (float-vector 41.5 10.0 -27.0) (float-vector 41.5001 7.0 -19.0)))
         (instance face :init :vertices (list (float-vector -41.5 10.0 -27.0) (float-vector -41.4999 10.0 -53.268) (float-vector 41.5001 10.0 -53.2679) (float-vector 41.5 10.0 -27.0)))
         (instance face :init :vertices (list (float-vector -41.5 32.7321 -58.0) (float-vector -41.5 34.0 -58.0) (float-vector 41.5 34.0 -58.0) (float-vector 41.5001 32.7321 -58.0)))
         (instance face :init :vertices (list (float-vector -41.5 34.0 -58.0) (float-vector -41.4999 34.0 -15.0) (float-vector 41.5001 34.0 -15.0) (float-vector 41.5 34.0 -58.0)))
         (instance face :init :vertices (list (float-vector -41.4999 34.0 -15.0) (float-vector -41.4999 28.0 0.0) (float-vector 41.5001 28.0 -1.525879e-05) (float-vector 41.5001 34.0 -15.0)))
         (instance face :init :vertices (list (float-vector -41.4999 28.0 0.0) (float-vector -41.5 21.0 8.0) (float-vector 41.5 21.0 8.0) (float-vector 41.5001 28.0 -1.525879e-05)))
         (instance face :init :vertices (list (float-vector -41.5 21.0 8.0) (float-vector -41.5 0.0 20.0) (float-vector 41.5 0.0 20.0) (float-vector 41.5 21.0 8.0)))
         (instance face :init :vertices (list (float-vector 41.5 0.0 20.0) (float-vector 41.5 -14.0 -3.99998) (float-vector 41.5001 3.0 -8.00002) (float-vector 41.5001 7.0 -19.0) (float-vector 41.5 10.0 -27.0) (float-vector 41.5001 10.0 -53.2679) (float-vector 41.5001 10.6077 -51.0) (float-vector 41.5001 15.0 -46.6077) (float-vector 41.5 21.0 -45.0) (float-vector 41.5 27.0 -46.6077) (float-vector 41.5 31.3923 -51.0) (float-vector 41.5001 33.0 -57.0) (float-vector 41.5001 32.7321 -58.0) (float-vector 41.5 34.0 -58.0) (float-vector 41.5001 34.0 -15.0) (float-vector 41.5001 28.0 -1.525879e-05) (float-vector 41.5 21.0 8.0)))
         (instance face :init :vertices (list (float-vector -41.5 0.0 20.0) (float-vector -41.5 -14.0 -3.99998) (float-vector 41.5 -14.0 -3.99998) (float-vector 41.5 0.0 20.0)))
         (instance face :init :vertices (list (float-vector -41.5 -14.0 -3.99998) (float-vector -41.5 0.0 20.0) (float-vector -41.5 21.0 8.0) (float-vector -41.4999 28.0 0.0) (float-vector -41.4999 34.0 -15.0) (float-vector -41.5 34.0 -58.0) (float-vector -41.5 32.7321 -58.0) (float-vector -41.4999 33.0 -57.0) (float-vector -41.4999 31.3923 -51.0) (float-vector -41.5 27.0 -46.6077) (float-vector -41.5 21.0 -45.0) (float-vector -41.4999 15.0 -46.6077) (float-vector -41.5 10.6077 -51.0) (float-vector -41.4999 10.0 -53.268) (float-vector -41.5 10.0 -27.0) (float-vector -41.4999 7.00003 -19.0) (float-vector -41.4999 3.00003 -8.00002)))
         (instance face :init :vertices (list (float-vector 42.5001 21.0 -69.0) (float-vector -42.4999 21.0 -69.0) (float-vector -42.4999 27.0 -67.3923) (float-vector 42.5001 27.0 -67.3923)))
         (instance face :init :vertices (list (float-vector -42.4999 27.0 -67.3923) (float-vector -42.5 31.3923 -63.0) (float-vector 42.5001 31.3923 -63.0) (float-vector 42.5001 27.0 -67.3923)))
         (instance face :init :vertices (list (float-vector -42.5 31.3923 -63.0) (float-vector -42.5 33.0 -57.0) (float-vector -41.4999 33.0 -57.0) (float-vector -41.5 32.7321 -58.0) (float-vector 41.5001 32.7321 -58.0) (float-vector 41.5001 33.0 -57.0) (float-vector 42.5001 33.0 -57.0) (float-vector 42.5001 31.3923 -63.0)))
         (instance face :init :vertices (list (float-vector 41.5 31.3923 -51.0) (float-vector 42.5 31.3923 -51.0) (float-vector 42.5001 33.0 -57.0) (float-vector 41.5001 33.0 -57.0)))
         (instance face :init :vertices (list (float-vector -42.5 33.0 -57.0) (float-vector -42.4999 31.3923 -51.0) (float-vector -41.4999 31.3923 -51.0) (float-vector -41.4999 33.0 -57.0)))
         (instance face :init :vertices (list (float-vector 41.5 27.0 -46.6077) (float-vector 42.5 27.0 -46.6077) (float-vector 42.5 31.3923 -51.0) (float-vector 41.5 31.3923 -51.0)))
         (instance face :init :vertices (list (float-vector -42.4999 31.3923 -51.0) (float-vector -42.5 27.0 -46.6077) (float-vector -41.5 27.0 -46.6077) (float-vector -41.4999 31.3923 -51.0)))
         (instance face :init :vertices (list (float-vector 41.5 21.0 -45.0) (float-vector 42.5001 21.0 -45.0) (float-vector 42.5 27.0 -46.6077) (float-vector 41.5 27.0 -46.6077)))
         (instance face :init :vertices (list (float-vector -42.5 27.0 -46.6077) (float-vector -42.5 21.0 -45.0) (float-vector -41.5 21.0 -45.0) (float-vector -41.5 27.0 -46.6077)))
         (instance face :init :vertices (list (float-vector 41.5001 15.0 -46.6077) (float-vector 42.5001 15.0 -46.6077) (float-vector 42.5001 21.0 -45.0) (float-vector 41.5 21.0 -45.0)))
         (instance face :init :vertices (list (float-vector -42.5 21.0 -45.0) (float-vector -42.5 15.0 -46.6077) (float-vector -41.4999 15.0 -46.6077) (float-vector -41.5 21.0 -45.0)))
         (instance face :init :vertices (list (float-vector 41.5001 10.6077 -51.0) (float-vector 42.5001 10.6077 -51.0) (float-vector 42.5001 15.0 -46.6077) (float-vector 41.5001 15.0 -46.6077)))
         (instance face :init :vertices (list (float-vector -42.5 15.0 -46.6077) (float-vector -42.5 10.6077 -51.0) (float-vector -41.5 10.6077 -51.0) (float-vector -41.4999 15.0 -46.6077)))
         (instance face :init :vertices (list (float-vector -42.5 10.6077 -51.0) (float-vector -42.5 9.00003 -57.0) (float-vector 42.5001 9.00003 -57.0) (float-vector 42.5001 10.6077 -51.0) (float-vector 41.5001 10.6077 -51.0) (float-vector 41.5001 10.0 -53.2679) (float-vector -41.4999 10.0 -53.268) (float-vector -41.5 10.6077 -51.0)))
         (instance face :init :vertices (list (float-vector -42.5 9.00003 -57.0) (float-vector -42.5 10.6077 -63.0) (float-vector 42.5 10.6077 -63.0) (float-vector 42.5001 9.00003 -57.0)))
         (instance face :init :vertices (list (float-vector -42.5 10.6077 -63.0) (float-vector -42.4999 15.0 -67.3923) (float-vector 42.5 15.0 -67.3923) (float-vector 42.5 10.6077 -63.0)))
         (instance face :init :vertices (list (float-vector 42.5 15.0 -67.3923) (float-vector 42.5001 21.0 -69.0) (float-vector 42.5001 27.0 -67.3923) (float-vector 42.5001 31.3923 -63.0) (float-vector 42.5001 33.0 -57.0) (float-vector 42.5 31.3923 -51.0) (float-vector 42.5 27.0 -46.6077) (float-vector 42.5001 21.0 -45.0) (float-vector 42.5001 15.0 -46.6077) (float-vector 42.5001 10.6077 -51.0) (float-vector 42.5001 9.00003 -57.0) (float-vector 42.5 10.6077 -63.0)))
         (instance face :init :vertices (list (float-vector -42.4999 15.0 -67.3923) (float-vector -42.4999 21.0 -69.0) (float-vector 42.5001 21.0 -69.0) (float-vector 42.5 15.0 -67.3923)))
         (instance face :init :vertices (list (float-vector -42.4999 21.0 -69.0) (float-vector -42.4999 15.0 -67.3923) (float-vector -42.5 10.6077 -63.0) (float-vector -42.5 9.00003 -57.0) (float-vector -42.5 10.6077 -51.0) (float-vector -42.5 15.0 -46.6077) (float-vector -42.5 21.0 -45.0) (float-vector -42.5 27.0 -46.6077) (float-vector -42.4999 31.3923 -51.0) (float-vector -42.5 33.0 -57.0) (float-vector -42.5 31.3923 -63.0) (float-vector -42.4999 27.0 -67.3923)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink35 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-finger2 :weight 123.21 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-finger3
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 41.5 12.0 8.00001) (float-vector 41.5 -12.0 8.0) (float-vector 41.5 -12.0 -38.0) (float-vector 41.5 -29.0 -56.0) (float-vector 41.5 -17.0 -61.0) (float-vector 41.5 -1.0 -46.0) (float-vector 41.5 12.0 0.0)))
         (instance face :init :vertices (list (float-vector -41.5 -12.0 8.00001) (float-vector -41.5 12.0 8.00002) (float-vector -41.5 12.0 -7.629395e-06) (float-vector -41.5 -1.0 -46.0) (float-vector -41.5 -17.0 -61.0) (float-vector -41.5 -29.0 -56.0) (float-vector -41.5 -12.0 -38.0)))
         (instance face :init :vertices (list (float-vector 41.5 12.0 8.00001) (float-vector -41.5 12.0 8.00002) (float-vector -41.5 -12.0 8.00001) (float-vector 41.5 -12.0 8.0)))
         (instance face :init :vertices (list (float-vector 41.5 12.0 0.0) (float-vector -41.5 12.0 -7.629395e-06) (float-vector -41.5 12.0 8.00002) (float-vector 41.5 12.0 8.00001)))
         (instance face :init :vertices (list (float-vector 41.5 -1.0 -46.0) (float-vector -41.5 -1.0 -46.0) (float-vector -41.5 12.0 -7.629395e-06) (float-vector 41.5 12.0 0.0)))
         (instance face :init :vertices (list (float-vector 41.5 -17.0 -61.0) (float-vector -41.5 -17.0 -61.0) (float-vector -41.5 -1.0 -46.0) (float-vector 41.5 -1.0 -46.0)))
         (instance face :init :vertices (list (float-vector 41.5 -29.0 -56.0) (float-vector -41.5 -29.0 -56.0) (float-vector -41.5 -17.0 -61.0) (float-vector 41.5 -17.0 -61.0)))
         (instance face :init :vertices (list (float-vector 41.5 -12.0 -38.0) (float-vector -41.5 -12.0 -38.0) (float-vector -41.5 -29.0 -56.0) (float-vector 41.5 -29.0 -56.0)))
         (instance face :init :vertices (list (float-vector 41.5 -12.0 8.0) (float-vector -41.5 -12.0 8.00001) (float-vector -41.5 -12.0 -38.0) (float-vector 41.5 -12.0 -38.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink36 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-finger3 :weight 123.21 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rarm-finger1
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0001 -10.5 0.0) (float-vector -10.0 -10.5 -56.0) (float-vector -31.0001 -10.5 -76.0) (float-vector -29.0 -10.5 -79.0) (float-vector -6.103516e-05 -10.5 -71.0) (float-vector 6.0 -10.5 -63.0) (float-vector 7.0 -10.5 -56.0) (float-vector 7.0 -10.5 -20.0) (float-vector 10.0 -10.5 -11.0) (float-vector 0.0 -10.5 1.525879e-05)))
         (instance face :init :vertices (list (float-vector -10.0 10.5 -56.0) (float-vector -10.0 10.5 0.0) (float-vector 0.0 10.5 -1.525879e-05) (float-vector 10.0 10.5 -11.0) (float-vector 7.0 10.5 -20.0) (float-vector 7.0 10.5 -56.0) (float-vector 6.0 10.5 -63.0) (float-vector 0.0 10.5 -71.0) (float-vector -29.0 10.5 -79.0) (float-vector -31.0 10.5 -76.0)))
         (instance face :init :vertices (list (float-vector -10.0001 -10.5 0.0) (float-vector -10.0 10.5 0.0) (float-vector -10.0 10.5 -56.0) (float-vector -10.0 -10.5 -56.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.5 1.525879e-05) (float-vector 0.0 10.5 -1.525879e-05) (float-vector -10.0 10.5 0.0) (float-vector -10.0001 -10.5 0.0)))
         (instance face :init :vertices (list (float-vector 10.0 -10.5 -11.0) (float-vector 10.0 10.5 -11.0) (float-vector 0.0 10.5 -1.525879e-05) (float-vector 0.0 -10.5 1.525879e-05)))
         (instance face :init :vertices (list (float-vector 7.0 -10.5 -20.0) (float-vector 7.0 10.5 -20.0) (float-vector 10.0 10.5 -11.0) (float-vector 10.0 -10.5 -11.0)))
         (instance face :init :vertices (list (float-vector 7.0 -10.5 -56.0) (float-vector 7.0 10.5 -56.0) (float-vector 7.0 10.5 -20.0) (float-vector 7.0 -10.5 -20.0)))
         (instance face :init :vertices (list (float-vector 6.0 -10.5 -63.0) (float-vector 6.0 10.5 -63.0) (float-vector 7.0 10.5 -56.0) (float-vector 7.0 -10.5 -56.0)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 -10.5 -71.0) (float-vector 0.0 10.5 -71.0) (float-vector 6.0 10.5 -63.0) (float-vector 6.0 -10.5 -63.0)))
         (instance face :init :vertices (list (float-vector -29.0 -10.5 -79.0) (float-vector -29.0 10.5 -79.0) (float-vector 0.0 10.5 -71.0) (float-vector -6.103516e-05 -10.5 -71.0)))
         (instance face :init :vertices (list (float-vector -31.0001 -10.5 -76.0) (float-vector -31.0 10.5 -76.0) (float-vector -29.0 10.5 -79.0) (float-vector -29.0 -10.5 -79.0)))
         (instance face :init :vertices (list (float-vector -10.0 -10.5 -56.0) (float-vector -10.0 10.5 -56.0) (float-vector -31.0 10.5 -76.0) (float-vector -31.0001 -10.5 -76.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink16 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-finger1 :weight 123.21 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-shoulder-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 32.09 -92.851 36.5) (float-vector 32.0 0.030975 36.5) (float-vector 24.843 20.17 36.5) (float-vector 13.298 29.106 36.5) (float-vector -9.536743e-06 32.0 36.5) (float-vector -9.536743e-06 31.0 36.5) (float-vector -15.454 26.873 36.5) (float-vector -26.439 16.186 36.5) (float-vector -31.0 -3.051758e-05 36.5) (float-vector -32.0 -3.051758e-05 36.5) (float-vector -32.0 -93.0 36.4999)))
         (instance face :init :vertices (list (float-vector 32.0 0.031044 -71.0) (float-vector 32.09 -92.8509 -71.0) (float-vector -32.0 -93.0 -71.0001) (float-vector -32.0 3.814697e-05 -71.0) (float-vector -31.0 3.814697e-05 -71.0) (float-vector -26.439 16.186 -71.0) (float-vector -15.454 26.873 -71.0) (float-vector -9.536743e-06 31.0 -71.0) (float-vector -9.536743e-06 32.0 -71.0) (float-vector 13.298 29.106 -71.0) (float-vector 24.843 20.1701 -71.0)))
         (instance face :init :vertices (list (float-vector 32.09 -92.851 36.5) (float-vector 32.09 -92.8509 -71.0) (float-vector 32.0 0.031044 -71.0) (float-vector 32.0 0.030975 36.5)))
         (instance face :init :vertices (list (float-vector -32.0 -93.0 36.4999) (float-vector -32.0 -93.0 -71.0001) (float-vector 32.09 -92.8509 -71.0) (float-vector 32.09 -92.851 36.5)))
         (instance face :init :vertices (list (float-vector -32.0 -3.051758e-05 36.5) (float-vector -32.0 3.814697e-05 -71.0) (float-vector -32.0 -93.0 -71.0001) (float-vector -32.0 -93.0 36.4999)))
         (instance face :init :vertices (list (float-vector -31.0 -3.051758e-05 36.5) (float-vector -31.0 3.814697e-05 -71.0) (float-vector -32.0 3.814697e-05 -71.0) (float-vector -32.0 -3.051758e-05 36.5)))
         (instance face :init :vertices (list (float-vector -26.439 16.186 36.5) (float-vector -26.439 16.186 -71.0) (float-vector -31.0 3.814697e-05 -71.0) (float-vector -31.0 -3.051758e-05 36.5)))
         (instance face :init :vertices (list (float-vector -15.454 26.873 36.5) (float-vector -15.454 26.873 -71.0) (float-vector -26.439 16.186 -71.0) (float-vector -26.439 16.186 36.5)))
         (instance face :init :vertices (list (float-vector -9.536743e-06 31.0 36.5) (float-vector -9.536743e-06 31.0 -71.0) (float-vector -15.454 26.873 -71.0) (float-vector -15.454 26.873 36.5)))
         (instance face :init :vertices (list (float-vector -9.536743e-06 32.0 36.5) (float-vector -9.536743e-06 32.0 -71.0) (float-vector -9.536743e-06 31.0 -71.0) (float-vector -9.536743e-06 31.0 36.5)))
         (instance face :init :vertices (list (float-vector 13.298 29.106 36.5) (float-vector 13.298 29.106 -71.0) (float-vector -9.536743e-06 32.0 -71.0) (float-vector -9.536743e-06 32.0 36.5)))
         (instance face :init :vertices (list (float-vector 24.843 20.17 36.5) (float-vector 24.843 20.1701 -71.0) (float-vector 13.298 29.106 -71.0) (float-vector 13.298 29.106 36.5)))
         (instance face :init :vertices (list (float-vector 32.0 0.030975 36.5) (float-vector 32.0 0.031044 -71.0) (float-vector 24.843 20.1701 -71.0) (float-vector 24.843 20.17 36.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-y :weight 1150.23 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 34.0 77.0 1.00005) (float-vector 34.0 73.671 -13.898) (float-vector -67.0001 73.671 -13.898) (float-vector -67.0 77.0 1.00005)))
         (instance face :init :vertices (list (float-vector 34.0 65.665 -24.787) (float-vector -67.0 65.665 -24.7869) (float-vector -67.0001 73.671 -13.898) (float-vector 34.0 73.671 -13.898)))
         (instance face :init :vertices (list (float-vector 34.0001 49.395 -33.2099) (float-vector -67.0 49.395 -33.21) (float-vector -67.0 65.665 -24.7869) (float-vector 34.0 65.665 -24.787)))
         (instance face :init :vertices (list (float-vector 34.0 -12.831 -46.661) (float-vector 31.0 -12.831 -46.661) (float-vector 31.0 40.0001 -35.2409) (float-vector -63.9999 39.9999 -35.2408) (float-vector -64.0 -12.8309 -46.661) (float-vector -67.0001 -12.8309 -46.661) (float-vector -67.0 49.395 -33.21) (float-vector 34.0001 49.395 -33.2099)))
         (instance face :init :vertices (list (float-vector -67.0 -19.926 -46.477) (float-vector -67.0001 -12.8309 -46.661) (float-vector -64.0 -12.8309 -46.661) (float-vector -64.0 -19.926 -46.477)))
         (instance face :init :vertices (list (float-vector 34.0001 -19.926 -46.477) (float-vector 31.0 -19.926 -46.477) (float-vector 31.0 -12.831 -46.661) (float-vector 34.0 -12.831 -46.661)))
         (instance face :init :vertices (list (float-vector -67.0 -28.081 -40.891) (float-vector -67.0 -19.926 -46.477) (float-vector -64.0 -19.926 -46.477) (float-vector -63.9999 -28.081 -40.891)))
         (instance face :init :vertices (list (float-vector 34.0001 -28.0811 -40.891) (float-vector 31.0001 -28.0811 -40.891) (float-vector 31.0 -19.926 -46.477) (float-vector 34.0001 -19.926 -46.477)))
         (instance face :init :vertices (list (float-vector -66.9999 -31.0001 -32.0) (float-vector -67.0 -28.081 -40.891) (float-vector -63.9999 -28.081 -40.891) (float-vector -63.9999 -31.0001 -32.0)))
         (instance face :init :vertices (list (float-vector 34.0 -31.0 -32.0) (float-vector 31.0 -31.0 -32.0) (float-vector 31.0001 -28.0811 -40.891) (float-vector 34.0001 -28.0811 -40.891)))
         (instance face :init :vertices (list (float-vector 34.0 -31.0 48.0) (float-vector -67.0 -31.0001 48.0) (float-vector -66.9999 -31.0001 -32.0) (float-vector -63.9999 -31.0001 -32.0) (float-vector -63.9999 -31.0001 39.0) (float-vector 30.9999 -31.0 39.0) (float-vector 31.0 -31.0 -32.0) (float-vector 34.0 -31.0 -32.0)))
         (instance face :init :vertices (list (float-vector 34.0001 76.9999 48.0) (float-vector -67.0 76.9999 48.0) (float-vector -67.0 -31.0001 48.0) (float-vector 34.0 -31.0 48.0)))
         (instance face :init :vertices (list (float-vector -67.0 77.0 1.00005) (float-vector -67.0001 73.671 -13.898) (float-vector -67.0 65.665 -24.7869) (float-vector -67.0 49.395 -33.21) (float-vector -67.0001 -12.8309 -46.661) (float-vector -67.0 -19.926 -46.477) (float-vector -67.0 -28.081 -40.891) (float-vector -66.9999 -31.0001 -32.0) (float-vector -67.0 -31.0001 48.0) (float-vector -67.0 76.9999 48.0)))
         (instance face :init :vertices (list (float-vector 34.0001 76.9999 48.0) (float-vector 34.0 -31.0 48.0) (float-vector 34.0 -31.0 -32.0) (float-vector 34.0001 -28.0811 -40.891) (float-vector 34.0001 -19.926 -46.477) (float-vector 34.0 -12.831 -46.661) (float-vector 34.0001 49.395 -33.2099) (float-vector 34.0 65.665 -24.787) (float-vector 34.0 73.671 -13.898) (float-vector 34.0 77.0 1.00005)))
         (instance face :init :vertices (list (float-vector 34.0 77.0 1.00005) (float-vector -67.0 77.0 1.00005) (float-vector -67.0 76.9999 48.0) (float-vector 34.0001 76.9999 48.0)))
         (instance face :init :vertices (list (float-vector -63.9999 -31.0001 39.0) (float-vector -63.9999 -31.0001 -32.0) (float-vector -63.9999 -28.081 -40.891) (float-vector -64.0 -19.926 -46.477) (float-vector -64.0 -12.8309 -46.661) (float-vector -63.9999 39.9999 -35.2408) (float-vector -63.9999 39.9999 39.0)))
         (instance face :init :vertices (list (float-vector 30.9999 -31.0 39.0) (float-vector -63.9999 -31.0001 39.0) (float-vector -63.9999 39.9999 39.0) (float-vector 31.0001 39.9999 39.0)))
         (instance face :init :vertices (list (float-vector 31.0001 39.9999 39.0) (float-vector -63.9999 39.9999 39.0) (float-vector -63.9999 39.9999 -35.2408) (float-vector 31.0 40.0001 -35.2409)))
         (instance face :init :vertices (list (float-vector 31.0 40.0001 -35.2409) (float-vector 31.0 -12.831 -46.661) (float-vector 31.0 -19.926 -46.477) (float-vector 31.0001 -28.0811 -40.891) (float-vector 31.0 -31.0 -32.0) (float-vector 30.9999 -31.0 39.0) (float-vector 31.0001 39.9999 39.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-p :weight 1190.93 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-shoulder-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 31.0 1.525879e-05 -36.0) (float-vector 28.5911 -11.982 -35.9999) (float-vector 22.552 -21.27 -36.0) (float-vector 12.1191 -28.533 -35.9999) (float-vector 6.103516e-05 -31.0 -36.0) (float-vector -10.0139 -29.338 -35.9999) (float-vector -23.6899 -21.839 -36.0) (float-vector -28.616 -21.0 -36.0) (float-vector -52.0 -20.957 -36.0001) (float-vector -51.9999 37.9938 -36.0) (float-vector 0.0 32.199 -36.0) (float-vector 10.568 30.205 -36.0) (float-vector 20.152 24.857 -36.0) (float-vector 27.713 16.0 -36.0) (float-vector 26.847 15.5 -36.0) (float-vector 29.687 8.92598 -36.0)))
         (instance face :init :vertices (list (float-vector 28.591 -11.982 36.0) (float-vector 30.9999 0.0 36.0) (float-vector 29.687 8.92601 36.0001) (float-vector 26.847 15.5 36.0001) (float-vector 27.713 16.0 36.0) (float-vector 20.152 24.857 36.0) (float-vector 10.568 30.205 36.0001) (float-vector -6.103516e-05 32.199 36.0) (float-vector -52.0 37.9938 36.0) (float-vector -52.0 -20.957 36.0) (float-vector -28.616 -21.0 35.9999) (float-vector -23.69 -21.839 36.0) (float-vector -10.014 -29.338 36.0) (float-vector 0.0 -31.0 36.0) (float-vector 12.119 -28.533 36.0) (float-vector 22.5519 -21.27 36.0)))
         (instance face :init :vertices (list (float-vector 31.0 1.525879e-05 -36.0) (float-vector 30.9999 0.0 36.0) (float-vector 28.591 -11.982 36.0) (float-vector 28.5911 -11.982 -35.9999)))
         (instance face :init :vertices (list (float-vector 29.687 8.92598 -36.0) (float-vector 29.687 8.92601 36.0001) (float-vector 30.9999 0.0 36.0) (float-vector 31.0 1.525879e-05 -36.0)))
         (instance face :init :vertices (list (float-vector 26.847 15.5 -36.0) (float-vector 26.847 15.5 36.0001) (float-vector 29.687 8.92601 36.0001) (float-vector 29.687 8.92598 -36.0)))
         (instance face :init :vertices (list (float-vector 27.713 16.0 -36.0) (float-vector 27.713 16.0 36.0) (float-vector 26.847 15.5 36.0001) (float-vector 26.847 15.5 -36.0)))
         (instance face :init :vertices (list (float-vector 20.152 24.857 -36.0) (float-vector 20.152 24.857 36.0) (float-vector 27.713 16.0 36.0) (float-vector 27.713 16.0 -36.0)))
         (instance face :init :vertices (list (float-vector 10.568 30.205 -36.0) (float-vector 10.568 30.205 36.0001) (float-vector 20.152 24.857 36.0) (float-vector 20.152 24.857 -36.0)))
         (instance face :init :vertices (list (float-vector 0.0 32.199 -36.0) (float-vector -6.103516e-05 32.199 36.0) (float-vector 10.568 30.205 36.0001) (float-vector 10.568 30.205 -36.0)))
         (instance face :init :vertices (list (float-vector -51.9999 37.9938 -36.0) (float-vector -52.0 37.9938 36.0) (float-vector -6.103516e-05 32.199 36.0) (float-vector 0.0 32.199 -36.0)))
         (instance face :init :vertices (list (float-vector -52.0 -20.957 -36.0001) (float-vector -52.0 -20.957 36.0) (float-vector -52.0 37.9938 36.0) (float-vector -51.9999 37.9938 -36.0)))
         (instance face :init :vertices (list (float-vector -28.616 -21.0 -36.0) (float-vector -28.616 -21.0 35.9999) (float-vector -52.0 -20.957 36.0) (float-vector -52.0 -20.957 -36.0001)))
         (instance face :init :vertices (list (float-vector -23.6899 -21.839 -36.0) (float-vector -23.69 -21.839 36.0) (float-vector -28.616 -21.0 35.9999) (float-vector -28.616 -21.0 -36.0)))
         (instance face :init :vertices (list (float-vector -10.0139 -29.338 -35.9999) (float-vector -10.014 -29.338 36.0) (float-vector -23.69 -21.839 36.0) (float-vector -23.6899 -21.839 -36.0)))
         (instance face :init :vertices (list (float-vector 6.103516e-05 -31.0 -36.0) (float-vector 0.0 -31.0 36.0) (float-vector -10.014 -29.338 36.0) (float-vector -10.0139 -29.338 -35.9999)))
         (instance face :init :vertices (list (float-vector 12.1191 -28.533 -35.9999) (float-vector 12.119 -28.533 36.0) (float-vector 0.0 -31.0 36.0) (float-vector 6.103516e-05 -31.0 -36.0)))
         (instance face :init :vertices (list (float-vector 22.552 -21.27 -36.0) (float-vector 22.5519 -21.27 36.0) (float-vector 12.119 -28.533 36.0) (float-vector 12.1191 -28.533 -35.9999)))
         (instance face :init :vertices (list (float-vector 28.5911 -11.982 -35.9999) (float-vector 28.591 -11.982 36.0) (float-vector 22.5519 -21.27 36.0) (float-vector 22.552 -21.27 -36.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -185.0 47.0 -6.103516e-05) (float-vector -185.0 47.0 -6.00012) (float-vector -185.0 44.476 -16.4572) (float-vector -185.0 38.958 -25.2141) (float-vector -185.0 29.697 -32.4251) (float-vector -185.0 17.0615 -36.0001) (float-vector -185.0 7.99998 -36.0001) (float-vector -185.0 -1.06151 -36.0001) (float-vector -185.0 -13.697 -32.4251) (float-vector -185.0 -22.958 -25.2141) (float-vector -185.0 -28.476 -16.457) (float-vector -185.0 -31.0 -6.00006) (float-vector -185.0 -31.0 -6.103516e-05) (float-vector -185.0 -31.0 5.99988) (float-vector -185.0 -28.476 16.4569) (float-vector -185.0 -22.958 25.2139) (float-vector -185.0 -13.697 32.4249) (float-vector -185.0 -1.06149 35.9999) (float-vector -185.0 8.00002 35.9999) (float-vector -185.0 17.0615 35.9999) (float-vector -185.0 29.697 32.4249) (float-vector -185.0 38.958 25.2139) (float-vector -185.0 44.476 16.4569) (float-vector -185.0 47.0 5.99988)))
         (instance face :init :vertices (list (float-vector -52.0 47.0 -6.00006) (float-vector -51.9999 47.0 0.0) (float-vector -52.0 47.0 5.99994) (float-vector -52.0 44.476 16.457) (float-vector -52.0 38.958 25.214) (float-vector -52.0 29.697 32.4249) (float-vector -52.0 17.0615 36.0) (float-vector -52.0 8.00002 36.0) (float-vector -52.0 -1.06148 36.0) (float-vector -52.0 -13.697 32.425) (float-vector -52.0 -22.958 25.214) (float-vector -52.0 -28.476 16.457) (float-vector -52.0 -31.0 5.99994) (float-vector -51.9999 -31.0 0.0) (float-vector -52.0 -31.0 -6.0) (float-vector -51.9999 -28.476 -16.457) (float-vector -51.9999 -22.958 -25.214) (float-vector -52.0 -13.697 -32.425) (float-vector -52.0 -1.06152 -36.0001) (float-vector -52.0 7.99995 -36.0001) (float-vector -52.0 17.0615 -36.0001) (float-vector -52.0 29.697 -32.425) (float-vector -51.9999 38.958 -25.214) (float-vector -51.9999 44.476 -16.457)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 -6.103516e-05) (float-vector -51.9999 47.0 0.0) (float-vector -52.0 47.0 -6.00006) (float-vector -185.0 47.0 -6.00012)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 5.99988) (float-vector -52.0 47.0 5.99994) (float-vector -51.9999 47.0 0.0) (float-vector -185.0 47.0 -6.103516e-05)))
         (instance face :init :vertices (list (float-vector -185.0 44.476 16.4569) (float-vector -52.0 44.476 16.457) (float-vector -52.0 47.0 5.99994) (float-vector -185.0 47.0 5.99988)))
         (instance face :init :vertices (list (float-vector -185.0 38.958 25.2139) (float-vector -52.0 38.958 25.214) (float-vector -52.0 44.476 16.457) (float-vector -185.0 44.476 16.4569)))
         (instance face :init :vertices (list (float-vector -185.0 29.697 32.4249) (float-vector -52.0 29.697 32.4249) (float-vector -52.0 38.958 25.214) (float-vector -185.0 38.958 25.2139)))
         (instance face :init :vertices (list (float-vector -185.0 17.0615 35.9999) (float-vector -52.0 17.0615 36.0) (float-vector -52.0 29.697 32.4249) (float-vector -185.0 29.697 32.4249)))
         (instance face :init :vertices (list (float-vector -185.0 8.00002 35.9999) (float-vector -52.0 8.00002 36.0) (float-vector -52.0 17.0615 36.0) (float-vector -185.0 17.0615 35.9999)))
         (instance face :init :vertices (list (float-vector -185.0 -1.06149 35.9999) (float-vector -52.0 -1.06148 36.0) (float-vector -52.0 8.00002 36.0) (float-vector -185.0 8.00002 35.9999)))
         (instance face :init :vertices (list (float-vector -185.0 -13.697 32.4249) (float-vector -52.0 -13.697 32.425) (float-vector -52.0 -1.06148 36.0) (float-vector -185.0 -1.06149 35.9999)))
         (instance face :init :vertices (list (float-vector -185.0 -22.958 25.2139) (float-vector -52.0 -22.958 25.214) (float-vector -52.0 -13.697 32.425) (float-vector -185.0 -13.697 32.4249)))
         (instance face :init :vertices (list (float-vector -185.0 -28.476 16.4569) (float-vector -52.0 -28.476 16.457) (float-vector -52.0 -22.958 25.214) (float-vector -185.0 -22.958 25.2139)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 5.99988) (float-vector -52.0 -31.0 5.99994) (float-vector -52.0 -28.476 16.457) (float-vector -185.0 -28.476 16.4569)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 -6.103516e-05) (float-vector -51.9999 -31.0 0.0) (float-vector -52.0 -31.0 5.99994) (float-vector -185.0 -31.0 5.99988)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 -6.00006) (float-vector -52.0 -31.0 -6.0) (float-vector -51.9999 -31.0 0.0) (float-vector -185.0 -31.0 -6.103516e-05)))
         (instance face :init :vertices (list (float-vector -185.0 -28.476 -16.457) (float-vector -51.9999 -28.476 -16.457) (float-vector -52.0 -31.0 -6.0) (float-vector -185.0 -31.0 -6.00006)))
         (instance face :init :vertices (list (float-vector -185.0 -22.958 -25.2141) (float-vector -51.9999 -22.958 -25.214) (float-vector -51.9999 -28.476 -16.457) (float-vector -185.0 -28.476 -16.457)))
         (instance face :init :vertices (list (float-vector -185.0 -13.697 -32.4251) (float-vector -52.0 -13.697 -32.425) (float-vector -51.9999 -22.958 -25.214) (float-vector -185.0 -22.958 -25.2141)))
         (instance face :init :vertices (list (float-vector -185.0 -1.06151 -36.0001) (float-vector -52.0 -1.06152 -36.0001) (float-vector -52.0 -13.697 -32.425) (float-vector -185.0 -13.697 -32.4251)))
         (instance face :init :vertices (list (float-vector -185.0 7.99998 -36.0001) (float-vector -52.0 7.99995 -36.0001) (float-vector -52.0 -1.06152 -36.0001) (float-vector -185.0 -1.06151 -36.0001)))
         (instance face :init :vertices (list (float-vector -185.0 17.0615 -36.0001) (float-vector -52.0 17.0615 -36.0001) (float-vector -52.0 7.99995 -36.0001) (float-vector -185.0 7.99998 -36.0001)))
         (instance face :init :vertices (list (float-vector -185.0 29.697 -32.4251) (float-vector -52.0 29.697 -32.425) (float-vector -52.0 17.0615 -36.0001) (float-vector -185.0 17.0615 -36.0001)))
         (instance face :init :vertices (list (float-vector -185.0 38.958 -25.2141) (float-vector -51.9999 38.958 -25.214) (float-vector -52.0 29.697 -32.425) (float-vector -185.0 29.697 -32.4251)))
         (instance face :init :vertices (list (float-vector -185.0 44.476 -16.4572) (float-vector -51.9999 44.476 -16.457) (float-vector -51.9999 38.958 -25.214) (float-vector -185.0 38.958 -25.2141)))
         (instance face :init :vertices (list (float-vector -185.0 47.0 -6.00012) (float-vector -52.0 47.0 -6.00006) (float-vector -51.9999 44.476 -16.457) (float-vector -185.0 44.476 -16.4572)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -185.0 -31.0 35.9999) (float-vector -250.0 -31.0 35.9999) (float-vector -250.0 -31.0 33.9999) (float-vector -271.007 -31.0 5.70856) (float-vector -279.433 -31.0 -8.26758) (float-vector -281.0 -31.0 -18.0001) (float-vector -282.0 -31.0 -18.0001) (float-vector -280.002 -31.0 -29.1292) (float-vector -274.407 -31.0 -38.6951) (float-vector -263.32 -31.0 -47.0961) (float-vector -250.0 -31.0 -50.0001) (float-vector -241.132 -31.0 -48.7471) (float-vector -190.0 -31.0 -34.0001) (float-vector -185.0 -31.0 -34.0001)))
         (instance face :init :vertices (list (float-vector -250.0 47.0 35.9999) (float-vector -185.0 47.0 35.9999) (float-vector -185.0 47.0 -34.0001) (float-vector -190.0 47.0 -34.0001) (float-vector -241.132 47.0 -48.7471) (float-vector -250.0 47.0 -50.0001) (float-vector -263.32 47.0 -47.0961) (float-vector -274.407 47.0 -38.6951) (float-vector -280.002 47.0 -29.1291) (float-vector -282.0 47.0 -18.0001) (float-vector -281.0 47.0 -18.0001) (float-vector -279.433 47.0 -8.26764) (float-vector -271.007 47.0 5.70862) (float-vector -250.0 47.0 33.9999)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 35.9999) (float-vector -185.0 47.0 35.9999) (float-vector -250.0 47.0 35.9999) (float-vector -250.0 -31.0 35.9999)))
         (instance face :init :vertices (list (float-vector -185.0 -31.0 -34.0001) (float-vector -185.0 47.0 -34.0001) (float-vector -185.0 47.0 35.9999) (float-vector -185.0 -31.0 35.9999)))
         (instance face :init :vertices (list (float-vector -190.0 -31.0 -34.0001) (float-vector -190.0 47.0 -34.0001) (float-vector -185.0 47.0 -34.0001) (float-vector -185.0 -31.0 -34.0001)))
         (instance face :init :vertices (list (float-vector -241.132 -31.0 -48.7471) (float-vector -241.132 47.0 -48.7471) (float-vector -190.0 47.0 -34.0001) (float-vector -190.0 -31.0 -34.0001)))
         (instance face :init :vertices (list (float-vector -250.0 -31.0 -50.0001) (float-vector -250.0 47.0 -50.0001) (float-vector -241.132 47.0 -48.7471) (float-vector -241.132 -31.0 -48.7471)))
         (instance face :init :vertices (list (float-vector -263.32 -31.0 -47.0961) (float-vector -263.32 47.0 -47.0961) (float-vector -250.0 47.0 -50.0001) (float-vector -250.0 -31.0 -50.0001)))
         (instance face :init :vertices (list (float-vector -274.407 -31.0 -38.6951) (float-vector -274.407 47.0 -38.6951) (float-vector -263.32 47.0 -47.0961) (float-vector -263.32 -31.0 -47.0961)))
         (instance face :init :vertices (list (float-vector -280.002 -31.0 -29.1292) (float-vector -280.002 47.0 -29.1291) (float-vector -274.407 47.0 -38.6951) (float-vector -274.407 -31.0 -38.6951)))
         (instance face :init :vertices (list (float-vector -282.0 -31.0 -18.0001) (float-vector -282.0 47.0 -18.0001) (float-vector -280.002 47.0 -29.1291) (float-vector -280.002 -31.0 -29.1292)))
         (instance face :init :vertices (list (float-vector -281.0 -31.0 -18.0001) (float-vector -281.0 47.0 -18.0001) (float-vector -282.0 47.0 -18.0001) (float-vector -282.0 -31.0 -18.0001)))
         (instance face :init :vertices (list (float-vector -279.433 -31.0 -8.26758) (float-vector -279.433 47.0 -8.26764) (float-vector -281.0 47.0 -18.0001) (float-vector -281.0 -31.0 -18.0001)))
         (instance face :init :vertices (list (float-vector -271.007 -31.0 5.70856) (float-vector -271.007 47.0 5.70862) (float-vector -279.433 47.0 -8.26764) (float-vector -279.433 -31.0 -8.26758)))
         (instance face :init :vertices (list (float-vector -250.0 -31.0 33.9999) (float-vector -250.0 47.0 33.9999) (float-vector -271.007 47.0 5.70862) (float-vector -271.007 -31.0 5.70856)))
         (instance face :init :vertices (list (float-vector -250.0 -31.0 35.9999) (float-vector -250.0 47.0 35.9999) (float-vector -250.0 47.0 33.9999) (float-vector -250.0 -31.0 33.9999)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (send (elt bc 1) :set-color :gray)
     (send (elt bc 2) :set-color :gray)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-r :weight 2106.72 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 62.0 97.0 43.0) (float-vector 62.0 97.0001 -43.0) (float-vector 43.0 111.0 -43.0) (float-vector 42.9999 111.0 43.0)))
         (instance face :init :vertices (list (float-vector 43.0 111.0 -43.0) (float-vector -9.0 111.0 -43.0) (float-vector -9.00006 111.0 43.0) (float-vector 42.9999 111.0 43.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 37.7845 111.0 -12.0) (float-vector 40.9999 111.0 3.051758e-05) (float-vector 37.7845 111.0 12.0) (float-vector 29.0 111.0 20.7846) (float-vector 17.0 111.0 24.0) (float-vector 5.0 111.0 20.7846) (float-vector -3.78467 111.0 12.0) (float-vector -7.0 111.0 3.051758e-05) (float-vector -3.78467 111.0 -12.0) (float-vector 4.99994 111.0 -20.7846) (float-vector 16.9999 111.0 -24.0) (float-vector 29.0 111.0 -20.7846)))
))
         (instance face :init :vertices (list (float-vector -9.0 111.0 -43.0) (float-vector -9.0 83.0 -43.0) (float-vector -9.0 83.0 43.0) (float-vector -9.00006 111.0 43.0)))
         (instance face :init :vertices (list (float-vector -9.0 83.0 -43.0) (float-vector -35.0 0.0 -43.0) (float-vector -35.0001 0.0 43.0) (float-vector -9.0 83.0 43.0)))
         (instance face :init :vertices (list (float-vector -35.0 0.0 -43.0) (float-vector -25.0 -24.0 -43.0) (float-vector -25.0 -24.0 43.0) (float-vector -35.0001 0.0 43.0)))
         (instance face :init :vertices (list (float-vector -25.0 -24.0 -43.0) (float-vector -6.103516e-05 -35.0 -43.0) (float-vector 0.0 -35.0 43.0) (float-vector -25.0 -24.0 43.0)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 -35.0 -43.0) (float-vector 45.0 -35.0 -43.0) (float-vector 45.0 -35.0 43.0) (float-vector 0.0 -35.0 43.0)))
         (instance face :init :vertices (list (float-vector 45.0 -35.0 -43.0) (float-vector 62.0 -20.0 -43.0) (float-vector 62.0 -20.0 43.0) (float-vector 45.0 -35.0 43.0)))
         (instance face :init :vertices (list (float-vector 62.0 -20.0 43.0) (float-vector 62.0 97.0 43.0) (float-vector 42.9999 111.0 43.0) (float-vector -9.00006 111.0 43.0) (float-vector -9.0 83.0 43.0) (float-vector -35.0001 0.0 43.0) (float-vector -25.0 -24.0 43.0) (float-vector 0.0 -35.0 43.0) (float-vector 45.0 -35.0 43.0)))
         (instance face :init :vertices (list (float-vector 62.0 -20.0 -43.0) (float-vector 62.0 97.0001 -43.0) (float-vector 62.0 97.0 43.0) (float-vector 62.0 -20.0 43.0)))
         (instance face :init :vertices (list (float-vector 62.0 97.0001 -43.0) (float-vector 62.0 -20.0 -43.0) (float-vector 45.0 -35.0 -43.0) (float-vector -6.103516e-05 -35.0 -43.0) (float-vector -25.0 -24.0 -43.0) (float-vector -35.0 0.0 -43.0) (float-vector -9.0 83.0 -43.0) (float-vector -9.0 111.0 -43.0) (float-vector 43.0 111.0 -43.0)))
         (instance face :init :vertices (list (float-vector 40.9999 111.0 3.051758e-05) (float-vector 41.0 147.0 0.0) (float-vector 37.7846 147.0 12.0) (float-vector 37.7845 111.0 12.0)))
         (instance face :init :vertices (list (float-vector 37.7846 147.0 12.0) (float-vector 29.0 147.0 20.7846) (float-vector 29.0 111.0 20.7846) (float-vector 37.7845 111.0 12.0)))
         (instance face :init :vertices (list (float-vector 29.0 147.0 20.7846) (float-vector 16.9999 147.0 24.0) (float-vector 17.0 111.0 24.0) (float-vector 29.0 111.0 20.7846)))
         (instance face :init :vertices (list (float-vector 16.9999 147.0 24.0) (float-vector 4.99994 147.0 20.7846) (float-vector 5.0 111.0 20.7846) (float-vector 17.0 111.0 24.0)))
         (instance face :init :vertices (list (float-vector 4.99994 147.0 20.7846) (float-vector -3.78461 147.0 12.0) (float-vector -3.78467 111.0 12.0) (float-vector 5.0 111.0 20.7846)))
         (instance face :init :vertices (list (float-vector -3.78461 147.0 12.0) (float-vector -7.0 147.0 3.051758e-05) (float-vector -7.0 111.0 3.051758e-05) (float-vector -3.78467 111.0 12.0)))
         (instance face :init :vertices (list (float-vector -7.0 147.0 3.051758e-05) (float-vector -3.78461 147.0 -12.0) (float-vector -3.78467 111.0 -12.0) (float-vector -7.0 111.0 3.051758e-05)))
         (instance face :init :vertices (list (float-vector -3.78461 147.0 -12.0) (float-vector 5.0 147.0 -20.7846) (float-vector 4.99994 111.0 -20.7846) (float-vector -3.78467 111.0 -12.0)))
         (instance face :init :vertices (list (float-vector 5.0 147.0 -20.7846) (float-vector 16.9999 147.0 -24.0) (float-vector 16.9999 111.0 -24.0) (float-vector 4.99994 111.0 -20.7846)))
         (instance face :init :vertices (list (float-vector 16.9999 147.0 -24.0) (float-vector 28.9999 147.0 -20.7846) (float-vector 29.0 111.0 -20.7846) (float-vector 16.9999 111.0 -24.0)))
         (instance face :init :vertices (list (float-vector 28.9999 147.0 -20.7846) (float-vector 37.7846 147.0 -12.0) (float-vector 37.7845 111.0 -12.0) (float-vector 29.0 111.0 -20.7846)))
         (instance face :init :vertices (list (float-vector 37.7846 147.0 -12.0) (float-vector 41.0 147.0 0.0) (float-vector 40.9999 111.0 3.051758e-05) (float-vector 37.7845 111.0 -12.0)))
         (instance face :init :vertices (list (float-vector 41.0 147.0 0.0) (float-vector 37.7846 147.0 -12.0) (float-vector 28.9999 147.0 -20.7846) (float-vector 16.9999 147.0 -24.0) (float-vector 5.0 147.0 -20.7846) (float-vector -3.78461 147.0 -12.0) (float-vector -7.0 147.0 3.051758e-05) (float-vector -3.78461 147.0 12.0) (float-vector 4.99994 147.0 20.7846) (float-vector 16.9999 147.0 24.0) (float-vector 29.0 147.0 20.7846) (float-vector 37.7846 147.0 12.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-elbow-p :weight 572.353 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-wrist-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -29.0 -27.0001 65.0) (float-vector -29.0 -22.0 88.0) (float-vector -34.0 -22.0001 88.0) (float-vector -34.0 -27.0001 65.0)))
         (instance face :init :vertices (list (float-vector 34.0 -27.0 65.0) (float-vector 34.0 -22.0001 88.0) (float-vector 29.0 -22.0 88.0) (float-vector 29.0 -27.0 65.0)))
         (instance face :init :vertices (list (float-vector -34.0 -25.0 104.0) (float-vector -34.0 -22.0001 88.0) (float-vector -29.0 -22.0 88.0) (float-vector -29.0 -25.0 104.0)))
         (instance face :init :vertices (list (float-vector 34.0 -25.0001 104.0) (float-vector 29.0 -25.0001 104.0) (float-vector 29.0 -22.0 88.0) (float-vector 34.0 -22.0001 88.0)))
         (instance face :init :vertices (list (float-vector -34.0 -23.0 115.0) (float-vector -34.0 -25.0 104.0) (float-vector -29.0 -25.0 104.0) (float-vector -29.0 -23.0 115.0)))
         (instance face :init :vertices (list (float-vector 34.0 -23.0001 115.0) (float-vector 29.0 -23.0001 115.0) (float-vector 29.0 -25.0001 104.0) (float-vector 34.0 -25.0001 104.0)))
         (instance face :init :vertices (list (float-vector -34.0 -12.0001 127.0) (float-vector -34.0 -23.0 115.0) (float-vector -29.0 -23.0 115.0) (float-vector -29.0 -12.0001 127.0)))
         (instance face :init :vertices (list (float-vector 34.0 -12.0001 127.0) (float-vector 29.0 -12.0001 127.0) (float-vector 29.0 -23.0001 115.0) (float-vector 34.0 -23.0001 115.0)))
         (instance face :init :vertices (list (float-vector -34.0 -6.103516e-05 130.0) (float-vector -34.0 -12.0001 127.0) (float-vector -29.0 -12.0001 127.0) (float-vector -29.0 -6.103516e-05 130.0)))
         (instance face :init :vertices (list (float-vector 34.0 -6.103516e-05 130.0) (float-vector 29.0 -6.103516e-05 130.0) (float-vector 29.0 -12.0001 127.0) (float-vector 34.0 -12.0001 127.0)))
         (instance face :init :vertices (list (float-vector -34.0 11.9999 127.0) (float-vector -34.0 -6.103516e-05 130.0) (float-vector -29.0 -6.103516e-05 130.0) (float-vector -29.0 11.9999 127.0)))
         (instance face :init :vertices (list (float-vector 34.0 11.9999 127.0) (float-vector 29.0 11.9999 127.0) (float-vector 29.0 -6.103516e-05 130.0) (float-vector 34.0 -6.103516e-05 130.0)))
         (instance face :init :vertices (list (float-vector -34.0 22.9999 115.0) (float-vector -34.0 11.9999 127.0) (float-vector -29.0 11.9999 127.0) (float-vector -29.0 22.9999 115.0)))
         (instance face :init :vertices (list (float-vector 34.0 23.0 115.0) (float-vector 29.0 23.0 115.0) (float-vector 29.0 11.9999 127.0) (float-vector 34.0 11.9999 127.0)))
         (instance face :init :vertices (list (float-vector -34.0 25.0 104.0) (float-vector -34.0 22.9999 115.0) (float-vector -29.0 22.9999 115.0) (float-vector -29.0 25.0 104.0)))
         (instance face :init :vertices (list (float-vector 34.0 24.9999 104.0) (float-vector 29.0 24.9999 104.0) (float-vector 29.0 23.0 115.0) (float-vector 34.0 23.0 115.0)))
         (instance face :init :vertices (list (float-vector -34.0 22.0 88.0) (float-vector -34.0 25.0 104.0) (float-vector -29.0 25.0 104.0) (float-vector -29.0 22.0 88.0)))
         (instance face :init :vertices (list (float-vector 34.0 22.0 88.0) (float-vector 29.0 22.0 88.0) (float-vector 29.0 24.9999 104.0) (float-vector 34.0 24.9999 104.0)))
         (instance face :init :vertices (list (float-vector -34.0 26.9999 65.0) (float-vector -34.0 22.0 88.0) (float-vector -29.0 22.0 88.0) (float-vector -29.0 26.9999 65.0)))
         (instance face :init :vertices (list (float-vector 34.0 27.0 65.0) (float-vector 29.0 27.0 65.0) (float-vector 29.0 22.0 88.0) (float-vector 34.0 22.0 88.0)))
         (instance face :init :vertices (list (float-vector 34.0 27.0001 0.0) (float-vector -34.0 27.0 0.0) (float-vector -34.0 26.9999 65.0) (float-vector -29.0 26.9999 65.0) (float-vector -29.0 27.0 50.0) (float-vector 29.0 27.0 50.0) (float-vector 29.0 27.0 65.0) (float-vector 34.0 27.0 65.0)))
         (instance face :init :vertices (list (float-vector 34.0 -27.0 -3.051758e-05) (float-vector -34.0 -27.0 -3.051758e-05) (float-vector -34.0 27.0 0.0) (float-vector 34.0 27.0001 0.0)))
         (instance face :init :vertices (list (float-vector -34.0 -27.0001 65.0) (float-vector -34.0 -22.0001 88.0) (float-vector -34.0 -25.0 104.0) (float-vector -34.0 -23.0 115.0) (float-vector -34.0 -12.0001 127.0) (float-vector -34.0 -6.103516e-05 130.0) (float-vector -34.0 11.9999 127.0) (float-vector -34.0 22.9999 115.0) (float-vector -34.0 25.0 104.0) (float-vector -34.0 22.0 88.0) (float-vector -34.0 26.9999 65.0) (float-vector -34.0 27.0 0.0) (float-vector -34.0 -27.0 -3.051758e-05)))
         (instance face :init :vertices (list (float-vector 34.0 -27.0 -3.051758e-05) (float-vector 34.0 27.0001 0.0) (float-vector 34.0 27.0 65.0) (float-vector 34.0 22.0 88.0) (float-vector 34.0 24.9999 104.0) (float-vector 34.0 23.0 115.0) (float-vector 34.0 11.9999 127.0) (float-vector 34.0 -6.103516e-05 130.0) (float-vector 34.0 -12.0001 127.0) (float-vector 34.0 -23.0001 115.0) (float-vector 34.0 -25.0001 104.0) (float-vector 34.0 -22.0001 88.0) (float-vector 34.0 -27.0 65.0)))
         (instance face :init :vertices (list (float-vector 34.0 -27.0 65.0) (float-vector 29.0 -27.0 65.0) (float-vector 29.0 -27.0 50.0) (float-vector -29.0 -27.0 50.0) (float-vector -29.0 -27.0001 65.0) (float-vector -34.0 -27.0001 65.0) (float-vector -34.0 -27.0 -3.051758e-05) (float-vector 34.0 -27.0 -3.051758e-05)))
         (instance face :init :vertices (list (float-vector 29.0 27.0 50.0) (float-vector -29.0 27.0 50.0) (float-vector -29.0 -27.0 50.0) (float-vector 29.0 -27.0 50.0)))
         (instance face :init :vertices (list (float-vector -29.0 -27.0 50.0) (float-vector -29.0 27.0 50.0) (float-vector -29.0 26.9999 65.0) (float-vector -29.0 22.0 88.0) (float-vector -29.0 25.0 104.0) (float-vector -29.0 22.9999 115.0) (float-vector -29.0 11.9999 127.0) (float-vector -29.0 -6.103516e-05 130.0) (float-vector -29.0 -12.0001 127.0) (float-vector -29.0 -23.0 115.0) (float-vector -29.0 -25.0 104.0) (float-vector -29.0 -22.0 88.0) (float-vector -29.0 -27.0001 65.0)))
         (instance face :init :vertices (list (float-vector 29.0 -27.0 65.0) (float-vector 29.0 -22.0 88.0) (float-vector 29.0 -25.0001 104.0) (float-vector 29.0 -23.0001 115.0) (float-vector 29.0 -12.0001 127.0) (float-vector 29.0 -6.103516e-05 130.0) (float-vector 29.0 11.9999 127.0) (float-vector 29.0 23.0 115.0) (float-vector 29.0 24.9999 104.0) (float-vector 29.0 22.0 88.0) (float-vector 29.0 27.0 65.0) (float-vector 29.0 27.0 50.0) (float-vector 29.0 -27.0 50.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-wrist-y :weight 867.544 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-wrist-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 29.0 15.0 26.5) (float-vector -29.0 15.0 26.5) (float-vector -29.0 -15.0 26.5) (float-vector 29.0 -15.0 26.5)))
         (instance face :init :vertices (list (float-vector -29.0 15.0 -26.5001) (float-vector 29.0 15.0 -26.5) (float-vector 29.0 -15.0 -26.5001) (float-vector -29.0 -15.0 -26.5)))
         (instance face :init :vertices (list (float-vector 29.0 15.0 26.5) (float-vector 29.0 15.0 -26.5) (float-vector -29.0 15.0 -26.5001) (float-vector -29.0 15.0 26.5)))
         (instance face :init :vertices (list (float-vector 29.0 -15.0 26.5) (float-vector 29.0 -15.0 -26.5001) (float-vector 29.0 15.0 -26.5) (float-vector 29.0 15.0 26.5)))
         (instance face :init :vertices (list (float-vector -29.0 -15.0 26.5) (float-vector -29.0 -15.0 -26.5) (float-vector 29.0 -15.0 -26.5001) (float-vector 29.0 -15.0 26.5)))
         (instance face :init :vertices (list (float-vector -29.0 15.0 26.5) (float-vector -29.0 15.0 -26.5001) (float-vector -29.0 -15.0 -26.5) (float-vector -29.0 -15.0 26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-wrist-r :weight 867.544 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-wrist-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 39.6 16.0) (float-vector 17.0 39.5999 9.0) (float-vector 17.0 44.6 9.0) (float-vector 10.0 44.6 16.0)))
         (instance face :init :vertices (list (float-vector 10.0 -35.0 16.0) (float-vector 17.0 -35.0 9.0) (float-vector 17.0 -30.0 9.0) (float-vector 10.0 -30.0 16.0)))
         (instance face :init :vertices (list (float-vector 19.0 44.5999 0.0) (float-vector 17.0 44.6 9.0) (float-vector 17.0 39.5999 9.0) (float-vector 18.9999 39.6 0.0)))
         (instance face :init :vertices (list (float-vector 19.0 -35.0 0.0) (float-vector 18.9999 -30.0 0.0) (float-vector 17.0 -30.0 9.0) (float-vector 17.0 -35.0 9.0)))
         (instance face :init :vertices (list (float-vector 17.0 44.6 -10.0) (float-vector 19.0 44.5999 0.0) (float-vector 18.9999 39.6 0.0) (float-vector 17.0 39.6 -10.0)))
         (instance face :init :vertices (list (float-vector 17.0 -35.0 -10.0) (float-vector 17.0 -30.0 -10.0) (float-vector 18.9999 -30.0 0.0) (float-vector 19.0 -35.0 0.0)))
         (instance face :init :vertices (list (float-vector 11.0 44.6 -17.0) (float-vector 17.0 44.6 -10.0) (float-vector 17.0 39.6 -10.0) (float-vector 11.0 39.6 -17.0)))
         (instance face :init :vertices (list (float-vector 11.0 -35.0 -17.0) (float-vector 11.0 -30.0 -17.0) (float-vector 17.0 -30.0 -10.0) (float-vector 17.0 -35.0 -10.0)))
         (instance face :init :vertices (list (float-vector 11.0 -35.0 -58.0) (float-vector 11.0 44.6 -58.0) (float-vector 11.0 44.6 -17.0) (float-vector 11.0 39.6 -17.0) (float-vector 11.0 39.6 -53.0) (float-vector 11.0 -30.0 -53.0) (float-vector 11.0 -30.0 -17.0) (float-vector 11.0 -35.0 -17.0)))
         (instance face :init :vertices (list (float-vector -11.0 -35.0 -58.0) (float-vector -11.0001 44.5999 -58.0) (float-vector 11.0 44.6 -58.0) (float-vector 11.0 -35.0 -58.0)))
         (instance face :init :vertices (list (float-vector -11.0 -35.0 -17.0) (float-vector -11.0 -30.0 -17.0) (float-vector -11.0 -30.0 -53.0) (float-vector -11.0 39.6 -53.0) (float-vector -11.0 39.5999 -17.0) (float-vector -11.0 44.6 -17.0) (float-vector -11.0001 44.5999 -58.0) (float-vector -11.0 -35.0 -58.0)))
         (instance face :init :vertices (list (float-vector -17.0 44.6 -10.0) (float-vector -11.0 44.6 -17.0) (float-vector -11.0 39.5999 -17.0) (float-vector -17.0 39.6 -10.0)))
         (instance face :init :vertices (list (float-vector -17.0 -35.0 -10.0) (float-vector -17.0 -30.0 -10.0) (float-vector -11.0 -30.0 -17.0) (float-vector -11.0 -35.0 -17.0)))
         (instance face :init :vertices (list (float-vector -19.0 44.6 0.0) (float-vector -17.0 44.6 -10.0) (float-vector -17.0 39.6 -10.0) (float-vector -19.0 39.6 0.0)))
         (instance face :init :vertices (list (float-vector -19.0 -35.0 0.0) (float-vector -19.0 -30.0 0.0) (float-vector -17.0 -30.0 -10.0) (float-vector -17.0 -35.0 -10.0)))
         (instance face :init :vertices (list (float-vector -17.0 44.6 9.0) (float-vector -19.0 44.6 0.0) (float-vector -19.0 39.6 0.0) (float-vector -17.0 39.6 9.0)))
         (instance face :init :vertices (list (float-vector -17.0 -35.0 9.0) (float-vector -17.0 -30.0 9.0) (float-vector -19.0 -30.0 0.0) (float-vector -19.0 -35.0 0.0)))
         (instance face :init :vertices (list (float-vector -10.0 44.6 16.0) (float-vector -17.0 44.6 9.0) (float-vector -17.0 39.6 9.0) (float-vector -10.0 39.5999 16.0)))
         (instance face :init :vertices (list (float-vector -10.0 -35.0 16.0) (float-vector -10.0 -30.0 16.0) (float-vector -17.0 -30.0 9.0) (float-vector -17.0 -35.0 9.0)))
         (instance face :init :vertices (list (float-vector 0.0 44.6 19.0) (float-vector -10.0 44.6 16.0) (float-vector -10.0 39.5999 16.0) (float-vector 0.0 39.6 19.0)))
         (instance face :init :vertices (list (float-vector 0.0 -35.0 19.0) (float-vector 0.0 -30.0 19.0) (float-vector -10.0 -30.0 16.0) (float-vector -10.0 -35.0 16.0)))
         (instance face :init :vertices (list (float-vector 10.0 44.6 16.0) (float-vector 17.0 44.6 9.0) (float-vector 19.0 44.5999 0.0) (float-vector 17.0 44.6 -10.0) (float-vector 11.0 44.6 -17.0) (float-vector 11.0 44.6 -58.0) (float-vector -11.0001 44.5999 -58.0) (float-vector -11.0 44.6 -17.0) (float-vector -17.0 44.6 -10.0) (float-vector -19.0 44.6 0.0) (float-vector -17.0 44.6 9.0) (float-vector -10.0 44.6 16.0) (float-vector 0.0 44.6 19.0)))
         (instance face :init :vertices (list (float-vector 0.0 -35.0 19.0) (float-vector -10.0 -35.0 16.0) (float-vector -17.0 -35.0 9.0) (float-vector -19.0 -35.0 0.0) (float-vector -17.0 -35.0 -10.0) (float-vector -11.0 -35.0 -17.0) (float-vector -11.0 -35.0 -58.0) (float-vector 11.0 -35.0 -58.0) (float-vector 11.0 -35.0 -17.0) (float-vector 17.0 -35.0 -10.0) (float-vector 19.0 -35.0 0.0) (float-vector 17.0 -35.0 9.0) (float-vector 10.0 -35.0 16.0)))
         (instance face :init :vertices (list (float-vector 0.0 44.6 19.0) (float-vector 0.0 39.6 19.0) (float-vector 10.0 39.6 16.0) (float-vector 10.0 44.6 16.0)))
         (instance face :init :vertices (list (float-vector 10.0 -35.0 16.0) (float-vector 10.0 -30.0 16.0) (float-vector 0.0 -30.0 19.0) (float-vector 0.0 -35.0 19.0)))
         (instance face :init :vertices (list (float-vector 11.0 -30.0 -53.0) (float-vector 11.0 39.6 -53.0) (float-vector -11.0 39.6 -53.0) (float-vector -11.0 -30.0 -53.0)))
         (instance face :init :vertices (list (float-vector 0.0 39.6 19.0) (float-vector -10.0 39.5999 16.0) (float-vector -17.0 39.6 9.0) (float-vector -19.0 39.6 0.0) (float-vector -17.0 39.6 -10.0) (float-vector -11.0 39.5999 -17.0) (float-vector -11.0 39.6 -53.0) (float-vector 11.0 39.6 -53.0) (float-vector 11.0 39.6 -17.0) (float-vector 17.0 39.6 -10.0) (float-vector 18.9999 39.6 0.0) (float-vector 17.0 39.5999 9.0) (float-vector 10.0 39.6 16.0)))
         (instance face :init :vertices (list (float-vector 10.0 -30.0 16.0) (float-vector 17.0 -30.0 9.0) (float-vector 18.9999 -30.0 0.0) (float-vector 17.0 -30.0 -10.0) (float-vector 11.0 -30.0 -17.0) (float-vector 11.0 -30.0 -53.0) (float-vector -11.0 -30.0 -53.0) (float-vector -11.0 -30.0 -17.0) (float-vector -17.0 -30.0 -10.0) (float-vector -19.0 -30.0 0.0) (float-vector -17.0 -30.0 9.0) (float-vector -10.0 -30.0 16.0) (float-vector 0.0 -30.0 19.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 29.4448 -17.0 -58.0) (float-vector 34.0 -3.051758e-05 -58.0) (float-vector 29.4448 17.0 -58.0) (float-vector 17.0 29.4449 -58.0) (float-vector 0.0 34.0 -58.0) (float-vector -17.0 29.4449 -58.0) (float-vector -29.4449 17.0 -58.0) (float-vector -34.0 0.0 -58.0) (float-vector -29.4449 -17.0 -58.0) (float-vector -17.0001 -29.4449 -58.0) (float-vector -6.103516e-05 -34.0 -58.0) (float-vector 16.9999 -29.4449 -58.0)))
         (instance face :init :vertices (list (float-vector 34.0 0.0 -85.0) (float-vector 29.4449 -17.0001 -85.0) (float-vector 16.9999 -29.4449 -85.0) (float-vector -6.103516e-05 -34.0 -85.0) (float-vector -17.0001 -29.4449 -85.0) (float-vector -29.4449 -17.0 -85.0) (float-vector -34.0 0.0 -85.0) (float-vector -29.4449 17.0 -85.0) (float-vector -17.0 29.4449 -85.0) (float-vector 0.0 34.0 -85.0) (float-vector 17.0 29.4449 -85.0) (float-vector 29.4448 17.0 -85.0)))
         (instance face :init :vertices (list (float-vector 29.4448 -17.0 -58.0) (float-vector 29.4449 -17.0001 -85.0) (float-vector 34.0 0.0 -85.0) (float-vector 34.0 -3.051758e-05 -58.0)))
         (instance face :init :vertices (list (float-vector 16.9999 -29.4449 -58.0) (float-vector 16.9999 -29.4449 -85.0) (float-vector 29.4449 -17.0001 -85.0) (float-vector 29.4448 -17.0 -58.0)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 -34.0 -58.0) (float-vector -6.103516e-05 -34.0 -85.0) (float-vector 16.9999 -29.4449 -85.0) (float-vector 16.9999 -29.4449 -58.0)))
         (instance face :init :vertices (list (float-vector -17.0001 -29.4449 -58.0) (float-vector -17.0001 -29.4449 -85.0) (float-vector -6.103516e-05 -34.0 -85.0) (float-vector -6.103516e-05 -34.0 -58.0)))
         (instance face :init :vertices (list (float-vector -29.4449 -17.0 -58.0) (float-vector -29.4449 -17.0 -85.0) (float-vector -17.0001 -29.4449 -85.0) (float-vector -17.0001 -29.4449 -58.0)))
         (instance face :init :vertices (list (float-vector -34.0 0.0 -58.0) (float-vector -34.0 0.0 -85.0) (float-vector -29.4449 -17.0 -85.0) (float-vector -29.4449 -17.0 -58.0)))
         (instance face :init :vertices (list (float-vector -29.4449 17.0 -58.0) (float-vector -29.4449 17.0 -85.0) (float-vector -34.0 0.0 -85.0) (float-vector -34.0 0.0 -58.0)))
         (instance face :init :vertices (list (float-vector -17.0 29.4449 -58.0) (float-vector -17.0 29.4449 -85.0) (float-vector -29.4449 17.0 -85.0) (float-vector -29.4449 17.0 -58.0)))
         (instance face :init :vertices (list (float-vector 0.0 34.0 -58.0) (float-vector 0.0 34.0 -85.0) (float-vector -17.0 29.4449 -85.0) (float-vector -17.0 29.4449 -58.0)))
         (instance face :init :vertices (list (float-vector 17.0 29.4449 -58.0) (float-vector 17.0 29.4449 -85.0) (float-vector 0.0 34.0 -85.0) (float-vector 0.0 34.0 -58.0)))
         (instance face :init :vertices (list (float-vector 29.4448 17.0 -58.0) (float-vector 29.4448 17.0 -85.0) (float-vector 17.0 29.4449 -85.0) (float-vector 17.0 29.4449 -58.0)))
         (instance face :init :vertices (list (float-vector 34.0 -3.051758e-05 -58.0) (float-vector 34.0 0.0 -85.0) (float-vector 29.4448 17.0 -85.0) (float-vector 29.4448 17.0 -58.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -51.9999 -35.0 -149.0) (float-vector -51.9999 -35.0 -85.0) (float-vector -51.9999 11.0 -85.0) (float-vector -51.9999 37.0 -116.0) (float-vector -51.9999 37.0 -149.0)))
         (instance face :init :vertices (list (float-vector 52.0001 -35.0 -84.9999) (float-vector 52.0001 -35.0 -149.0) (float-vector 52.0001 37.0 -149.0) (float-vector 52.0001 37.0 -116.0) (float-vector 52.0 11.0 -84.9999)))
         (instance face :init :vertices (list (float-vector -51.9999 -35.0 -149.0) (float-vector 52.0001 -35.0 -149.0) (float-vector 52.0001 -35.0 -84.9999) (float-vector -51.9999 -35.0 -85.0)))
         (instance face :init :vertices (list (float-vector -51.9999 37.0 -149.0) (float-vector 52.0001 37.0 -149.0) (float-vector 52.0001 -35.0 -149.0) (float-vector -51.9999 -35.0 -149.0)))
         (instance face :init :vertices (list (float-vector -51.9999 37.0 -116.0) (float-vector 52.0001 37.0 -116.0) (float-vector 52.0001 37.0 -149.0) (float-vector -51.9999 37.0 -149.0)))
         (instance face :init :vertices (list (float-vector -51.9999 11.0 -85.0) (float-vector 52.0 11.0 -84.9999) (float-vector 52.0001 37.0 -116.0) (float-vector -51.9999 37.0 -116.0)))
         (instance face :init :vertices (list (float-vector -51.9999 -35.0 -85.0) (float-vector 52.0001 -35.0 -84.9999) (float-vector 52.0 11.0 -84.9999) (float-vector -51.9999 11.0 -85.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (send (elt bc 1) :set-color :blue)
     (send (elt bc 2) :set-color :gray)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-wrist-p :weight 654.58 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-finger2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 41.5 -14.0 -4.00002) (float-vector -41.5 -14.0 -4.0) (float-vector -41.5 3.0 -8.00002) (float-vector 41.5 3.0 -7.99998)))
         (instance face :init :vertices (list (float-vector -41.5 3.0 -8.00002) (float-vector -41.5 7.00003 -19.0) (float-vector 41.5001 7.0 -19.0) (float-vector 41.5 3.0 -7.99998)))
         (instance face :init :vertices (list (float-vector -41.5 7.00003 -19.0) (float-vector -41.5 10.0 -27.0) (float-vector 41.5 10.0 -27.0) (float-vector 41.5001 7.0 -19.0)))
         (instance face :init :vertices (list (float-vector -41.5 10.0 -27.0) (float-vector -41.5 10.0 -53.2679) (float-vector 41.5 10.0 -53.2679) (float-vector 41.5 10.0 -27.0)))
         (instance face :init :vertices (list (float-vector -41.5 32.7321 -58.0) (float-vector -41.5 34.0 -58.0) (float-vector 41.5001 34.0 -58.0) (float-vector 41.5 32.7321 -58.0)))
         (instance face :init :vertices (list (float-vector -41.5 34.0 -58.0) (float-vector -41.4999 34.0 -15.0) (float-vector 41.5 34.0 -15.0) (float-vector 41.5001 34.0 -58.0)))
         (instance face :init :vertices (list (float-vector -41.4999 34.0 -15.0) (float-vector -41.5 28.0 -1.525879e-05) (float-vector 41.5 28.0 -1.525879e-05) (float-vector 41.5 34.0 -15.0)))
         (instance face :init :vertices (list (float-vector -41.5 28.0 -1.525879e-05) (float-vector -41.5 21.0 8.0) (float-vector 41.5 21.0 8.0) (float-vector 41.5 28.0 -1.525879e-05)))
         (instance face :init :vertices (list (float-vector -41.5 21.0 8.0) (float-vector -41.4999 0.0 20.0) (float-vector 41.5 0.0 20.0) (float-vector 41.5 21.0 8.0)))
         (instance face :init :vertices (list (float-vector 41.5 0.0 20.0) (float-vector 41.5 -14.0 -4.00002) (float-vector 41.5 3.0 -7.99998) (float-vector 41.5001 7.0 -19.0) (float-vector 41.5 10.0 -27.0) (float-vector 41.5 10.0 -53.2679) (float-vector 41.5 10.6077 -51.0) (float-vector 41.5 15.0 -46.6077) (float-vector 41.5 21.0 -45.0) (float-vector 41.5 27.0 -46.6077) (float-vector 41.5 31.3923 -51.0) (float-vector 41.5 33.0 -57.0) (float-vector 41.5 32.7321 -58.0) (float-vector 41.5001 34.0 -58.0) (float-vector 41.5 34.0 -15.0) (float-vector 41.5 28.0 -1.525879e-05) (float-vector 41.5 21.0 8.0)))
         (instance face :init :vertices (list (float-vector -41.4999 0.0 20.0) (float-vector -41.5 -14.0 -4.0) (float-vector 41.5 -14.0 -4.00002) (float-vector 41.5 0.0 20.0)))
         (instance face :init :vertices (list (float-vector -41.5 -14.0 -4.0) (float-vector -41.4999 0.0 20.0) (float-vector -41.5 21.0 8.0) (float-vector -41.5 28.0 -1.525879e-05) (float-vector -41.4999 34.0 -15.0) (float-vector -41.5 34.0 -58.0) (float-vector -41.5 32.7321 -58.0) (float-vector -41.5 33.0 -57.0) (float-vector -41.5 31.3923 -51.0) (float-vector -41.5 27.0 -46.6077) (float-vector -41.5 21.0 -45.0) (float-vector -41.5 15.0 -46.6077) (float-vector -41.5 10.6077 -51.0) (float-vector -41.5 10.0 -53.2679) (float-vector -41.5 10.0 -27.0) (float-vector -41.5 7.00003 -19.0) (float-vector -41.5 3.0 -8.00002)))
         (instance face :init :vertices (list (float-vector 42.5 21.0 -68.9999) (float-vector -42.5 21.0 -69.0) (float-vector -42.5 27.0 -67.3923) (float-vector 42.5 27.0 -67.3922)))
         (instance face :init :vertices (list (float-vector -42.5 27.0 -67.3923) (float-vector -42.4999 31.3923 -63.0) (float-vector 42.5 31.3923 -63.0) (float-vector 42.5 27.0 -67.3922)))
         (instance face :init :vertices (list (float-vector -42.4999 31.3923 -63.0) (float-vector -42.5 33.0 -57.0) (float-vector -41.5 33.0 -57.0) (float-vector -41.5 32.7321 -58.0) (float-vector 41.5 32.7321 -58.0) (float-vector 41.5 33.0 -57.0) (float-vector 42.5 33.0 -57.0) (float-vector 42.5 31.3923 -63.0)))
         (instance face :init :vertices (list (float-vector 41.5 31.3923 -51.0) (float-vector 42.5 31.3923 -51.0) (float-vector 42.5 33.0 -57.0) (float-vector 41.5 33.0 -57.0)))
         (instance face :init :vertices (list (float-vector -42.5 33.0 -57.0) (float-vector -42.5 31.3923 -51.0) (float-vector -41.5 31.3923 -51.0) (float-vector -41.5 33.0 -57.0)))
         (instance face :init :vertices (list (float-vector 41.5 27.0 -46.6077) (float-vector 42.5 27.0 -46.6077) (float-vector 42.5 31.3923 -51.0) (float-vector 41.5 31.3923 -51.0)))
         (instance face :init :vertices (list (float-vector -42.5 31.3923 -51.0) (float-vector -42.5 27.0 -46.6077) (float-vector -41.5 27.0 -46.6077) (float-vector -41.5 31.3923 -51.0)))
         (instance face :init :vertices (list (float-vector 41.5 21.0 -45.0) (float-vector 42.5 21.0 -45.0) (float-vector 42.5 27.0 -46.6077) (float-vector 41.5 27.0 -46.6077)))
         (instance face :init :vertices (list (float-vector -42.5 27.0 -46.6077) (float-vector -42.5 21.0 -45.0) (float-vector -41.5 21.0 -45.0) (float-vector -41.5 27.0 -46.6077)))
         (instance face :init :vertices (list (float-vector 41.5 15.0 -46.6077) (float-vector 42.5 15.0 -46.6077) (float-vector 42.5 21.0 -45.0) (float-vector 41.5 21.0 -45.0)))
         (instance face :init :vertices (list (float-vector -42.5 21.0 -45.0) (float-vector -42.5 15.0 -46.6077) (float-vector -41.5 15.0 -46.6077) (float-vector -41.5 21.0 -45.0)))
         (instance face :init :vertices (list (float-vector 41.5 10.6077 -51.0) (float-vector 42.5 10.6077 -51.0) (float-vector 42.5 15.0 -46.6077) (float-vector 41.5 15.0 -46.6077)))
         (instance face :init :vertices (list (float-vector -42.5 15.0 -46.6077) (float-vector -42.5 10.6077 -51.0) (float-vector -41.5 10.6077 -51.0) (float-vector -41.5 15.0 -46.6077)))
         (instance face :init :vertices (list (float-vector -42.5 10.6077 -51.0) (float-vector -42.5 9.0 -57.0) (float-vector 42.5 9.00003 -57.0) (float-vector 42.5 10.6077 -51.0) (float-vector 41.5 10.6077 -51.0) (float-vector 41.5 10.0 -53.2679) (float-vector -41.5 10.0 -53.2679) (float-vector -41.5 10.6077 -51.0)))
         (instance face :init :vertices (list (float-vector -42.5 9.0 -57.0) (float-vector -42.5 10.6077 -63.0) (float-vector 42.5 10.6077 -62.9999) (float-vector 42.5 9.00003 -57.0)))
         (instance face :init :vertices (list (float-vector -42.5 10.6077 -63.0) (float-vector -42.5 15.0 -67.3923) (float-vector 42.5 15.0 -67.3923) (float-vector 42.5 10.6077 -62.9999)))
         (instance face :init :vertices (list (float-vector 42.5 15.0 -67.3923) (float-vector 42.5 21.0 -68.9999) (float-vector 42.5 27.0 -67.3922) (float-vector 42.5 31.3923 -63.0) (float-vector 42.5 33.0 -57.0) (float-vector 42.5 31.3923 -51.0) (float-vector 42.5 27.0 -46.6077) (float-vector 42.5 21.0 -45.0) (float-vector 42.5 15.0 -46.6077) (float-vector 42.5 10.6077 -51.0) (float-vector 42.5 9.00003 -57.0) (float-vector 42.5 10.6077 -62.9999)))
         (instance face :init :vertices (list (float-vector -42.5 15.0 -67.3923) (float-vector -42.5 21.0 -69.0) (float-vector 42.5 21.0 -68.9999) (float-vector 42.5 15.0 -67.3923)))
         (instance face :init :vertices (list (float-vector -42.5 21.0 -69.0) (float-vector -42.5 15.0 -67.3923) (float-vector -42.5 10.6077 -63.0) (float-vector -42.5 9.0 -57.0) (float-vector -42.5 10.6077 -51.0) (float-vector -42.5 15.0 -46.6077) (float-vector -42.5 21.0 -45.0) (float-vector -42.5 27.0 -46.6077) (float-vector -42.5 31.3923 -51.0) (float-vector -42.5 33.0 -57.0) (float-vector -42.4999 31.3923 -63.0) (float-vector -42.5 27.0 -67.3923)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink33 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-finger2 :weight 123.21 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-finger3
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 41.5 12.0 7.99998) (float-vector 41.5001 -12.0 8.00002) (float-vector 41.5001 -12.0 -38.0) (float-vector 41.5001 -29.0 -56.0) (float-vector 41.5001 -17.0 -61.0) (float-vector 41.5001 -1.0 -46.0) (float-vector 41.5 12.0 -1.525879e-05)))
         (instance face :init :vertices (list (float-vector -41.5 -12.0 8.0) (float-vector -41.5 12.0 8.0) (float-vector -41.5 12.0 0.0) (float-vector -41.4999 -1.00003 -46.0) (float-vector -41.5 -17.0 -61.0) (float-vector -41.5 -29.0 -56.0) (float-vector -41.4999 -12.0 -38.0)))
         (instance face :init :vertices (list (float-vector 41.5 12.0 7.99998) (float-vector -41.5 12.0 8.0) (float-vector -41.5 -12.0 8.0) (float-vector 41.5001 -12.0 8.00002)))
         (instance face :init :vertices (list (float-vector 41.5 12.0 -1.525879e-05) (float-vector -41.5 12.0 0.0) (float-vector -41.5 12.0 8.0) (float-vector 41.5 12.0 7.99998)))
         (instance face :init :vertices (list (float-vector 41.5001 -1.0 -46.0) (float-vector -41.4999 -1.00003 -46.0) (float-vector -41.5 12.0 0.0) (float-vector 41.5 12.0 -1.525879e-05)))
         (instance face :init :vertices (list (float-vector 41.5001 -17.0 -61.0) (float-vector -41.5 -17.0 -61.0) (float-vector -41.4999 -1.00003 -46.0) (float-vector 41.5001 -1.0 -46.0)))
         (instance face :init :vertices (list (float-vector 41.5001 -29.0 -56.0) (float-vector -41.5 -29.0 -56.0) (float-vector -41.5 -17.0 -61.0) (float-vector 41.5001 -17.0 -61.0)))
         (instance face :init :vertices (list (float-vector 41.5001 -12.0 -38.0) (float-vector -41.4999 -12.0 -38.0) (float-vector -41.5 -29.0 -56.0) (float-vector 41.5001 -29.0 -56.0)))
         (instance face :init :vertices (list (float-vector 41.5001 -12.0 8.00002) (float-vector -41.5 -12.0 8.0) (float-vector -41.4999 -12.0 -38.0) (float-vector 41.5001 -12.0 -38.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink34 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-finger3 :weight 123.21 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :larm-finger1
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0001 -10.5 -1.525879e-05) (float-vector -10.0 -10.5 -56.0) (float-vector -31.0001 -10.5 -76.0) (float-vector -29.0 -10.5 -79.0) (float-vector 0.0 -10.5 -71.0) (float-vector 6.0 -10.5 -63.0) (float-vector 7.0 -10.5 -56.0) (float-vector 7.0 -10.5 -20.0) (float-vector 10.0 -10.5 -11.0) (float-vector 0.0 -10.5 0.0)))
         (instance face :init :vertices (list (float-vector -10.0 10.5 -56.0) (float-vector -10.0 10.5 1.525879e-05) (float-vector 0.0 10.5 0.0) (float-vector 9.99994 10.5 -11.0) (float-vector 7.0 10.5 -20.0) (float-vector 7.0 10.5 -56.0) (float-vector 6.0 10.5 -63.0) (float-vector 0.0 10.5 -71.0) (float-vector -29.0 10.5 -79.0) (float-vector -31.0 10.5 -76.0)))
         (instance face :init :vertices (list (float-vector -10.0001 -10.5 -1.525879e-05) (float-vector -10.0 10.5 1.525879e-05) (float-vector -10.0 10.5 -56.0) (float-vector -10.0 -10.5 -56.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.5 0.0) (float-vector 0.0 10.5 0.0) (float-vector -10.0 10.5 1.525879e-05) (float-vector -10.0001 -10.5 -1.525879e-05)))
         (instance face :init :vertices (list (float-vector 10.0 -10.5 -11.0) (float-vector 9.99994 10.5 -11.0) (float-vector 0.0 10.5 0.0) (float-vector 0.0 -10.5 0.0)))
         (instance face :init :vertices (list (float-vector 7.0 -10.5 -20.0) (float-vector 7.0 10.5 -20.0) (float-vector 9.99994 10.5 -11.0) (float-vector 10.0 -10.5 -11.0)))
         (instance face :init :vertices (list (float-vector 7.0 -10.5 -56.0) (float-vector 7.0 10.5 -56.0) (float-vector 7.0 10.5 -20.0) (float-vector 7.0 -10.5 -20.0)))
         (instance face :init :vertices (list (float-vector 6.0 -10.5 -63.0) (float-vector 6.0 10.5 -63.0) (float-vector 7.0 10.5 -56.0) (float-vector 7.0 -10.5 -56.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.5 -71.0) (float-vector 0.0 10.5 -71.0) (float-vector 6.0 10.5 -63.0) (float-vector 6.0 -10.5 -63.0)))
         (instance face :init :vertices (list (float-vector -29.0 -10.5 -79.0) (float-vector -29.0 10.5 -79.0) (float-vector 0.0 10.5 -71.0) (float-vector 0.0 -10.5 -71.0)))
         (instance face :init :vertices (list (float-vector -31.0001 -10.5 -76.0) (float-vector -31.0 10.5 -76.0) (float-vector -29.0 10.5 -79.0) (float-vector -29.0 -10.5 -79.0)))
         (instance face :init :vertices (list (float-vector -10.0 -10.5 -56.0) (float-vector -10.0 10.5 -56.0) (float-vector -31.0 10.5 -76.0) (float-vector -31.0001 -10.5 -76.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-finger1 :weight 123.21 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-crotch-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 0.0 80.348) (float-vector 40.0 -31.085 80.499) (float-vector 40.0 -34.0 77.5) (float-vector 40.0 -34.0 52.0) (float-vector 40.0 -31.0 49.0) (float-vector 40.0 -24.0 47.0) (float-vector 40.0 -24.0 18.3469) (float-vector 40.0 -15.5 26.8469) (float-vector 40.0 1.525879e-05 31.0001) (float-vector 40.0 15.5 26.8468) (float-vector 40.0 24.0 18.3468) (float-vector 40.0 24.0 47.0) (float-vector 40.0 31.0 49.0) (float-vector 40.0 34.0 52.0) (float-vector 40.0 34.0 77.5) (float-vector 40.0 31.085 80.499)))
         (instance face :init :vertices (list (float-vector -80.0 31.085 80.499) (float-vector -80.0 0.0 80.348) (float-vector 40.0 0.0 80.348) (float-vector 40.0 31.085 80.499)))
         (instance face :init :vertices (list (float-vector -80.0 -31.085 80.499) (float-vector 40.0 -31.085 80.499) (float-vector 40.0 0.0 80.348) (float-vector -80.0 0.0 80.348)))
         (instance face :init :vertices (list (float-vector -80.0 -34.0 77.5) (float-vector 40.0 -34.0 77.5) (float-vector 40.0 -31.085 80.499) (float-vector -80.0 -31.085 80.499)))
         (instance face :init :vertices (list (float-vector -80.0 -34.0 52.0) (float-vector 40.0 -34.0 52.0) (float-vector 40.0 -34.0 77.5) (float-vector -80.0 -34.0 77.5)))
         (instance face :init :vertices (list (float-vector -80.0 -31.0 49.0) (float-vector 40.0 -31.0 49.0) (float-vector 40.0 -34.0 52.0) (float-vector -80.0 -34.0 52.0)))
         (instance face :init :vertices (list (float-vector -80.0 -24.0 47.0) (float-vector 40.0 -24.0 47.0) (float-vector 40.0 -31.0 49.0) (float-vector -80.0 -31.0 49.0)))
         (instance face :init :vertices (list (float-vector -80.0 -24.0 18.3468) (float-vector -35.0 -24.0 18.3468) (float-vector -35.0 -24.0 36.4) (float-vector 35.0 -24.0 36.4) (float-vector 35.0 -24.0 18.3469) (float-vector 40.0 -24.0 18.3469) (float-vector 40.0 -24.0 47.0) (float-vector -80.0 -24.0 47.0)))
         (instance face :init :vertices (list (float-vector 35.0 24.0 18.3468) (float-vector 35.0 24.0 36.4) (float-vector -35.0 24.0 36.4) (float-vector -35.0 24.0 18.3468) (float-vector -80.0 24.0 18.3468) (float-vector -80.0 24.0 47.0) (float-vector 40.0 24.0 47.0) (float-vector 40.0 24.0 18.3468)))
         (instance face :init :vertices (list (float-vector -80.0 31.0 49.0) (float-vector 40.0 31.0 49.0) (float-vector 40.0 24.0 47.0) (float-vector -80.0 24.0 47.0)))
         (instance face :init :vertices (list (float-vector -80.0 34.0 52.0) (float-vector 40.0 34.0 52.0) (float-vector 40.0 31.0 49.0) (float-vector -80.0 31.0 49.0)))
         (instance face :init :vertices (list (float-vector -80.0 34.0 77.5) (float-vector 40.0 34.0 77.5) (float-vector 40.0 34.0 52.0) (float-vector -80.0 34.0 52.0)))
         (instance face :init :vertices (list (float-vector -80.0 31.085 80.499) (float-vector 40.0 31.085 80.499) (float-vector 40.0 34.0 77.5) (float-vector -80.0 34.0 77.5)))
         (instance face :init :vertices (list (float-vector -80.0 -15.5 -26.8468) (float-vector -80.0 -26.8468 -15.5) (float-vector -80.0 -31.0 0.0) (float-vector -80.0 -26.8468 15.5) (float-vector -80.0 -24.0 18.3468) (float-vector -80.0 -24.0 47.0) (float-vector -80.0 -31.0 49.0) (float-vector -80.0 -34.0 52.0) (float-vector -80.0 -34.0 77.5) (float-vector -80.0 -31.085 80.499) (float-vector -80.0 0.0 80.348) (float-vector -80.0 31.085 80.499) (float-vector -80.0 34.0 77.5) (float-vector -80.0 34.0 52.0) (float-vector -80.0 31.0 49.0) (float-vector -80.0 24.0 47.0) (float-vector -80.0 24.0 18.3468) (float-vector -80.0 26.8468 15.5) (float-vector -80.0 31.0 0.0) (float-vector -80.0 26.8468 -15.5) (float-vector -80.0 15.5 -26.8468) (float-vector -80.0 0.0 -31.0)))
         (instance face :init :vertices (list (float-vector 45.0 0.0 -30.9999) (float-vector 45.0 -15.5 -26.8467) (float-vector 35.0 -15.5 -26.8467) (float-vector 35.0 0.0 -30.9999)))
         (instance face :init :vertices (list (float-vector -35.0 0.0 -31.0) (float-vector -35.0 -15.5 -26.8467) (float-vector -80.0 -15.5 -26.8468) (float-vector -80.0 0.0 -31.0)))
         (instance face :init :vertices (list (float-vector 45.0 15.5 -26.8467) (float-vector 45.0 26.8468 -15.4999) (float-vector 45.0 31.0 0.0) (float-vector 45.0 26.8468 15.5) (float-vector 45.0 15.5 26.8468) (float-vector 45.0 1.525879e-05 31.0001) (float-vector 45.0 -15.5 26.8469) (float-vector 45.0 -26.8468 15.5001) (float-vector 45.0 -31.0 6.103516e-05) (float-vector 45.0 -26.8468 -15.4999) (float-vector 45.0 -15.5 -26.8467) (float-vector 45.0 0.0 -30.9999)))
         (instance face :init :vertices (list (float-vector -80.0 -26.8468 -15.5) (float-vector -80.0 -15.5 -26.8468) (float-vector -35.0 -15.5 -26.8467) (float-vector -35.0 -26.8468 -15.4999)))
         (instance face :init :vertices (list (float-vector 35.0 -26.8468 -15.4999) (float-vector 35.0 -15.5 -26.8467) (float-vector 45.0 -15.5 -26.8467) (float-vector 45.0 -26.8468 -15.4999)))
         (instance face :init :vertices (list (float-vector -80.0 -31.0 0.0) (float-vector -80.0 -26.8468 -15.5) (float-vector -35.0 -26.8468 -15.4999) (float-vector -35.0 -31.0 6.103516e-05)))
         (instance face :init :vertices (list (float-vector 35.0 -31.0 6.103516e-05) (float-vector 35.0 -26.8468 -15.4999) (float-vector 45.0 -26.8468 -15.4999) (float-vector 45.0 -31.0 6.103516e-05)))
         (instance face :init :vertices (list (float-vector -80.0 -26.8468 15.5) (float-vector -80.0 -31.0 0.0) (float-vector -35.0 -31.0 6.103516e-05) (float-vector -35.0 -26.8468 15.5001)))
         (instance face :init :vertices (list (float-vector 35.0 -26.8468 15.5001) (float-vector 35.0 -31.0 6.103516e-05) (float-vector 45.0 -31.0 6.103516e-05) (float-vector 45.0 -26.8468 15.5001)))
         (instance face :init :vertices (list (float-vector -35.0 -26.8468 15.5001) (float-vector -35.0 -24.0 18.3468) (float-vector -80.0 -24.0 18.3468) (float-vector -80.0 -26.8468 15.5)))
         (instance face :init :vertices (list (float-vector 40.0 -15.5 26.8469) (float-vector 40.0 -24.0 18.3469) (float-vector 35.0 -24.0 18.3469) (float-vector 35.0 -26.8468 15.5001) (float-vector 45.0 -26.8468 15.5001) (float-vector 45.0 -15.5 26.8469)))
         (instance face :init :vertices (list (float-vector 40.0 1.525879e-05 31.0001) (float-vector 40.0 -15.5 26.8469) (float-vector 45.0 -15.5 26.8469) (float-vector 45.0 1.525879e-05 31.0001)))
         (instance face :init :vertices (list (float-vector 40.0 15.5 26.8468) (float-vector 40.0 1.525879e-05 31.0001) (float-vector 45.0 1.525879e-05 31.0001) (float-vector 45.0 15.5 26.8468)))
         (instance face :init :vertices (list (float-vector -80.0 26.8468 15.5) (float-vector -80.0 24.0 18.3468) (float-vector -35.0 24.0 18.3468) (float-vector -35.0 26.8468 15.5)))
         (instance face :init :vertices (list (float-vector 35.0 26.8468 15.5) (float-vector 35.0 24.0 18.3468) (float-vector 40.0 24.0 18.3468) (float-vector 40.0 15.5 26.8468) (float-vector 45.0 15.5 26.8468) (float-vector 45.0 26.8468 15.5)))
         (instance face :init :vertices (list (float-vector -80.0 31.0 0.0) (float-vector -80.0 26.8468 15.5) (float-vector -35.0 26.8468 15.5) (float-vector -35.0 31.0 0.0)))
         (instance face :init :vertices (list (float-vector 35.0 31.0 0.0) (float-vector 35.0 26.8468 15.5) (float-vector 45.0 26.8468 15.5) (float-vector 45.0 31.0 0.0)))
         (instance face :init :vertices (list (float-vector -80.0 26.8468 -15.5) (float-vector -80.0 31.0 0.0) (float-vector -35.0 31.0 0.0) (float-vector -35.0 26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector 35.0 26.8468 -15.4999) (float-vector 35.0 31.0 0.0) (float-vector 45.0 31.0 0.0) (float-vector 45.0 26.8468 -15.4999)))
         (instance face :init :vertices (list (float-vector -35.0 15.5 -26.8468) (float-vector -35.0 0.0 -31.0) (float-vector -80.0 0.0 -31.0) (float-vector -80.0 15.5 -26.8468)))
         (instance face :init :vertices (list (float-vector 45.0 15.5 -26.8467) (float-vector 45.0 0.0 -30.9999) (float-vector 35.0 0.0 -30.9999) (float-vector 35.0 15.5 -26.8467)))
         (instance face :init :vertices (list (float-vector -80.0 15.5 -26.8468) (float-vector -80.0 26.8468 -15.5) (float-vector -35.0 26.8468 -15.5) (float-vector -35.0 15.5 -26.8468)))
         (instance face :init :vertices (list (float-vector 35.0 15.5 -26.8467) (float-vector 35.0 26.8468 -15.4999) (float-vector 45.0 26.8468 -15.4999) (float-vector 45.0 15.5 -26.8467)))
         (instance face :init :vertices (list (float-vector -35.0 -24.0 36.4) (float-vector -35.0 -24.0 18.3468) (float-vector -35.0 -26.8468 15.5001) (float-vector -35.0 -31.0 6.103516e-05) (float-vector -35.0 -26.8468 -15.4999) (float-vector -35.0 -15.5 -26.8467) (float-vector -35.0 0.0 -31.0) (float-vector -35.0 15.5 -26.8468) (float-vector -35.0 26.8468 -15.5) (float-vector -35.0 31.0 0.0) (float-vector -35.0 26.8468 15.5) (float-vector -35.0 24.0 18.3468) (float-vector -35.0 24.0 36.4)))
         (instance face :init :vertices (list (float-vector 35.0 -24.0 36.4) (float-vector -35.0 -24.0 36.4) (float-vector -35.0 24.0 36.4) (float-vector 35.0 24.0 36.4)))
         (instance face :init :vertices (list (float-vector 35.0 24.0 36.4) (float-vector 35.0 24.0 18.3468) (float-vector 35.0 26.8468 15.5) (float-vector 35.0 31.0 0.0) (float-vector 35.0 26.8468 -15.4999) (float-vector 35.0 15.5 -26.8467) (float-vector 35.0 0.0 -30.9999) (float-vector 35.0 -15.5 -26.8467) (float-vector 35.0 -26.8468 -15.4999) (float-vector 35.0 -31.0 6.103516e-05) (float-vector 35.0 -26.8468 15.5001) (float-vector 35.0 -24.0 18.3469) (float-vector 35.0 -24.0 36.4)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink25 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-y :weight 1136.38 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.5 -37.0 26.8468) (float-vector 0.0 -37.0 31.0) (float-vector -15.5 -37.0 26.8468) (float-vector -26.8468 -37.0 15.5) (float-vector -31.0001 -37.0 2.150836e-05) (float-vector -26.8469 -37.0 -15.5) (float-vector -15.5001 -37.0 -26.8468) (float-vector -6.103516e-05 -37.0 -31.0) (float-vector 15.4999 -37.0 -26.8468) (float-vector 26.8467 -37.0 -15.5) (float-vector 30.9999 -37.0 -4.031711e-05) (float-vector 26.8468 -37.0 15.5)))
         (instance face :init :vertices (list (float-vector 0.0 37.0 31.0) (float-vector 15.5001 37.0 26.8468) (float-vector 26.8468 37.0 15.5) (float-vector 31.0 37.0 -4.031711e-05) (float-vector 26.8468 37.0 -15.5) (float-vector 15.5 37.0 -26.8468) (float-vector 0.0 37.0 -31.0) (float-vector -15.5 37.0 -26.8468) (float-vector -26.8468 37.0 -15.5) (float-vector -31.0 37.0 2.150835e-05) (float-vector -26.8467 37.0 15.5) (float-vector -15.5 37.0 26.8468)))
         (instance face :init :vertices (list (float-vector 15.5 -37.0 26.8468) (float-vector 15.5001 37.0 26.8468) (float-vector 0.0 37.0 31.0) (float-vector 0.0 -37.0 31.0)))
         (instance face :init :vertices (list (float-vector 26.8468 -37.0 15.5) (float-vector 26.8468 37.0 15.5) (float-vector 15.5001 37.0 26.8468) (float-vector 15.5 -37.0 26.8468)))
         (instance face :init :vertices (list (float-vector 30.9999 -37.0 -4.031711e-05) (float-vector 31.0 37.0 -4.031711e-05) (float-vector 26.8468 37.0 15.5) (float-vector 26.8468 -37.0 15.5)))
         (instance face :init :vertices (list (float-vector 26.8467 -37.0 -15.5) (float-vector 26.8468 37.0 -15.5) (float-vector 31.0 37.0 -4.031711e-05) (float-vector 30.9999 -37.0 -4.031711e-05)))
         (instance face :init :vertices (list (float-vector 15.4999 -37.0 -26.8468) (float-vector 15.5 37.0 -26.8468) (float-vector 26.8468 37.0 -15.5) (float-vector 26.8467 -37.0 -15.5)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 -37.0 -31.0) (float-vector 0.0 37.0 -31.0) (float-vector 15.5 37.0 -26.8468) (float-vector 15.4999 -37.0 -26.8468)))
         (instance face :init :vertices (list (float-vector -15.5001 -37.0 -26.8468) (float-vector -15.5 37.0 -26.8468) (float-vector 0.0 37.0 -31.0) (float-vector -6.103516e-05 -37.0 -31.0)))
         (instance face :init :vertices (list (float-vector -26.8469 -37.0 -15.5) (float-vector -26.8468 37.0 -15.5) (float-vector -15.5 37.0 -26.8468) (float-vector -15.5001 -37.0 -26.8468)))
         (instance face :init :vertices (list (float-vector -31.0001 -37.0 2.150836e-05) (float-vector -31.0 37.0 2.150835e-05) (float-vector -26.8468 37.0 -15.5) (float-vector -26.8469 -37.0 -15.5)))
         (instance face :init :vertices (list (float-vector -26.8468 -37.0 15.5) (float-vector -26.8467 37.0 15.5) (float-vector -31.0 37.0 2.150835e-05) (float-vector -31.0001 -37.0 2.150836e-05)))
         (instance face :init :vertices (list (float-vector -15.5 -37.0 26.8468) (float-vector -15.5 37.0 26.8468) (float-vector -26.8467 37.0 15.5) (float-vector -26.8468 -37.0 15.5)))
         (instance face :init :vertices (list (float-vector 0.0 -37.0 31.0) (float-vector 0.0 37.0 31.0) (float-vector -15.5 37.0 26.8468) (float-vector -15.5 -37.0 26.8468)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink26 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-r :weight 729.538 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 -223.5 50.4999) (float-vector 35.0 -251.0 50.5798) (float-vector -66.2067 -251.0 50.5194) (float-vector -98.0 0.0 50.2892) (float-vector -94.0 0.0 50.2959) (float-vector -93.38 15.943 50.2857) (float-vector -88.142 25.142 50.2879) (float-vector -79.0 31.0 50.299) (float-vector 0.0 31.0 50.4303) (float-vector 11.896 28.627 50.4517) (float-vector 24.875 18.5 50.4805) (float-vector 31.0 0.0 50.5037) (float-vector 35.0 0.0 50.5104) (float-vector 35.0 -93.96 50.4999) (float-vector -36.66 -93.96 50.5) (float-vector 15.32 -223.5 50.4999)))
         (instance face :init :vertices (list (float-vector 35.0 -223.5 50.4999) (float-vector 15.32 -223.5 50.4999) (float-vector 15.32 -223.5 -50.5001) (float-vector 35.0 -223.5 -50.5001)))
         (instance face :init :vertices (list (float-vector 35.0 -223.5 -50.5001) (float-vector 15.32 -223.5 -50.5001) (float-vector -36.66 -93.96 -50.5) (float-vector 35.0 -93.96 -50.5) (float-vector 35.0 6.103516e-05 -50.7723) (float-vector 31.0 6.103516e-05 -50.7789) (float-vector 24.875 18.5 -50.8022) (float-vector 11.896 28.627 -50.8309) (float-vector -1.525879e-05 31.0 -50.8524) (float-vector -79.0 31.0001 -50.9837) (float-vector -88.142 25.1421 -50.9948) (float-vector -93.3799 15.9431 -50.997) (float-vector -94.0 6.103516e-05 -50.9868) (float-vector -98.0 0.0 -50.9934) (float-vector -66.2067 -251.0 -50.7633) (float-vector 35.0 -251.0 -50.5218)))
         (instance face :init :vertices (list (float-vector -36.66 -93.96 -50.5) (float-vector 15.32 -223.5 -50.5001) (float-vector 15.32 -223.5 50.4999) (float-vector -36.66 -93.96 50.5)))
         (instance face :init :vertices (list (float-vector 35.0 -93.96 -50.5) (float-vector -36.66 -93.96 -50.5) (float-vector -36.66 -93.96 50.5) (float-vector 35.0 -93.96 50.4999)))
         (instance face :init :vertices (list (float-vector 35.0 -300.0 -58.5001) (float-vector 35.0 -300.0 -55.5001) (float-vector 16.0 -300.0 -55.5001) (float-vector 16.0 -300.0 -58.5001)))
         (instance face :init :vertices (list (float-vector 16.0 -300.0 58.4999) (float-vector 16.0 -300.0 55.4999) (float-vector 35.0 -300.0 55.4999) (float-vector 35.0 -300.0 58.4999)))
         (instance face :init :vertices (list (float-vector 35.0 -300.0 -58.5001) (float-vector 16.0 -300.0 -58.5001) (float-vector 11.664 -317.13 -58.5001) (float-vector -2.7744 -331.61 -58.5001) (float-vector -20.0 -336.0 -58.5001) (float-vector -36.535 -331.98 -58.5001) (float-vector -50.132 -319.7 -58.5001) (float-vector -56.0 -300.0 -58.5001) (float-vector -60.0 -300.0 -58.5001) (float-vector -98.0 6.103516e-05 -58.5) (float-vector -94.0 6.103516e-05 -58.5) (float-vector -93.3799 15.9431 -58.5) (float-vector -88.142 25.1421 -58.5) (float-vector -79.0 31.0001 -58.5) (float-vector -1.525879e-05 31.0 -58.5) (float-vector 11.896 28.627 -58.5) (float-vector 24.875 18.5 -58.5) (float-vector 31.0 6.103516e-05 -58.5) (float-vector 35.0 6.103516e-05 -58.5)))
         (instance face :init :vertices (list (float-vector 16.0 -300.0 58.4999) (float-vector 35.0 -300.0 58.4999) (float-vector 35.0 0.0 58.5) (float-vector 31.0 0.0 58.5) (float-vector 24.875 18.5 58.5) (float-vector 11.896 28.627 58.5) (float-vector 0.0 31.0 58.5) (float-vector -79.0 31.0 58.5) (float-vector -88.142 25.142 58.5) (float-vector -93.38 15.943 58.5) (float-vector -94.0 0.0 58.5) (float-vector -98.0 0.0 58.5) (float-vector -60.0 -300.0 58.4999) (float-vector -56.0 -300.0 58.4999) (float-vector -50.132 -319.7 58.4998) (float-vector -36.535 -331.98 58.4998) (float-vector -20.0 -336.0 58.4998) (float-vector -2.7744 -331.61 58.4998) (float-vector 11.664 -317.13 58.4998)))
         (instance face :init :vertices (list (float-vector 11.664 -317.13 -58.5001) (float-vector 16.0 -300.0 -58.5001) (float-vector 16.0 -300.0 -55.5001) (float-vector 11.664 -317.13 -55.5001)))
         (instance face :init :vertices (list (float-vector 11.664 -317.13 55.4998) (float-vector 16.0 -300.0 55.4999) (float-vector 16.0 -300.0 58.4999) (float-vector 11.664 -317.13 58.4998)))
         (instance face :init :vertices (list (float-vector -2.7744 -331.61 -58.5001) (float-vector 11.664 -317.13 -58.5001) (float-vector 11.664 -317.13 -55.5001) (float-vector -2.7744 -331.61 -55.5001)))
         (instance face :init :vertices (list (float-vector -2.7744 -331.61 55.4998) (float-vector 11.664 -317.13 55.4998) (float-vector 11.664 -317.13 58.4998) (float-vector -2.7744 -331.61 58.4998)))
         (instance face :init :vertices (list (float-vector -20.0 -336.0 -58.5001) (float-vector -2.7744 -331.61 -58.5001) (float-vector -2.7744 -331.61 -55.5001) (float-vector -20.0 -336.0 -55.5001)))
         (instance face :init :vertices (list (float-vector -20.0 -336.0 55.4998) (float-vector -2.7744 -331.61 55.4998) (float-vector -2.7744 -331.61 58.4998) (float-vector -20.0 -336.0 58.4998)))
         (instance face :init :vertices (list (float-vector -36.535 -331.98 -58.5001) (float-vector -20.0 -336.0 -58.5001) (float-vector -20.0 -336.0 -55.5001) (float-vector -36.535 -331.98 -55.5001)))
         (instance face :init :vertices (list (float-vector -36.535 -331.98 55.4998) (float-vector -20.0 -336.0 55.4998) (float-vector -20.0 -336.0 58.4998) (float-vector -36.535 -331.98 58.4998)))
         (instance face :init :vertices (list (float-vector -50.132 -319.7 -58.5001) (float-vector -36.535 -331.98 -58.5001) (float-vector -36.535 -331.98 -55.5001) (float-vector -50.132 -319.7 -55.5001)))
         (instance face :init :vertices (list (float-vector -50.132 -319.7 55.4998) (float-vector -36.535 -331.98 55.4998) (float-vector -36.535 -331.98 58.4998) (float-vector -50.132 -319.7 58.4998)))
         (instance face :init :vertices (list (float-vector -56.0 -300.0 -58.5001) (float-vector -50.132 -319.7 -58.5001) (float-vector -50.132 -319.7 -55.5001) (float-vector -56.0 -300.0 -55.5001)))
         (instance face :init :vertices (list (float-vector -56.0 -300.0 55.4999) (float-vector -50.132 -319.7 55.4998) (float-vector -50.132 -319.7 58.4998) (float-vector -56.0 -300.0 58.4999)))
         (instance face :init :vertices (list (float-vector -60.0 -300.0 -58.5001) (float-vector -56.0 -300.0 -58.5001) (float-vector -56.0 -300.0 -55.5001) (float-vector -60.0 -300.0 -55.5001)))
         (instance face :init :vertices (list (float-vector -60.0 -300.0 55.4999) (float-vector -56.0 -300.0 55.4999) (float-vector -56.0 -300.0 58.4999) (float-vector -60.0 -300.0 58.4999)))
         (instance face :init :vertices (list (float-vector -98.0 6.103516e-05 -58.5) (float-vector -60.0 -300.0 -58.5001) (float-vector -60.0 -300.0 -55.5001) (float-vector -66.2067 -251.0 -55.5001) (float-vector -66.2067 -251.0 -50.7633) (float-vector -98.0 0.0 -50.9934)))
         (instance face :init :vertices (list (float-vector -98.0 0.0 50.2892) (float-vector -66.2067 -251.0 50.5194) (float-vector -66.2066 -251.0 55.4999) (float-vector -60.0 -300.0 55.4999) (float-vector -60.0 -300.0 58.4999) (float-vector -98.0 0.0 58.5)))
         (instance face :init :vertices (list (float-vector -94.0 6.103516e-05 -58.5) (float-vector -98.0 6.103516e-05 -58.5) (float-vector -98.0 0.0 -50.9934) (float-vector -94.0 6.103516e-05 -50.9868)))
         (instance face :init :vertices (list (float-vector -94.0 0.0 50.2959) (float-vector -98.0 0.0 50.2892) (float-vector -98.0 0.0 58.5) (float-vector -94.0 0.0 58.5)))
         (instance face :init :vertices (list (float-vector -93.3799 15.9431 -58.5) (float-vector -94.0 6.103516e-05 -58.5) (float-vector -94.0 6.103516e-05 -50.9868) (float-vector -93.3799 15.9431 -50.997)))
         (instance face :init :vertices (list (float-vector -93.38 15.943 50.2857) (float-vector -94.0 0.0 50.2959) (float-vector -94.0 0.0 58.5) (float-vector -93.38 15.943 58.5)))
         (instance face :init :vertices (list (float-vector -88.142 25.1421 -58.5) (float-vector -93.3799 15.9431 -58.5) (float-vector -93.3799 15.9431 -50.997) (float-vector -88.142 25.1421 -50.9948)))
         (instance face :init :vertices (list (float-vector -88.142 25.142 50.2879) (float-vector -93.38 15.943 50.2857) (float-vector -93.38 15.943 58.5) (float-vector -88.142 25.142 58.5)))
         (instance face :init :vertices (list (float-vector -79.0 31.0001 -58.5) (float-vector -88.142 25.1421 -58.5) (float-vector -88.142 25.1421 -50.9948) (float-vector -79.0 31.0001 -50.9837)))
         (instance face :init :vertices (list (float-vector -79.0 31.0 50.299) (float-vector -88.142 25.142 50.2879) (float-vector -88.142 25.142 58.5) (float-vector -79.0 31.0 58.5)))
         (instance face :init :vertices (list (float-vector -1.525879e-05 31.0 -58.5) (float-vector -79.0 31.0001 -58.5) (float-vector -79.0 31.0001 -50.9837) (float-vector -1.525879e-05 31.0 -50.8524)))
         (instance face :init :vertices (list (float-vector 0.0 31.0 50.4303) (float-vector -79.0 31.0 50.299) (float-vector -79.0 31.0 58.5) (float-vector 0.0 31.0 58.5)))
         (instance face :init :vertices (list (float-vector 11.896 28.627 -58.5) (float-vector -1.525879e-05 31.0 -58.5) (float-vector -1.525879e-05 31.0 -50.8524) (float-vector 11.896 28.627 -50.8309)))
         (instance face :init :vertices (list (float-vector 11.896 28.627 50.4517) (float-vector 0.0 31.0 50.4303) (float-vector 0.0 31.0 58.5) (float-vector 11.896 28.627 58.5)))
         (instance face :init :vertices (list (float-vector 24.875 18.5 -58.5) (float-vector 11.896 28.627 -58.5) (float-vector 11.896 28.627 -50.8309) (float-vector 24.875 18.5 -50.8022)))
         (instance face :init :vertices (list (float-vector 24.875 18.5 50.4805) (float-vector 11.896 28.627 50.4517) (float-vector 11.896 28.627 58.5) (float-vector 24.875 18.5 58.5)))
         (instance face :init :vertices (list (float-vector 31.0 6.103516e-05 -58.5) (float-vector 24.875 18.5 -58.5) (float-vector 24.875 18.5 -50.8022) (float-vector 31.0 6.103516e-05 -50.7789)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 50.5037) (float-vector 24.875 18.5 50.4805) (float-vector 24.875 18.5 58.5) (float-vector 31.0 0.0 58.5)))
         (instance face :init :vertices (list (float-vector 35.0 6.103516e-05 -58.5) (float-vector 31.0 6.103516e-05 -58.5) (float-vector 31.0 6.103516e-05 -50.7789) (float-vector 35.0 6.103516e-05 -50.7723)))
         (instance face :init :vertices (list (float-vector 35.0 0.0 58.5) (float-vector 35.0 -300.0 58.4999) (float-vector 35.0 -300.0 55.4999) (float-vector 35.0 -251.0 55.4999) (float-vector 35.0 -251.0 50.5798) (float-vector 35.0 -223.5 50.4999) (float-vector 35.0 -223.5 -50.5001) (float-vector 35.0 -251.0 -50.5218) (float-vector 34.9999 -251.0 -55.5001) (float-vector 35.0 -300.0 -55.5001) (float-vector 35.0 -300.0 -58.5001) (float-vector 35.0 6.103516e-05 -58.5) (float-vector 35.0 6.103516e-05 -50.7723) (float-vector 35.0 -93.96 -50.5) (float-vector 35.0 -93.96 50.4999) (float-vector 35.0 0.0 50.5104)))
         (instance face :init :vertices (list (float-vector 35.0 0.0 50.5104) (float-vector 31.0 0.0 50.5037) (float-vector 31.0 0.0 58.5) (float-vector 35.0 0.0 58.5)))
         (instance face :init :vertices (list (float-vector 35.0 -251.0 55.4999) (float-vector 35.0 -300.0 55.4999) (float-vector 16.0 -300.0 55.4999) (float-vector 11.664 -317.13 55.4998) (float-vector -2.7744 -331.61 55.4998) (float-vector -20.0 -336.0 55.4998) (float-vector -36.535 -331.98 55.4998) (float-vector -50.132 -319.7 55.4998) (float-vector -56.0 -300.0 55.4999) (float-vector -60.0 -300.0 55.4999) (float-vector -66.2066 -251.0 55.4999)))
         (instance face :init :vertices (list (float-vector -66.2066 -251.0 55.4999) (float-vector -66.2067 -251.0 50.5194) (float-vector 35.0 -251.0 50.5798) (float-vector 35.0 -251.0 55.4999)))
         (instance face :init :vertices (list (float-vector 34.9999 -251.0 -55.5001) (float-vector 35.0 -251.0 -50.5218) (float-vector -66.2067 -251.0 -50.7633) (float-vector -66.2067 -251.0 -55.5001)))
         (instance face :init :vertices (list (float-vector -66.2067 -251.0 -55.5001) (float-vector -60.0 -300.0 -55.5001) (float-vector -56.0 -300.0 -55.5001) (float-vector -50.132 -319.7 -55.5001) (float-vector -36.535 -331.98 -55.5001) (float-vector -20.0 -336.0 -55.5001) (float-vector -2.7744 -331.61 -55.5001) (float-vector 11.664 -317.13 -55.5001) (float-vector 16.0 -300.0 -55.5001) (float-vector 35.0 -300.0 -55.5001) (float-vector 34.9999 -251.0 -55.5001)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 -93.964 -58.5) (float-vector 38.0 -93.964 -58.5) (float-vector 38.0 -273.5 -58.5001) (float-vector 35.0 -273.5 -58.5001)))
         (instance face :init :vertices (list (float-vector 38.0 -93.9641 58.4999) (float-vector 35.0 -93.9641 58.4999) (float-vector 35.0 -273.5 58.4999) (float-vector 38.0 -273.5 58.4999)))
         (instance face :init :vertices (list (float-vector 35.0 -93.964 -58.5) (float-vector 35.0 -93.9641 58.4999) (float-vector 38.0 -93.9641 58.4999) (float-vector 38.0 -93.964 -58.5)))
         (instance face :init :vertices (list (float-vector 35.0 -273.5 -58.5001) (float-vector 35.0 -273.5 58.4999) (float-vector 35.0 -93.9641 58.4999) (float-vector 35.0 -93.964 -58.5)))
         (instance face :init :vertices (list (float-vector 38.0 -273.5 -58.5001) (float-vector 38.0 -273.5 58.4999) (float-vector 35.0 -273.5 58.4999) (float-vector 35.0 -273.5 -58.5001)))
         (instance face :init :vertices (list (float-vector 38.0 -93.964 -58.5) (float-vector 38.0 -93.9641 58.4999) (float-vector 38.0 -273.5 58.4999) (float-vector 38.0 -273.5 -58.5001)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (send (elt bc 1) :set-color :gray)
     (setq blink27 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-p :weight 2312.41 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 51.0 -19.5 -52.5) (float-vector 30.883 18.5 -52.5) (float-vector 30.883 18.5 52.5) (float-vector 51.0 -19.5 52.5)))
         (instance face :init :vertices (list (float-vector 15.685 32.403 -52.5) (float-vector 15.685 32.403 52.5) (float-vector 30.883 18.5 52.5) (float-vector 30.883 18.5 -52.5)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 36.0 -52.5) (float-vector 0.0 36.0 52.5) (float-vector 15.685 32.403 52.5) (float-vector 15.685 32.403 -52.5)))
         (instance face :init :vertices (list (float-vector -17.622 31.392 -52.5) (float-vector -17.622 31.392 52.5) (float-vector 0.0 36.0 52.5) (float-vector 7.629395e-06 36.0 -52.5)))
         (instance face :init :vertices (list (float-vector -31.475 17.474 -52.5) (float-vector -31.475 17.474 52.5) (float-vector -17.622 31.392 52.5) (float-vector -17.622 31.392 -52.5)))
         (instance face :init :vertices (list (float-vector -36.0 3.051758e-05 -52.5) (float-vector -36.0 -3.051758e-05 52.5) (float-vector -31.475 17.474 52.5) (float-vector -31.475 17.474 -52.5)))
         (instance face :init :vertices (list (float-vector -38.914 -20.556 -52.5) (float-vector -38.914 -20.556 52.5) (float-vector -36.0 -3.051758e-05 52.5) (float-vector -36.0 3.051758e-05 -52.5)))
         (instance face :init :vertices (list (float-vector -42.835 -20.0 -52.5) (float-vector -42.835 -20.0 52.5) (float-vector -38.914 -20.556 52.5) (float-vector -38.914 -20.556 -52.5)))
         (instance face :init :vertices (list (float-vector -68.0 -247.5 -52.5001) (float-vector -68.0 -247.5 -44.5001) (float-vector -64.7368 -218.0 -44.5001) (float-vector -64.7368 -218.0 44.4999) (float-vector -68.0 -247.5 44.4999) (float-vector -68.0 -247.5 52.4999) (float-vector -42.835 -20.0 52.5) (float-vector -42.835 -20.0 -52.5)))
         (instance face :init :vertices (list (float-vector -24.875 -318.5 52.4999) (float-vector -68.0 -247.5 52.4999) (float-vector -68.0 -247.5 44.4999) (float-vector -24.875 -318.5 44.4999)))
         (instance face :init :vertices (list (float-vector -24.875 -318.5 -52.5001) (float-vector -24.875 -318.5 -44.5001) (float-vector -68.0 -247.5 -44.5001) (float-vector -68.0 -247.5 -52.5001)))
         (instance face :init :vertices (list (float-vector -14.601 -327.35 52.4999) (float-vector -24.875 -318.5 52.4999) (float-vector -24.875 -318.5 44.4999) (float-vector -14.601 -327.35 44.4999)))
         (instance face :init :vertices (list (float-vector -14.601 -327.35 -52.5001) (float-vector -14.601 -327.35 -44.5001) (float-vector -24.875 -318.5 -44.5001) (float-vector -24.875 -318.5 -52.5001)))
         (instance face :init :vertices (list (float-vector 0.0 -331.0 52.4999) (float-vector -14.601 -327.35 52.4999) (float-vector -14.601 -327.35 44.4999) (float-vector -7.629395e-06 -331.0 44.4999)))
         (instance face :init :vertices (list (float-vector -7.629395e-06 -331.0 -52.5001) (float-vector -7.629395e-06 -331.0 -44.5001) (float-vector -14.601 -327.35 -44.5001) (float-vector -14.601 -327.35 -52.5001)))
         (instance face :init :vertices (list (float-vector 13.815 -327.75 52.4999) (float-vector 0.0 -331.0 52.4999) (float-vector -7.629395e-06 -331.0 44.4999) (float-vector 13.815 -327.75 44.4999)))
         (instance face :init :vertices (list (float-vector 13.815 -327.75 -52.5001) (float-vector 13.815 -327.75 -44.5001) (float-vector -7.629395e-06 -331.0 -44.5001) (float-vector -7.629395e-06 -331.0 -52.5001)))
         (instance face :init :vertices (list (float-vector 51.0 -300.0 52.4999) (float-vector 13.815 -327.75 52.4999) (float-vector 13.815 -327.75 44.4999) (float-vector 51.0 -300.0 44.4999)))
         (instance face :init :vertices (list (float-vector 51.0 -300.0 -52.5001) (float-vector 51.0 -300.0 -44.5001) (float-vector 13.815 -327.75 -44.5001) (float-vector 13.815 -327.75 -52.5001)))
         (instance face :init :vertices (list (float-vector 55.0 -300.0 52.4999) (float-vector 51.0 -300.0 52.4999) (float-vector 51.0 -300.0 44.4999) (float-vector 55.0 -300.0 44.4999)))
         (instance face :init :vertices (list (float-vector 55.0 -300.0 -52.5001) (float-vector 55.0 -300.0 -44.5001) (float-vector 51.0 -300.0 -44.5001) (float-vector 51.0 -300.0 -52.5001)))
         (instance face :init :vertices (list (float-vector 55.0 -19.5 -52.5) (float-vector 55.0 -19.5 52.5) (float-vector 55.0 -300.0 52.4999) (float-vector 55.0 -300.0 44.4999) (float-vector 55.0 -218.0 44.4999) (float-vector 55.0 -218.0 -44.5001) (float-vector 55.0 -300.0 -44.5001) (float-vector 55.0 -300.0 -52.5001)))
         (instance face :init :vertices (list (float-vector 51.0 -19.5 52.5) (float-vector 30.883 18.5 52.5) (float-vector 15.685 32.403 52.5) (float-vector 0.0 36.0 52.5) (float-vector -17.622 31.392 52.5) (float-vector -31.475 17.474 52.5) (float-vector -36.0 -3.051758e-05 52.5) (float-vector -38.914 -20.556 52.5) (float-vector -42.835 -20.0 52.5) (float-vector -68.0 -247.5 52.4999) (float-vector -24.875 -318.5 52.4999) (float-vector -14.601 -327.35 52.4999) (float-vector 0.0 -331.0 52.4999) (float-vector 13.815 -327.75 52.4999) (float-vector 51.0 -300.0 52.4999) (float-vector 55.0 -300.0 52.4999) (float-vector 55.0 -19.5 52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -19.5 -52.5) (float-vector 55.0 -300.0 -52.5001) (float-vector 51.0 -300.0 -52.5001) (float-vector 13.815 -327.75 -52.5001) (float-vector -7.629395e-06 -331.0 -52.5001) (float-vector -14.601 -327.35 -52.5001) (float-vector -24.875 -318.5 -52.5001) (float-vector -68.0 -247.5 -52.5001) (float-vector -42.835 -20.0 -52.5) (float-vector -38.914 -20.556 -52.5) (float-vector -36.0 3.051758e-05 -52.5) (float-vector -31.475 17.474 -52.5) (float-vector -17.622 31.392 -52.5) (float-vector 7.629395e-06 36.0 -52.5) (float-vector 15.685 32.403 -52.5) (float-vector 30.883 18.5 -52.5) (float-vector 51.0 -19.5 -52.5)))
         (instance face :init :vertices (list (float-vector 51.0 -19.5 -52.5) (float-vector 51.0 -19.5 52.5) (float-vector 55.0 -19.5 52.5) (float-vector 55.0 -19.5 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -218.0 44.4999) (float-vector 55.0 -300.0 44.4999) (float-vector 51.0 -300.0 44.4999) (float-vector 13.815 -327.75 44.4999) (float-vector -7.629395e-06 -331.0 44.4999) (float-vector -14.601 -327.35 44.4999) (float-vector -24.875 -318.5 44.4999) (float-vector -68.0 -247.5 44.4999) (float-vector -64.7368 -218.0 44.4999)))
         (instance face :init :vertices (list (float-vector 55.0 -218.0 -44.5001) (float-vector 55.0 -218.0 44.4999) (float-vector -64.7368 -218.0 44.4999) (float-vector -64.7368 -218.0 -44.5001)))
         (instance face :init :vertices (list (float-vector -64.7368 -218.0 -44.5001) (float-vector -68.0 -247.5 -44.5001) (float-vector -24.875 -318.5 -44.5001) (float-vector -14.601 -327.35 -44.5001) (float-vector -7.629395e-06 -331.0 -44.5001) (float-vector 13.815 -327.75 -44.5001) (float-vector 51.0 -300.0 -44.5001) (float-vector 55.0 -300.0 -44.5001) (float-vector 55.0 -218.0 -44.5001)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 58.0 -168.0 -52.5001) (float-vector 55.0 -168.0 -52.5001) (float-vector 55.0 26.5 -52.5) (float-vector 58.0 26.5 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -168.0 52.4999) (float-vector 58.0 -168.0 52.4999) (float-vector 58.0 26.5 52.5) (float-vector 55.0 26.5 52.5)))
         (instance face :init :vertices (list (float-vector 58.0 -168.0 -52.5001) (float-vector 58.0 -168.0 52.4999) (float-vector 55.0 -168.0 52.4999) (float-vector 55.0 -168.0 -52.5001)))
         (instance face :init :vertices (list (float-vector 58.0 26.5 -52.5) (float-vector 58.0 26.5 52.5) (float-vector 58.0 -168.0 52.4999) (float-vector 58.0 -168.0 -52.5001)))
         (instance face :init :vertices (list (float-vector 55.0 26.5 -52.5) (float-vector 55.0 26.5 52.5) (float-vector 58.0 26.5 52.5) (float-vector 58.0 26.5 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -168.0 -52.5001) (float-vector 55.0 -168.0 52.4999) (float-vector 55.0 26.5 52.5) (float-vector 55.0 26.5 -52.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (send (elt bc 1) :set-color :gray50)
     (setq blink28 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-knee-p :weight 1682.63 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-ankle-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 41.5) (float-vector 31.0 7.629395e-06 41.5) (float-vector 26.8468 15.5 41.5) (float-vector 15.5 26.8468 41.5) (float-vector 7.629395e-06 31.0 41.5) (float-vector -15.5 26.8468 41.5) (float-vector -26.8468 15.5 41.5) (float-vector -31.0 2.288818e-05 41.5) (float-vector -26.8468 -15.5 41.5) (float-vector -15.5 -26.8468 41.5) (float-vector -3.051758e-05 -31.0 41.5) (float-vector 15.5 -26.8468 41.5)))
         (instance face :init :vertices (list (float-vector 31.0 1.525879e-05 -41.5) (float-vector 26.8468 -15.5 -41.5) (float-vector 15.5 -26.8468 -41.5) (float-vector -3.051758e-05 -31.0 -41.5) (float-vector -15.5 -26.8468 -41.5) (float-vector -26.8468 -15.5 -41.5) (float-vector -31.0 3.051758e-05 -41.5) (float-vector -26.8468 15.5 -41.5) (float-vector -15.5 26.8468 -41.5) (float-vector 7.629395e-06 31.0 -41.5) (float-vector 15.5 26.8468 -41.5) (float-vector 26.8468 15.5 -41.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 41.5) (float-vector 26.8468 -15.5 -41.5) (float-vector 31.0 1.525879e-05 -41.5) (float-vector 31.0 7.629395e-06 41.5)))
         (instance face :init :vertices (list (float-vector 15.5 -26.8468 41.5) (float-vector 15.5 -26.8468 -41.5) (float-vector 26.8468 -15.5 -41.5) (float-vector 26.8468 -15.5 41.5)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 -31.0 41.5) (float-vector -3.051758e-05 -31.0 -41.5) (float-vector 15.5 -26.8468 -41.5) (float-vector 15.5 -26.8468 41.5)))
         (instance face :init :vertices (list (float-vector -15.5 -26.8468 41.5) (float-vector -15.5 -26.8468 -41.5) (float-vector -3.051758e-05 -31.0 -41.5) (float-vector -3.051758e-05 -31.0 41.5)))
         (instance face :init :vertices (list (float-vector -26.8468 -15.5 41.5) (float-vector -26.8468 -15.5 -41.5) (float-vector -15.5 -26.8468 -41.5) (float-vector -15.5 -26.8468 41.5)))
         (instance face :init :vertices (list (float-vector -31.0 2.288818e-05 41.5) (float-vector -31.0 3.051758e-05 -41.5) (float-vector -26.8468 -15.5 -41.5) (float-vector -26.8468 -15.5 41.5)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 41.5) (float-vector -26.8468 15.5 -41.5) (float-vector -31.0 3.051758e-05 -41.5) (float-vector -31.0 2.288818e-05 41.5)))
         (instance face :init :vertices (list (float-vector -15.5 26.8468 41.5) (float-vector -15.5 26.8468 -41.5) (float-vector -26.8468 15.5 -41.5) (float-vector -26.8468 15.5 41.5)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 31.0 41.5) (float-vector 7.629395e-06 31.0 -41.5) (float-vector -15.5 26.8468 -41.5) (float-vector -15.5 26.8468 41.5)))
         (instance face :init :vertices (list (float-vector 15.5 26.8468 41.5) (float-vector 15.5 26.8468 -41.5) (float-vector 7.629395e-06 31.0 -41.5) (float-vector 7.629395e-06 31.0 41.5)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 41.5) (float-vector 26.8468 15.5 -41.5) (float-vector 15.5 26.8468 -41.5) (float-vector 15.5 26.8468 41.5)))
         (instance face :init :vertices (list (float-vector 31.0 7.629395e-06 41.5) (float-vector 31.0 1.525879e-05 -41.5) (float-vector 26.8468 15.5 -41.5) (float-vector 26.8468 15.5 41.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink29 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-ankle-p :weight 1010.67 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-ankle-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 37.262 -24.104 -35.0) (float-vector 37.262 -24.104 -40.0) (float-vector 41.0 -25.3703 -40.0) (float-vector 41.0 -25.3703 -35.0)))
         (instance face :init :vertices (list (float-vector 37.262 -24.104 -35.0) (float-vector 18.2957 -24.0511 -35.0) (float-vector 18.2957 -24.0511 -40.0) (float-vector 37.262 -24.104 -40.0)))
         (instance face :init :vertices (list (float-vector 37.262 24.104 -35.0) (float-vector 37.262 24.104 -40.0) (float-vector 18.2957 24.0511 -40.0) (float-vector 18.2957 24.0511 -35.0)))
         (instance face :init :vertices (list (float-vector 37.262 24.104 -35.0) (float-vector 41.0 25.3703 -35.0) (float-vector 41.0 25.3703 -40.0) (float-vector 37.262 24.104 -40.0)))
         (instance face :init :vertices (list (float-vector 18.2957 -24.0511 -40.0) (float-vector 26.8468 -15.5 -40.0) (float-vector 31.0 7.629395e-06 -40.0) (float-vector 26.8468 15.5 -40.0) (float-vector 18.2957 24.0511 -40.0) (float-vector 37.262 24.104 -40.0) (float-vector 41.0 25.3703 -40.0) (float-vector 41.0 -25.3703 -40.0) (float-vector 37.262 -24.104 -40.0)))
         (instance face :init :vertices (list (float-vector 18.2957 24.0511 -35.0) (float-vector 15.5 26.8468 -35.0) (float-vector 0.0 31.0 -35.0) (float-vector -15.5 26.8468 -35.0) (float-vector -26.8468 15.5 -35.0) (float-vector -31.0 2.288818e-05 -35.0) (float-vector -26.8468 -15.5 -35.0) (float-vector -15.5 -26.8468 -35.0) (float-vector -3.814697e-05 -31.0 -35.0) (float-vector 15.5 -26.8468 -35.0) (float-vector 18.2957 -24.0511 -35.0) (float-vector 37.262 -24.104 -35.0) (float-vector 41.0 -25.3703 -35.0) (float-vector 41.0 25.3703 -35.0) (float-vector 37.262 24.104 -35.0)))
         (instance face :init :vertices (list (float-vector 31.0 7.629395e-06 -40.0) (float-vector 31.0 7.629395e-06 -45.0) (float-vector 26.8468 15.5 -45.0) (float-vector 26.8468 15.5 -40.0)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 -45.0) (float-vector 15.5 26.8468 -45.0) (float-vector 15.5 26.8468 -35.0) (float-vector 18.2957 24.0511 -35.0) (float-vector 18.2957 24.0511 -40.0) (float-vector 26.8468 15.5 -40.0)))
         (instance face :init :vertices (list (float-vector 15.5 26.8468 -45.0) (float-vector 0.0 31.0 -45.0) (float-vector 0.0 31.0 -35.0) (float-vector 15.5 26.8468 -35.0)))
         (instance face :init :vertices (list (float-vector 0.0 31.0 -45.0) (float-vector -15.5 26.8468 -45.0) (float-vector -15.5 26.8468 -35.0) (float-vector 0.0 31.0 -35.0)))
         (instance face :init :vertices (list (float-vector -15.5 26.8468 -45.0) (float-vector -26.8468 15.5 -45.0) (float-vector -26.8468 15.5 -35.0) (float-vector -15.5 26.8468 -35.0)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 -45.0) (float-vector -31.0 2.288818e-05 -45.0) (float-vector -31.0 2.288818e-05 -35.0) (float-vector -26.8468 15.5 -35.0)))
         (instance face :init :vertices (list (float-vector -31.0 2.288818e-05 -45.0) (float-vector -26.8468 -15.5 -45.0) (float-vector -26.8468 -15.5 -35.0) (float-vector -31.0 2.288818e-05 -35.0)))
         (instance face :init :vertices (list (float-vector -26.8468 -15.5 -45.0) (float-vector -15.5 -26.8468 -45.0) (float-vector -15.5 -26.8468 -35.0) (float-vector -26.8468 -15.5 -35.0)))
         (instance face :init :vertices (list (float-vector -15.5 -26.8468 -45.0) (float-vector -3.814697e-05 -31.0 -45.0) (float-vector -3.814697e-05 -31.0 -35.0) (float-vector -15.5 -26.8468 -35.0)))
         (instance face :init :vertices (list (float-vector -3.814697e-05 -31.0 -45.0) (float-vector 15.5 -26.8468 -45.0) (float-vector 15.5 -26.8468 -35.0) (float-vector -3.814697e-05 -31.0 -35.0)))
         (instance face :init :vertices (list (float-vector 15.5 -26.8468 -45.0) (float-vector 26.8468 -15.5 -45.0) (float-vector 26.8468 -15.5 -40.0) (float-vector 18.2957 -24.0511 -40.0) (float-vector 18.2957 -24.0511 -35.0) (float-vector 15.5 -26.8468 -35.0)))
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 -45.0) (float-vector 31.0 7.629395e-06 -45.0) (float-vector 31.0 7.629395e-06 -40.0) (float-vector 26.8468 -15.5 -40.0)))
         (instance face :init :vertices (list (float-vector 31.0 7.629395e-06 -45.0) (float-vector 26.8468 -15.5 -45.0) (float-vector 15.5 -26.8468 -45.0) (float-vector -3.814697e-05 -31.0 -45.0) (float-vector -15.5 -26.8468 -45.0) (float-vector -26.8468 -15.5 -45.0) (float-vector -31.0 2.288818e-05 -45.0) (float-vector -26.8468 15.5 -45.0) (float-vector -15.5 26.8468 -45.0) (float-vector 0.0 31.0 -45.0) (float-vector 15.5 26.8468 -45.0) (float-vector 26.8468 15.5 -45.0)))
         (instance face :init :vertices (list (float-vector 79.9999 67.5 -80.5) (float-vector 80.0 67.5 114.5) (float-vector 80.0 -67.5 114.5) (float-vector 79.9999 -67.5 -80.5)))
         (instance face :init :vertices (list (float-vector 79.9999 67.5 -80.5) (float-vector 41.0 67.5 -80.5) (float-vector 41.0 67.5 114.5) (float-vector 80.0 67.5 114.5)))
         (instance face :init :vertices (list (float-vector 41.0 67.5 -80.5) (float-vector 41.0 -67.5 -80.5) (float-vector 41.0 -67.5 114.5) (float-vector 41.0 67.5 114.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 41.0 25.3703 -35.0) (float-vector 41.0 -25.3703 -35.0) (float-vector 41.0 -25.3703 -40.0) (float-vector 41.0 25.3703 -40.0)))
         (instance hole :init :vertices (list (float-vector 41.0 -25.3703 53.0) (float-vector 41.0 -25.3703 48.0) (float-vector 41.0 25.3703 48.0) (float-vector 41.0 25.3703 53.0)))
))
         (instance face :init :vertices (list (float-vector 41.0 -67.5 114.5) (float-vector 80.0 -67.5 114.5) (float-vector 80.0 67.5 114.5) (float-vector 41.0 67.5 114.5)))
         (instance face :init :vertices (list (float-vector 41.0 -67.5 -80.5) (float-vector 79.9999 -67.5 -80.5) (float-vector 80.0 -67.5 114.5) (float-vector 41.0 -67.5 114.5)))
         (instance face :init :vertices (list (float-vector 79.9999 -67.5 -80.5) (float-vector 41.0 -67.5 -80.5) (float-vector 41.0 67.5 -80.5) (float-vector 79.9999 67.5 -80.5)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 47.5) (float-vector 26.8468 -15.5 47.5) (float-vector 15.5 -26.8468 47.5) (float-vector -3.051758e-05 -31.0 47.5) (float-vector -15.5 -26.8468 47.5) (float-vector -26.8468 -15.5 47.5) (float-vector -31.0 2.288818e-05 47.5) (float-vector -26.8468 15.5 47.5) (float-vector -15.5 26.8468 47.5) (float-vector 7.629395e-06 31.0 47.5) (float-vector 15.5 26.8468 47.5) (float-vector 26.8468 15.5 47.5)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 47.5) (float-vector 31.0 0.0 48.0) (float-vector 26.8468 -15.5 48.0) (float-vector 26.8468 -15.5 47.5)))
         (instance face :init :vertices (list (float-vector 31.0 7.629395e-06 89.5) (float-vector 26.8468 -15.5 89.5) (float-vector 26.8468 -15.5 53.0) (float-vector 31.0 0.0 53.0)))
         (instance face :init :vertices (list (float-vector 31.0 7.629395e-06 89.5) (float-vector 26.8468 15.5 89.5) (float-vector 15.5 26.8468 89.5) (float-vector 1.525879e-05 31.0 89.5) (float-vector -15.5 26.8468 89.5) (float-vector -26.8468 15.5 89.5) (float-vector -31.0 2.288818e-05 89.5) (float-vector -26.8468 -15.5 89.5) (float-vector -15.5 -26.8468 89.5) (float-vector -2.288818e-05 -31.0 89.5) (float-vector 15.5 -26.8468 89.5) (float-vector 26.8468 -15.5 89.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 48.0) (float-vector 18.2957 -24.0511 48.0) (float-vector 18.2957 -24.0511 53.0) (float-vector 26.8468 -15.5 53.0) (float-vector 26.8468 -15.5 89.5) (float-vector 15.5 -26.8468 89.5) (float-vector 15.5 -26.8468 47.5) (float-vector 26.8468 -15.5 47.5)))
         (instance face :init :vertices (list (float-vector -2.288818e-05 -31.0 89.5) (float-vector -3.051758e-05 -31.0 47.5) (float-vector 15.5 -26.8468 47.5) (float-vector 15.5 -26.8468 89.5)))
         (instance face :init :vertices (list (float-vector -15.5 -26.8468 89.5) (float-vector -15.5 -26.8468 47.5) (float-vector -3.051758e-05 -31.0 47.5) (float-vector -2.288818e-05 -31.0 89.5)))
         (instance face :init :vertices (list (float-vector -26.8468 -15.5 89.5) (float-vector -26.8468 -15.5 47.5) (float-vector -15.5 -26.8468 47.5) (float-vector -15.5 -26.8468 89.5)))
         (instance face :init :vertices (list (float-vector -31.0 2.288818e-05 89.5) (float-vector -31.0 2.288818e-05 47.5) (float-vector -26.8468 -15.5 47.5) (float-vector -26.8468 -15.5 89.5)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 89.5) (float-vector -26.8468 15.5 47.5) (float-vector -31.0 2.288818e-05 47.5) (float-vector -31.0 2.288818e-05 89.5)))
         (instance face :init :vertices (list (float-vector -15.5 26.8468 89.5) (float-vector -15.5 26.8468 47.5) (float-vector -26.8468 15.5 47.5) (float-vector -26.8468 15.5 89.5)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 31.0 89.5) (float-vector 7.629395e-06 31.0 47.5) (float-vector -15.5 26.8468 47.5) (float-vector -15.5 26.8468 89.5)))
         (instance face :init :vertices (list (float-vector 15.5 26.8468 89.5) (float-vector 15.5 26.8468 47.5) (float-vector 7.629395e-06 31.0 47.5) (float-vector 1.525879e-05 31.0 89.5)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 89.5) (float-vector 26.8468 15.5 53.0) (float-vector 18.2957 24.0511 53.0) (float-vector 18.2957 24.0511 48.0) (float-vector 26.8468 15.5 48.0) (float-vector 26.8468 15.5 47.5) (float-vector 15.5 26.8468 47.5) (float-vector 15.5 26.8468 89.5)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 48.0) (float-vector 31.0 0.0 48.0) (float-vector 31.0 0.0 47.5) (float-vector 26.8468 15.5 47.5)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 53.0) (float-vector 26.8468 15.5 53.0) (float-vector 26.8468 15.5 89.5) (float-vector 31.0 7.629395e-06 89.5)))
         (instance face :init :vertices (list (float-vector 41.0 25.3703 53.0) (float-vector 37.262 24.104 53.0) (float-vector 18.2957 24.0511 53.0) (float-vector 26.8468 15.5 53.0) (float-vector 31.0 0.0 53.0) (float-vector 26.8468 -15.5 53.0) (float-vector 18.2957 -24.0511 53.0) (float-vector 37.262 -24.104 53.0) (float-vector 41.0 -25.3703 53.0)))
         (instance face :init :vertices (list (float-vector 41.0 -25.3703 48.0) (float-vector 37.262 -24.104 48.0) (float-vector 18.2957 -24.0511 48.0) (float-vector 26.8468 -15.5 48.0) (float-vector 31.0 0.0 48.0) (float-vector 26.8468 15.5 48.0) (float-vector 18.2957 24.0511 48.0) (float-vector 37.262 24.104 48.0) (float-vector 41.0 25.3703 48.0)))
         (instance face :init :vertices (list (float-vector 37.262 24.104 48.0) (float-vector 37.262 24.104 53.0) (float-vector 41.0 25.3703 53.0) (float-vector 41.0 25.3703 48.0)))
         (instance face :init :vertices (list (float-vector 37.262 24.104 53.0) (float-vector 37.262 24.104 48.0) (float-vector 18.2957 24.0511 48.0) (float-vector 18.2957 24.0511 53.0)))
         (instance face :init :vertices (list (float-vector 37.262 -24.104 48.0) (float-vector 37.262 -24.104 53.0) (float-vector 18.2957 -24.0511 53.0) (float-vector 18.2957 -24.0511 48.0)))
         (instance face :init :vertices (list (float-vector 37.262 -24.104 53.0) (float-vector 37.262 -24.104 48.0) (float-vector 41.0 -25.3703 48.0) (float-vector 41.0 -25.3703 53.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 70.0 67.5 114.5) (float-vector 69.9999 67.5 -80.5) (float-vector 69.9999 -67.5 -80.5) (float-vector 70.0 -67.5 114.5)))
         (instance face :init :vertices (list (float-vector 79.9999 67.5 -80.5) (float-vector 80.0 67.5 114.5) (float-vector 80.0 -67.5 114.5) (float-vector 79.9999 -67.5 -80.5)))
         (instance face :init :vertices (list (float-vector 70.0 67.5 114.5) (float-vector 80.0 67.5 114.5) (float-vector 79.9999 67.5 -80.5) (float-vector 69.9999 67.5 -80.5)))
         (instance face :init :vertices (list (float-vector 70.0 -67.5 114.5) (float-vector 80.0 -67.5 114.5) (float-vector 80.0 67.5 114.5) (float-vector 70.0 67.5 114.5)))
         (instance face :init :vertices (list (float-vector 69.9999 -67.5 -80.5) (float-vector 79.9999 -67.5 -80.5) (float-vector 80.0 -67.5 114.5) (float-vector 70.0 -67.5 114.5)))
         (instance face :init :vertices (list (float-vector 69.9999 67.5 -80.5) (float-vector 79.9999 67.5 -80.5) (float-vector 79.9999 -67.5 -80.5) (float-vector 69.9999 -67.5 -80.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 -53.5 -57.2058) (float-vector 79.4 -49.0 -56.0) (float-vector 79.4 -44.5 -57.2058) (float-vector 79.4 -41.2057 -60.5) (float-vector 79.4 -40.0 -65.0) (float-vector 79.4 -41.2057 -69.5) (float-vector 79.4 -44.5 -72.7943) (float-vector 79.4 -49.0 -74.0) (float-vector 79.4 -53.5 -72.7943) (float-vector 79.4 -56.7942 -69.5) (float-vector 79.4 -58.0 -65.0) (float-vector 79.4 -56.7942 -60.5)))
         (instance face :init :vertices (list (float-vector 79.5 -49.0 -56.0) (float-vector 79.5 -53.5 -57.2058) (float-vector 79.5 -56.7942 -60.5) (float-vector 79.5 -58.0 -65.0) (float-vector 79.5 -56.7942 -69.5) (float-vector 79.5 -53.5 -72.7943) (float-vector 79.5 -49.0 -74.0) (float-vector 79.5 -44.5 -72.7943) (float-vector 79.5 -41.2057 -69.5) (float-vector 79.5 -40.0 -65.0) (float-vector 79.5 -41.2057 -60.5) (float-vector 79.5 -44.5 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 -57.2058) (float-vector 79.5 -53.5 -57.2058) (float-vector 79.5 -49.0 -56.0) (float-vector 79.4 -49.0 -56.0)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 -60.5) (float-vector 79.5 -56.7942 -60.5) (float-vector 79.5 -53.5 -57.2058) (float-vector 79.4 -53.5 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 -58.0 -65.0) (float-vector 79.5 -58.0 -65.0) (float-vector 79.5 -56.7942 -60.5) (float-vector 79.4 -56.7942 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 -69.5) (float-vector 79.5 -56.7942 -69.5) (float-vector 79.5 -58.0 -65.0) (float-vector 79.4 -58.0 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 -72.7943) (float-vector 79.5 -53.5 -72.7943) (float-vector 79.5 -56.7942 -69.5) (float-vector 79.4 -56.7942 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 -74.0) (float-vector 79.5 -49.0 -74.0) (float-vector 79.5 -53.5 -72.7943) (float-vector 79.4 -53.5 -72.7943)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 -72.7943) (float-vector 79.5 -44.5 -72.7943) (float-vector 79.5 -49.0 -74.0) (float-vector 79.4 -49.0 -74.0)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2057 -69.5) (float-vector 79.5 -41.2057 -69.5) (float-vector 79.5 -44.5 -72.7943) (float-vector 79.4 -44.5 -72.7943)))
         (instance face :init :vertices (list (float-vector 79.4 -40.0 -65.0) (float-vector 79.5 -40.0 -65.0) (float-vector 79.5 -41.2057 -69.5) (float-vector 79.4 -41.2057 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2057 -60.5) (float-vector 79.5 -41.2057 -60.5) (float-vector 79.5 -40.0 -65.0) (float-vector 79.4 -40.0 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 -57.2058) (float-vector 79.5 -44.5 -57.2058) (float-vector 79.5 -41.2057 -60.5) (float-vector 79.4 -41.2057 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 -56.0) (float-vector 79.5 -49.0 -56.0) (float-vector 79.5 -44.5 -57.2058) (float-vector 79.4 -44.5 -57.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 -20.8 -57.2058) (float-vector 79.4 -16.3 -56.0) (float-vector 79.4 -11.8 -57.2058) (float-vector 79.4 -8.50576 -60.5) (float-vector 79.4 -7.29999 -65.0) (float-vector 79.4 -8.50576 -69.5) (float-vector 79.4 -11.8 -72.7943) (float-vector 79.4 -16.3 -74.0) (float-vector 79.4 -20.8 -72.7943) (float-vector 79.4 -24.0942 -69.5) (float-vector 79.4 -25.3 -65.0) (float-vector 79.4 -24.0942 -60.5)))
         (instance face :init :vertices (list (float-vector 79.5 -16.3 -56.0) (float-vector 79.5 -20.8 -57.2058) (float-vector 79.5 -24.0942 -60.5) (float-vector 79.5 -25.3 -65.0) (float-vector 79.5 -24.0942 -69.5) (float-vector 79.5 -20.8 -72.7943) (float-vector 79.5 -16.3 -74.0) (float-vector 79.5 -11.8 -72.7942) (float-vector 79.5 -8.50576 -69.5) (float-vector 79.5 -7.29999 -65.0) (float-vector 79.5 -8.50576 -60.5) (float-vector 79.5 -11.8 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 -20.8 -57.2058) (float-vector 79.5 -20.8 -57.2058) (float-vector 79.5 -16.3 -56.0) (float-vector 79.4 -16.3 -56.0)))
         (instance face :init :vertices (list (float-vector 79.4 -24.0942 -60.5) (float-vector 79.5 -24.0942 -60.5) (float-vector 79.5 -20.8 -57.2058) (float-vector 79.4 -20.8 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 -25.3 -65.0) (float-vector 79.5 -25.3 -65.0) (float-vector 79.5 -24.0942 -60.5) (float-vector 79.4 -24.0942 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 -24.0942 -69.5) (float-vector 79.5 -24.0942 -69.5) (float-vector 79.5 -25.3 -65.0) (float-vector 79.4 -25.3 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 -20.8 -72.7943) (float-vector 79.5 -20.8 -72.7943) (float-vector 79.5 -24.0942 -69.5) (float-vector 79.4 -24.0942 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 -16.3 -74.0) (float-vector 79.5 -16.3 -74.0) (float-vector 79.5 -20.8 -72.7943) (float-vector 79.4 -20.8 -72.7943)))
         (instance face :init :vertices (list (float-vector 79.4 -11.8 -72.7943) (float-vector 79.5 -11.8 -72.7942) (float-vector 79.5 -16.3 -74.0) (float-vector 79.4 -16.3 -74.0)))
         (instance face :init :vertices (list (float-vector 79.4 -8.50576 -69.5) (float-vector 79.5 -8.50576 -69.5) (float-vector 79.5 -11.8 -72.7942) (float-vector 79.4 -11.8 -72.7943)))
         (instance face :init :vertices (list (float-vector 79.4 -7.29999 -65.0) (float-vector 79.5 -7.29999 -65.0) (float-vector 79.5 -8.50576 -69.5) (float-vector 79.4 -8.50576 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 -8.50576 -60.5) (float-vector 79.5 -8.50576 -60.5) (float-vector 79.5 -7.29999 -65.0) (float-vector 79.4 -7.29999 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 -11.8 -57.2058) (float-vector 79.5 -11.8 -57.2058) (float-vector 79.5 -8.50576 -60.5) (float-vector 79.4 -8.50576 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 -16.3 -56.0) (float-vector 79.5 -16.3 -56.0) (float-vector 79.5 -11.8 -57.2058) (float-vector 79.4 -11.8 -57.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 11.8 -57.2058) (float-vector 79.4 16.3 -56.0) (float-vector 79.4 20.8 -57.2058) (float-vector 79.4 24.0942 -60.5) (float-vector 79.4 25.3 -65.0) (float-vector 79.4 24.0942 -69.5) (float-vector 79.4 20.8 -72.7942) (float-vector 79.4 16.3 -74.0) (float-vector 79.4 11.8 -72.7943) (float-vector 79.4 8.50578 -69.5) (float-vector 79.4 7.3 -65.0) (float-vector 79.4 8.50577 -60.5)))
         (instance face :init :vertices (list (float-vector 79.5 16.3 -56.0) (float-vector 79.5 11.8 -57.2058) (float-vector 79.5 8.50577 -60.5) (float-vector 79.5 7.3 -65.0) (float-vector 79.5 8.50578 -69.5) (float-vector 79.5 11.8 -72.7943) (float-vector 79.5 16.3 -74.0) (float-vector 79.5 20.8 -72.7942) (float-vector 79.5 24.0942 -69.5) (float-vector 79.5 25.3 -65.0) (float-vector 79.5 24.0942 -60.5) (float-vector 79.5 20.8 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 11.8 -57.2058) (float-vector 79.5 11.8 -57.2058) (float-vector 79.5 16.3 -56.0) (float-vector 79.4 16.3 -56.0)))
         (instance face :init :vertices (list (float-vector 79.4 8.50577 -60.5) (float-vector 79.5 8.50577 -60.5) (float-vector 79.5 11.8 -57.2058) (float-vector 79.4 11.8 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 7.3 -65.0) (float-vector 79.5 7.3 -65.0) (float-vector 79.5 8.50577 -60.5) (float-vector 79.4 8.50577 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 8.50578 -69.5) (float-vector 79.5 8.50578 -69.5) (float-vector 79.5 7.3 -65.0) (float-vector 79.4 7.3 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 11.8 -72.7943) (float-vector 79.5 11.8 -72.7943) (float-vector 79.5 8.50578 -69.5) (float-vector 79.4 8.50578 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 16.3 -74.0) (float-vector 79.5 16.3 -74.0) (float-vector 79.5 11.8 -72.7943) (float-vector 79.4 11.8 -72.7943)))
         (instance face :init :vertices (list (float-vector 79.4 20.8 -72.7942) (float-vector 79.5 20.8 -72.7942) (float-vector 79.5 16.3 -74.0) (float-vector 79.4 16.3 -74.0)))
         (instance face :init :vertices (list (float-vector 79.4 24.0942 -69.5) (float-vector 79.5 24.0942 -69.5) (float-vector 79.5 20.8 -72.7942) (float-vector 79.4 20.8 -72.7942)))
         (instance face :init :vertices (list (float-vector 79.4 25.3 -65.0) (float-vector 79.5 25.3 -65.0) (float-vector 79.5 24.0942 -69.5) (float-vector 79.4 24.0942 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 24.0942 -60.5) (float-vector 79.5 24.0942 -60.5) (float-vector 79.5 25.3 -65.0) (float-vector 79.4 25.3 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 20.8 -57.2058) (float-vector 79.5 20.8 -57.2058) (float-vector 79.5 24.0942 -60.5) (float-vector 79.4 24.0942 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 16.3 -56.0) (float-vector 79.5 16.3 -56.0) (float-vector 79.5 20.8 -57.2058) (float-vector 79.4 20.8 -57.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 44.5 -57.2058) (float-vector 79.4 49.0 -56.0) (float-vector 79.4 53.5 -57.2058) (float-vector 79.4 56.7942 -60.5) (float-vector 79.4 58.0 -65.0) (float-vector 79.4 56.7942 -69.5) (float-vector 79.4 53.5 -72.7942) (float-vector 79.4 49.0 -74.0) (float-vector 79.4 44.5 -72.7943) (float-vector 79.4 41.2058 -69.5) (float-vector 79.4 40.0 -65.0) (float-vector 79.4 41.2058 -60.5)))
         (instance face :init :vertices (list (float-vector 79.5 49.0 -56.0) (float-vector 79.5 44.5 -57.2058) (float-vector 79.5 41.2058 -60.5) (float-vector 79.5 40.0 -65.0) (float-vector 79.5 41.2058 -69.5) (float-vector 79.5 44.5 -72.7943) (float-vector 79.5 49.0 -74.0) (float-vector 79.5 53.5 -72.7942) (float-vector 79.5 56.7942 -69.5) (float-vector 79.5 58.0 -65.0) (float-vector 79.5 56.7942 -60.5) (float-vector 79.5 53.5 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 -57.2058) (float-vector 79.5 44.5 -57.2058) (float-vector 79.5 49.0 -56.0) (float-vector 79.4 49.0 -56.0)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 -60.5) (float-vector 79.5 41.2058 -60.5) (float-vector 79.5 44.5 -57.2058) (float-vector 79.4 44.5 -57.2058)))
         (instance face :init :vertices (list (float-vector 79.4 40.0 -65.0) (float-vector 79.5 40.0 -65.0) (float-vector 79.5 41.2058 -60.5) (float-vector 79.4 41.2058 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 -69.5) (float-vector 79.5 41.2058 -69.5) (float-vector 79.5 40.0 -65.0) (float-vector 79.4 40.0 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 -72.7943) (float-vector 79.5 44.5 -72.7943) (float-vector 79.5 41.2058 -69.5) (float-vector 79.4 41.2058 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 -74.0) (float-vector 79.5 49.0 -74.0) (float-vector 79.5 44.5 -72.7943) (float-vector 79.4 44.5 -72.7943)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 -72.7942) (float-vector 79.5 53.5 -72.7942) (float-vector 79.5 49.0 -74.0) (float-vector 79.4 49.0 -74.0)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 -69.5) (float-vector 79.5 56.7942 -69.5) (float-vector 79.5 53.5 -72.7942) (float-vector 79.4 53.5 -72.7942)))
         (instance face :init :vertices (list (float-vector 79.4 58.0 -65.0) (float-vector 79.5 58.0 -65.0) (float-vector 79.5 56.7942 -69.5) (float-vector 79.4 56.7942 -69.5)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 -60.5) (float-vector 79.5 56.7942 -60.5) (float-vector 79.5 58.0 -65.0) (float-vector 79.4 58.0 -65.0)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 -57.2058) (float-vector 79.5 53.5 -57.2058) (float-vector 79.5 56.7942 -60.5) (float-vector 79.4 56.7942 -60.5)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 -56.0) (float-vector 79.5 49.0 -56.0) (float-vector 79.5 53.5 -57.2058) (float-vector 79.4 53.5 -57.2058)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 -53.5 4.49419) (float-vector 79.4 -49.0 5.69997) (float-vector 79.4 -44.5 4.4942) (float-vector 79.4 -41.2057 1.19997) (float-vector 79.4 -40.0 -3.30003) (float-vector 79.4 -41.2057 -7.80002) (float-vector 79.4 -44.5 -11.0943) (float-vector 79.4 -49.0 -12.3) (float-vector 79.4 -53.5 -11.0943) (float-vector 79.4 -56.7942 -7.80004) (float-vector 79.4 -58.0 -3.30004) (float-vector 79.4 -56.7942 1.19996)))
         (instance face :init :vertices (list (float-vector 79.5 -49.0 5.69997) (float-vector 79.5 -53.5 4.4942) (float-vector 79.5 -56.7942 1.19997) (float-vector 79.5 -58.0 -3.30003) (float-vector 79.5 -56.7942 -7.80004) (float-vector 79.5 -53.5 -11.0943) (float-vector 79.5 -49.0 -12.3) (float-vector 79.5 -44.5 -11.0943) (float-vector 79.5 -41.2057 -7.80003) (float-vector 79.5 -40.0 -3.30002) (float-vector 79.5 -41.2057 1.19997) (float-vector 79.5 -44.5 4.4942)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 4.49419) (float-vector 79.5 -53.5 4.4942) (float-vector 79.5 -49.0 5.69997) (float-vector 79.4 -49.0 5.69997)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 1.19996) (float-vector 79.5 -56.7942 1.19997) (float-vector 79.5 -53.5 4.4942) (float-vector 79.4 -53.5 4.49419)))
         (instance face :init :vertices (list (float-vector 79.4 -58.0 -3.30004) (float-vector 79.5 -58.0 -3.30003) (float-vector 79.5 -56.7942 1.19997) (float-vector 79.4 -56.7942 1.19996)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 -7.80004) (float-vector 79.5 -56.7942 -7.80004) (float-vector 79.5 -58.0 -3.30003) (float-vector 79.4 -58.0 -3.30004)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 -11.0943) (float-vector 79.5 -53.5 -11.0943) (float-vector 79.5 -56.7942 -7.80004) (float-vector 79.4 -56.7942 -7.80004)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 -12.3) (float-vector 79.5 -49.0 -12.3) (float-vector 79.5 -53.5 -11.0943) (float-vector 79.4 -53.5 -11.0943)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 -11.0943) (float-vector 79.5 -44.5 -11.0943) (float-vector 79.5 -49.0 -12.3) (float-vector 79.4 -49.0 -12.3)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2057 -7.80002) (float-vector 79.5 -41.2057 -7.80003) (float-vector 79.5 -44.5 -11.0943) (float-vector 79.4 -44.5 -11.0943)))
         (instance face :init :vertices (list (float-vector 79.4 -40.0 -3.30003) (float-vector 79.5 -40.0 -3.30002) (float-vector 79.5 -41.2057 -7.80003) (float-vector 79.4 -41.2057 -7.80002)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2057 1.19997) (float-vector 79.5 -41.2057 1.19997) (float-vector 79.5 -40.0 -3.30002) (float-vector 79.4 -40.0 -3.30003)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 4.4942) (float-vector 79.5 -44.5 4.4942) (float-vector 79.5 -41.2057 1.19997) (float-vector 79.4 -41.2057 1.19997)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 5.69997) (float-vector 79.5 -49.0 5.69997) (float-vector 79.5 -44.5 4.4942) (float-vector 79.4 -44.5 4.4942)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 44.5 4.49419) (float-vector 79.4 49.0 5.69997) (float-vector 79.4 53.5 4.4942) (float-vector 79.4 56.7942 1.19997) (float-vector 79.4 58.0 -3.30003) (float-vector 79.4 56.7942 -7.80002) (float-vector 79.4 53.5 -11.0942) (float-vector 79.4 49.0 -12.3) (float-vector 79.4 44.5 -11.0943) (float-vector 79.4 41.2058 -7.80003) (float-vector 79.4 40.0 -3.30004) (float-vector 79.4 41.2058 1.19996)))
         (instance face :init :vertices (list (float-vector 79.5 49.0 5.69997) (float-vector 79.5 44.5 4.4942) (float-vector 79.5 41.2058 1.19997) (float-vector 79.5 40.0 -3.30003) (float-vector 79.5 41.2058 -7.80003) (float-vector 79.5 44.5 -11.0943) (float-vector 79.5 49.0 -12.3) (float-vector 79.5 53.5 -11.0942) (float-vector 79.5 56.7942 -7.80002) (float-vector 79.5 58.0 -3.30002) (float-vector 79.5 56.7942 1.19997) (float-vector 79.5 53.5 4.4942)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 4.49419) (float-vector 79.5 44.5 4.4942) (float-vector 79.5 49.0 5.69997) (float-vector 79.4 49.0 5.69997)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 1.19996) (float-vector 79.5 41.2058 1.19997) (float-vector 79.5 44.5 4.4942) (float-vector 79.4 44.5 4.49419)))
         (instance face :init :vertices (list (float-vector 79.4 40.0 -3.30004) (float-vector 79.5 40.0 -3.30003) (float-vector 79.5 41.2058 1.19997) (float-vector 79.4 41.2058 1.19996)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 -7.80003) (float-vector 79.5 41.2058 -7.80003) (float-vector 79.5 40.0 -3.30003) (float-vector 79.4 40.0 -3.30004)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 -11.0943) (float-vector 79.5 44.5 -11.0943) (float-vector 79.5 41.2058 -7.80003) (float-vector 79.4 41.2058 -7.80003)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 -12.3) (float-vector 79.5 49.0 -12.3) (float-vector 79.5 44.5 -11.0943) (float-vector 79.4 44.5 -11.0943)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 -11.0942) (float-vector 79.5 53.5 -11.0942) (float-vector 79.5 49.0 -12.3) (float-vector 79.4 49.0 -12.3)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 -7.80002) (float-vector 79.5 56.7942 -7.80002) (float-vector 79.5 53.5 -11.0942) (float-vector 79.4 53.5 -11.0942)))
         (instance face :init :vertices (list (float-vector 79.4 58.0 -3.30003) (float-vector 79.5 58.0 -3.30002) (float-vector 79.5 56.7942 -7.80002) (float-vector 79.4 56.7942 -7.80002)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 1.19997) (float-vector 79.5 56.7942 1.19997) (float-vector 79.5 58.0 -3.30002) (float-vector 79.4 58.0 -3.30003)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 4.4942) (float-vector 79.5 53.5 4.4942) (float-vector 79.5 56.7942 1.19997) (float-vector 79.4 56.7942 1.19997)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 5.69997) (float-vector 79.5 49.0 5.69997) (float-vector 79.5 53.5 4.4942) (float-vector 79.4 53.5 4.4942)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 -53.5 66.0942) (float-vector 79.4 -49.0 67.3) (float-vector 79.4 -44.5 66.0942) (float-vector 79.4 -41.2057 62.8) (float-vector 79.4 -40.0 58.3) (float-vector 79.4 -41.2057 53.8) (float-vector 79.4 -44.5 50.5057) (float-vector 79.4 -49.0 49.3) (float-vector 79.4 -53.5 50.5057) (float-vector 79.4 -56.7942 53.7999) (float-vector 79.4 -58.0 58.2999) (float-vector 79.4 -56.7942 62.7999)))
         (instance face :init :vertices (list (float-vector 79.5 -49.0 67.3) (float-vector 79.5 -53.5 66.0942) (float-vector 79.5 -56.7942 62.7999) (float-vector 79.5 -58.0 58.2999) (float-vector 79.5 -56.7942 53.7999) (float-vector 79.5 -53.5 50.5057) (float-vector 79.5 -49.0 49.3) (float-vector 79.5 -44.5 50.5057) (float-vector 79.5 -41.2057 53.8) (float-vector 79.5 -40.0 58.3) (float-vector 79.5 -41.2057 62.8) (float-vector 79.5 -44.5 66.0942)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 66.0942) (float-vector 79.5 -53.5 66.0942) (float-vector 79.5 -49.0 67.3) (float-vector 79.4 -49.0 67.3)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 62.7999) (float-vector 79.5 -56.7942 62.7999) (float-vector 79.5 -53.5 66.0942) (float-vector 79.4 -53.5 66.0942)))
         (instance face :init :vertices (list (float-vector 79.4 -58.0 58.2999) (float-vector 79.5 -58.0 58.2999) (float-vector 79.5 -56.7942 62.7999) (float-vector 79.4 -56.7942 62.7999)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 53.7999) (float-vector 79.5 -56.7942 53.7999) (float-vector 79.5 -58.0 58.2999) (float-vector 79.4 -58.0 58.2999)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 50.5057) (float-vector 79.5 -53.5 50.5057) (float-vector 79.5 -56.7942 53.7999) (float-vector 79.4 -56.7942 53.7999)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 49.3) (float-vector 79.5 -49.0 49.3) (float-vector 79.5 -53.5 50.5057) (float-vector 79.4 -53.5 50.5057)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 50.5057) (float-vector 79.5 -44.5 50.5057) (float-vector 79.5 -49.0 49.3) (float-vector 79.4 -49.0 49.3)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2057 53.8) (float-vector 79.5 -41.2057 53.8) (float-vector 79.5 -44.5 50.5057) (float-vector 79.4 -44.5 50.5057)))
         (instance face :init :vertices (list (float-vector 79.4 -40.0 58.3) (float-vector 79.5 -40.0 58.3) (float-vector 79.5 -41.2057 53.8) (float-vector 79.4 -41.2057 53.8)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2057 62.8) (float-vector 79.5 -41.2057 62.8) (float-vector 79.5 -40.0 58.3) (float-vector 79.4 -40.0 58.3)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 66.0942) (float-vector 79.5 -44.5 66.0942) (float-vector 79.5 -41.2057 62.8) (float-vector 79.4 -41.2057 62.8)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 67.3) (float-vector 79.5 -49.0 67.3) (float-vector 79.5 -44.5 66.0942) (float-vector 79.4 -44.5 66.0942)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4 44.5 66.0942) (float-vector 79.4 49.0 67.3) (float-vector 79.4 53.5 66.0942) (float-vector 79.4 56.7942 62.8) (float-vector 79.4 58.0 58.3) (float-vector 79.4 56.7942 53.8) (float-vector 79.4 53.5 50.5057) (float-vector 79.4 49.0 49.3) (float-vector 79.4 44.5 50.5057) (float-vector 79.4 41.2058 53.7999) (float-vector 79.4 40.0 58.2999) (float-vector 79.4 41.2058 62.7999)))
         (instance face :init :vertices (list (float-vector 79.5 49.0 67.3) (float-vector 79.5 44.5 66.0942) (float-vector 79.5 41.2058 62.7999) (float-vector 79.5 40.0 58.2999) (float-vector 79.5 41.2058 53.7999) (float-vector 79.5 44.5 50.5057) (float-vector 79.5 49.0 49.3) (float-vector 79.5 53.5 50.5057) (float-vector 79.5 56.7942 53.8) (float-vector 79.5 58.0 58.3) (float-vector 79.5 56.7942 62.8) (float-vector 79.5 53.5 66.0942)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 66.0942) (float-vector 79.5 44.5 66.0942) (float-vector 79.5 49.0 67.3) (float-vector 79.4 49.0 67.3)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 62.7999) (float-vector 79.5 41.2058 62.7999) (float-vector 79.5 44.5 66.0942) (float-vector 79.4 44.5 66.0942)))
         (instance face :init :vertices (list (float-vector 79.4 40.0 58.2999) (float-vector 79.5 40.0 58.2999) (float-vector 79.5 41.2058 62.7999) (float-vector 79.4 41.2058 62.7999)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 53.7999) (float-vector 79.5 41.2058 53.7999) (float-vector 79.5 40.0 58.2999) (float-vector 79.4 40.0 58.2999)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 50.5057) (float-vector 79.5 44.5 50.5057) (float-vector 79.5 41.2058 53.7999) (float-vector 79.4 41.2058 53.7999)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 49.3) (float-vector 79.5 49.0 49.3) (float-vector 79.5 44.5 50.5057) (float-vector 79.4 44.5 50.5057)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 50.5057) (float-vector 79.5 53.5 50.5057) (float-vector 79.5 49.0 49.3) (float-vector 79.4 49.0 49.3)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 53.8) (float-vector 79.5 56.7942 53.8) (float-vector 79.5 53.5 50.5057) (float-vector 79.4 53.5 50.5057)))
         (instance face :init :vertices (list (float-vector 79.4 58.0 58.3) (float-vector 79.5 58.0 58.3) (float-vector 79.5 56.7942 53.8) (float-vector 79.4 56.7942 53.8)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 62.8) (float-vector 79.5 56.7942 62.8) (float-vector 79.5 58.0 58.3) (float-vector 79.4 58.0 58.3)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 66.0942) (float-vector 79.5 53.5 66.0942) (float-vector 79.5 56.7942 62.8) (float-vector 79.4 56.7942 62.8)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 67.3) (float-vector 79.5 49.0 67.3) (float-vector 79.5 53.5 66.0942) (float-vector 79.4 53.5 66.0942)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4001 -53.5 127.794) (float-vector 79.4001 -49.0 129.0) (float-vector 79.4001 -44.5 127.794) (float-vector 79.4001 -41.2057 124.5) (float-vector 79.4 -40.0 120.0) (float-vector 79.4 -41.2057 115.5) (float-vector 79.4 -44.5 112.206) (float-vector 79.4 -49.0 111.0) (float-vector 79.4 -53.5 112.206) (float-vector 79.4 -56.7942 115.5) (float-vector 79.4 -58.0 120.0) (float-vector 79.4001 -56.7942 124.5)))
         (instance face :init :vertices (list (float-vector 79.5 -49.0 129.0) (float-vector 79.5 -53.5 127.794) (float-vector 79.5 -56.7942 124.5) (float-vector 79.5 -58.0 120.0) (float-vector 79.5 -56.7942 115.5) (float-vector 79.5 -53.5 112.206) (float-vector 79.5 -49.0 111.0) (float-vector 79.5 -44.5 112.206) (float-vector 79.5 -41.2057 115.5) (float-vector 79.5 -40.0 120.0) (float-vector 79.5 -41.2057 124.5) (float-vector 79.5 -44.5 127.794)))
         (instance face :init :vertices (list (float-vector 79.4001 -53.5 127.794) (float-vector 79.5 -53.5 127.794) (float-vector 79.5 -49.0 129.0) (float-vector 79.4001 -49.0 129.0)))
         (instance face :init :vertices (list (float-vector 79.4001 -56.7942 124.5) (float-vector 79.5 -56.7942 124.5) (float-vector 79.5 -53.5 127.794) (float-vector 79.4001 -53.5 127.794)))
         (instance face :init :vertices (list (float-vector 79.4 -58.0 120.0) (float-vector 79.5 -58.0 120.0) (float-vector 79.5 -56.7942 124.5) (float-vector 79.4001 -56.7942 124.5)))
         (instance face :init :vertices (list (float-vector 79.4 -56.7942 115.5) (float-vector 79.5 -56.7942 115.5) (float-vector 79.5 -58.0 120.0) (float-vector 79.4 -58.0 120.0)))
         (instance face :init :vertices (list (float-vector 79.4 -53.5 112.206) (float-vector 79.5 -53.5 112.206) (float-vector 79.5 -56.7942 115.5) (float-vector 79.4 -56.7942 115.5)))
         (instance face :init :vertices (list (float-vector 79.4 -49.0 111.0) (float-vector 79.5 -49.0 111.0) (float-vector 79.5 -53.5 112.206) (float-vector 79.4 -53.5 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 -44.5 112.206) (float-vector 79.5 -44.5 112.206) (float-vector 79.5 -49.0 111.0) (float-vector 79.4 -49.0 111.0)))
         (instance face :init :vertices (list (float-vector 79.4 -41.2057 115.5) (float-vector 79.5 -41.2057 115.5) (float-vector 79.5 -44.5 112.206) (float-vector 79.4 -44.5 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 -40.0 120.0) (float-vector 79.5 -40.0 120.0) (float-vector 79.5 -41.2057 115.5) (float-vector 79.4 -41.2057 115.5)))
         (instance face :init :vertices (list (float-vector 79.4001 -41.2057 124.5) (float-vector 79.5 -41.2057 124.5) (float-vector 79.5 -40.0 120.0) (float-vector 79.4 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector 79.4001 -44.5 127.794) (float-vector 79.5 -44.5 127.794) (float-vector 79.5 -41.2057 124.5) (float-vector 79.4001 -41.2057 124.5)))
         (instance face :init :vertices (list (float-vector 79.4001 -49.0 129.0) (float-vector 79.5 -49.0 129.0) (float-vector 79.5 -44.5 127.794) (float-vector 79.4001 -44.5 127.794)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4001 -20.8 127.794) (float-vector 79.4001 -16.3 129.0) (float-vector 79.4001 -11.8 127.794) (float-vector 79.4001 -8.50577 124.5) (float-vector 79.4 -7.3 120.0) (float-vector 79.4 -8.50577 115.5) (float-vector 79.4 -11.8 112.206) (float-vector 79.4 -16.3 111.0) (float-vector 79.4 -20.8 112.206) (float-vector 79.4 -24.0942 115.5) (float-vector 79.4 -25.3 120.0) (float-vector 79.4001 -24.0942 124.5)))
         (instance face :init :vertices (list (float-vector 79.5 -16.3 129.0) (float-vector 79.5 -20.8 127.794) (float-vector 79.5 -24.0942 124.5) (float-vector 79.5 -25.3 120.0) (float-vector 79.5 -24.0942 115.5) (float-vector 79.5 -20.8 112.206) (float-vector 79.5 -16.3 111.0) (float-vector 79.5 -11.8 112.206) (float-vector 79.5 -8.50577 115.5) (float-vector 79.5 -7.3 120.0) (float-vector 79.5 -8.50577 124.5) (float-vector 79.5 -11.8 127.794)))
         (instance face :init :vertices (list (float-vector 79.4001 -20.8 127.794) (float-vector 79.5 -20.8 127.794) (float-vector 79.5 -16.3 129.0) (float-vector 79.4001 -16.3 129.0)))
         (instance face :init :vertices (list (float-vector 79.4001 -24.0942 124.5) (float-vector 79.5 -24.0942 124.5) (float-vector 79.5 -20.8 127.794) (float-vector 79.4001 -20.8 127.794)))
         (instance face :init :vertices (list (float-vector 79.4 -25.3 120.0) (float-vector 79.5 -25.3 120.0) (float-vector 79.5 -24.0942 124.5) (float-vector 79.4001 -24.0942 124.5)))
         (instance face :init :vertices (list (float-vector 79.4 -24.0942 115.5) (float-vector 79.5 -24.0942 115.5) (float-vector 79.5 -25.3 120.0) (float-vector 79.4 -25.3 120.0)))
         (instance face :init :vertices (list (float-vector 79.4 -20.8 112.206) (float-vector 79.5 -20.8 112.206) (float-vector 79.5 -24.0942 115.5) (float-vector 79.4 -24.0942 115.5)))
         (instance face :init :vertices (list (float-vector 79.4 -16.3 111.0) (float-vector 79.5 -16.3 111.0) (float-vector 79.5 -20.8 112.206) (float-vector 79.4 -20.8 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 -11.8 112.206) (float-vector 79.5 -11.8 112.206) (float-vector 79.5 -16.3 111.0) (float-vector 79.4 -16.3 111.0)))
         (instance face :init :vertices (list (float-vector 79.4 -8.50577 115.5) (float-vector 79.5 -8.50577 115.5) (float-vector 79.5 -11.8 112.206) (float-vector 79.4 -11.8 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 -7.3 120.0) (float-vector 79.5 -7.3 120.0) (float-vector 79.5 -8.50577 115.5) (float-vector 79.4 -8.50577 115.5)))
         (instance face :init :vertices (list (float-vector 79.4001 -8.50577 124.5) (float-vector 79.5 -8.50577 124.5) (float-vector 79.5 -7.3 120.0) (float-vector 79.4 -7.3 120.0)))
         (instance face :init :vertices (list (float-vector 79.4001 -11.8 127.794) (float-vector 79.5 -11.8 127.794) (float-vector 79.5 -8.50577 124.5) (float-vector 79.4001 -8.50577 124.5)))
         (instance face :init :vertices (list (float-vector 79.4001 -16.3 129.0) (float-vector 79.5 -16.3 129.0) (float-vector 79.5 -11.8 127.794) (float-vector 79.4001 -11.8 127.794)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4001 11.8 127.794) (float-vector 79.4001 16.3 129.0) (float-vector 79.4001 20.8 127.794) (float-vector 79.4001 24.0942 124.5) (float-vector 79.4 25.3 120.0) (float-vector 79.4 24.0942 115.5) (float-vector 79.4 20.8 112.206) (float-vector 79.4 16.3 111.0) (float-vector 79.4 11.8 112.206) (float-vector 79.4 8.50577 115.5) (float-vector 79.4 7.3 120.0) (float-vector 79.4001 8.50576 124.5)))
         (instance face :init :vertices (list (float-vector 79.5 16.3 129.0) (float-vector 79.5 11.8 127.794) (float-vector 79.5 8.50576 124.5) (float-vector 79.5 7.3 120.0) (float-vector 79.5 8.50577 115.5) (float-vector 79.5 11.8 112.206) (float-vector 79.5 16.3 111.0) (float-vector 79.5 20.8 112.206) (float-vector 79.5 24.0942 115.5) (float-vector 79.5 25.3 120.0) (float-vector 79.5 24.0942 124.5) (float-vector 79.5 20.8 127.794)))
         (instance face :init :vertices (list (float-vector 79.4001 11.8 127.794) (float-vector 79.5 11.8 127.794) (float-vector 79.5 16.3 129.0) (float-vector 79.4001 16.3 129.0)))
         (instance face :init :vertices (list (float-vector 79.4001 8.50576 124.5) (float-vector 79.5 8.50576 124.5) (float-vector 79.5 11.8 127.794) (float-vector 79.4001 11.8 127.794)))
         (instance face :init :vertices (list (float-vector 79.4 7.3 120.0) (float-vector 79.5 7.3 120.0) (float-vector 79.5 8.50576 124.5) (float-vector 79.4001 8.50576 124.5)))
         (instance face :init :vertices (list (float-vector 79.4 8.50577 115.5) (float-vector 79.5 8.50577 115.5) (float-vector 79.5 7.3 120.0) (float-vector 79.4 7.3 120.0)))
         (instance face :init :vertices (list (float-vector 79.4 11.8 112.206) (float-vector 79.5 11.8 112.206) (float-vector 79.5 8.50577 115.5) (float-vector 79.4 8.50577 115.5)))
         (instance face :init :vertices (list (float-vector 79.4 16.3 111.0) (float-vector 79.5 16.3 111.0) (float-vector 79.5 11.8 112.206) (float-vector 79.4 11.8 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 20.8 112.206) (float-vector 79.5 20.8 112.206) (float-vector 79.5 16.3 111.0) (float-vector 79.4 16.3 111.0)))
         (instance face :init :vertices (list (float-vector 79.4 24.0942 115.5) (float-vector 79.5 24.0942 115.5) (float-vector 79.5 20.8 112.206) (float-vector 79.4 20.8 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 25.3 120.0) (float-vector 79.5 25.3 120.0) (float-vector 79.5 24.0942 115.5) (float-vector 79.4 24.0942 115.5)))
         (instance face :init :vertices (list (float-vector 79.4001 24.0942 124.5) (float-vector 79.5 24.0942 124.5) (float-vector 79.5 25.3 120.0) (float-vector 79.4 25.3 120.0)))
         (instance face :init :vertices (list (float-vector 79.4001 20.8 127.794) (float-vector 79.5 20.8 127.794) (float-vector 79.5 24.0942 124.5) (float-vector 79.4001 24.0942 124.5)))
         (instance face :init :vertices (list (float-vector 79.4001 16.3 129.0) (float-vector 79.5 16.3 129.0) (float-vector 79.5 20.8 127.794) (float-vector 79.4001 20.8 127.794)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 79.4001 44.5 127.794) (float-vector 79.4001 49.0 129.0) (float-vector 79.4001 53.5 127.794) (float-vector 79.4001 56.7942 124.5) (float-vector 79.4 58.0 120.0) (float-vector 79.4 56.7942 115.5) (float-vector 79.4 53.5 112.206) (float-vector 79.4 49.0 111.0) (float-vector 79.4 44.5 112.206) (float-vector 79.4 41.2058 115.5) (float-vector 79.4 40.0 120.0) (float-vector 79.4001 41.2058 124.5)))
         (instance face :init :vertices (list (float-vector 79.5 49.0 129.0) (float-vector 79.5 44.5 127.794) (float-vector 79.5 41.2058 124.5) (float-vector 79.5 40.0 120.0) (float-vector 79.5 41.2058 115.5) (float-vector 79.5 44.5 112.206) (float-vector 79.5 49.0 111.0) (float-vector 79.5 53.5 112.206) (float-vector 79.5 56.7942 115.5) (float-vector 79.5 58.0 120.0) (float-vector 79.5 56.7942 124.5) (float-vector 79.5 53.5 127.794)))
         (instance face :init :vertices (list (float-vector 79.4001 44.5 127.794) (float-vector 79.5 44.5 127.794) (float-vector 79.5 49.0 129.0) (float-vector 79.4001 49.0 129.0)))
         (instance face :init :vertices (list (float-vector 79.4001 41.2058 124.5) (float-vector 79.5 41.2058 124.5) (float-vector 79.5 44.5 127.794) (float-vector 79.4001 44.5 127.794)))
         (instance face :init :vertices (list (float-vector 79.4 40.0 120.0) (float-vector 79.5 40.0 120.0) (float-vector 79.5 41.2058 124.5) (float-vector 79.4001 41.2058 124.5)))
         (instance face :init :vertices (list (float-vector 79.4 41.2058 115.5) (float-vector 79.5 41.2058 115.5) (float-vector 79.5 40.0 120.0) (float-vector 79.4 40.0 120.0)))
         (instance face :init :vertices (list (float-vector 79.4 44.5 112.206) (float-vector 79.5 44.5 112.206) (float-vector 79.5 41.2058 115.5) (float-vector 79.4 41.2058 115.5)))
         (instance face :init :vertices (list (float-vector 79.4 49.0 111.0) (float-vector 79.5 49.0 111.0) (float-vector 79.5 44.5 112.206) (float-vector 79.4 44.5 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 53.5 112.206) (float-vector 79.5 53.5 112.206) (float-vector 79.5 49.0 111.0) (float-vector 79.4 49.0 111.0)))
         (instance face :init :vertices (list (float-vector 79.4 56.7942 115.5) (float-vector 79.5 56.7942 115.5) (float-vector 79.5 53.5 112.206) (float-vector 79.4 53.5 112.206)))
         (instance face :init :vertices (list (float-vector 79.4 58.0 120.0) (float-vector 79.5 58.0 120.0) (float-vector 79.5 56.7942 115.5) (float-vector 79.4 56.7942 115.5)))
         (instance face :init :vertices (list (float-vector 79.4001 56.7942 124.5) (float-vector 79.5 56.7942 124.5) (float-vector 79.5 58.0 120.0) (float-vector 79.4 58.0 120.0)))
         (instance face :init :vertices (list (float-vector 79.4001 53.5 127.794) (float-vector 79.5 53.5 127.794) (float-vector 79.5 56.7942 124.5) (float-vector 79.4001 56.7942 124.5)))
         (instance face :init :vertices (list (float-vector 79.4001 49.0 129.0) (float-vector 79.5 49.0 129.0) (float-vector 79.5 53.5 127.794) (float-vector 79.4001 53.5 127.794)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (send (elt bc 1) :set-color :dimgray)
     (send (elt bc 2) :set-color :gray40)
     (send (elt bc 3) :set-color :gray40)
     (send (elt bc 4) :set-color :gray40)
     (send (elt bc 5) :set-color :gray40)
     (send (elt bc 6) :set-color :gray40)
     (send (elt bc 7) :set-color :gray40)
     (send (elt bc 8) :set-color :gray40)
     (send (elt bc 9) :set-color :gray40)
     (send (elt bc 10) :set-color :gray40)
     (send (elt bc 11) :set-color :gray40)
     (send (elt bc 12) :set-color :gray40)
     (send (elt bc 13) :set-color :gray40)
     (setq blink30 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-ankle-r :weight 702.678 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :rleg-toe
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.0 68.0 20.0) (float-vector 20.0 68.0 20.0) (float-vector 30.0 68.0 15.0) (float-vector 50.0 68.0 0.0) (float-vector 50.0 68.0 -35.0) (float-vector -15.0 68.0 -35.0)))
         (instance face :init :vertices (list (float-vector 20.0 -68.0 20.0) (float-vector -15.0 -68.0 20.0) (float-vector -15.0 -68.0 -35.0) (float-vector 50.0 -68.0 -35.0) (float-vector 50.0 -68.0 0.0) (float-vector 30.0 -68.0 15.0)))
         (instance face :init :vertices (list (float-vector -15.0 68.0 20.0) (float-vector -15.0 -68.0 20.0) (float-vector 20.0 -68.0 20.0) (float-vector 20.0 68.0 20.0)))
         (instance face :init :vertices (list (float-vector -15.0 68.0 -35.0) (float-vector -15.0 -68.0 -35.0) (float-vector -15.0 -68.0 20.0) (float-vector -15.0 68.0 20.0)))
         (instance face :init :vertices (list (float-vector 50.0 68.0 -35.0) (float-vector 50.0 -68.0 -35.0) (float-vector -15.0 -68.0 -35.0) (float-vector -15.0 68.0 -35.0)))
         (instance face :init :vertices (list (float-vector 50.0 68.0 0.0) (float-vector 50.0 -68.0 0.0) (float-vector 50.0 -68.0 -35.0) (float-vector 50.0 68.0 -35.0)))
         (instance face :init :vertices (list (float-vector 30.0 68.0 15.0) (float-vector 30.0 -68.0 15.0) (float-vector 50.0 -68.0 0.0) (float-vector 50.0 68.0 0.0)))
         (instance face :init :vertices (list (float-vector 20.0 68.0 20.0) (float-vector 20.0 -68.0 20.0) (float-vector 30.0 -68.0 15.0) (float-vector 30.0 68.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink31 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-toe :weight 200 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((83333.3 0.0 0.0) (0.0 2.083333e+05 0.0) (0.0 0.0 2.083333e+05))))

     ;; definition of :lleg-crotch-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 5.340576e-05 -80.348) (float-vector 40.0 31.085 -80.499) (float-vector 40.0 34.0 -77.4999) (float-vector 40.0 34.0 -51.9999) (float-vector 40.0 31.0 -48.9999) (float-vector 40.0 24.0 -46.9999) (float-vector 40.0 24.0 -18.3468) (float-vector 40.0 15.5 -26.8468) (float-vector 40.0 0.0 -31.0) (float-vector 40.0 -15.5 -26.8468) (float-vector 40.0 -24.0 -18.3468) (float-vector 40.0 -24.0 -47.0) (float-vector 40.0 -31.0 -49.0) (float-vector 40.0 -34.0 -52.0) (float-vector 40.0 -33.9999 -77.5) (float-vector 40.0 -31.085 -80.499)))
         (instance face :init :vertices (list (float-vector -80.0 -31.085 -80.499) (float-vector -80.0 5.340576e-05 -80.348) (float-vector 40.0 5.340576e-05 -80.348) (float-vector 40.0 -31.085 -80.499)))
         (instance face :init :vertices (list (float-vector -80.0 31.085 -80.499) (float-vector 40.0 31.085 -80.499) (float-vector 40.0 5.340576e-05 -80.348) (float-vector -80.0 5.340576e-05 -80.348)))
         (instance face :init :vertices (list (float-vector -80.0 34.0 -77.4999) (float-vector 40.0 34.0 -77.4999) (float-vector 40.0 31.085 -80.499) (float-vector -80.0 31.085 -80.499)))
         (instance face :init :vertices (list (float-vector -80.0 34.0 -51.9999) (float-vector 40.0 34.0 -51.9999) (float-vector 40.0 34.0 -77.4999) (float-vector -80.0 34.0 -77.4999)))
         (instance face :init :vertices (list (float-vector -80.0 31.0 -48.9999) (float-vector 40.0 31.0 -48.9999) (float-vector 40.0 34.0 -51.9999) (float-vector -80.0 34.0 -51.9999)))
         (instance face :init :vertices (list (float-vector -80.0 24.0 -47.0) (float-vector 40.0 24.0 -46.9999) (float-vector 40.0 31.0 -48.9999) (float-vector -80.0 31.0 -48.9999)))
         (instance face :init :vertices (list (float-vector -80.0 24.0 -18.3468) (float-vector -35.0 24.0 -18.3468) (float-vector -35.0 24.0 -36.4) (float-vector 35.0 24.0 -36.4) (float-vector 35.0 24.0 -18.3468) (float-vector 40.0 24.0 -18.3468) (float-vector 40.0 24.0 -46.9999) (float-vector -80.0 24.0 -47.0)))
         (instance face :init :vertices (list (float-vector 35.0 -24.0 -18.3468) (float-vector 35.0 -24.0 -36.4) (float-vector -35.0 -24.0 -36.4) (float-vector -35.0 -24.0 -18.3469) (float-vector -80.0 -24.0 -18.3468) (float-vector -80.0 -24.0 -47.0) (float-vector 40.0 -24.0 -47.0) (float-vector 40.0 -24.0 -18.3468)))
         (instance face :init :vertices (list (float-vector -80.0 -31.0 -49.0) (float-vector 40.0 -31.0 -49.0) (float-vector 40.0 -24.0 -47.0) (float-vector -80.0 -24.0 -47.0)))
         (instance face :init :vertices (list (float-vector -80.0 -34.0 -52.0) (float-vector 40.0 -34.0 -52.0) (float-vector 40.0 -31.0 -49.0) (float-vector -80.0 -31.0 -49.0)))
         (instance face :init :vertices (list (float-vector -80.0 -33.9999 -77.5) (float-vector 40.0 -33.9999 -77.5) (float-vector 40.0 -34.0 -52.0) (float-vector -80.0 -34.0 -52.0)))
         (instance face :init :vertices (list (float-vector -80.0 -31.085 -80.499) (float-vector 40.0 -31.085 -80.499) (float-vector 40.0 -33.9999 -77.5) (float-vector -80.0 -33.9999 -77.5)))
         (instance face :init :vertices (list (float-vector -80.0 15.5 26.8468) (float-vector -80.0 26.8468 15.5) (float-vector -80.0 31.0 0.0) (float-vector -80.0 26.8468 -15.5) (float-vector -80.0 24.0 -18.3468) (float-vector -80.0 24.0 -47.0) (float-vector -80.0 31.0 -48.9999) (float-vector -80.0 34.0 -51.9999) (float-vector -80.0 34.0 -77.4999) (float-vector -80.0 31.085 -80.499) (float-vector -80.0 5.340576e-05 -80.348) (float-vector -80.0 -31.085 -80.499) (float-vector -80.0 -33.9999 -77.5) (float-vector -80.0 -34.0 -52.0) (float-vector -80.0 -31.0 -49.0) (float-vector -80.0 -24.0 -47.0) (float-vector -80.0 -24.0 -18.3468) (float-vector -80.0 -26.8468 -15.5) (float-vector -80.0 -31.0 0.0) (float-vector -80.0 -26.8468 15.5) (float-vector -80.0 -15.5 26.8468) (float-vector -80.0 -2.288818e-05 31.0)))
         (instance face :init :vertices (list (float-vector 45.0 -2.288818e-05 31.0) (float-vector 45.0 15.5 26.8467) (float-vector 35.0 15.5 26.8467) (float-vector 35.0 -2.288818e-05 31.0)))
         (instance face :init :vertices (list (float-vector -35.0 -2.288818e-05 30.9999) (float-vector -35.0 15.5 26.8467) (float-vector -80.0 15.5 26.8468) (float-vector -80.0 -2.288818e-05 31.0)))
         (instance face :init :vertices (list (float-vector 45.0 -15.5 26.8467) (float-vector 45.0 -26.8468 15.5) (float-vector 45.0 -31.0 0.0) (float-vector 45.0 -26.8468 -15.5) (float-vector 45.0 -15.5 -26.8468) (float-vector 45.0 0.0 -31.0) (float-vector 45.0 15.5 -26.8468) (float-vector 45.0 26.8468 -15.5) (float-vector 45.0 31.0 0.0) (float-vector 45.0 26.8468 15.5) (float-vector 45.0 15.5 26.8467) (float-vector 45.0 -2.288818e-05 31.0)))
         (instance face :init :vertices (list (float-vector -80.0 26.8468 15.5) (float-vector -80.0 15.5 26.8468) (float-vector -35.0 15.5 26.8467) (float-vector -35.0 26.8468 15.4999)))
         (instance face :init :vertices (list (float-vector 35.0 26.8468 15.5) (float-vector 35.0 15.5 26.8467) (float-vector 45.0 15.5 26.8467) (float-vector 45.0 26.8468 15.5)))
         (instance face :init :vertices (list (float-vector -80.0 31.0 0.0) (float-vector -80.0 26.8468 15.5) (float-vector -35.0 26.8468 15.4999) (float-vector -35.0 31.0 -6.103516e-05)))
         (instance face :init :vertices (list (float-vector 35.0 31.0 0.0) (float-vector 35.0 26.8468 15.5) (float-vector 45.0 26.8468 15.5) (float-vector 45.0 31.0 0.0)))
         (instance face :init :vertices (list (float-vector -80.0 26.8468 -15.5) (float-vector -80.0 31.0 0.0) (float-vector -35.0 31.0 -6.103516e-05) (float-vector -35.0 26.8468 -15.5001)))
         (instance face :init :vertices (list (float-vector 35.0 26.8468 -15.5) (float-vector 35.0 31.0 0.0) (float-vector 45.0 31.0 0.0) (float-vector 45.0 26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector -35.0 26.8468 -15.5001) (float-vector -35.0 24.0 -18.3468) (float-vector -80.0 24.0 -18.3468) (float-vector -80.0 26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector 40.0 15.5 -26.8468) (float-vector 40.0 24.0 -18.3468) (float-vector 35.0 24.0 -18.3468) (float-vector 35.0 26.8468 -15.5) (float-vector 45.0 26.8468 -15.5) (float-vector 45.0 15.5 -26.8468)))
         (instance face :init :vertices (list (float-vector 40.0 0.0 -31.0) (float-vector 40.0 15.5 -26.8468) (float-vector 45.0 15.5 -26.8468) (float-vector 45.0 0.0 -31.0)))
         (instance face :init :vertices (list (float-vector 40.0 -15.5 -26.8468) (float-vector 40.0 0.0 -31.0) (float-vector 45.0 0.0 -31.0) (float-vector 45.0 -15.5 -26.8468)))
         (instance face :init :vertices (list (float-vector -80.0 -26.8468 -15.5) (float-vector -80.0 -24.0 -18.3468) (float-vector -35.0 -24.0 -18.3469) (float-vector -35.0 -26.8468 -15.5001)))
         (instance face :init :vertices (list (float-vector 35.0 -26.8468 -15.5) (float-vector 35.0 -24.0 -18.3468) (float-vector 40.0 -24.0 -18.3468) (float-vector 40.0 -15.5 -26.8468) (float-vector 45.0 -15.5 -26.8468) (float-vector 45.0 -26.8468 -15.5)))
         (instance face :init :vertices (list (float-vector -80.0 -31.0 0.0) (float-vector -80.0 -26.8468 -15.5) (float-vector -35.0 -26.8468 -15.5001) (float-vector -35.0 -31.0 -6.103516e-05)))
         (instance face :init :vertices (list (float-vector 35.0 -31.0 0.0) (float-vector 35.0 -26.8468 -15.5) (float-vector 45.0 -26.8468 -15.5) (float-vector 45.0 -31.0 0.0)))
         (instance face :init :vertices (list (float-vector -80.0 -26.8468 15.5) (float-vector -80.0 -31.0 0.0) (float-vector -35.0 -31.0 -6.103516e-05) (float-vector -35.0 -26.8468 15.4999)))
         (instance face :init :vertices (list (float-vector 35.0 -26.8468 15.5) (float-vector 35.0 -31.0 0.0) (float-vector 45.0 -31.0 0.0) (float-vector 45.0 -26.8468 15.5)))
         (instance face :init :vertices (list (float-vector -35.0 -15.5 26.8467) (float-vector -35.0 -2.288818e-05 30.9999) (float-vector -80.0 -2.288818e-05 31.0) (float-vector -80.0 -15.5 26.8468)))
         (instance face :init :vertices (list (float-vector 45.0 -15.5 26.8467) (float-vector 45.0 -2.288818e-05 31.0) (float-vector 35.0 -2.288818e-05 31.0) (float-vector 35.0 -15.5 26.8467)))
         (instance face :init :vertices (list (float-vector -80.0 -15.5 26.8468) (float-vector -80.0 -26.8468 15.5) (float-vector -35.0 -26.8468 15.4999) (float-vector -35.0 -15.5 26.8467)))
         (instance face :init :vertices (list (float-vector 35.0 -15.5 26.8467) (float-vector 35.0 -26.8468 15.5) (float-vector 45.0 -26.8468 15.5) (float-vector 45.0 -15.5 26.8467)))
         (instance face :init :vertices (list (float-vector -35.0 24.0 -36.4) (float-vector -35.0 24.0 -18.3468) (float-vector -35.0 26.8468 -15.5001) (float-vector -35.0 31.0 -6.103516e-05) (float-vector -35.0 26.8468 15.4999) (float-vector -35.0 15.5 26.8467) (float-vector -35.0 -2.288818e-05 30.9999) (float-vector -35.0 -15.5 26.8467) (float-vector -35.0 -26.8468 15.4999) (float-vector -35.0 -31.0 -6.103516e-05) (float-vector -35.0 -26.8468 -15.5001) (float-vector -35.0 -24.0 -18.3469) (float-vector -35.0 -24.0 -36.4)))
         (instance face :init :vertices (list (float-vector 35.0 24.0 -36.4) (float-vector -35.0 24.0 -36.4) (float-vector -35.0 -24.0 -36.4) (float-vector 35.0 -24.0 -36.4)))
         (instance face :init :vertices (list (float-vector 35.0 -24.0 -36.4) (float-vector 35.0 -24.0 -18.3468) (float-vector 35.0 -26.8468 -15.5) (float-vector 35.0 -31.0 0.0) (float-vector 35.0 -26.8468 15.5) (float-vector 35.0 -15.5 26.8467) (float-vector 35.0 -2.288818e-05 31.0) (float-vector 35.0 15.5 26.8467) (float-vector 35.0 26.8468 15.5) (float-vector 35.0 31.0 0.0) (float-vector 35.0 26.8468 -15.5) (float-vector 35.0 24.0 -18.3468) (float-vector 35.0 24.0 -36.4)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink17 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-y :weight 1136.38 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :lleg-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.5 -37.0 -26.8468) (float-vector 0.0 -37.0 -31.0) (float-vector 15.5 -37.0 -26.8468) (float-vector 26.8468 -37.0 -15.5) (float-vector 31.0 -37.0 3.994566e-06) (float-vector 26.8468 -37.0 15.5) (float-vector 15.5 -37.0 26.8468) (float-vector 0.0 -37.0 31.0) (float-vector -15.5 -37.0 26.8468) (float-vector -26.8467 -37.0 15.5) (float-vector -31.0 -37.0 1.481424e-05) (float-vector -26.8468 -37.0 -15.5)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 37.0 -31.0) (float-vector -15.5001 37.0 -26.8468) (float-vector -26.8469 37.0 -15.5) (float-vector -31.0001 37.0 1.481423e-05) (float-vector -26.8468 37.0 15.5) (float-vector -15.5001 37.0 26.8468) (float-vector -6.103516e-05 37.0 31.0) (float-vector 15.4999 37.0 26.8468) (float-vector 26.8467 37.0 15.5) (float-vector 30.9999 37.0 3.994552e-06) (float-vector 26.8467 37.0 -15.5) (float-vector 15.4999 37.0 -26.8468)))
         (instance face :init :vertices (list (float-vector -15.5 -37.0 -26.8468) (float-vector -15.5001 37.0 -26.8468) (float-vector -6.103516e-05 37.0 -31.0) (float-vector 0.0 -37.0 -31.0)))
         (instance face :init :vertices (list (float-vector -26.8468 -37.0 -15.5) (float-vector -26.8469 37.0 -15.5) (float-vector -15.5001 37.0 -26.8468) (float-vector -15.5 -37.0 -26.8468)))
         (instance face :init :vertices (list (float-vector -31.0 -37.0 1.481424e-05) (float-vector -31.0001 37.0 1.481423e-05) (float-vector -26.8469 37.0 -15.5) (float-vector -26.8468 -37.0 -15.5)))
         (instance face :init :vertices (list (float-vector -26.8467 -37.0 15.5) (float-vector -26.8468 37.0 15.5) (float-vector -31.0001 37.0 1.481423e-05) (float-vector -31.0 -37.0 1.481424e-05)))
         (instance face :init :vertices (list (float-vector -15.5 -37.0 26.8468) (float-vector -15.5001 37.0 26.8468) (float-vector -26.8468 37.0 15.5) (float-vector -26.8467 -37.0 15.5)))
         (instance face :init :vertices (list (float-vector 0.0 -37.0 31.0) (float-vector -6.103516e-05 37.0 31.0) (float-vector -15.5001 37.0 26.8468) (float-vector -15.5 -37.0 26.8468)))
         (instance face :init :vertices (list (float-vector 15.5 -37.0 26.8468) (float-vector 15.4999 37.0 26.8468) (float-vector -6.103516e-05 37.0 31.0) (float-vector 0.0 -37.0 31.0)))
         (instance face :init :vertices (list (float-vector 26.8468 -37.0 15.5) (float-vector 26.8467 37.0 15.5) (float-vector 15.4999 37.0 26.8468) (float-vector 15.5 -37.0 26.8468)))
         (instance face :init :vertices (list (float-vector 31.0 -37.0 3.994566e-06) (float-vector 30.9999 37.0 3.994552e-06) (float-vector 26.8467 37.0 15.5) (float-vector 26.8468 -37.0 15.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -37.0 -15.5) (float-vector 26.8467 37.0 -15.5) (float-vector 30.9999 37.0 3.994552e-06) (float-vector 31.0 -37.0 3.994566e-06)))
         (instance face :init :vertices (list (float-vector 15.5 -37.0 -26.8468) (float-vector 15.4999 37.0 -26.8468) (float-vector 26.8467 37.0 -15.5) (float-vector 26.8468 -37.0 -15.5)))
         (instance face :init :vertices (list (float-vector 0.0 -37.0 -31.0) (float-vector -6.103516e-05 37.0 -31.0) (float-vector 15.4999 37.0 -26.8468) (float-vector 15.5 -37.0 -26.8468)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink18 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-r :weight 729.538 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :lleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 -223.5 50.4999) (float-vector 35.0 -251.0 50.5798) (float-vector -66.2066 -251.0 50.5194) (float-vector -98.0 0.0 50.2892) (float-vector -94.0 -6.103516e-05 50.2959) (float-vector -93.3799 15.9429 50.2857) (float-vector -88.142 25.142 50.2879) (float-vector -79.0 30.9999 50.2989) (float-vector 1.525879e-05 31.0 50.4303) (float-vector 11.896 28.627 50.4517) (float-vector 24.875 18.5 50.4805) (float-vector 31.0 -6.103516e-05 50.5037) (float-vector 35.0 0.0 50.5104) (float-vector 35.0 -93.96 50.5) (float-vector -36.66 -93.96 50.5) (float-vector 15.32 -223.5 50.4999)))
         (instance face :init :vertices (list (float-vector 35.0 -223.5 50.4999) (float-vector 15.32 -223.5 50.4999) (float-vector 15.32 -223.5 -50.5001) (float-vector 35.0 -223.5 -50.5001)))
         (instance face :init :vertices (list (float-vector 35.0 -223.5 -50.5001) (float-vector 15.32 -223.5 -50.5001) (float-vector -36.66 -93.96 -50.5) (float-vector 35.0 -93.96 -50.5) (float-vector 35.0 6.103516e-05 -50.7723) (float-vector 31.0 0.0 -50.7789) (float-vector 24.875 18.5 -50.8022) (float-vector 11.896 28.627 -50.8309) (float-vector 0.0 31.0 -50.8524) (float-vector -79.0 31.0 -50.9837) (float-vector -88.142 25.142 -50.9948) (float-vector -93.3799 15.943 -50.997) (float-vector -94.0 0.0 -50.9868) (float-vector -98.0 0.0 -50.9934) (float-vector -66.2066 -251.0 -50.7633) (float-vector 35.0 -251.0 -50.5218)))
         (instance face :init :vertices (list (float-vector -36.66 -93.96 -50.5) (float-vector 15.32 -223.5 -50.5001) (float-vector 15.32 -223.5 50.4999) (float-vector -36.66 -93.96 50.5)))
         (instance face :init :vertices (list (float-vector 35.0 -93.96 -50.5) (float-vector -36.66 -93.96 -50.5) (float-vector -36.66 -93.96 50.5) (float-vector 35.0 -93.96 50.5)))
         (instance face :init :vertices (list (float-vector 35.0 -300.0 -58.5001) (float-vector 35.0 -300.0 -55.5001) (float-vector 16.0 -300.0 -55.5001) (float-vector 16.0 -300.0 -58.5001)))
         (instance face :init :vertices (list (float-vector 16.0 -300.0 58.4999) (float-vector 16.0 -300.0 55.4999) (float-vector 35.0 -300.0 55.4999) (float-vector 35.0 -300.0 58.4999)))
         (instance face :init :vertices (list (float-vector 35.0 -300.0 -58.5001) (float-vector 16.0 -300.0 -58.5001) (float-vector 11.664 -317.13 -58.5001) (float-vector -2.77438 -331.61 -58.5001) (float-vector -20.0 -336.0 -58.5001) (float-vector -36.535 -331.98 -58.5001) (float-vector -50.132 -319.7 -58.5001) (float-vector -56.0 -300.0 -58.5001) (float-vector -60.0 -300.0 -58.5001) (float-vector -98.0 0.0 -58.5) (float-vector -94.0 0.0 -58.5) (float-vector -93.3799 15.943 -58.5) (float-vector -88.142 25.142 -58.5) (float-vector -79.0 31.0 -58.5) (float-vector 0.0 31.0 -58.5) (float-vector 11.896 28.627 -58.5) (float-vector 24.875 18.5001 -58.5) (float-vector 31.0 0.0 -58.5) (float-vector 35.0 6.103516e-05 -58.5)))
         (instance face :init :vertices (list (float-vector 16.0 -300.0 58.4999) (float-vector 35.0 -300.0 58.4999) (float-vector 35.0 0.0 58.5) (float-vector 31.0 -6.103516e-05 58.5) (float-vector 24.875 18.5 58.5) (float-vector 11.896 28.627 58.5) (float-vector 1.525879e-05 31.0 58.5) (float-vector -79.0 30.9999 58.5) (float-vector -88.142 25.142 58.5) (float-vector -93.3799 15.9429 58.5) (float-vector -94.0 -6.103516e-05 58.5) (float-vector -98.0 -6.103516e-05 58.5) (float-vector -60.0 -300.0 58.4999) (float-vector -56.0 -300.0 58.4999) (float-vector -50.132 -319.7 58.4999) (float-vector -36.535 -331.98 58.4998) (float-vector -20.0 -336.0 58.4998) (float-vector -2.77438 -331.61 58.4998) (float-vector 11.664 -317.13 58.4998)))
         (instance face :init :vertices (list (float-vector 11.664 -317.13 -58.5001) (float-vector 16.0 -300.0 -58.5001) (float-vector 16.0 -300.0 -55.5001) (float-vector 11.664 -317.13 -55.5001)))
         (instance face :init :vertices (list (float-vector 11.664 -317.13 55.4998) (float-vector 16.0 -300.0 55.4999) (float-vector 16.0 -300.0 58.4999) (float-vector 11.664 -317.13 58.4998)))
         (instance face :init :vertices (list (float-vector -2.77438 -331.61 -58.5001) (float-vector 11.664 -317.13 -58.5001) (float-vector 11.664 -317.13 -55.5001) (float-vector -2.77438 -331.61 -55.5001)))
         (instance face :init :vertices (list (float-vector -2.77438 -331.61 55.4998) (float-vector 11.664 -317.13 55.4998) (float-vector 11.664 -317.13 58.4998) (float-vector -2.77438 -331.61 58.4998)))
         (instance face :init :vertices (list (float-vector -20.0 -336.0 -58.5001) (float-vector -2.77438 -331.61 -58.5001) (float-vector -2.77438 -331.61 -55.5001) (float-vector -20.0 -336.0 -55.5001)))
         (instance face :init :vertices (list (float-vector -20.0 -336.0 55.4998) (float-vector -2.77438 -331.61 55.4998) (float-vector -2.77438 -331.61 58.4998) (float-vector -20.0 -336.0 58.4998)))
         (instance face :init :vertices (list (float-vector -36.535 -331.98 -58.5001) (float-vector -20.0 -336.0 -58.5001) (float-vector -20.0 -336.0 -55.5001) (float-vector -36.535 -331.98 -55.5001)))
         (instance face :init :vertices (list (float-vector -36.535 -331.98 55.4998) (float-vector -20.0 -336.0 55.4998) (float-vector -20.0 -336.0 58.4998) (float-vector -36.535 -331.98 58.4998)))
         (instance face :init :vertices (list (float-vector -50.132 -319.7 -58.5001) (float-vector -36.535 -331.98 -58.5001) (float-vector -36.535 -331.98 -55.5001) (float-vector -50.132 -319.7 -55.5001)))
         (instance face :init :vertices (list (float-vector -50.132 -319.7 55.4998) (float-vector -36.535 -331.98 55.4998) (float-vector -36.535 -331.98 58.4998) (float-vector -50.132 -319.7 58.4999)))
         (instance face :init :vertices (list (float-vector -56.0 -300.0 -58.5001) (float-vector -50.132 -319.7 -58.5001) (float-vector -50.132 -319.7 -55.5001) (float-vector -56.0 -300.0 -55.5001)))
         (instance face :init :vertices (list (float-vector -56.0 -300.0 55.4999) (float-vector -50.132 -319.7 55.4998) (float-vector -50.132 -319.7 58.4999) (float-vector -56.0 -300.0 58.4999)))
         (instance face :init :vertices (list (float-vector -60.0 -300.0 -58.5001) (float-vector -56.0 -300.0 -58.5001) (float-vector -56.0 -300.0 -55.5001) (float-vector -60.0 -300.0 -55.5001)))
         (instance face :init :vertices (list (float-vector -60.0 -300.0 55.4999) (float-vector -56.0 -300.0 55.4999) (float-vector -56.0 -300.0 58.4999) (float-vector -60.0 -300.0 58.4999)))
         (instance face :init :vertices (list (float-vector -98.0 0.0 -58.5) (float-vector -60.0 -300.0 -58.5001) (float-vector -60.0 -300.0 -55.5001) (float-vector -66.2066 -251.0 -55.5001) (float-vector -66.2066 -251.0 -50.7633) (float-vector -98.0 0.0 -50.9934)))
         (instance face :init :vertices (list (float-vector -98.0 0.0 50.2892) (float-vector -66.2066 -251.0 50.5194) (float-vector -66.2066 -251.0 55.4999) (float-vector -60.0 -300.0 55.4999) (float-vector -60.0 -300.0 58.4999) (float-vector -98.0 -6.103516e-05 58.5)))
         (instance face :init :vertices (list (float-vector -94.0 0.0 -58.5) (float-vector -98.0 0.0 -58.5) (float-vector -98.0 0.0 -50.9934) (float-vector -94.0 0.0 -50.9868)))
         (instance face :init :vertices (list (float-vector -94.0 -6.103516e-05 50.2959) (float-vector -98.0 0.0 50.2892) (float-vector -98.0 -6.103516e-05 58.5) (float-vector -94.0 -6.103516e-05 58.5)))
         (instance face :init :vertices (list (float-vector -93.3799 15.943 -58.5) (float-vector -94.0 0.0 -58.5) (float-vector -94.0 0.0 -50.9868) (float-vector -93.3799 15.943 -50.997)))
         (instance face :init :vertices (list (float-vector -93.3799 15.9429 50.2857) (float-vector -94.0 -6.103516e-05 50.2959) (float-vector -94.0 -6.103516e-05 58.5) (float-vector -93.3799 15.9429 58.5)))
         (instance face :init :vertices (list (float-vector -88.142 25.142 -58.5) (float-vector -93.3799 15.943 -58.5) (float-vector -93.3799 15.943 -50.997) (float-vector -88.142 25.142 -50.9948)))
         (instance face :init :vertices (list (float-vector -88.142 25.142 50.2879) (float-vector -93.3799 15.9429 50.2857) (float-vector -93.3799 15.9429 58.5) (float-vector -88.142 25.142 58.5)))
         (instance face :init :vertices (list (float-vector -79.0 31.0 -58.5) (float-vector -88.142 25.142 -58.5) (float-vector -88.142 25.142 -50.9948) (float-vector -79.0 31.0 -50.9837)))
         (instance face :init :vertices (list (float-vector -79.0 30.9999 50.2989) (float-vector -88.142 25.142 50.2879) (float-vector -88.142 25.142 58.5) (float-vector -79.0 30.9999 58.5)))
         (instance face :init :vertices (list (float-vector 0.0 31.0 -58.5) (float-vector -79.0 31.0 -58.5) (float-vector -79.0 31.0 -50.9837) (float-vector 0.0 31.0 -50.8524)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 31.0 50.4303) (float-vector -79.0 30.9999 50.2989) (float-vector -79.0 30.9999 58.5) (float-vector 1.525879e-05 31.0 58.5)))
         (instance face :init :vertices (list (float-vector 11.896 28.627 -58.5) (float-vector 0.0 31.0 -58.5) (float-vector 0.0 31.0 -50.8524) (float-vector 11.896 28.627 -50.8309)))
         (instance face :init :vertices (list (float-vector 11.896 28.627 50.4517) (float-vector 1.525879e-05 31.0 50.4303) (float-vector 1.525879e-05 31.0 58.5) (float-vector 11.896 28.627 58.5)))
         (instance face :init :vertices (list (float-vector 24.875 18.5001 -58.5) (float-vector 11.896 28.627 -58.5) (float-vector 11.896 28.627 -50.8309) (float-vector 24.875 18.5 -50.8022)))
         (instance face :init :vertices (list (float-vector 24.875 18.5 50.4805) (float-vector 11.896 28.627 50.4517) (float-vector 11.896 28.627 58.5) (float-vector 24.875 18.5 58.5)))
         (instance face :init :vertices (list (float-vector 31.0 0.0 -58.5) (float-vector 24.875 18.5001 -58.5) (float-vector 24.875 18.5 -50.8022) (float-vector 31.0 0.0 -50.7789)))
         (instance face :init :vertices (list (float-vector 31.0 -6.103516e-05 50.5037) (float-vector 24.875 18.5 50.4805) (float-vector 24.875 18.5 58.5) (float-vector 31.0 -6.103516e-05 58.5)))
         (instance face :init :vertices (list (float-vector 35.0 6.103516e-05 -58.5) (float-vector 31.0 0.0 -58.5) (float-vector 31.0 0.0 -50.7789) (float-vector 35.0 6.103516e-05 -50.7723)))
         (instance face :init :vertices (list (float-vector 35.0 0.0 58.5) (float-vector 35.0 -300.0 58.4999) (float-vector 35.0 -300.0 55.4999) (float-vector 35.0 -251.0 55.4999) (float-vector 35.0 -251.0 50.5798) (float-vector 35.0 -223.5 50.4999) (float-vector 35.0 -223.5 -50.5001) (float-vector 35.0 -251.0 -50.5218) (float-vector 35.0 -251.0 -55.5001) (float-vector 35.0 -300.0 -55.5001) (float-vector 35.0 -300.0 -58.5001) (float-vector 35.0 6.103516e-05 -58.5) (float-vector 35.0 6.103516e-05 -50.7723) (float-vector 35.0 -93.96 -50.5) (float-vector 35.0 -93.96 50.5) (float-vector 35.0 0.0 50.5104)))
         (instance face :init :vertices (list (float-vector 35.0 0.0 50.5104) (float-vector 31.0 -6.103516e-05 50.5037) (float-vector 31.0 -6.103516e-05 58.5) (float-vector 35.0 0.0 58.5)))
         (instance face :init :vertices (list (float-vector 35.0 -251.0 55.4999) (float-vector 35.0 -300.0 55.4999) (float-vector 16.0 -300.0 55.4999) (float-vector 11.664 -317.13 55.4998) (float-vector -2.77438 -331.61 55.4998) (float-vector -20.0 -336.0 55.4998) (float-vector -36.535 -331.98 55.4998) (float-vector -50.132 -319.7 55.4998) (float-vector -56.0 -300.0 55.4999) (float-vector -60.0 -300.0 55.4999) (float-vector -66.2066 -251.0 55.4999)))
         (instance face :init :vertices (list (float-vector -66.2066 -251.0 55.4999) (float-vector -66.2066 -251.0 50.5194) (float-vector 35.0 -251.0 50.5798) (float-vector 35.0 -251.0 55.4999)))
         (instance face :init :vertices (list (float-vector 35.0 -251.0 -55.5001) (float-vector 35.0 -251.0 -50.5218) (float-vector -66.2066 -251.0 -50.7633) (float-vector -66.2066 -251.0 -55.5001)))
         (instance face :init :vertices (list (float-vector -66.2066 -251.0 -55.5001) (float-vector -60.0 -300.0 -55.5001) (float-vector -56.0 -300.0 -55.5001) (float-vector -50.132 -319.7 -55.5001) (float-vector -36.535 -331.98 -55.5001) (float-vector -20.0 -336.0 -55.5001) (float-vector -2.77438 -331.61 -55.5001) (float-vector 11.664 -317.13 -55.5001) (float-vector 16.0 -300.0 -55.5001) (float-vector 35.0 -300.0 -55.5001) (float-vector 35.0 -251.0 -55.5001)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 -93.9641 -58.5) (float-vector 38.0 -93.9641 -58.5) (float-vector 38.0 -273.5 -58.5001) (float-vector 35.0 -273.5 -58.5001)))
         (instance face :init :vertices (list (float-vector 38.0 -93.9641 58.5) (float-vector 35.0 -93.9641 58.5) (float-vector 35.0 -273.5 58.4999) (float-vector 38.0 -273.5 58.4999)))
         (instance face :init :vertices (list (float-vector 35.0 -93.9641 -58.5) (float-vector 35.0 -93.9641 58.5) (float-vector 38.0 -93.9641 58.5) (float-vector 38.0 -93.9641 -58.5)))
         (instance face :init :vertices (list (float-vector 35.0 -273.5 -58.5001) (float-vector 35.0 -273.5 58.4999) (float-vector 35.0 -93.9641 58.5) (float-vector 35.0 -93.9641 -58.5)))
         (instance face :init :vertices (list (float-vector 38.0 -273.5 -58.5001) (float-vector 38.0 -273.5 58.4999) (float-vector 35.0 -273.5 58.4999) (float-vector 35.0 -273.5 -58.5001)))
         (instance face :init :vertices (list (float-vector 38.0 -93.9641 -58.5) (float-vector 38.0 -93.9641 58.5) (float-vector 38.0 -273.5 58.4999) (float-vector 38.0 -273.5 -58.5001)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (send (elt bc 1) :set-color :gray)
     (setq blink19 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-p :weight 2312.41 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :lleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 51.0 -19.5 -52.5) (float-vector 30.883 18.5 -52.5) (float-vector 30.883 18.5 52.5) (float-vector 51.0 -19.5 52.5)))
         (instance face :init :vertices (list (float-vector 15.685 32.403 -52.5) (float-vector 15.685 32.403 52.5) (float-vector 30.883 18.5 52.5) (float-vector 30.883 18.5 -52.5)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 36.0 -52.5) (float-vector 0.0 36.0 52.5) (float-vector 15.685 32.403 52.5) (float-vector 15.685 32.403 -52.5)))
         (instance face :init :vertices (list (float-vector -17.622 31.392 -52.5) (float-vector -17.622 31.392 52.5) (float-vector 0.0 36.0 52.5) (float-vector 7.629395e-06 36.0 -52.5)))
         (instance face :init :vertices (list (float-vector -31.475 17.474 -52.5) (float-vector -31.475 17.474 52.5) (float-vector -17.622 31.392 52.5) (float-vector -17.622 31.392 -52.5)))
         (instance face :init :vertices (list (float-vector -36.0 3.051758e-05 -52.5) (float-vector -36.0 -3.051758e-05 52.5) (float-vector -31.475 17.474 52.5) (float-vector -31.475 17.474 -52.5)))
         (instance face :init :vertices (list (float-vector -38.914 -20.556 -52.5) (float-vector -38.914 -20.556 52.5) (float-vector -36.0 -3.051758e-05 52.5) (float-vector -36.0 3.051758e-05 -52.5)))
         (instance face :init :vertices (list (float-vector -42.835 -20.0 -52.5) (float-vector -42.835 -20.0 52.5) (float-vector -38.914 -20.556 52.5) (float-vector -38.914 -20.556 -52.5)))
         (instance face :init :vertices (list (float-vector -68.0 -247.5 -52.5001) (float-vector -68.0 -247.5 -44.5001) (float-vector -64.7368 -218.0 -44.5001) (float-vector -64.7368 -218.0 44.4999) (float-vector -68.0 -247.5 44.4999) (float-vector -68.0 -247.5 52.4999) (float-vector -42.835 -20.0 52.5) (float-vector -42.835 -20.0 -52.5)))
         (instance face :init :vertices (list (float-vector -24.875 -318.5 52.4999) (float-vector -68.0 -247.5 52.4999) (float-vector -68.0 -247.5 44.4999) (float-vector -24.875 -318.5 44.4999)))
         (instance face :init :vertices (list (float-vector -24.875 -318.5 -52.5001) (float-vector -24.875 -318.5 -44.5001) (float-vector -68.0 -247.5 -44.5001) (float-vector -68.0 -247.5 -52.5001)))
         (instance face :init :vertices (list (float-vector -14.601 -327.35 52.4999) (float-vector -24.875 -318.5 52.4999) (float-vector -24.875 -318.5 44.4999) (float-vector -14.601 -327.35 44.4999)))
         (instance face :init :vertices (list (float-vector -14.601 -327.35 -52.5001) (float-vector -14.601 -327.35 -44.5001) (float-vector -24.875 -318.5 -44.5001) (float-vector -24.875 -318.5 -52.5001)))
         (instance face :init :vertices (list (float-vector 0.0 -331.0 52.4999) (float-vector -14.601 -327.35 52.4999) (float-vector -14.601 -327.35 44.4999) (float-vector 0.0 -331.0 44.4999)))
         (instance face :init :vertices (list (float-vector 0.0 -331.0 -52.5001) (float-vector -1.525879e-05 -331.0 -44.5001) (float-vector -14.601 -327.35 -44.5001) (float-vector -14.601 -327.35 -52.5001)))
         (instance face :init :vertices (list (float-vector 13.815 -327.75 52.4999) (float-vector 0.0 -331.0 52.4999) (float-vector 0.0 -331.0 44.4999) (float-vector 13.815 -327.75 44.4999)))
         (instance face :init :vertices (list (float-vector 13.815 -327.75 -52.5001) (float-vector 13.815 -327.75 -44.5001) (float-vector -1.525879e-05 -331.0 -44.5001) (float-vector 0.0 -331.0 -52.5001)))
         (instance face :init :vertices (list (float-vector 51.0 -300.0 52.4999) (float-vector 13.815 -327.75 52.4999) (float-vector 13.815 -327.75 44.4999) (float-vector 51.0 -300.0 44.4999)))
         (instance face :init :vertices (list (float-vector 51.0 -300.0 -52.5001) (float-vector 51.0 -300.0 -44.5001) (float-vector 13.815 -327.75 -44.5001) (float-vector 13.815 -327.75 -52.5001)))
         (instance face :init :vertices (list (float-vector 55.0 -300.0 52.4999) (float-vector 51.0 -300.0 52.4999) (float-vector 51.0 -300.0 44.4999) (float-vector 55.0 -300.0 44.4999)))
         (instance face :init :vertices (list (float-vector 55.0 -300.0 -52.5001) (float-vector 55.0 -300.0 -44.5001) (float-vector 51.0 -300.0 -44.5001) (float-vector 51.0 -300.0 -52.5001)))
         (instance face :init :vertices (list (float-vector 55.0 -19.5 -52.5) (float-vector 55.0 -19.5 52.5) (float-vector 55.0 -300.0 52.4999) (float-vector 55.0 -300.0 44.4999) (float-vector 55.0 -218.0 44.4999) (float-vector 55.0 -218.0 -44.5001) (float-vector 55.0 -300.0 -44.5001) (float-vector 55.0 -300.0 -52.5001)))
         (instance face :init :vertices (list (float-vector 51.0 -19.5 52.5) (float-vector 30.883 18.5 52.5) (float-vector 15.685 32.403 52.5) (float-vector 0.0 36.0 52.5) (float-vector -17.622 31.392 52.5) (float-vector -31.475 17.474 52.5) (float-vector -36.0 -3.051758e-05 52.5) (float-vector -38.914 -20.556 52.5) (float-vector -42.835 -20.0 52.5) (float-vector -68.0 -247.5 52.4999) (float-vector -24.875 -318.5 52.4999) (float-vector -14.601 -327.35 52.4999) (float-vector 0.0 -331.0 52.4999) (float-vector 13.815 -327.75 52.4999) (float-vector 51.0 -300.0 52.4999) (float-vector 55.0 -300.0 52.4999) (float-vector 55.0 -19.5 52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -19.5 -52.5) (float-vector 55.0 -300.0 -52.5001) (float-vector 51.0 -300.0 -52.5001) (float-vector 13.815 -327.75 -52.5001) (float-vector 0.0 -331.0 -52.5001) (float-vector -14.601 -327.35 -52.5001) (float-vector -24.875 -318.5 -52.5001) (float-vector -68.0 -247.5 -52.5001) (float-vector -42.835 -20.0 -52.5) (float-vector -38.914 -20.556 -52.5) (float-vector -36.0 3.051758e-05 -52.5) (float-vector -31.475 17.474 -52.5) (float-vector -17.622 31.392 -52.5) (float-vector 7.629395e-06 36.0 -52.5) (float-vector 15.685 32.403 -52.5) (float-vector 30.883 18.5 -52.5) (float-vector 51.0 -19.5 -52.5)))
         (instance face :init :vertices (list (float-vector 51.0 -19.5 -52.5) (float-vector 51.0 -19.5 52.5) (float-vector 55.0 -19.5 52.5) (float-vector 55.0 -19.5 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -218.0 44.4999) (float-vector 55.0 -300.0 44.4999) (float-vector 51.0 -300.0 44.4999) (float-vector 13.815 -327.75 44.4999) (float-vector 0.0 -331.0 44.4999) (float-vector -14.601 -327.35 44.4999) (float-vector -24.875 -318.5 44.4999) (float-vector -68.0 -247.5 44.4999) (float-vector -64.7368 -218.0 44.4999)))
         (instance face :init :vertices (list (float-vector 55.0 -218.0 -44.5001) (float-vector 55.0 -218.0 44.4999) (float-vector -64.7368 -218.0 44.4999) (float-vector -64.7368 -218.0 -44.5001)))
         (instance face :init :vertices (list (float-vector -64.7368 -218.0 -44.5001) (float-vector -68.0 -247.5 -44.5001) (float-vector -24.875 -318.5 -44.5001) (float-vector -14.601 -327.35 -44.5001) (float-vector -1.525879e-05 -331.0 -44.5001) (float-vector 13.815 -327.75 -44.5001) (float-vector 51.0 -300.0 -44.5001) (float-vector 55.0 -300.0 -44.5001) (float-vector 55.0 -218.0 -44.5001)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 58.0 -168.0 -52.5001) (float-vector 55.0 -168.0 -52.5001) (float-vector 55.0 26.5 -52.5) (float-vector 58.0 26.5 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -168.0 52.4999) (float-vector 58.0 -168.0 52.4999) (float-vector 58.0 26.5 52.5) (float-vector 55.0 26.5 52.5)))
         (instance face :init :vertices (list (float-vector 58.0 -168.0 -52.5001) (float-vector 58.0 -168.0 52.4999) (float-vector 55.0 -168.0 52.4999) (float-vector 55.0 -168.0 -52.5001)))
         (instance face :init :vertices (list (float-vector 58.0 26.5 -52.5) (float-vector 58.0 26.5 52.5) (float-vector 58.0 -168.0 52.4999) (float-vector 58.0 -168.0 -52.5001)))
         (instance face :init :vertices (list (float-vector 55.0 26.5 -52.5) (float-vector 55.0 26.5 52.5) (float-vector 58.0 26.5 52.5) (float-vector 58.0 26.5 -52.5)))
         (instance face :init :vertices (list (float-vector 55.0 -168.0 -52.5001) (float-vector 55.0 -168.0 52.4999) (float-vector 55.0 26.5 52.5) (float-vector 55.0 26.5 -52.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (send (elt bc 1) :set-color :gray50)
     (setq blink20 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-knee-p :weight 1682.63 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :lleg-ankle-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 41.5) (float-vector 31.0 7.629395e-06 41.5) (float-vector 26.8468 15.5 41.5) (float-vector 15.5 26.8468 41.5) (float-vector 7.629395e-06 31.0 41.5) (float-vector -15.5 26.8468 41.5) (float-vector -26.8468 15.5 41.5) (float-vector -31.0 3.051758e-05 41.5) (float-vector -26.8468 -15.5 41.5) (float-vector -15.5 -26.8468 41.5) (float-vector -3.051758e-05 -31.0 41.5) (float-vector 15.5 -26.8468 41.5)))
         (instance face :init :vertices (list (float-vector 31.0 1.525879e-05 -41.5) (float-vector 26.8468 -15.5 -41.5) (float-vector 15.5 -26.8468 -41.5) (float-vector -3.051758e-05 -31.0 -41.5) (float-vector -15.5 -26.8468 -41.5) (float-vector -26.8468 -15.5 -41.5) (float-vector -31.0 3.814697e-05 -41.5) (float-vector -26.8468 15.5 -41.5) (float-vector -15.5 26.8468 -41.5) (float-vector 7.629395e-06 31.0 -41.5) (float-vector 15.5 26.8468 -41.5) (float-vector 26.8468 15.5 -41.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 41.5) (float-vector 26.8468 -15.5 -41.5) (float-vector 31.0 1.525879e-05 -41.5) (float-vector 31.0 7.629395e-06 41.5)))
         (instance face :init :vertices (list (float-vector 15.5 -26.8468 41.5) (float-vector 15.5 -26.8468 -41.5) (float-vector 26.8468 -15.5 -41.5) (float-vector 26.8468 -15.5 41.5)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 -31.0 41.5) (float-vector -3.051758e-05 -31.0 -41.5) (float-vector 15.5 -26.8468 -41.5) (float-vector 15.5 -26.8468 41.5)))
         (instance face :init :vertices (list (float-vector -15.5 -26.8468 41.5) (float-vector -15.5 -26.8468 -41.5) (float-vector -3.051758e-05 -31.0 -41.5) (float-vector -3.051758e-05 -31.0 41.5)))
         (instance face :init :vertices (list (float-vector -26.8468 -15.5 41.5) (float-vector -26.8468 -15.5 -41.5) (float-vector -15.5 -26.8468 -41.5) (float-vector -15.5 -26.8468 41.5)))
         (instance face :init :vertices (list (float-vector -31.0 3.051758e-05 41.5) (float-vector -31.0 3.814697e-05 -41.5) (float-vector -26.8468 -15.5 -41.5) (float-vector -26.8468 -15.5 41.5)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 41.5) (float-vector -26.8468 15.5 -41.5) (float-vector -31.0 3.814697e-05 -41.5) (float-vector -31.0 3.051758e-05 41.5)))
         (instance face :init :vertices (list (float-vector -15.5 26.8468 41.5) (float-vector -15.5 26.8468 -41.5) (float-vector -26.8468 15.5 -41.5) (float-vector -26.8468 15.5 41.5)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 31.0 41.5) (float-vector 7.629395e-06 31.0 -41.5) (float-vector -15.5 26.8468 -41.5) (float-vector -15.5 26.8468 41.5)))
         (instance face :init :vertices (list (float-vector 15.5 26.8468 41.5) (float-vector 15.5 26.8468 -41.5) (float-vector 7.629395e-06 31.0 -41.5) (float-vector 7.629395e-06 31.0 41.5)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 41.5) (float-vector 26.8468 15.5 -41.5) (float-vector 15.5 26.8468 -41.5) (float-vector 15.5 26.8468 41.5)))
         (instance face :init :vertices (list (float-vector 31.0 7.629395e-06 41.5) (float-vector 31.0 1.525879e-05 -41.5) (float-vector 26.8468 15.5 -41.5) (float-vector 26.8468 15.5 41.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink21 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-ankle-p :weight 1010.67 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :lleg-ankle-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -37.262 -24.104 35.0) (float-vector -37.262 -24.104 40.0) (float-vector -41.0 -25.3703 40.0) (float-vector -41.0 -25.3703 35.0)))
         (instance face :init :vertices (list (float-vector -37.262 -24.104 35.0) (float-vector -18.2958 -24.0511 35.0) (float-vector -18.2958 -24.0511 40.0) (float-vector -37.262 -24.104 40.0)))
         (instance face :init :vertices (list (float-vector -37.262 24.104 35.0) (float-vector -37.262 24.104 40.0) (float-vector -18.2958 24.0511 40.0) (float-vector -18.2958 24.0511 35.0)))
         (instance face :init :vertices (list (float-vector -37.262 24.104 35.0) (float-vector -41.0 25.3703 35.0) (float-vector -41.0 25.3703 40.0) (float-vector -37.262 24.104 40.0)))
         (instance face :init :vertices (list (float-vector -18.2958 -24.0511 40.0) (float-vector -26.8468 -15.5 40.0) (float-vector -31.0 0.0 40.0) (float-vector -26.8468 15.5 40.0) (float-vector -18.2958 24.0511 40.0) (float-vector -37.262 24.104 40.0) (float-vector -41.0 25.3703 40.0) (float-vector -41.0 -25.3703 40.0) (float-vector -37.262 -24.104 40.0)))
         (instance face :init :vertices (list (float-vector -18.2958 24.0511 35.0) (float-vector -15.5 26.8468 35.0) (float-vector -3.814697e-05 31.0 35.0) (float-vector 15.5 26.8468 35.0) (float-vector 26.8468 15.5 35.0) (float-vector 31.0 2.288818e-05 35.0) (float-vector 26.8468 -15.5 35.0) (float-vector 15.5 -26.8468 35.0) (float-vector 0.0 -31.0 35.0) (float-vector -15.5 -26.8468 35.0) (float-vector -18.2958 -24.0511 35.0) (float-vector -37.262 -24.104 35.0) (float-vector -41.0 -25.3703 35.0) (float-vector -41.0 25.3703 35.0) (float-vector -37.262 24.104 35.0)))
         (instance face :init :vertices (list (float-vector -31.0 0.0 40.0) (float-vector -31.0 0.0 45.0) (float-vector -26.8468 15.5 45.0) (float-vector -26.8468 15.5 40.0)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 45.0) (float-vector -15.5 26.8468 45.0) (float-vector -15.5 26.8468 35.0) (float-vector -18.2958 24.0511 35.0) (float-vector -18.2958 24.0511 40.0) (float-vector -26.8468 15.5 40.0)))
         (instance face :init :vertices (list (float-vector -15.5 26.8468 45.0) (float-vector -4.577637e-05 31.0 45.0) (float-vector -3.814697e-05 31.0 35.0) (float-vector -15.5 26.8468 35.0)))
         (instance face :init :vertices (list (float-vector -4.577637e-05 31.0 45.0) (float-vector 15.5 26.8468 45.0) (float-vector 15.5 26.8468 35.0) (float-vector -3.814697e-05 31.0 35.0)))
         (instance face :init :vertices (list (float-vector 15.5 26.8468 45.0) (float-vector 26.8468 15.5 45.0) (float-vector 26.8468 15.5 35.0) (float-vector 15.5 26.8468 35.0)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 45.0) (float-vector 31.0 2.288818e-05 45.0) (float-vector 31.0 2.288818e-05 35.0) (float-vector 26.8468 15.5 35.0)))
         (instance face :init :vertices (list (float-vector 31.0 2.288818e-05 45.0) (float-vector 26.8468 -15.5 45.0) (float-vector 26.8468 -15.5 35.0) (float-vector 31.0 2.288818e-05 35.0)))
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 45.0) (float-vector 15.5 -26.8468 45.0) (float-vector 15.5 -26.8468 35.0) (float-vector 26.8468 -15.5 35.0)))
         (instance face :init :vertices (list (float-vector 15.5 -26.8468 45.0) (float-vector -7.629395e-06 -31.0 45.0) (float-vector 0.0 -31.0 35.0) (float-vector 15.5 -26.8468 35.0)))
         (instance face :init :vertices (list (float-vector -7.629395e-06 -31.0 45.0) (float-vector -15.5 -26.8468 45.0) (float-vector -15.5 -26.8468 35.0) (float-vector 0.0 -31.0 35.0)))
         (instance face :init :vertices (list (float-vector -15.5 -26.8468 45.0) (float-vector -26.8468 -15.5 45.0) (float-vector -26.8468 -15.5 40.0) (float-vector -18.2958 -24.0511 40.0) (float-vector -18.2958 -24.0511 35.0) (float-vector -15.5 -26.8468 35.0)))
         (instance face :init :vertices (list (float-vector -26.8468 -15.5 45.0) (float-vector -31.0 0.0 45.0) (float-vector -31.0 0.0 40.0) (float-vector -26.8468 -15.5 40.0)))
         (instance face :init :vertices (list (float-vector -31.0 0.0 45.0) (float-vector -26.8468 -15.5 45.0) (float-vector -15.5 -26.8468 45.0) (float-vector -7.629395e-06 -31.0 45.0) (float-vector 15.5 -26.8468 45.0) (float-vector 26.8468 -15.5 45.0) (float-vector 31.0 2.288818e-05 45.0) (float-vector 26.8468 15.5 45.0) (float-vector 15.5 26.8468 45.0) (float-vector -4.577637e-05 31.0 45.0) (float-vector -15.5 26.8468 45.0) (float-vector -26.8468 15.5 45.0)))
         (instance face :init :vertices (list (float-vector -80.0 67.5 80.5) (float-vector -79.9999 67.5 -114.5) (float-vector -79.9999 -67.5 -114.5) (float-vector -80.0 -67.5 80.5)))
         (instance face :init :vertices (list (float-vector -80.0 67.5 80.5) (float-vector -41.0 67.5 80.5) (float-vector -41.0 67.5 -114.5) (float-vector -79.9999 67.5 -114.5)))
         (instance face :init :vertices (list (float-vector -41.0 67.5 80.5) (float-vector -41.0 -67.5 80.5) (float-vector -41.0 -67.5 -114.5) (float-vector -41.0 67.5 -114.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -41.0 25.3703 35.0) (float-vector -41.0 -25.3703 35.0) (float-vector -41.0 -25.3703 40.0) (float-vector -41.0 25.3703 40.0)))
         (instance hole :init :vertices (list (float-vector -41.0 -25.3703 -53.0) (float-vector -41.0 -25.3703 -48.0) (float-vector -41.0 25.3703 -48.0) (float-vector -41.0 25.3703 -53.0)))
))
         (instance face :init :vertices (list (float-vector -41.0 -67.5 -114.5) (float-vector -79.9999 -67.5 -114.5) (float-vector -79.9999 67.5 -114.5) (float-vector -41.0 67.5 -114.5)))
         (instance face :init :vertices (list (float-vector -41.0 -67.5 80.5) (float-vector -80.0 -67.5 80.5) (float-vector -79.9999 -67.5 -114.5) (float-vector -41.0 -67.5 -114.5)))
         (instance face :init :vertices (list (float-vector -80.0 -67.5 80.5) (float-vector -41.0 -67.5 80.5) (float-vector -41.0 67.5 80.5) (float-vector -80.0 67.5 80.5)))
         (instance face :init :vertices (list (float-vector -31.0 0.0 -47.5) (float-vector -26.8467 -15.5 -47.5) (float-vector -15.4999 -26.8468 -47.5) (float-vector 5.340576e-05 -31.0 -47.5) (float-vector 15.5 -26.8468 -47.5) (float-vector 26.8468 -15.5 -47.5) (float-vector 31.0 1.525879e-05 -47.5) (float-vector 26.8468 15.5 -47.5) (float-vector 15.5 26.8468 -47.5) (float-vector 2.288818e-05 31.0 -47.5) (float-vector -15.5 26.8468 -47.5) (float-vector -26.8468 15.5 -47.5)))
         (instance face :init :vertices (list (float-vector -31.0 0.0 -47.5) (float-vector -31.0 0.0 -48.0) (float-vector -26.8467 -15.5 -48.0) (float-vector -26.8467 -15.5 -47.5)))
         (instance face :init :vertices (list (float-vector -30.9999 7.629395e-06 -89.5) (float-vector -26.8467 -15.5 -89.5) (float-vector -26.8467 -15.5 -53.0) (float-vector -31.0 0.0 -53.0)))
         (instance face :init :vertices (list (float-vector -30.9999 7.629395e-06 -89.5) (float-vector -26.8467 15.5 -89.5) (float-vector -15.4999 26.8468 -89.5) (float-vector 5.340576e-05 31.0 -89.5) (float-vector 15.5 26.8468 -89.5) (float-vector 26.8468 15.5 -89.5) (float-vector 31.0001 1.525879e-05 -89.5) (float-vector 26.8468 -15.5 -89.5) (float-vector 15.5001 -26.8468 -89.5) (float-vector 8.392334e-05 -31.0 -89.5) (float-vector -15.4999 -26.8468 -89.5) (float-vector -26.8467 -15.5 -89.5)))
         (instance face :init :vertices (list (float-vector -26.8467 -15.5 -48.0) (float-vector -18.2957 -24.0511 -48.0) (float-vector -18.2957 -24.0511 -53.0) (float-vector -26.8467 -15.5 -53.0) (float-vector -26.8467 -15.5 -89.5) (float-vector -15.4999 -26.8468 -89.5) (float-vector -15.4999 -26.8468 -47.5) (float-vector -26.8467 -15.5 -47.5)))
         (instance face :init :vertices (list (float-vector 8.392334e-05 -31.0 -89.5) (float-vector 5.340576e-05 -31.0 -47.5) (float-vector -15.4999 -26.8468 -47.5) (float-vector -15.4999 -26.8468 -89.5)))
         (instance face :init :vertices (list (float-vector 15.5001 -26.8468 -89.5) (float-vector 15.5 -26.8468 -47.5) (float-vector 5.340576e-05 -31.0 -47.5) (float-vector 8.392334e-05 -31.0 -89.5)))
         (instance face :init :vertices (list (float-vector 26.8468 -15.5 -89.5) (float-vector 26.8468 -15.5 -47.5) (float-vector 15.5 -26.8468 -47.5) (float-vector 15.5001 -26.8468 -89.5)))
         (instance face :init :vertices (list (float-vector 31.0001 1.525879e-05 -89.5) (float-vector 31.0 1.525879e-05 -47.5) (float-vector 26.8468 -15.5 -47.5) (float-vector 26.8468 -15.5 -89.5)))
         (instance face :init :vertices (list (float-vector 26.8468 15.5 -89.5) (float-vector 26.8468 15.5 -47.5) (float-vector 31.0 1.525879e-05 -47.5) (float-vector 31.0001 1.525879e-05 -89.5)))
         (instance face :init :vertices (list (float-vector 15.5 26.8468 -89.5) (float-vector 15.5 26.8468 -47.5) (float-vector 26.8468 15.5 -47.5) (float-vector 26.8468 15.5 -89.5)))
         (instance face :init :vertices (list (float-vector 5.340576e-05 31.0 -89.5) (float-vector 2.288818e-05 31.0 -47.5) (float-vector 15.5 26.8468 -47.5) (float-vector 15.5 26.8468 -89.5)))
         (instance face :init :vertices (list (float-vector -15.4999 26.8468 -89.5) (float-vector -15.5 26.8468 -47.5) (float-vector 2.288818e-05 31.0 -47.5) (float-vector 5.340576e-05 31.0 -89.5)))
         (instance face :init :vertices (list (float-vector -26.8467 15.5 -89.5) (float-vector -26.8468 15.5 -53.0) (float-vector -18.2957 24.0511 -53.0) (float-vector -18.2957 24.0511 -48.0) (float-vector -26.8468 15.5 -48.0) (float-vector -26.8468 15.5 -47.5) (float-vector -15.5 26.8468 -47.5) (float-vector -15.4999 26.8468 -89.5)))
         (instance face :init :vertices (list (float-vector -26.8468 15.5 -48.0) (float-vector -31.0 0.0 -48.0) (float-vector -31.0 0.0 -47.5) (float-vector -26.8468 15.5 -47.5)))
         (instance face :init :vertices (list (float-vector -31.0 0.0 -53.0) (float-vector -26.8468 15.5 -53.0) (float-vector -26.8467 15.5 -89.5) (float-vector -30.9999 7.629395e-06 -89.5)))
         (instance face :init :vertices (list (float-vector -41.0 25.3703 -53.0) (float-vector -37.262 24.104 -53.0) (float-vector -18.2957 24.0511 -53.0) (float-vector -26.8468 15.5 -53.0) (float-vector -31.0 0.0 -53.0) (float-vector -26.8467 -15.5 -53.0) (float-vector -18.2957 -24.0511 -53.0) (float-vector -37.262 -24.104 -53.0) (float-vector -41.0 -25.3703 -53.0)))
         (instance face :init :vertices (list (float-vector -41.0 -25.3703 -48.0) (float-vector -37.262 -24.104 -48.0) (float-vector -18.2957 -24.0511 -48.0) (float-vector -26.8467 -15.5 -48.0) (float-vector -31.0 0.0 -48.0) (float-vector -26.8468 15.5 -48.0) (float-vector -18.2957 24.0511 -48.0) (float-vector -37.262 24.104 -48.0) (float-vector -41.0 25.3703 -48.0)))
         (instance face :init :vertices (list (float-vector -37.262 24.104 -48.0) (float-vector -37.262 24.104 -53.0) (float-vector -41.0 25.3703 -53.0) (float-vector -41.0 25.3703 -48.0)))
         (instance face :init :vertices (list (float-vector -37.262 24.104 -53.0) (float-vector -37.262 24.104 -48.0) (float-vector -18.2957 24.0511 -48.0) (float-vector -18.2957 24.0511 -53.0)))
         (instance face :init :vertices (list (float-vector -37.262 -24.104 -48.0) (float-vector -37.262 -24.104 -53.0) (float-vector -18.2957 -24.0511 -53.0) (float-vector -18.2957 -24.0511 -48.0)))
         (instance face :init :vertices (list (float-vector -37.262 -24.104 -53.0) (float-vector -37.262 -24.104 -48.0) (float-vector -41.0 -25.3703 -48.0) (float-vector -41.0 -25.3703 -53.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -69.9999 67.5 -114.5) (float-vector -70.0 67.5 80.5) (float-vector -70.0 -67.5 80.5) (float-vector -69.9999 -67.5 -114.5)))
         (instance face :init :vertices (list (float-vector -80.0 67.5 80.5) (float-vector -79.9999 67.5 -114.5) (float-vector -79.9999 -67.5 -114.5) (float-vector -80.0 -67.5 80.5)))
         (instance face :init :vertices (list (float-vector -69.9999 67.5 -114.5) (float-vector -79.9999 67.5 -114.5) (float-vector -80.0 67.5 80.5) (float-vector -70.0 67.5 80.5)))
         (instance face :init :vertices (list (float-vector -69.9999 -67.5 -114.5) (float-vector -79.9999 -67.5 -114.5) (float-vector -79.9999 67.5 -114.5) (float-vector -69.9999 67.5 -114.5)))
         (instance face :init :vertices (list (float-vector -70.0 -67.5 80.5) (float-vector -80.0 -67.5 80.5) (float-vector -79.9999 -67.5 -114.5) (float-vector -69.9999 -67.5 -114.5)))
         (instance face :init :vertices (list (float-vector -70.0 67.5 80.5) (float-vector -80.0 67.5 80.5) (float-vector -80.0 -67.5 80.5) (float-vector -70.0 -67.5 80.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 -53.5 57.2057) (float-vector -79.4 -49.0 56.0) (float-vector -79.4 -44.5 57.2057) (float-vector -79.4 -41.2058 60.5) (float-vector -79.4 -40.0 64.9999) (float-vector -79.4 -41.2058 69.4999) (float-vector -79.4 -44.5 72.7942) (float-vector -79.4 -49.0 73.9999) (float-vector -79.4 -53.5 72.7942) (float-vector -79.4 -56.7942 69.5) (float-vector -79.4 -58.0 65.0) (float-vector -79.4 -56.7942 60.5)))
         (instance face :init :vertices (list (float-vector -79.5 -49.0 56.0) (float-vector -79.5 -53.5 57.2057) (float-vector -79.5 -56.7942 60.5) (float-vector -79.5 -58.0 65.0) (float-vector -79.5 -56.7942 69.5) (float-vector -79.5 -53.5 72.7942) (float-vector -79.5 -49.0 74.0) (float-vector -79.5 -44.5 72.7942) (float-vector -79.5 -41.2058 69.4999) (float-vector -79.5 -40.0 64.9999) (float-vector -79.5 -41.2058 60.5) (float-vector -79.5 -44.5 57.2057)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 57.2057) (float-vector -79.5 -53.5 57.2057) (float-vector -79.5 -49.0 56.0) (float-vector -79.4 -49.0 56.0)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 60.5) (float-vector -79.5 -56.7942 60.5) (float-vector -79.5 -53.5 57.2057) (float-vector -79.4 -53.5 57.2057)))
         (instance face :init :vertices (list (float-vector -79.4 -58.0 65.0) (float-vector -79.5 -58.0 65.0) (float-vector -79.5 -56.7942 60.5) (float-vector -79.4 -56.7942 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 69.5) (float-vector -79.5 -56.7942 69.5) (float-vector -79.5 -58.0 65.0) (float-vector -79.4 -58.0 65.0)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 72.7942) (float-vector -79.5 -53.5 72.7942) (float-vector -79.5 -56.7942 69.5) (float-vector -79.4 -56.7942 69.5)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 73.9999) (float-vector -79.5 -49.0 74.0) (float-vector -79.5 -53.5 72.7942) (float-vector -79.4 -53.5 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 72.7942) (float-vector -79.5 -44.5 72.7942) (float-vector -79.5 -49.0 74.0) (float-vector -79.4 -49.0 73.9999)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 69.4999) (float-vector -79.5 -41.2058 69.4999) (float-vector -79.5 -44.5 72.7942) (float-vector -79.4 -44.5 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 -40.0 64.9999) (float-vector -79.5 -40.0 64.9999) (float-vector -79.5 -41.2058 69.4999) (float-vector -79.4 -41.2058 69.4999)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 60.5) (float-vector -79.5 -41.2058 60.5) (float-vector -79.5 -40.0 64.9999) (float-vector -79.4 -40.0 64.9999)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 57.2057) (float-vector -79.5 -44.5 57.2057) (float-vector -79.5 -41.2058 60.5) (float-vector -79.4 -41.2058 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 56.0) (float-vector -79.5 -49.0 56.0) (float-vector -79.5 -44.5 57.2057) (float-vector -79.4 -44.5 57.2057)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 -20.8 57.2057) (float-vector -79.4 -16.3 56.0) (float-vector -79.4 -11.8 57.2057) (float-vector -79.4 -8.50577 60.5) (float-vector -79.4 -7.3 64.9999) (float-vector -79.4 -8.50577 69.4999) (float-vector -79.4 -11.8 72.7942) (float-vector -79.4 -16.3 73.9999) (float-vector -79.4 -20.8 72.7942) (float-vector -79.4 -24.0942 69.5) (float-vector -79.4 -25.3 65.0) (float-vector -79.4 -24.0942 60.5)))
         (instance face :init :vertices (list (float-vector -79.5 -16.3 56.0) (float-vector -79.5 -20.8 57.2057) (float-vector -79.5 -24.0942 60.5) (float-vector -79.5 -25.3 65.0) (float-vector -79.5 -24.0942 69.5) (float-vector -79.5 -20.8 72.7942) (float-vector -79.5 -16.3 74.0) (float-vector -79.5 -11.8 72.7942) (float-vector -79.5 -8.50577 69.4999) (float-vector -79.5 -7.3 64.9999) (float-vector -79.5 -8.50577 60.5) (float-vector -79.5 -11.8 57.2057)))
         (instance face :init :vertices (list (float-vector -79.4 -20.8 57.2057) (float-vector -79.5 -20.8 57.2057) (float-vector -79.5 -16.3 56.0) (float-vector -79.4 -16.3 56.0)))
         (instance face :init :vertices (list (float-vector -79.4 -24.0942 60.5) (float-vector -79.5 -24.0942 60.5) (float-vector -79.5 -20.8 57.2057) (float-vector -79.4 -20.8 57.2057)))
         (instance face :init :vertices (list (float-vector -79.4 -25.3 65.0) (float-vector -79.5 -25.3 65.0) (float-vector -79.5 -24.0942 60.5) (float-vector -79.4 -24.0942 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 -24.0942 69.5) (float-vector -79.5 -24.0942 69.5) (float-vector -79.5 -25.3 65.0) (float-vector -79.4 -25.3 65.0)))
         (instance face :init :vertices (list (float-vector -79.4 -20.8 72.7942) (float-vector -79.5 -20.8 72.7942) (float-vector -79.5 -24.0942 69.5) (float-vector -79.4 -24.0942 69.5)))
         (instance face :init :vertices (list (float-vector -79.4 -16.3 73.9999) (float-vector -79.5 -16.3 74.0) (float-vector -79.5 -20.8 72.7942) (float-vector -79.4 -20.8 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 -11.8 72.7942) (float-vector -79.5 -11.8 72.7942) (float-vector -79.5 -16.3 74.0) (float-vector -79.4 -16.3 73.9999)))
         (instance face :init :vertices (list (float-vector -79.4 -8.50577 69.4999) (float-vector -79.5 -8.50577 69.4999) (float-vector -79.5 -11.8 72.7942) (float-vector -79.4 -11.8 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 -7.3 64.9999) (float-vector -79.5 -7.3 64.9999) (float-vector -79.5 -8.50577 69.4999) (float-vector -79.4 -8.50577 69.4999)))
         (instance face :init :vertices (list (float-vector -79.4 -8.50577 60.5) (float-vector -79.5 -8.50577 60.5) (float-vector -79.5 -7.3 64.9999) (float-vector -79.4 -7.3 64.9999)))
         (instance face :init :vertices (list (float-vector -79.4 -11.8 57.2057) (float-vector -79.5 -11.8 57.2057) (float-vector -79.5 -8.50577 60.5) (float-vector -79.4 -8.50577 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 -16.3 56.0) (float-vector -79.5 -16.3 56.0) (float-vector -79.5 -11.8 57.2057) (float-vector -79.4 -11.8 57.2057)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 11.8 57.2057) (float-vector -79.4 16.3 56.0) (float-vector -79.4 20.8 57.2057) (float-vector -79.4 24.0942 60.5) (float-vector -79.4 25.3 64.9999) (float-vector -79.4 24.0942 69.4999) (float-vector -79.4 20.8 72.7942) (float-vector -79.4 16.3 73.9999) (float-vector -79.4 11.8 72.7942) (float-vector -79.4 8.50577 69.5) (float-vector -79.4 7.3 65.0) (float-vector -79.4 8.50576 60.5)))
         (instance face :init :vertices (list (float-vector -79.5 16.3 56.0) (float-vector -79.5 11.8 57.2057) (float-vector -79.5 8.50576 60.5) (float-vector -79.5 7.3 65.0) (float-vector -79.5 8.50577 69.5) (float-vector -79.5 11.8 72.7942) (float-vector -79.5 16.3 74.0) (float-vector -79.5 20.8 72.7942) (float-vector -79.5 24.0942 69.4999) (float-vector -79.5 25.3 64.9999) (float-vector -79.5 24.0942 60.5) (float-vector -79.5 20.8 57.2057)))
         (instance face :init :vertices (list (float-vector -79.4 11.8 57.2057) (float-vector -79.5 11.8 57.2057) (float-vector -79.5 16.3 56.0) (float-vector -79.4 16.3 56.0)))
         (instance face :init :vertices (list (float-vector -79.4 8.50576 60.5) (float-vector -79.5 8.50576 60.5) (float-vector -79.5 11.8 57.2057) (float-vector -79.4 11.8 57.2057)))
         (instance face :init :vertices (list (float-vector -79.4 7.3 65.0) (float-vector -79.5 7.3 65.0) (float-vector -79.5 8.50576 60.5) (float-vector -79.4 8.50576 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 8.50577 69.5) (float-vector -79.5 8.50577 69.5) (float-vector -79.5 7.3 65.0) (float-vector -79.4 7.3 65.0)))
         (instance face :init :vertices (list (float-vector -79.4 11.8 72.7942) (float-vector -79.5 11.8 72.7942) (float-vector -79.5 8.50577 69.5) (float-vector -79.4 8.50577 69.5)))
         (instance face :init :vertices (list (float-vector -79.4 16.3 73.9999) (float-vector -79.5 16.3 74.0) (float-vector -79.5 11.8 72.7942) (float-vector -79.4 11.8 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 20.8 72.7942) (float-vector -79.5 20.8 72.7942) (float-vector -79.5 16.3 74.0) (float-vector -79.4 16.3 73.9999)))
         (instance face :init :vertices (list (float-vector -79.4 24.0942 69.4999) (float-vector -79.5 24.0942 69.4999) (float-vector -79.5 20.8 72.7942) (float-vector -79.4 20.8 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 25.3 64.9999) (float-vector -79.5 25.3 64.9999) (float-vector -79.5 24.0942 69.4999) (float-vector -79.4 24.0942 69.4999)))
         (instance face :init :vertices (list (float-vector -79.4 24.0942 60.5) (float-vector -79.5 24.0942 60.5) (float-vector -79.5 25.3 64.9999) (float-vector -79.4 25.3 64.9999)))
         (instance face :init :vertices (list (float-vector -79.4 20.8 57.2057) (float-vector -79.5 20.8 57.2057) (float-vector -79.5 24.0942 60.5) (float-vector -79.4 24.0942 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 16.3 56.0) (float-vector -79.5 16.3 56.0) (float-vector -79.5 20.8 57.2057) (float-vector -79.4 20.8 57.2057)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 44.5 57.2057) (float-vector -79.4 49.0 56.0) (float-vector -79.4 53.5 57.2057) (float-vector -79.4 56.7942 60.5) (float-vector -79.4 58.0 64.9999) (float-vector -79.4 56.7942 69.4999) (float-vector -79.4 53.5 72.7942) (float-vector -79.4 49.0 73.9999) (float-vector -79.4 44.5 72.7942) (float-vector -79.4 41.2058 69.5) (float-vector -79.4 40.0 65.0) (float-vector -79.4 41.2058 60.5)))
         (instance face :init :vertices (list (float-vector -79.5 49.0 56.0) (float-vector -79.5 44.5 57.2057) (float-vector -79.5 41.2058 60.5) (float-vector -79.5 40.0 65.0) (float-vector -79.5 41.2058 69.5) (float-vector -79.5 44.5 72.7942) (float-vector -79.5 49.0 74.0) (float-vector -79.5 53.5 72.7942) (float-vector -79.5 56.7942 69.4999) (float-vector -79.5 58.0 64.9999) (float-vector -79.5 56.7942 60.5) (float-vector -79.5 53.5 57.2057)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 57.2057) (float-vector -79.5 44.5 57.2057) (float-vector -79.5 49.0 56.0) (float-vector -79.4 49.0 56.0)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 60.5) (float-vector -79.5 41.2058 60.5) (float-vector -79.5 44.5 57.2057) (float-vector -79.4 44.5 57.2057)))
         (instance face :init :vertices (list (float-vector -79.4 40.0 65.0) (float-vector -79.5 40.0 65.0) (float-vector -79.5 41.2058 60.5) (float-vector -79.4 41.2058 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 69.5) (float-vector -79.5 41.2058 69.5) (float-vector -79.5 40.0 65.0) (float-vector -79.4 40.0 65.0)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 72.7942) (float-vector -79.5 44.5 72.7942) (float-vector -79.5 41.2058 69.5) (float-vector -79.4 41.2058 69.5)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 73.9999) (float-vector -79.5 49.0 74.0) (float-vector -79.5 44.5 72.7942) (float-vector -79.4 44.5 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 72.7942) (float-vector -79.5 53.5 72.7942) (float-vector -79.5 49.0 74.0) (float-vector -79.4 49.0 73.9999)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 69.4999) (float-vector -79.5 56.7942 69.4999) (float-vector -79.5 53.5 72.7942) (float-vector -79.4 53.5 72.7942)))
         (instance face :init :vertices (list (float-vector -79.4 58.0 64.9999) (float-vector -79.5 58.0 64.9999) (float-vector -79.5 56.7942 69.4999) (float-vector -79.4 56.7942 69.4999)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 60.5) (float-vector -79.5 56.7942 60.5) (float-vector -79.5 58.0 64.9999) (float-vector -79.4 58.0 64.9999)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 57.2057) (float-vector -79.5 53.5 57.2057) (float-vector -79.5 56.7942 60.5) (float-vector -79.4 56.7942 60.5)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 56.0) (float-vector -79.5 49.0 56.0) (float-vector -79.5 53.5 57.2057) (float-vector -79.4 53.5 57.2057)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -4.49426) (float-vector -79.4 -49.0 -5.70004) (float-vector -79.4 -44.5 -4.49427) (float-vector -79.4 -41.2058 -1.20004) (float-vector -79.4 -40.0 3.29996) (float-vector -79.4 -41.2057 7.79996) (float-vector -79.4 -44.5 11.0942) (float-vector -79.4 -49.0 12.3) (float-vector -79.4 -53.5 11.0942) (float-vector -79.4 -56.7942 7.79997) (float-vector -79.4 -58.0 3.29997) (float-vector -79.4 -56.7942 -1.20003)))
         (instance face :init :vertices (list (float-vector -79.5 -49.0 -5.70004) (float-vector -79.5 -53.5 -4.49426) (float-vector -79.5 -56.7942 -1.20003) (float-vector -79.5 -58.0 3.29997) (float-vector -79.5 -56.7942 7.79996) (float-vector -79.5 -53.5 11.0942) (float-vector -79.5 -49.0 12.3) (float-vector -79.5 -44.5 11.0942) (float-vector -79.5 -41.2057 7.79996) (float-vector -79.5 -40.0 3.29996) (float-vector -79.5 -41.2058 -1.20004) (float-vector -79.5 -44.5 -4.49426)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -4.49426) (float-vector -79.5 -53.5 -4.49426) (float-vector -79.5 -49.0 -5.70004) (float-vector -79.4 -49.0 -5.70004)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 -1.20003) (float-vector -79.5 -56.7942 -1.20003) (float-vector -79.5 -53.5 -4.49426) (float-vector -79.4 -53.5 -4.49426)))
         (instance face :init :vertices (list (float-vector -79.4 -58.0 3.29997) (float-vector -79.5 -58.0 3.29997) (float-vector -79.5 -56.7942 -1.20003) (float-vector -79.4 -56.7942 -1.20003)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 7.79997) (float-vector -79.5 -56.7942 7.79996) (float-vector -79.5 -58.0 3.29997) (float-vector -79.4 -58.0 3.29997)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 11.0942) (float-vector -79.5 -53.5 11.0942) (float-vector -79.5 -56.7942 7.79996) (float-vector -79.4 -56.7942 7.79997)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 12.3) (float-vector -79.5 -49.0 12.3) (float-vector -79.5 -53.5 11.0942) (float-vector -79.4 -53.5 11.0942)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 11.0942) (float-vector -79.5 -44.5 11.0942) (float-vector -79.5 -49.0 12.3) (float-vector -79.4 -49.0 12.3)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2057 7.79996) (float-vector -79.5 -41.2057 7.79996) (float-vector -79.5 -44.5 11.0942) (float-vector -79.4 -44.5 11.0942)))
         (instance face :init :vertices (list (float-vector -79.4 -40.0 3.29996) (float-vector -79.5 -40.0 3.29996) (float-vector -79.5 -41.2057 7.79996) (float-vector -79.4 -41.2057 7.79996)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 -1.20004) (float-vector -79.5 -41.2058 -1.20004) (float-vector -79.5 -40.0 3.29996) (float-vector -79.4 -40.0 3.29996)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 -4.49427) (float-vector -79.5 -44.5 -4.49426) (float-vector -79.5 -41.2058 -1.20004) (float-vector -79.4 -41.2058 -1.20004)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 -5.70004) (float-vector -79.5 -49.0 -5.70004) (float-vector -79.5 -44.5 -4.49426) (float-vector -79.4 -44.5 -4.49427)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 44.5 -4.49426) (float-vector -79.4 49.0 -5.70004) (float-vector -79.4 53.5 -4.49427) (float-vector -79.4 56.7942 -1.20004) (float-vector -79.4 58.0 3.29996) (float-vector -79.4 56.7942 7.79996) (float-vector -79.4 53.5 11.0942) (float-vector -79.4 49.0 12.3) (float-vector -79.4 44.5 11.0942) (float-vector -79.4 41.2058 7.79996) (float-vector -79.4 40.0 3.29997) (float-vector -79.4 41.2058 -1.20003)))
         (instance face :init :vertices (list (float-vector -79.5 49.0 -5.70004) (float-vector -79.5 44.5 -4.49426) (float-vector -79.5 41.2058 -1.20003) (float-vector -79.5 40.0 3.29997) (float-vector -79.5 41.2058 7.79996) (float-vector -79.5 44.5 11.0942) (float-vector -79.5 49.0 12.3) (float-vector -79.5 53.5 11.0942) (float-vector -79.5 56.7942 7.79996) (float-vector -79.5 58.0 3.29996) (float-vector -79.5 56.7942 -1.20004) (float-vector -79.5 53.5 -4.49427)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 -4.49426) (float-vector -79.5 44.5 -4.49426) (float-vector -79.5 49.0 -5.70004) (float-vector -79.4 49.0 -5.70004)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 -1.20003) (float-vector -79.5 41.2058 -1.20003) (float-vector -79.5 44.5 -4.49426) (float-vector -79.4 44.5 -4.49426)))
         (instance face :init :vertices (list (float-vector -79.4 40.0 3.29997) (float-vector -79.5 40.0 3.29997) (float-vector -79.5 41.2058 -1.20003) (float-vector -79.4 41.2058 -1.20003)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 7.79996) (float-vector -79.5 41.2058 7.79996) (float-vector -79.5 40.0 3.29997) (float-vector -79.4 40.0 3.29997)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 11.0942) (float-vector -79.5 44.5 11.0942) (float-vector -79.5 41.2058 7.79996) (float-vector -79.4 41.2058 7.79996)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 12.3) (float-vector -79.5 49.0 12.3) (float-vector -79.5 44.5 11.0942) (float-vector -79.4 44.5 11.0942)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 11.0942) (float-vector -79.5 53.5 11.0942) (float-vector -79.5 49.0 12.3) (float-vector -79.4 49.0 12.3)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 7.79996) (float-vector -79.5 56.7942 7.79996) (float-vector -79.5 53.5 11.0942) (float-vector -79.4 53.5 11.0942)))
         (instance face :init :vertices (list (float-vector -79.4 58.0 3.29996) (float-vector -79.5 58.0 3.29996) (float-vector -79.5 56.7942 7.79996) (float-vector -79.4 56.7942 7.79996)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 -1.20004) (float-vector -79.5 56.7942 -1.20004) (float-vector -79.5 58.0 3.29996) (float-vector -79.4 58.0 3.29996)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 -4.49427) (float-vector -79.5 53.5 -4.49427) (float-vector -79.5 56.7942 -1.20004) (float-vector -79.4 56.7942 -1.20004)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 -5.70004) (float-vector -79.5 49.0 -5.70004) (float-vector -79.5 53.5 -4.49427) (float-vector -79.4 53.5 -4.49427)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -66.0942) (float-vector -79.4 -49.0 -67.3) (float-vector -79.4 -44.5 -66.0942) (float-vector -79.4 -41.2058 -62.8) (float-vector -79.4 -40.0 -58.3) (float-vector -79.4 -41.2058 -53.8) (float-vector -79.4 -44.5 -50.5058) (float-vector -79.4 -49.0 -49.3) (float-vector -79.4 -53.5 -50.5058) (float-vector -79.4 -56.7942 -53.8) (float-vector -79.4 -58.0 -58.3) (float-vector -79.4 -56.7942 -62.8)))
         (instance face :init :vertices (list (float-vector -79.5 -49.0 -67.3) (float-vector -79.5 -53.5 -66.0942) (float-vector -79.5 -56.7942 -62.8) (float-vector -79.5 -58.0 -58.3) (float-vector -79.5 -56.7942 -53.8) (float-vector -79.5 -53.5 -50.5058) (float-vector -79.5 -49.0 -49.3) (float-vector -79.5 -44.5 -50.5058) (float-vector -79.5 -41.2058 -53.8) (float-vector -79.5 -40.0 -58.3) (float-vector -79.5 -41.2058 -62.8) (float-vector -79.5 -44.5 -66.0942)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -66.0942) (float-vector -79.5 -53.5 -66.0942) (float-vector -79.5 -49.0 -67.3) (float-vector -79.4 -49.0 -67.3)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 -62.8) (float-vector -79.5 -56.7942 -62.8) (float-vector -79.5 -53.5 -66.0942) (float-vector -79.4 -53.5 -66.0942)))
         (instance face :init :vertices (list (float-vector -79.4 -58.0 -58.3) (float-vector -79.5 -58.0 -58.3) (float-vector -79.5 -56.7942 -62.8) (float-vector -79.4 -56.7942 -62.8)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 -53.8) (float-vector -79.5 -56.7942 -53.8) (float-vector -79.5 -58.0 -58.3) (float-vector -79.4 -58.0 -58.3)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -50.5058) (float-vector -79.5 -53.5 -50.5058) (float-vector -79.5 -56.7942 -53.8) (float-vector -79.4 -56.7942 -53.8)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 -49.3) (float-vector -79.5 -49.0 -49.3) (float-vector -79.5 -53.5 -50.5058) (float-vector -79.4 -53.5 -50.5058)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 -50.5058) (float-vector -79.5 -44.5 -50.5058) (float-vector -79.5 -49.0 -49.3) (float-vector -79.4 -49.0 -49.3)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 -53.8) (float-vector -79.5 -41.2058 -53.8) (float-vector -79.5 -44.5 -50.5058) (float-vector -79.4 -44.5 -50.5058)))
         (instance face :init :vertices (list (float-vector -79.4 -40.0 -58.3) (float-vector -79.5 -40.0 -58.3) (float-vector -79.5 -41.2058 -53.8) (float-vector -79.4 -41.2058 -53.8)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 -62.8) (float-vector -79.5 -41.2058 -62.8) (float-vector -79.5 -40.0 -58.3) (float-vector -79.4 -40.0 -58.3)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 -66.0942) (float-vector -79.5 -44.5 -66.0942) (float-vector -79.5 -41.2058 -62.8) (float-vector -79.4 -41.2058 -62.8)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 -67.3) (float-vector -79.5 -49.0 -67.3) (float-vector -79.5 -44.5 -66.0942) (float-vector -79.4 -44.5 -66.0942)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.4 44.5 -66.0942) (float-vector -79.4 49.0 -67.3) (float-vector -79.4 53.5 -66.0942) (float-vector -79.4 56.7942 -62.8) (float-vector -79.4 58.0 -58.3) (float-vector -79.4 56.7942 -53.8) (float-vector -79.4 53.5 -50.5058) (float-vector -79.4 49.0 -49.3) (float-vector -79.4 44.5 -50.5058) (float-vector -79.4 41.2058 -53.8) (float-vector -79.4 40.0 -58.3) (float-vector -79.4 41.2058 -62.8)))
         (instance face :init :vertices (list (float-vector -79.5 49.0 -67.3) (float-vector -79.5 44.5 -66.0942) (float-vector -79.5 41.2058 -62.8) (float-vector -79.5 40.0 -58.3) (float-vector -79.5 41.2058 -53.8) (float-vector -79.5 44.5 -50.5058) (float-vector -79.5 49.0 -49.3) (float-vector -79.5 53.5 -50.5058) (float-vector -79.5 56.7942 -53.8) (float-vector -79.5 58.0 -58.3) (float-vector -79.5 56.7942 -62.8) (float-vector -79.5 53.5 -66.0942)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 -66.0942) (float-vector -79.5 44.5 -66.0942) (float-vector -79.5 49.0 -67.3) (float-vector -79.4 49.0 -67.3)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 -62.8) (float-vector -79.5 41.2058 -62.8) (float-vector -79.5 44.5 -66.0942) (float-vector -79.4 44.5 -66.0942)))
         (instance face :init :vertices (list (float-vector -79.4 40.0 -58.3) (float-vector -79.5 40.0 -58.3) (float-vector -79.5 41.2058 -62.8) (float-vector -79.4 41.2058 -62.8)))
         (instance face :init :vertices (list (float-vector -79.4 41.2058 -53.8) (float-vector -79.5 41.2058 -53.8) (float-vector -79.5 40.0 -58.3) (float-vector -79.4 40.0 -58.3)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 -50.5058) (float-vector -79.5 44.5 -50.5058) (float-vector -79.5 41.2058 -53.8) (float-vector -79.4 41.2058 -53.8)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 -49.3) (float-vector -79.5 49.0 -49.3) (float-vector -79.5 44.5 -50.5058) (float-vector -79.4 44.5 -50.5058)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 -50.5058) (float-vector -79.5 53.5 -50.5058) (float-vector -79.5 49.0 -49.3) (float-vector -79.4 49.0 -49.3)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 -53.8) (float-vector -79.5 56.7942 -53.8) (float-vector -79.5 53.5 -50.5058) (float-vector -79.4 53.5 -50.5058)))
         (instance face :init :vertices (list (float-vector -79.4 58.0 -58.3) (float-vector -79.5 58.0 -58.3) (float-vector -79.5 56.7942 -53.8) (float-vector -79.4 56.7942 -53.8)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 -62.8) (float-vector -79.5 56.7942 -62.8) (float-vector -79.5 58.0 -58.3) (float-vector -79.4 58.0 -58.3)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 -66.0942) (float-vector -79.5 53.5 -66.0942) (float-vector -79.5 56.7942 -62.8) (float-vector -79.4 56.7942 -62.8)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 -67.3) (float-vector -79.5 49.0 -67.3) (float-vector -79.5 53.5 -66.0942) (float-vector -79.4 53.5 -66.0942)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.3999 -53.5 -127.794) (float-vector -79.3999 -49.0 -129.0) (float-vector -79.3999 -44.5 -127.794) (float-vector -79.3999 -41.2058 -124.5) (float-vector -79.4 -40.0 -120.0) (float-vector -79.4 -41.2058 -115.5) (float-vector -79.4 -44.5 -112.206) (float-vector -79.4 -49.0 -111.0) (float-vector -79.4 -53.5 -112.206) (float-vector -79.4 -56.7942 -115.5) (float-vector -79.3999 -58.0 -120.0) (float-vector -79.4 -56.7942 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4999 -49.0 -129.0) (float-vector -79.4999 -53.5 -127.794) (float-vector -79.4999 -56.7942 -124.5) (float-vector -79.4999 -58.0 -120.0) (float-vector -79.4999 -56.7942 -115.5) (float-vector -79.4999 -53.5 -112.206) (float-vector -79.4999 -49.0 -111.0) (float-vector -79.4999 -44.5 -112.206) (float-vector -79.4999 -41.2058 -115.5) (float-vector -79.4999 -40.0 -120.0) (float-vector -79.4999 -41.2058 -124.5) (float-vector -79.4999 -44.5 -127.794)))
         (instance face :init :vertices (list (float-vector -79.3999 -53.5 -127.794) (float-vector -79.4999 -53.5 -127.794) (float-vector -79.4999 -49.0 -129.0) (float-vector -79.3999 -49.0 -129.0)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 -124.5) (float-vector -79.4999 -56.7942 -124.5) (float-vector -79.4999 -53.5 -127.794) (float-vector -79.3999 -53.5 -127.794)))
         (instance face :init :vertices (list (float-vector -79.3999 -58.0 -120.0) (float-vector -79.4999 -58.0 -120.0) (float-vector -79.4999 -56.7942 -124.5) (float-vector -79.4 -56.7942 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4 -56.7942 -115.5) (float-vector -79.4999 -56.7942 -115.5) (float-vector -79.4999 -58.0 -120.0) (float-vector -79.3999 -58.0 -120.0)))
         (instance face :init :vertices (list (float-vector -79.4 -53.5 -112.206) (float-vector -79.4999 -53.5 -112.206) (float-vector -79.4999 -56.7942 -115.5) (float-vector -79.4 -56.7942 -115.5)))
         (instance face :init :vertices (list (float-vector -79.4 -49.0 -111.0) (float-vector -79.4999 -49.0 -111.0) (float-vector -79.4999 -53.5 -112.206) (float-vector -79.4 -53.5 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 -44.5 -112.206) (float-vector -79.4999 -44.5 -112.206) (float-vector -79.4999 -49.0 -111.0) (float-vector -79.4 -49.0 -111.0)))
         (instance face :init :vertices (list (float-vector -79.4 -41.2058 -115.5) (float-vector -79.4999 -41.2058 -115.5) (float-vector -79.4999 -44.5 -112.206) (float-vector -79.4 -44.5 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 -40.0 -120.0) (float-vector -79.4999 -40.0 -120.0) (float-vector -79.4999 -41.2058 -115.5) (float-vector -79.4 -41.2058 -115.5)))
         (instance face :init :vertices (list (float-vector -79.3999 -41.2058 -124.5) (float-vector -79.4999 -41.2058 -124.5) (float-vector -79.4999 -40.0 -120.0) (float-vector -79.4 -40.0 -120.0)))
         (instance face :init :vertices (list (float-vector -79.3999 -44.5 -127.794) (float-vector -79.4999 -44.5 -127.794) (float-vector -79.4999 -41.2058 -124.5) (float-vector -79.3999 -41.2058 -124.5)))
         (instance face :init :vertices (list (float-vector -79.3999 -49.0 -129.0) (float-vector -79.4999 -49.0 -129.0) (float-vector -79.4999 -44.5 -127.794) (float-vector -79.3999 -44.5 -127.794)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.3999 -20.8 -127.794) (float-vector -79.3999 -16.3 -129.0) (float-vector -79.3999 -11.8 -127.794) (float-vector -79.3999 -8.50577 -124.5) (float-vector -79.4 -7.3 -120.0) (float-vector -79.4 -8.50577 -115.5) (float-vector -79.4 -11.8 -112.206) (float-vector -79.4 -16.3 -111.0) (float-vector -79.4 -20.8 -112.206) (float-vector -79.4 -24.0942 -115.5) (float-vector -79.3999 -25.3 -120.0) (float-vector -79.3999 -24.0942 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4999 -16.3 -129.0) (float-vector -79.4999 -20.8 -127.794) (float-vector -79.4999 -24.0942 -124.5) (float-vector -79.4999 -25.3 -120.0) (float-vector -79.4999 -24.0942 -115.5) (float-vector -79.4999 -20.8 -112.206) (float-vector -79.4999 -16.3 -111.0) (float-vector -79.4999 -11.8 -112.206) (float-vector -79.4999 -8.50577 -115.5) (float-vector -79.4999 -7.3 -120.0) (float-vector -79.4999 -8.50577 -124.5) (float-vector -79.4999 -11.8 -127.794)))
         (instance face :init :vertices (list (float-vector -79.3999 -20.8 -127.794) (float-vector -79.4999 -20.8 -127.794) (float-vector -79.4999 -16.3 -129.0) (float-vector -79.3999 -16.3 -129.0)))
         (instance face :init :vertices (list (float-vector -79.3999 -24.0942 -124.5) (float-vector -79.4999 -24.0942 -124.5) (float-vector -79.4999 -20.8 -127.794) (float-vector -79.3999 -20.8 -127.794)))
         (instance face :init :vertices (list (float-vector -79.3999 -25.3 -120.0) (float-vector -79.4999 -25.3 -120.0) (float-vector -79.4999 -24.0942 -124.5) (float-vector -79.3999 -24.0942 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4 -24.0942 -115.5) (float-vector -79.4999 -24.0942 -115.5) (float-vector -79.4999 -25.3 -120.0) (float-vector -79.3999 -25.3 -120.0)))
         (instance face :init :vertices (list (float-vector -79.4 -20.8 -112.206) (float-vector -79.4999 -20.8 -112.206) (float-vector -79.4999 -24.0942 -115.5) (float-vector -79.4 -24.0942 -115.5)))
         (instance face :init :vertices (list (float-vector -79.4 -16.3 -111.0) (float-vector -79.4999 -16.3 -111.0) (float-vector -79.4999 -20.8 -112.206) (float-vector -79.4 -20.8 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 -11.8 -112.206) (float-vector -79.4999 -11.8 -112.206) (float-vector -79.4999 -16.3 -111.0) (float-vector -79.4 -16.3 -111.0)))
         (instance face :init :vertices (list (float-vector -79.4 -8.50577 -115.5) (float-vector -79.4999 -8.50577 -115.5) (float-vector -79.4999 -11.8 -112.206) (float-vector -79.4 -11.8 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 -7.3 -120.0) (float-vector -79.4999 -7.3 -120.0) (float-vector -79.4999 -8.50577 -115.5) (float-vector -79.4 -8.50577 -115.5)))
         (instance face :init :vertices (list (float-vector -79.3999 -8.50577 -124.5) (float-vector -79.4999 -8.50577 -124.5) (float-vector -79.4999 -7.3 -120.0) (float-vector -79.4 -7.3 -120.0)))
         (instance face :init :vertices (list (float-vector -79.3999 -11.8 -127.794) (float-vector -79.4999 -11.8 -127.794) (float-vector -79.4999 -8.50577 -124.5) (float-vector -79.3999 -8.50577 -124.5)))
         (instance face :init :vertices (list (float-vector -79.3999 -16.3 -129.0) (float-vector -79.4999 -16.3 -129.0) (float-vector -79.4999 -11.8 -127.794) (float-vector -79.3999 -11.8 -127.794)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.3999 11.8 -127.794) (float-vector -79.3999 16.3 -129.0) (float-vector -79.3999 20.8 -127.794) (float-vector -79.3999 24.0942 -124.5) (float-vector -79.3999 25.3 -120.0) (float-vector -79.4 24.0942 -115.5) (float-vector -79.4 20.8 -112.206) (float-vector -79.4 16.3 -111.0) (float-vector -79.4 11.8 -112.206) (float-vector -79.4 8.50577 -115.5) (float-vector -79.3999 7.3 -120.0) (float-vector -79.3999 8.50576 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4999 16.3 -129.0) (float-vector -79.4999 11.8 -127.794) (float-vector -79.4999 8.50576 -124.5) (float-vector -79.4999 7.3 -120.0) (float-vector -79.4999 8.50577 -115.5) (float-vector -79.4999 11.8 -112.206) (float-vector -79.4999 16.3 -111.0) (float-vector -79.4999 20.8 -112.206) (float-vector -79.4999 24.0942 -115.5) (float-vector -79.4999 25.3 -120.0) (float-vector -79.4999 24.0942 -124.5) (float-vector -79.4999 20.8 -127.794)))
         (instance face :init :vertices (list (float-vector -79.3999 11.8 -127.794) (float-vector -79.4999 11.8 -127.794) (float-vector -79.4999 16.3 -129.0) (float-vector -79.3999 16.3 -129.0)))
         (instance face :init :vertices (list (float-vector -79.3999 8.50576 -124.5) (float-vector -79.4999 8.50576 -124.5) (float-vector -79.4999 11.8 -127.794) (float-vector -79.3999 11.8 -127.794)))
         (instance face :init :vertices (list (float-vector -79.3999 7.3 -120.0) (float-vector -79.4999 7.3 -120.0) (float-vector -79.4999 8.50576 -124.5) (float-vector -79.3999 8.50576 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4 8.50577 -115.5) (float-vector -79.4999 8.50577 -115.5) (float-vector -79.4999 7.3 -120.0) (float-vector -79.3999 7.3 -120.0)))
         (instance face :init :vertices (list (float-vector -79.4 11.8 -112.206) (float-vector -79.4999 11.8 -112.206) (float-vector -79.4999 8.50577 -115.5) (float-vector -79.4 8.50577 -115.5)))
         (instance face :init :vertices (list (float-vector -79.4 16.3 -111.0) (float-vector -79.4999 16.3 -111.0) (float-vector -79.4999 11.8 -112.206) (float-vector -79.4 11.8 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 20.8 -112.206) (float-vector -79.4999 20.8 -112.206) (float-vector -79.4999 16.3 -111.0) (float-vector -79.4 16.3 -111.0)))
         (instance face :init :vertices (list (float-vector -79.4 24.0942 -115.5) (float-vector -79.4999 24.0942 -115.5) (float-vector -79.4999 20.8 -112.206) (float-vector -79.4 20.8 -112.206)))
         (instance face :init :vertices (list (float-vector -79.3999 25.3 -120.0) (float-vector -79.4999 25.3 -120.0) (float-vector -79.4999 24.0942 -115.5) (float-vector -79.4 24.0942 -115.5)))
         (instance face :init :vertices (list (float-vector -79.3999 24.0942 -124.5) (float-vector -79.4999 24.0942 -124.5) (float-vector -79.4999 25.3 -120.0) (float-vector -79.3999 25.3 -120.0)))
         (instance face :init :vertices (list (float-vector -79.3999 20.8 -127.794) (float-vector -79.4999 20.8 -127.794) (float-vector -79.4999 24.0942 -124.5) (float-vector -79.3999 24.0942 -124.5)))
         (instance face :init :vertices (list (float-vector -79.3999 16.3 -129.0) (float-vector -79.4999 16.3 -129.0) (float-vector -79.4999 20.8 -127.794) (float-vector -79.3999 20.8 -127.794)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -79.3999 44.5 -127.794) (float-vector -79.3999 49.0 -129.0) (float-vector -79.3999 53.5 -127.794) (float-vector -79.3999 56.7942 -124.5) (float-vector -79.3999 58.0 -120.0) (float-vector -79.4 56.7942 -115.5) (float-vector -79.4 53.5 -112.206) (float-vector -79.4 49.0 -111.0) (float-vector -79.4 44.5 -112.206) (float-vector -79.3999 41.2058 -115.5) (float-vector -79.3999 40.0 -120.0) (float-vector -79.3999 41.2058 -124.5)))
         (instance face :init :vertices (list (float-vector -79.4999 49.0 -129.0) (float-vector -79.4999 44.5 -127.794) (float-vector -79.4999 41.2058 -124.5) (float-vector -79.4999 40.0 -120.0) (float-vector -79.4999 41.2058 -115.5) (float-vector -79.4999 44.5 -112.206) (float-vector -79.4999 49.0 -111.0) (float-vector -79.4999 53.5 -112.206) (float-vector -79.4999 56.7942 -115.5) (float-vector -79.4999 58.0 -120.0) (float-vector -79.4999 56.7942 -124.5) (float-vector -79.4999 53.5 -127.794)))
         (instance face :init :vertices (list (float-vector -79.3999 44.5 -127.794) (float-vector -79.4999 44.5 -127.794) (float-vector -79.4999 49.0 -129.0) (float-vector -79.3999 49.0 -129.0)))
         (instance face :init :vertices (list (float-vector -79.3999 41.2058 -124.5) (float-vector -79.4999 41.2058 -124.5) (float-vector -79.4999 44.5 -127.794) (float-vector -79.3999 44.5 -127.794)))
         (instance face :init :vertices (list (float-vector -79.3999 40.0 -120.0) (float-vector -79.4999 40.0 -120.0) (float-vector -79.4999 41.2058 -124.5) (float-vector -79.3999 41.2058 -124.5)))
         (instance face :init :vertices (list (float-vector -79.3999 41.2058 -115.5) (float-vector -79.4999 41.2058 -115.5) (float-vector -79.4999 40.0 -120.0) (float-vector -79.3999 40.0 -120.0)))
         (instance face :init :vertices (list (float-vector -79.4 44.5 -112.206) (float-vector -79.4999 44.5 -112.206) (float-vector -79.4999 41.2058 -115.5) (float-vector -79.3999 41.2058 -115.5)))
         (instance face :init :vertices (list (float-vector -79.4 49.0 -111.0) (float-vector -79.4999 49.0 -111.0) (float-vector -79.4999 44.5 -112.206) (float-vector -79.4 44.5 -112.206)))
         (instance face :init :vertices (list (float-vector -79.4 53.5 -112.206) (float-vector -79.4999 53.5 -112.206) (float-vector -79.4999 49.0 -111.0) (float-vector -79.4 49.0 -111.0)))
         (instance face :init :vertices (list (float-vector -79.4 56.7942 -115.5) (float-vector -79.4999 56.7942 -115.5) (float-vector -79.4999 53.5 -112.206) (float-vector -79.4 53.5 -112.206)))
         (instance face :init :vertices (list (float-vector -79.3999 58.0 -120.0) (float-vector -79.4999 58.0 -120.0) (float-vector -79.4999 56.7942 -115.5) (float-vector -79.4 56.7942 -115.5)))
         (instance face :init :vertices (list (float-vector -79.3999 56.7942 -124.5) (float-vector -79.4999 56.7942 -124.5) (float-vector -79.4999 58.0 -120.0) (float-vector -79.3999 58.0 -120.0)))
         (instance face :init :vertices (list (float-vector -79.3999 53.5 -127.794) (float-vector -79.4999 53.5 -127.794) (float-vector -79.4999 56.7942 -124.5) (float-vector -79.3999 56.7942 -124.5)))
         (instance face :init :vertices (list (float-vector -79.3999 49.0 -129.0) (float-vector -79.4999 49.0 -129.0) (float-vector -79.4999 53.5 -127.794) (float-vector -79.3999 53.5 -127.794)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (send (elt bc 1) :set-color :dimgray)
     (send (elt bc 2) :set-color :gray40)
     (send (elt bc 3) :set-color :gray40)
     (send (elt bc 4) :set-color :gray40)
     (send (elt bc 5) :set-color :gray40)
     (send (elt bc 6) :set-color :gray40)
     (send (elt bc 7) :set-color :gray40)
     (send (elt bc 8) :set-color :gray40)
     (send (elt bc 9) :set-color :gray40)
     (send (elt bc 10) :set-color :gray40)
     (send (elt bc 11) :set-color :gray40)
     (send (elt bc 12) :set-color :gray40)
     (send (elt bc 13) :set-color :gray40)
     (setq blink22 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-ankle-r :weight 702.678 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :lleg-toe
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.0 68.0 20.0) (float-vector 20.0 68.0 20.0) (float-vector 30.0 68.0 15.0) (float-vector 50.0 68.0 0.0) (float-vector 50.0 68.0 -35.0) (float-vector -15.0 68.0 -35.0)))
         (instance face :init :vertices (list (float-vector 20.0 -68.0 20.0) (float-vector -15.0 -68.0 20.0) (float-vector -15.0 -68.0 -35.0) (float-vector 50.0 -68.0 -35.0) (float-vector 50.0 -68.0 0.0) (float-vector 30.0 -68.0 15.0)))
         (instance face :init :vertices (list (float-vector -15.0 68.0 20.0) (float-vector -15.0 -68.0 20.0) (float-vector 20.0 -68.0 20.0) (float-vector 20.0 68.0 20.0)))
         (instance face :init :vertices (list (float-vector -15.0 68.0 -35.0) (float-vector -15.0 -68.0 -35.0) (float-vector -15.0 -68.0 20.0) (float-vector -15.0 68.0 20.0)))
         (instance face :init :vertices (list (float-vector 50.0 68.0 -35.0) (float-vector 50.0 -68.0 -35.0) (float-vector -15.0 -68.0 -35.0) (float-vector -15.0 68.0 -35.0)))
         (instance face :init :vertices (list (float-vector 50.0 68.0 0.0) (float-vector 50.0 -68.0 0.0) (float-vector 50.0 -68.0 -35.0) (float-vector 50.0 68.0 -35.0)))
         (instance face :init :vertices (list (float-vector 30.0 68.0 15.0) (float-vector 30.0 -68.0 15.0) (float-vector 50.0 -68.0 0.0) (float-vector 50.0 68.0 0.0)))
         (instance face :init :vertices (list (float-vector 20.0 68.0 20.0) (float-vector 20.0 -68.0 20.0) (float-vector 30.0 -68.0 15.0) (float-vector 30.0 68.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink23 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-toe :weight 200 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((83333.3 0.0 0.0) (0.0 2.083333e+05 0.0) (0.0 0.0 2.083333e+05))))

     ;; definition of :head-neck-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 42.0 30.0 -38.5) (float-vector -42.0 30.0 -38.5) (float-vector -42.0 24.7001 -38.5) (float-vector -30.626 4.99988 -38.5) (float-vector -22.461 4.95117 -38.5) (float-vector -20.0 1.99988 -38.5) (float-vector -19.994 -0.500122 -38.5) (float-vector -18.199 -8.29346 -38.5) (float-vector -13.147 -15.072 -38.5) (float-vector -6.7425 -18.829 -38.5) (float-vector 0.0 -20.0 -38.5) (float-vector 6.7425 -18.829 -38.5) (float-vector 13.147 -15.072 -38.5) (float-vector 18.199 -8.29346 -38.5) (float-vector 19.994 -0.500122 -38.5) (float-vector 20.0 1.99988 -38.5) (float-vector 22.461 4.95105 -38.5) (float-vector 30.626 4.99988 -38.5) (float-vector 42.0 24.7 -38.5)))
         (instance face :init :vertices (list (float-vector -42.0 30.0 38.5) (float-vector -42.0 30.0 -38.5) (float-vector 42.0 30.0 -38.5) (float-vector 42.0 30.0 38.5)))
         (instance face :init :vertices (list (float-vector -42.0 24.7 38.5) (float-vector -42.0 30.0 38.5) (float-vector 42.0 30.0 38.5) (float-vector 42.0 24.7 38.5) (float-vector 30.626 4.99988 38.5) (float-vector 22.461 4.95105 38.5) (float-vector 20.0 1.99988 38.5) (float-vector 19.994 -0.500122 38.5) (float-vector 18.199 -8.29346 38.5) (float-vector 13.147 -15.072 38.5) (float-vector 6.7425 -18.829 38.5) (float-vector 0.0 -20.0 38.5) (float-vector -6.7425 -18.829 38.5) (float-vector -13.147 -15.072 38.5) (float-vector -18.199 -8.29346 38.5) (float-vector -19.994 -0.500122 38.5) (float-vector -20.0 1.99988 38.5) (float-vector -22.461 4.95105 38.5) (float-vector -30.626 4.99988 38.5)))
         (instance face :init :vertices (list (float-vector -42.0 35.0 43.5) (float-vector 42.0 35.0 43.5) (float-vector 42.0 35.0 -43.5) (float-vector -42.0 35.0 -43.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 1.144409e-05 35.0 -29.0) (float-vector 15.43 35.0 -28.898) (float-vector 25.632 35.0 -26.104) (float-vector 34.634 35.0 -19.312) (float-vector 40.384 35.0 -9.54637) (float-vector 41.5 35.0 2.795790e-05) (float-vector 40.384 35.0 9.54642) (float-vector 34.634 35.0 19.312) (float-vector 25.632 35.0 26.104) (float-vector 15.43 35.0 28.898) (float-vector -15.43 35.0 28.898) (float-vector -25.632 35.0 26.104) (float-vector -34.634 35.0 19.312) (float-vector -40.384 35.0 9.5464) (float-vector -41.5 35.0 1.902830e-06) (float-vector -40.384 35.0 -9.54639) (float-vector -34.634 35.0 -19.312) (float-vector -25.632 35.0 -26.104) (float-vector -15.43 35.0 -28.898)))
))
         (instance face :init :vertices (list (float-vector 42.0 24.7 43.5) (float-vector 42.0 35.0 43.5) (float-vector -42.0 35.0 43.5) (float-vector -42.0 24.7 43.5) (float-vector -30.626 4.99988 43.5) (float-vector -22.461 4.95105 43.5) (float-vector -20.0 1.99988 43.5) (float-vector -19.994 -0.500122 43.5) (float-vector -18.199 -8.29346 43.5) (float-vector -13.147 -15.072 43.5) (float-vector -6.7425 -18.829 43.5) (float-vector 0.0 -20.0 43.5) (float-vector 6.7425 -18.829 43.5) (float-vector 13.147 -15.072 43.5) (float-vector 18.199 -8.29358 43.5) (float-vector 19.994 -0.500122 43.5) (float-vector 20.0 1.99988 43.5) (float-vector 22.461 4.95105 43.5) (float-vector 30.626 4.99988 43.5)))
         (instance face :init :vertices (list (float-vector -42.0 24.7001 -43.5) (float-vector -42.0 35.0 -43.5) (float-vector 42.0 35.0 -43.5) (float-vector 42.0 24.7 -43.5) (float-vector 30.626 4.99988 -43.5) (float-vector 22.461 4.95105 -43.5) (float-vector 20.0 1.99988 -43.5) (float-vector 19.994 -0.500122 -43.5) (float-vector 18.199 -8.29346 -43.5) (float-vector 13.147 -15.072 -43.5) (float-vector 6.7425 -18.829 -43.5) (float-vector 0.0 -20.0 -43.5) (float-vector -6.7425 -18.829 -43.5) (float-vector -13.147 -15.072 -43.5) (float-vector -18.199 -8.29346 -43.5) (float-vector -19.994 -0.500122 -43.5) (float-vector -20.0 1.99988 -43.5) (float-vector -22.461 4.95117 -43.5) (float-vector -30.626 4.99988 -43.5)))
         (instance face :init :vertices (list (float-vector -42.0 24.7 38.5) (float-vector -42.0 24.7 43.5) (float-vector -42.0 35.0 43.5) (float-vector -42.0 35.0 -43.5) (float-vector -42.0 24.7001 -43.5) (float-vector -42.0 24.7001 -38.5) (float-vector -42.0 30.0 -38.5) (float-vector -42.0 30.0 38.5)))
         (instance face :init :vertices (list (float-vector -30.626 4.99988 38.5) (float-vector -30.626 4.99988 43.5) (float-vector -42.0 24.7 43.5) (float-vector -42.0 24.7 38.5)))
         (instance face :init :vertices (list (float-vector -30.626 4.99988 -43.5) (float-vector -30.626 4.99988 -38.5) (float-vector -42.0 24.7001 -38.5) (float-vector -42.0 24.7001 -43.5)))
         (instance face :init :vertices (list (float-vector -22.461 4.95105 38.5) (float-vector -22.461 4.95105 43.5) (float-vector -30.626 4.99988 43.5) (float-vector -30.626 4.99988 38.5)))
         (instance face :init :vertices (list (float-vector -22.461 4.95117 -43.5) (float-vector -22.461 4.95117 -38.5) (float-vector -30.626 4.99988 -38.5) (float-vector -30.626 4.99988 -43.5)))
         (instance face :init :vertices (list (float-vector -20.0 1.99988 38.5) (float-vector -20.0 1.99988 43.5) (float-vector -22.461 4.95105 43.5) (float-vector -22.461 4.95105 38.5)))
         (instance face :init :vertices (list (float-vector -20.0 1.99988 -43.5) (float-vector -20.0 1.99988 -38.5) (float-vector -22.461 4.95117 -38.5) (float-vector -22.461 4.95117 -43.5)))
         (instance face :init :vertices (list (float-vector -19.994 -0.500122 38.5) (float-vector -19.994 -0.500122 43.5) (float-vector -20.0 1.99988 43.5) (float-vector -20.0 1.99988 38.5)))
         (instance face :init :vertices (list (float-vector -19.994 -0.500122 -43.5) (float-vector -19.994 -0.500122 -38.5) (float-vector -20.0 1.99988 -38.5) (float-vector -20.0 1.99988 -43.5)))
         (instance face :init :vertices (list (float-vector -18.199 -8.29346 38.5) (float-vector -18.199 -8.29346 43.5) (float-vector -19.994 -0.500122 43.5) (float-vector -19.994 -0.500122 38.5)))
         (instance face :init :vertices (list (float-vector -18.199 -8.29346 -43.5) (float-vector -18.199 -8.29346 -38.5) (float-vector -19.994 -0.500122 -38.5) (float-vector -19.994 -0.500122 -43.5)))
         (instance face :init :vertices (list (float-vector -13.147 -15.072 38.5) (float-vector -13.147 -15.072 43.5) (float-vector -18.199 -8.29346 43.5) (float-vector -18.199 -8.29346 38.5)))
         (instance face :init :vertices (list (float-vector -13.147 -15.072 -43.5) (float-vector -13.147 -15.072 -38.5) (float-vector -18.199 -8.29346 -38.5) (float-vector -18.199 -8.29346 -43.5)))
         (instance face :init :vertices (list (float-vector -6.7425 -18.829 38.5) (float-vector -6.7425 -18.829 43.5) (float-vector -13.147 -15.072 43.5) (float-vector -13.147 -15.072 38.5)))
         (instance face :init :vertices (list (float-vector -6.7425 -18.829 -43.5) (float-vector -6.7425 -18.829 -38.5) (float-vector -13.147 -15.072 -38.5) (float-vector -13.147 -15.072 -43.5)))
         (instance face :init :vertices (list (float-vector 0.0 -20.0 38.5) (float-vector 0.0 -20.0 43.5) (float-vector -6.7425 -18.829 43.5) (float-vector -6.7425 -18.829 38.5)))
         (instance face :init :vertices (list (float-vector 0.0 -20.0 -43.5) (float-vector 0.0 -20.0 -38.5) (float-vector -6.7425 -18.829 -38.5) (float-vector -6.7425 -18.829 -43.5)))
         (instance face :init :vertices (list (float-vector 6.7425 -18.829 38.5) (float-vector 6.7425 -18.829 43.5) (float-vector 0.0 -20.0 43.5) (float-vector 0.0 -20.0 38.5)))
         (instance face :init :vertices (list (float-vector 6.7425 -18.829 -43.5) (float-vector 6.7425 -18.829 -38.5) (float-vector 0.0 -20.0 -38.5) (float-vector 0.0 -20.0 -43.5)))
         (instance face :init :vertices (list (float-vector 13.147 -15.072 38.5) (float-vector 13.147 -15.072 43.5) (float-vector 6.7425 -18.829 43.5) (float-vector 6.7425 -18.829 38.5)))
         (instance face :init :vertices (list (float-vector 13.147 -15.072 -43.5) (float-vector 13.147 -15.072 -38.5) (float-vector 6.7425 -18.829 -38.5) (float-vector 6.7425 -18.829 -43.5)))
         (instance face :init :vertices (list (float-vector 18.199 -8.29346 38.5) (float-vector 18.199 -8.29358 43.5) (float-vector 13.147 -15.072 43.5) (float-vector 13.147 -15.072 38.5)))
         (instance face :init :vertices (list (float-vector 18.199 -8.29346 -43.5) (float-vector 18.199 -8.29346 -38.5) (float-vector 13.147 -15.072 -38.5) (float-vector 13.147 -15.072 -43.5)))
         (instance face :init :vertices (list (float-vector 19.994 -0.500122 38.5) (float-vector 19.994 -0.500122 43.5) (float-vector 18.199 -8.29358 43.5) (float-vector 18.199 -8.29346 38.5)))
         (instance face :init :vertices (list (float-vector 19.994 -0.500122 -43.5) (float-vector 19.994 -0.500122 -38.5) (float-vector 18.199 -8.29346 -38.5) (float-vector 18.199 -8.29346 -43.5)))
         (instance face :init :vertices (list (float-vector 20.0 1.99988 38.5) (float-vector 20.0 1.99988 43.5) (float-vector 19.994 -0.500122 43.5) (float-vector 19.994 -0.500122 38.5)))
         (instance face :init :vertices (list (float-vector 20.0 1.99988 -43.5) (float-vector 20.0 1.99988 -38.5) (float-vector 19.994 -0.500122 -38.5) (float-vector 19.994 -0.500122 -43.5)))
         (instance face :init :vertices (list (float-vector 22.461 4.95105 38.5) (float-vector 22.461 4.95105 43.5) (float-vector 20.0 1.99988 43.5) (float-vector 20.0 1.99988 38.5)))
         (instance face :init :vertices (list (float-vector 22.461 4.95105 -43.5) (float-vector 22.461 4.95105 -38.5) (float-vector 20.0 1.99988 -38.5) (float-vector 20.0 1.99988 -43.5)))
         (instance face :init :vertices (list (float-vector 30.626 4.99988 38.5) (float-vector 30.626 4.99988 43.5) (float-vector 22.461 4.95105 43.5) (float-vector 22.461 4.95105 38.5)))
         (instance face :init :vertices (list (float-vector 30.626 4.99988 -43.5) (float-vector 30.626 4.99988 -38.5) (float-vector 22.461 4.95105 -38.5) (float-vector 22.461 4.95105 -43.5)))
         (instance face :init :vertices (list (float-vector 42.0 24.7 38.5) (float-vector 42.0 24.7 43.5) (float-vector 30.626 4.99988 43.5) (float-vector 30.626 4.99988 38.5)))
         (instance face :init :vertices (list (float-vector 42.0 24.7 -43.5) (float-vector 42.0 24.7 -38.5) (float-vector 30.626 4.99988 -38.5) (float-vector 30.626 4.99988 -43.5)))
         (instance face :init :vertices (list (float-vector 42.0 24.7 -38.5) (float-vector 42.0 24.7 -43.5) (float-vector 42.0 35.0 -43.5) (float-vector 42.0 35.0 43.5) (float-vector 42.0 24.7 43.5) (float-vector 42.0 24.7 38.5) (float-vector 42.0 30.0 38.5) (float-vector 42.0 30.0 -38.5)))
         (instance face :init :vertices (list (float-vector -15.43 170.0 -28.8979) (float-vector -15.43 35.0 -28.898) (float-vector -25.632 35.0 -26.104) (float-vector -25.632 170.0 -26.1039)))
         (instance face :init :vertices (list (float-vector -34.634 35.0 -19.312) (float-vector -34.634 170.0 -19.3119) (float-vector -25.632 170.0 -26.1039) (float-vector -25.632 35.0 -26.104)))
         (instance face :init :vertices (list (float-vector -40.384 35.0 -9.54639) (float-vector -40.384 170.0 -9.54634) (float-vector -34.634 170.0 -19.3119) (float-vector -34.634 35.0 -19.312)))
         (instance face :init :vertices (list (float-vector -41.5 35.0 1.902830e-06) (float-vector -41.5 170.0 5.949137e-05) (float-vector -40.384 170.0 -9.54634) (float-vector -40.384 35.0 -9.54639)))
         (instance face :init :vertices (list (float-vector -40.384 35.0 9.5464) (float-vector -40.384 170.0 9.54646) (float-vector -41.5 170.0 5.949137e-05) (float-vector -41.5 35.0 1.902830e-06)))
         (instance face :init :vertices (list (float-vector -34.634 35.0 19.312) (float-vector -34.634 170.0 19.3121) (float-vector -40.384 170.0 9.54646) (float-vector -40.384 35.0 9.5464)))
         (instance face :init :vertices (list (float-vector -25.632 35.0 26.104) (float-vector -25.632 170.0 26.1041) (float-vector -34.634 170.0 19.3121) (float-vector -34.634 35.0 19.312)))
         (instance face :init :vertices (list (float-vector -15.43 35.0 28.898) (float-vector -15.43 170.0 28.8981) (float-vector -25.632 170.0 26.1041) (float-vector -25.632 35.0 26.104)))
         (instance face :init :vertices (list (float-vector 15.43 35.0 28.898) (float-vector 15.43 170.0 28.8981) (float-vector -15.43 170.0 28.8981) (float-vector -15.43 35.0 28.898)))
         (instance face :init :vertices (list (float-vector 25.632 35.0 26.104) (float-vector 25.632 170.0 26.1041) (float-vector 15.43 170.0 28.8981) (float-vector 15.43 35.0 28.898)))
         (instance face :init :vertices (list (float-vector 34.634 35.0 19.312) (float-vector 34.634 170.0 19.3121) (float-vector 25.632 170.0 26.1041) (float-vector 25.632 35.0 26.104)))
         (instance face :init :vertices (list (float-vector 40.384 35.0 9.54642) (float-vector 40.384 170.0 9.54648) (float-vector 34.634 170.0 19.3121) (float-vector 34.634 35.0 19.312)))
         (instance face :init :vertices (list (float-vector 41.5 35.0 2.795790e-05) (float-vector 41.5 170.0 8.554643e-05) (float-vector 40.384 170.0 9.54648) (float-vector 40.384 35.0 9.54642)))
         (instance face :init :vertices (list (float-vector 40.384 35.0 -9.54637) (float-vector 40.384 170.0 -9.54631) (float-vector 41.5 170.0 8.554643e-05) (float-vector 41.5 35.0 2.795790e-05)))
         (instance face :init :vertices (list (float-vector 34.634 35.0 -19.312) (float-vector 34.634 170.0 -19.3119) (float-vector 40.384 170.0 -9.54631) (float-vector 40.384 35.0 -9.54637)))
         (instance face :init :vertices (list (float-vector 25.632 35.0 -26.104) (float-vector 25.632 170.0 -26.1039) (float-vector 34.634 170.0 -19.3119) (float-vector 34.634 35.0 -19.312)))
         (instance face :init :vertices (list (float-vector 15.43 35.0 -28.898) (float-vector 15.43 170.0 -28.8979) (float-vector 25.632 170.0 -26.1039) (float-vector 25.632 35.0 -26.104)))
         (instance face :init :vertices (list (float-vector 1.144409e-05 35.0 -29.0) (float-vector 7.629395e-06 170.0 -28.9999) (float-vector 15.43 170.0 -28.8979) (float-vector 15.43 35.0 -28.898)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 170.0 -28.9999) (float-vector -15.43 170.0 -28.8979) (float-vector -25.632 170.0 -26.1039) (float-vector -34.634 170.0 -19.3119) (float-vector -40.384 170.0 -9.54634) (float-vector -41.5 170.0 5.949137e-05) (float-vector -40.384 170.0 9.54646) (float-vector -34.634 170.0 19.3121) (float-vector -25.632 170.0 26.1041) (float-vector -15.43 170.0 28.8981) (float-vector 15.43 170.0 28.8981) (float-vector 25.632 170.0 26.1041) (float-vector 34.634 170.0 19.3121) (float-vector 40.384 170.0 9.54648) (float-vector 41.5 170.0 8.554643e-05) (float-vector 40.384 170.0 -9.54631) (float-vector 34.634 170.0 -19.3119) (float-vector 25.632 170.0 -26.1039) (float-vector 15.43 170.0 -28.8979)))
         (instance face :init :vertices (list (float-vector -15.43 170.0 -28.8979) (float-vector 7.629395e-06 170.0 -28.9999) (float-vector 1.144409e-05 35.0 -29.0) (float-vector -15.43 35.0 -28.898)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (setq blink24 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-neck-p :weight 245.86 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of :head-neck-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 79.0 0.0) (float-vector 14.257 78.95 0.0) (float-vector 14.257 78.95 145.0) (float-vector 40.0 79.0 145.0)))
         (instance face :init :vertices (list (float-vector -2.7436 75.149 0.0) (float-vector -2.7436 75.149 145.0) (float-vector 14.257 78.95 145.0) (float-vector 14.257 78.95 0.0)))
         (instance face :init :vertices (list (float-vector -15.369 67.528 0.0) (float-vector -15.369 67.528 145.0) (float-vector -2.7436 75.149 145.0) (float-vector -2.7436 75.149 0.0)))
         (instance face :init :vertices (list (float-vector -25.877 55.536 0.0) (float-vector -25.877 55.536 145.0) (float-vector -15.369 67.528 145.0) (float-vector -15.369 67.528 0.0)))
         (instance face :init :vertices (list (float-vector -31.176 44.066 0.0) (float-vector -31.176 44.066 145.0) (float-vector -25.877 55.536 145.0) (float-vector -25.877 55.536 0.0)))
         (instance face :init :vertices (list (float-vector -33.5 29.0 0.0) (float-vector -33.5 29.0 145.0) (float-vector -31.176 44.066 145.0) (float-vector -31.176 44.066 0.0)))
         (instance face :init :vertices (list (float-vector -33.5 0.0 0.0) (float-vector -33.5 0.0 145.0) (float-vector -33.5 29.0 145.0) (float-vector -33.5 29.0 0.0)))
         (instance face :init :vertices (list (float-vector -33.5 -29.0 0.0) (float-vector -33.5 -29.0 145.0) (float-vector -33.5 0.0 145.0) (float-vector -33.5 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -31.176 -44.066 0.0) (float-vector -31.176 -44.066 145.0) (float-vector -33.5 -29.0 145.0) (float-vector -33.5 -29.0 0.0)))
         (instance face :init :vertices (list (float-vector -25.877 -55.536 0.0) (float-vector -25.877 -55.536 145.0) (float-vector -31.176 -44.066 145.0) (float-vector -31.176 -44.066 0.0)))
         (instance face :init :vertices (list (float-vector -15.369 -67.528 0.0) (float-vector -15.369 -67.528 145.0) (float-vector -25.877 -55.536 145.0) (float-vector -25.877 -55.536 0.0)))
         (instance face :init :vertices (list (float-vector -2.7436 -75.149 0.0) (float-vector -2.7436 -75.149 145.0) (float-vector -15.369 -67.528 145.0) (float-vector -15.369 -67.528 0.0)))
         (instance face :init :vertices (list (float-vector 14.257 -78.95 0.0) (float-vector 14.257 -78.95 145.0) (float-vector -2.7436 -75.149 145.0) (float-vector -2.7436 -75.149 0.0)))
         (instance face :init :vertices (list (float-vector 40.0 -79.0 0.0) (float-vector 40.0 -79.0 145.0) (float-vector 14.257 -78.95 145.0) (float-vector 14.257 -78.95 0.0)))
         (instance face :init :vertices (list (float-vector 40.0 79.0 145.0) (float-vector 14.257 78.95 145.0) (float-vector -2.7436 75.149 145.0) (float-vector -15.369 67.528 145.0) (float-vector -25.877 55.536 145.0) (float-vector -31.176 44.066 145.0) (float-vector -33.5 29.0 145.0) (float-vector -33.5 0.0 145.0) (float-vector -33.5 -29.0 145.0) (float-vector -31.176 -44.066 145.0) (float-vector -25.877 -55.536 145.0) (float-vector -15.369 -67.528 145.0) (float-vector -2.7436 -75.149 145.0) (float-vector 14.257 -78.95 145.0) (float-vector 40.0 -79.0 145.0)))
         (instance face :init :vertices (list (float-vector 40.0 -79.0 0.0) (float-vector 14.257 -78.95 0.0) (float-vector -2.7436 -75.149 0.0) (float-vector -15.369 -67.528 0.0) (float-vector -25.877 -55.536 0.0) (float-vector -31.176 -44.066 0.0) (float-vector -33.5 -29.0 0.0) (float-vector -33.5 0.0 0.0) (float-vector -33.5 29.0 0.0) (float-vector -31.176 44.066 0.0) (float-vector -25.877 55.536 0.0) (float-vector -15.369 67.528 0.0) (float-vector -2.7436 75.149 0.0) (float-vector 14.257 78.95 0.0) (float-vector 40.0 79.0 0.0) (float-vector 40.0 77.4893 0.0) (float-vector 13.969 77.434 0.0) (float-vector -1.7971 73.916 0.0) (float-vector -14.126 66.607 0.0) (float-vector -24.579 54.784 0.0) (float-vector -29.709 43.73 0.0) (float-vector -32.0 29.0 0.0) (float-vector -32.0 -29.0 0.0) (float-vector -29.709 -43.73 0.0) (float-vector -24.579 -54.784 0.0) (float-vector -14.126 -66.607 0.0) (float-vector -1.7971 -73.916 0.0) (float-vector 13.969 -77.434 0.0) (float-vector 40.0 -77.4893 0.0)))
         (instance face :init :vertices (list (float-vector 40.0 -77.4893 0.0) (float-vector 40.0 -77.4893 142.0) (float-vector 40.0 77.4893 142.0) (float-vector 40.0 77.4893 0.0) (float-vector 40.0 79.0 0.0) (float-vector 40.0 79.0 145.0) (float-vector 40.0 -79.0 145.0) (float-vector 40.0 -79.0 0.0)))
         (instance face :init :vertices (list (float-vector 13.969 77.434 0.0) (float-vector 40.0 77.4893 0.0) (float-vector 40.0 77.4893 142.0) (float-vector 13.969 77.434 142.0)))
         (instance face :init :vertices (list (float-vector -1.7971 73.916 0.0) (float-vector 13.969 77.434 0.0) (float-vector 13.969 77.434 142.0) (float-vector -1.7971 73.916 142.0)))
         (instance face :init :vertices (list (float-vector -14.126 66.607 0.0) (float-vector -1.7971 73.916 0.0) (float-vector -1.7971 73.916 142.0) (float-vector -14.126 66.607 142.0)))
         (instance face :init :vertices (list (float-vector -24.579 54.784 0.0) (float-vector -14.126 66.607 0.0) (float-vector -14.126 66.607 142.0) (float-vector -24.579 54.784 142.0)))
         (instance face :init :vertices (list (float-vector -29.709 43.73 0.0) (float-vector -24.579 54.784 0.0) (float-vector -24.579 54.784 142.0) (float-vector -29.709 43.73 142.0)))
         (instance face :init :vertices (list (float-vector -32.0 29.0 0.0) (float-vector -29.709 43.73 0.0) (float-vector -29.709 43.73 142.0) (float-vector -32.0 29.0 142.0)))
         (instance face :init :vertices (list (float-vector -32.0 -29.0 0.0) (float-vector -32.0 29.0 0.0) (float-vector -32.0 29.0 142.0) (float-vector -32.0 -29.0 142.0)))
         (instance face :init :vertices (list (float-vector -29.709 -43.73 0.0) (float-vector -32.0 -29.0 0.0) (float-vector -32.0 -29.0 142.0) (float-vector -29.709 -43.73 142.0)))
         (instance face :init :vertices (list (float-vector -24.579 -54.784 0.0) (float-vector -29.709 -43.73 0.0) (float-vector -29.709 -43.73 142.0) (float-vector -24.579 -54.784 142.0)))
         (instance face :init :vertices (list (float-vector -14.126 -66.607 0.0) (float-vector -24.579 -54.784 0.0) (float-vector -24.579 -54.784 142.0) (float-vector -14.126 -66.607 142.0)))
         (instance face :init :vertices (list (float-vector -1.7971 -73.916 0.0) (float-vector -14.126 -66.607 0.0) (float-vector -14.126 -66.607 142.0) (float-vector -1.7971 -73.916 142.0)))
         (instance face :init :vertices (list (float-vector 13.969 -77.434 0.0) (float-vector -1.7971 -73.916 0.0) (float-vector -1.7971 -73.916 142.0) (float-vector 13.969 -77.434 142.0)))
         (instance face :init :vertices (list (float-vector 13.969 -77.434 142.0) (float-vector -1.7971 -73.916 142.0) (float-vector -14.126 -66.607 142.0) (float-vector -24.579 -54.784 142.0) (float-vector -29.709 -43.73 142.0) (float-vector -32.0 -29.0 142.0) (float-vector -32.0 29.0 142.0) (float-vector -29.709 43.73 142.0) (float-vector -24.579 54.784 142.0) (float-vector -14.126 66.607 142.0) (float-vector -1.7971 73.916 142.0) (float-vector 13.969 77.434 142.0) (float-vector 40.0 77.4893 142.0) (float-vector 40.0 -77.4893 142.0)))
         (instance face :init :vertices (list (float-vector 40.0 -77.4893 142.0) (float-vector 40.0 -77.4893 0.0) (float-vector 13.969 -77.434 0.0) (float-vector 13.969 -77.434 142.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 77.5 62.5) (float-vector 40.0 77.5 0.0) (float-vector 125.0 77.5 0.0) (float-vector 125.0 77.5 1.0) (float-vector 43.0 77.5 1.0) (float-vector 43.0 77.5 62.5)))
         (instance face :init :vertices (list (float-vector 40.0 77.5 62.5) (float-vector 43.0 77.5 62.5) (float-vector 43.0 -77.5 62.5) (float-vector 40.0 -77.5 62.5)))
         (instance face :init :vertices (list (float-vector 125.0 77.5 1.0) (float-vector 125.0 77.5 0.0) (float-vector 125.0 -77.5 0.0) (float-vector 125.0 -77.5 1.0)))
         (instance face :init :vertices (list (float-vector 125.0 -77.5 1.0) (float-vector 125.0 -77.5 0.0) (float-vector 40.0 -77.5 0.0) (float-vector 40.0 -77.5 62.5) (float-vector 43.0 -77.5 62.5) (float-vector 43.0 -77.5 1.0)))
         (instance face :init :vertices (list (float-vector 144.59 -114.94 0.0) (float-vector 152.81 -112.43 0.0) (float-vector 152.81 -112.43 145.0) (float-vector 144.59 -114.94 145.0)))
         (instance face :init :vertices (list (float-vector 144.59 -114.94 0.0) (float-vector 144.59 -114.94 145.0) (float-vector 40.0 -115.0 145.0) (float-vector 40.0 -115.0 0.0)))
         (instance face :init :vertices (list (float-vector 152.81 -112.43 145.0) (float-vector 152.81 -112.43 0.0) (float-vector 160.07 -105.43 0.0) (float-vector 160.07 -105.43 145.0)))
         (instance face :init :vertices (list (float-vector 160.07 -105.43 145.0) (float-vector 160.07 -105.43 0.0) (float-vector 162.9 -96.948 0.0) (float-vector 162.9 -96.948 145.0)))
         (instance face :init :vertices (list (float-vector 162.9 -96.948 145.0) (float-vector 162.9 -96.948 0.0) (float-vector 162.9 96.948 0.0) (float-vector 162.9 96.948 145.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 162.9 -84.5 20.0) (float-vector 162.9 -84.5 125.0) (float-vector 162.9 84.5 125.0) (float-vector 162.9 84.5 20.0)))
))
         (instance face :init :vertices (list (float-vector 162.9 96.948 145.0) (float-vector 162.9 96.948 0.0) (float-vector 160.07 105.43 0.0) (float-vector 160.07 105.43 145.0)))
         (instance face :init :vertices (list (float-vector 160.07 105.43 145.0) (float-vector 160.07 105.43 0.0) (float-vector 152.81 112.43 0.0) (float-vector 152.81 112.43 145.0)))
         (instance face :init :vertices (list (float-vector 152.81 112.43 145.0) (float-vector 152.81 112.43 0.0) (float-vector 144.59 114.94 0.0) (float-vector 144.59 114.94 145.0)))
         (instance face :init :vertices (list (float-vector 144.59 114.94 145.0) (float-vector 144.59 114.94 0.0) (float-vector 40.0 115.0 0.0) (float-vector 40.0 115.0 145.0)))
         (instance face :init :vertices (list (float-vector 40.0 -115.0 145.0) (float-vector 144.59 -114.94 145.0) (float-vector 152.81 -112.43 145.0) (float-vector 160.07 -105.43 145.0) (float-vector 162.9 -96.948 145.0) (float-vector 162.9 96.948 145.0) (float-vector 160.07 105.43 145.0) (float-vector 152.81 112.43 145.0) (float-vector 144.59 114.94 145.0) (float-vector 40.0 115.0 145.0)))
         (instance face :init :vertices (list (float-vector 40.0 115.0 0.0) (float-vector 144.59 114.94 0.0) (float-vector 152.81 112.43 0.0) (float-vector 160.07 105.43 0.0) (float-vector 162.9 96.948 0.0) (float-vector 162.9 -96.948 0.0) (float-vector 160.07 -105.43 0.0) (float-vector 152.81 -112.43 0.0) (float-vector 144.59 -114.94 0.0) (float-vector 40.0 -115.0 0.0) (float-vector 40.0 -77.5 0.0) (float-vector 125.0 -77.5 0.0) (float-vector 125.0 77.5 0.0) (float-vector 40.0 77.5 0.0)))
         (instance face :init :vertices (list (float-vector 40.0 77.5 0.0) (float-vector 40.0 77.5 62.5) (float-vector 40.0 -77.5 62.5) (float-vector 40.0 -77.5 0.0) (float-vector 40.0 -115.0 0.0) (float-vector 40.0 -115.0 145.0) (float-vector 40.0 115.0 145.0) (float-vector 40.0 115.0 0.0)))
         (instance face :init :vertices (list (float-vector 143.0 -114.0 1.0) (float-vector 43.0 -114.0 1.0) (float-vector 43.0 -114.0 144.0) (float-vector 143.0 -114.0 144.0)))
         (instance face :init :vertices (list (float-vector 143.0 -114.0 1.0) (float-vector 143.0 -114.0 144.0) (float-vector 152.19 -111.63 144.0) (float-vector 152.19 -111.63 1.0)))
         (instance face :init :vertices (list (float-vector 152.19 -111.63 1.0) (float-vector 152.19 -111.63 144.0) (float-vector 159.09 -105.1 144.0) (float-vector 159.09 -105.1 1.0)))
         (instance face :init :vertices (list (float-vector 159.09 -105.1 1.0) (float-vector 159.09 -105.1 144.0) (float-vector 161.98 -95.934 144.0) (float-vector 161.98 -95.934 1.0)))
         (instance face :init :vertices (list (float-vector 161.98 -95.934 1.0) (float-vector 161.98 -95.934 144.0) (float-vector 161.98 95.934 144.0) (float-vector 161.98 95.934 1.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 161.98 84.5 20.0) (float-vector 161.98 84.5 125.0) (float-vector 161.98 -84.5 125.0) (float-vector 161.98 -84.5 20.0)))
))
         (instance face :init :vertices (list (float-vector 161.98 95.934 1.0) (float-vector 161.98 95.934 144.0) (float-vector 159.09 105.1 144.0) (float-vector 159.09 105.1 1.0)))
         (instance face :init :vertices (list (float-vector 159.09 105.1 1.0) (float-vector 159.09 105.1 144.0) (float-vector 152.19 111.63 144.0) (float-vector 152.19 111.63 1.0)))
         (instance face :init :vertices (list (float-vector 152.19 111.63 1.0) (float-vector 152.19 111.63 144.0) (float-vector 143.0 114.0 144.0) (float-vector 143.0 114.0 1.0)))
         (instance face :init :vertices (list (float-vector 143.0 114.0 1.0) (float-vector 143.0 114.0 144.0) (float-vector 43.0 114.0 144.0) (float-vector 43.0 114.0 1.0)))
         (instance face :init :vertices (list (float-vector 43.0 114.0 144.0) (float-vector 143.0 114.0 144.0) (float-vector 152.19 111.63 144.0) (float-vector 159.09 105.1 144.0) (float-vector 161.98 95.934 144.0) (float-vector 161.98 -95.934 144.0) (float-vector 159.09 -105.1 144.0) (float-vector 152.19 -111.63 144.0) (float-vector 143.0 -114.0 144.0) (float-vector 43.0 -114.0 144.0)))
         (instance face :init :vertices (list (float-vector 43.0 114.0 1.0) (float-vector 43.0 114.0 144.0) (float-vector 43.0 -114.0 144.0) (float-vector 43.0 -114.0 1.0) (float-vector 43.0 -77.5 1.0) (float-vector 43.0 -77.5 62.5) (float-vector 43.0 77.5 62.5) (float-vector 43.0 77.5 1.0)))
         (instance face :init :vertices (list (float-vector 43.0 77.5 1.0) (float-vector 125.0 77.5 1.0) (float-vector 125.0 -77.5 1.0) (float-vector 43.0 -77.5 1.0) (float-vector 43.0 -114.0 1.0) (float-vector 143.0 -114.0 1.0) (float-vector 152.19 -111.63 1.0) (float-vector 159.09 -105.1 1.0) (float-vector 161.98 -95.934 1.0) (float-vector 161.98 95.934 1.0) (float-vector 159.09 105.1 1.0) (float-vector 152.19 111.63 1.0) (float-vector 143.0 114.0 1.0) (float-vector 43.0 114.0 1.0)))
         (instance face :init :vertices (list (float-vector 161.98 -84.5 20.0) (float-vector 161.98 -84.5 125.0) (float-vector 162.9 -84.5 125.0) (float-vector 162.9 -84.5 20.0)))
         (instance face :init :vertices (list (float-vector 162.9 84.5 125.0) (float-vector 162.9 -84.5 125.0) (float-vector 161.98 -84.5 125.0) (float-vector 161.98 84.5 125.0)))
         (instance face :init :vertices (list (float-vector 162.9 84.5 20.0) (float-vector 162.9 84.5 125.0) (float-vector 161.98 84.5 125.0) (float-vector 161.98 84.5 20.0)))
         (instance face :init :vertices (list (float-vector 161.98 84.5 20.0) (float-vector 161.98 -84.5 20.0) (float-vector 162.9 -84.5 20.0) (float-vector 162.9 84.5 20.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.0 -43.0 -50.0) (float-vector 0.0 -77.5 0.0) (float-vector 0.0 -73.0398 -1.85071) (float-vector 1.525879e-05 -47.7647 -41.4117) (float-vector 0.0 -42.2778 -50.0)))
         (instance face :init :vertices (list (float-vector 0.0 43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 0.0 77.5 0.0)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 67.718 -10.1804) (float-vector 0.0 74.2222 0.0)))
         (instance face :init :vertices (list (float-vector 0.0 -74.2222 0.0) (float-vector 0.0 -73.0398 -1.85071) (float-vector 0.0 -77.5 0.0)))
         (instance face :init :vertices (list (float-vector 105.0 -43.0 -50.0) (float-vector 105.0 43.0 -50.0) (float-vector 125.0 77.5 0.0)))
         (instance face :init :vertices (list (float-vector 105.0 -43.0 -50.0) (float-vector 125.0 77.5 0.0) (float-vector 125.0 -77.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.0 77.5 0.0) (float-vector 2.64338 74.2222 0.0) (float-vector 122.259 74.2222 0.0) (float-vector 122.259 71.1852 0.0) (float-vector 122.259 -74.1015 0.0) (float-vector 125.0 -77.5 0.0) (float-vector 125.0 77.5 0.0)))
         (instance face :init :vertices (list (float-vector 125.0 -77.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.0 77.5 0.0) (float-vector 0.0 74.2222 0.0) (float-vector 2.64338 74.2222 0.0)))
         (instance face :init :vertices (list (float-vector 122.259 -74.2222 0.0) (float-vector 117.333 -74.2222 0.0) (float-vector 0.0 -74.2222 0.0) (float-vector 0.0 -77.5 0.0)))
         (instance face :init :vertices (list (float-vector 125.0 -77.5 0.0) (float-vector 0.0 -77.5 0.0) (float-vector 0.0 -43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 105.0 -43.0 -50.0) (float-vector 125.0 -77.5 0.0) (float-vector 0.0 -43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 0.881798 -42.2778 -50.0) (float-vector 103.741 -42.2778 -50.0) (float-vector 103.741 -36.6852 -50.0) (float-vector 103.741 41.9686 -50.0) (float-vector 105.0 43.0 -50.0) (float-vector 105.0 -43.0 -50.0) (float-vector 0.0 -43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 105.0 43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 0.0 -43.0 -50.0) (float-vector 0.0 -42.2778 -50.0) (float-vector 0.881798 -42.2778 -50.0)))
         (instance face :init :vertices (list (float-vector 103.741 42.2778 -50.0) (float-vector 98.0741 42.2778 -50.0) (float-vector 0.0 42.2778 -50.0) (float-vector 0.0 43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 0.0 77.5 0.0) (float-vector 125.0 77.5 0.0) (float-vector 105.0 43.0 -50.0)))
         (instance face :init :vertices (list (float-vector 105.0 43.0 -50.0) (float-vector 0.0 43.0 -50.0) (float-vector 0.0 77.5 0.0)))
         (instance face :init :vertices (list (float-vector 122.259 71.1852 0.0) (float-vector 122.259 74.2222 0.0)))
         (instance face :init :vertices (list (float-vector 103.741 41.9686 -50.0) (float-vector 103.741 -36.6852 -50.0)))
         (instance face :init :vertices (list (float-vector 122.259 -74.1015 0.0) (float-vector 122.259 71.1852 0.0) (float-vector 103.741 -36.6852 -50.0) (float-vector 103.741 -42.2778 -50.0)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 -47.7647 -41.4117) (float-vector 0.0 -73.0398 -1.85071) (float-vector 0.0 -74.2222 0.0) (float-vector 117.333 -74.2222 0.0)))
         (instance face :init :vertices (list (float-vector 117.333 -74.2222 0.0) (float-vector 122.259 -74.2222 0.0) (float-vector 103.741 -42.2778 -50.0) (float-vector 0.881798 -42.2778 -50.0) (float-vector 0.0 -42.2778 -50.0) (float-vector 1.525879e-05 -47.7647 -41.4117)))
         (instance face :init :vertices (list (float-vector 0.0 42.2778 -50.0) (float-vector 98.0741 42.2778 -50.0)))
         (instance face :init :vertices (list (float-vector 98.0741 42.2778 -50.0) (float-vector 103.741 42.2778 -50.0) (float-vector 122.259 74.2222 0.0) (float-vector 2.64338 74.2222 0.0) (float-vector 0.0 74.2222 0.0) (float-vector 1.525879e-05 67.718 -10.1804)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 96.5 66.0 86.5) (float-vector 96.5 66.0 42.5) (float-vector 96.5 -66.0 42.5) (float-vector 96.5 -66.0 86.5) (float-vector 96.5 -31.0 86.5) (float-vector 96.5 -31.0 43.5) (float-vector 96.5 31.0 43.5) (float-vector 96.5 31.0 86.5)))
         (instance face :init :vertices (list (float-vector 96.5 -66.0 42.5) (float-vector 123.5 -66.0 42.5) (float-vector 123.5 -66.0 86.5) (float-vector 96.5 -66.0 86.5)))
         (instance face :init :vertices (list (float-vector 123.5 -66.0 42.5) (float-vector 123.5 66.0 42.5) (float-vector 123.5 66.0 86.5) (float-vector 123.5 -66.0 86.5)))
         (instance face :init :vertices (list (float-vector 123.5 66.0 86.5) (float-vector 96.5 66.0 86.5) (float-vector 96.5 31.0 86.5) (float-vector 98.0 31.0 86.5) (float-vector 98.0 -31.0 86.5) (float-vector 96.5 -31.0 86.5) (float-vector 96.5 -66.0 86.5) (float-vector 123.5 -66.0 86.5)))
         (instance face :init :vertices (list (float-vector 123.5 66.0 42.5) (float-vector 96.5 66.0 42.5) (float-vector 96.5 66.0 86.5) (float-vector 123.5 66.0 86.5)))
         (instance face :init :vertices (list (float-vector 96.5 66.0 42.5) (float-vector 123.5 66.0 42.5) (float-vector 123.5 -66.0 42.5) (float-vector 96.5 -66.0 42.5)))
         (instance face :init :vertices (list (float-vector 84.0 31.0 128.5) (float-vector 84.0 31.0 43.5) (float-vector 84.0 -31.0 43.5) (float-vector 84.0 -31.0 128.5)))
         (instance face :init :vertices (list (float-vector 84.0 -31.0 43.5) (float-vector 96.5 -31.0 43.5) (float-vector 96.5 -31.0 86.5) (float-vector 98.0 -31.0 86.5) (float-vector 98.0 -31.0 128.5) (float-vector 84.0 -31.0 128.5)))
         (instance face :init :vertices (list (float-vector 98.0 31.0 86.5) (float-vector 98.0 31.0 128.5) (float-vector 98.0 -31.0 128.5) (float-vector 98.0 -31.0 86.5)))
         (instance face :init :vertices (list (float-vector 98.0 31.0 128.5) (float-vector 84.0 31.0 128.5) (float-vector 84.0 -31.0 128.5) (float-vector 98.0 -31.0 128.5)))
         (instance face :init :vertices (list (float-vector 96.5 31.0 43.5) (float-vector 84.0 31.0 43.5) (float-vector 84.0 31.0 128.5) (float-vector 98.0 31.0 128.5) (float-vector 98.0 31.0 86.5) (float-vector 96.5 31.0 86.5)))
         (instance face :init :vertices (list (float-vector 84.0 31.0 43.5) (float-vector 96.5 31.0 43.5) (float-vector 96.5 -31.0 43.5) (float-vector 84.0 -31.0 43.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 162.5 27.6795 75.0) (float-vector 162.5 25.0 65.0) (float-vector 162.5 27.6795 55.0) (float-vector 162.5 35.0 47.6794) (float-vector 162.5 45.0 45.0) (float-vector 162.5 55.0 47.6794) (float-vector 162.5 62.3205 55.0) (float-vector 162.5 65.0 65.0) (float-vector 162.5 62.3205 75.0) (float-vector 162.5 55.0 82.3206) (float-vector 162.5 45.0 85.0) (float-vector 162.5 35.0 82.3206)))
         (instance face :init :vertices (list (float-vector 122.5 25.0 65.0) (float-vector 122.5 27.6795 75.0) (float-vector 122.5 35.0 82.3206) (float-vector 122.5 45.0 85.0) (float-vector 122.5 55.0 82.3206) (float-vector 122.5 62.3205 75.0) (float-vector 122.5 65.0 65.0) (float-vector 122.5 62.3205 55.0) (float-vector 122.5 55.0 47.6794) (float-vector 122.5 45.0 45.0) (float-vector 122.5 35.0 47.6794) (float-vector 122.5 27.6795 55.0)))
         (instance face :init :vertices (list (float-vector 162.5 27.6795 75.0) (float-vector 122.5 27.6795 75.0) (float-vector 122.5 25.0 65.0) (float-vector 162.5 25.0 65.0)))
         (instance face :init :vertices (list (float-vector 162.5 35.0 82.3206) (float-vector 122.5 35.0 82.3206) (float-vector 122.5 27.6795 75.0) (float-vector 162.5 27.6795 75.0)))
         (instance face :init :vertices (list (float-vector 162.5 45.0 85.0) (float-vector 122.5 45.0 85.0) (float-vector 122.5 35.0 82.3206) (float-vector 162.5 35.0 82.3206)))
         (instance face :init :vertices (list (float-vector 162.5 55.0 82.3206) (float-vector 122.5 55.0 82.3206) (float-vector 122.5 45.0 85.0) (float-vector 162.5 45.0 85.0)))
         (instance face :init :vertices (list (float-vector 162.5 62.3205 75.0) (float-vector 122.5 62.3205 75.0) (float-vector 122.5 55.0 82.3206) (float-vector 162.5 55.0 82.3206)))
         (instance face :init :vertices (list (float-vector 162.5 65.0 65.0) (float-vector 122.5 65.0 65.0) (float-vector 122.5 62.3205 75.0) (float-vector 162.5 62.3205 75.0)))
         (instance face :init :vertices (list (float-vector 162.5 62.3205 55.0) (float-vector 122.5 62.3205 55.0) (float-vector 122.5 65.0 65.0) (float-vector 162.5 65.0 65.0)))
         (instance face :init :vertices (list (float-vector 162.5 55.0 47.6794) (float-vector 122.5 55.0 47.6794) (float-vector 122.5 62.3205 55.0) (float-vector 162.5 62.3205 55.0)))
         (instance face :init :vertices (list (float-vector 162.5 45.0 45.0) (float-vector 122.5 45.0 45.0) (float-vector 122.5 55.0 47.6794) (float-vector 162.5 55.0 47.6794)))
         (instance face :init :vertices (list (float-vector 162.5 35.0 47.6794) (float-vector 122.5 35.0 47.6794) (float-vector 122.5 45.0 45.0) (float-vector 162.5 45.0 45.0)))
         (instance face :init :vertices (list (float-vector 162.5 27.6795 55.0) (float-vector 122.5 27.6795 55.0) (float-vector 122.5 35.0 47.6794) (float-vector 162.5 35.0 47.6794)))
         (instance face :init :vertices (list (float-vector 162.5 25.0 65.0) (float-vector 122.5 25.0 65.0) (float-vector 122.5 27.6795 55.0) (float-vector 162.5 27.6795 55.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 162.5 -62.3205 75.0) (float-vector 162.5 -65.0 65.0) (float-vector 162.5 -62.3205 55.0) (float-vector 162.5 -55.0 47.6794) (float-vector 162.5 -45.0 45.0) (float-vector 162.5 -35.0 47.6794) (float-vector 162.5 -27.6795 55.0) (float-vector 162.5 -25.0 65.0) (float-vector 162.5 -27.6795 75.0) (float-vector 162.5 -35.0 82.3206) (float-vector 162.5 -45.0 85.0) (float-vector 162.5 -55.0 82.3206)))
         (instance face :init :vertices (list (float-vector 122.5 -65.0 65.0) (float-vector 122.5 -62.3205 75.0) (float-vector 122.5 -55.0 82.3206) (float-vector 122.5 -45.0 85.0) (float-vector 122.5 -35.0 82.3206) (float-vector 122.5 -27.6795 75.0) (float-vector 122.5 -25.0 65.0) (float-vector 122.5 -27.6795 55.0) (float-vector 122.5 -35.0 47.6794) (float-vector 122.5 -45.0 45.0) (float-vector 122.5 -55.0 47.6794) (float-vector 122.5 -62.3205 55.0)))
         (instance face :init :vertices (list (float-vector 162.5 -62.3205 75.0) (float-vector 122.5 -62.3205 75.0) (float-vector 122.5 -65.0 65.0) (float-vector 162.5 -65.0 65.0)))
         (instance face :init :vertices (list (float-vector 162.5 -55.0 82.3206) (float-vector 122.5 -55.0 82.3206) (float-vector 122.5 -62.3205 75.0) (float-vector 162.5 -62.3205 75.0)))
         (instance face :init :vertices (list (float-vector 162.5 -45.0 85.0) (float-vector 122.5 -45.0 85.0) (float-vector 122.5 -55.0 82.3206) (float-vector 162.5 -55.0 82.3206)))
         (instance face :init :vertices (list (float-vector 162.5 -35.0 82.3206) (float-vector 122.5 -35.0 82.3206) (float-vector 122.5 -45.0 85.0) (float-vector 162.5 -45.0 85.0)))
         (instance face :init :vertices (list (float-vector 162.5 -27.6795 75.0) (float-vector 122.5 -27.6795 75.0) (float-vector 122.5 -35.0 82.3206) (float-vector 162.5 -35.0 82.3206)))
         (instance face :init :vertices (list (float-vector 162.5 -25.0 65.0) (float-vector 122.5 -25.0 65.0) (float-vector 122.5 -27.6795 75.0) (float-vector 162.5 -27.6795 75.0)))
         (instance face :init :vertices (list (float-vector 162.5 -27.6795 55.0) (float-vector 122.5 -27.6795 55.0) (float-vector 122.5 -25.0 65.0) (float-vector 162.5 -25.0 65.0)))
         (instance face :init :vertices (list (float-vector 162.5 -35.0 47.6794) (float-vector 122.5 -35.0 47.6794) (float-vector 122.5 -27.6795 55.0) (float-vector 162.5 -27.6795 55.0)))
         (instance face :init :vertices (list (float-vector 162.5 -45.0 45.0) (float-vector 122.5 -45.0 45.0) (float-vector 122.5 -35.0 47.6794) (float-vector 162.5 -35.0 47.6794)))
         (instance face :init :vertices (list (float-vector 162.5 -55.0 47.6794) (float-vector 122.5 -55.0 47.6794) (float-vector 122.5 -45.0 45.0) (float-vector 162.5 -45.0 45.0)))
         (instance face :init :vertices (list (float-vector 162.5 -62.3205 55.0) (float-vector 122.5 -62.3205 55.0) (float-vector 122.5 -55.0 47.6794) (float-vector 162.5 -55.0 47.6794)))
         (instance face :init :vertices (list (float-vector 162.5 -65.0 65.0) (float-vector 122.5 -65.0 65.0) (float-vector 122.5 -62.3205 55.0) (float-vector 162.5 -62.3205 55.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 162.0 84.5 123.0) (float-vector 161.0 84.5 123.0) (float-vector 161.0 -84.5 123.0) (float-vector 162.0 -84.5 123.0)))
         (instance face :init :vertices (list (float-vector 161.0 84.5 18.0) (float-vector 162.0 84.5 18.0) (float-vector 162.0 -84.5 18.0) (float-vector 161.0 -84.5 18.0)))
         (instance face :init :vertices (list (float-vector 162.0 84.5 123.0) (float-vector 162.0 84.5 18.0) (float-vector 161.0 84.5 18.0) (float-vector 161.0 84.5 123.0)))
         (instance face :init :vertices (list (float-vector 162.0 -84.5 123.0) (float-vector 162.0 -84.5 18.0) (float-vector 162.0 84.5 18.0) (float-vector 162.0 84.5 123.0)))
         (instance face :init :vertices (list (float-vector 161.0 -84.5 123.0) (float-vector 161.0 -84.5 18.0) (float-vector 162.0 -84.5 18.0) (float-vector 162.0 -84.5 123.0)))
         (instance face :init :vertices (list (float-vector 161.0 84.5 123.0) (float-vector 161.0 84.5 18.0) (float-vector 161.0 -84.5 18.0) (float-vector 161.0 -84.5 123.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray)
     (send (elt bc 1) :set-color :gray)
     (send (elt bc 2) :set-color :gray)
     (send (elt bc 3) :set-color :gray50)
     (send (elt bc 4) :set-color :gray50)
     (send (elt bc 5) :set-color :gray50)
     (send (elt bc 6) :set-color (list))
     (setq blink32 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-neck-y :weight 1009.43 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))))

     ;; definition of assoc
     (send blink36 :newcoords (make-coords :pos (float-vector 0.0 22.0 -68.0) :rot #2f((1.0 8.424233e-08 2.941806e-09) (-8.429368e-08 0.999391 0.034899) (-8.881784e-16 -0.034899 0.999391))))
     (send blink35 :assoc blink36)
     (send blink16 :newcoords (make-coords :pos (float-vector -50.9999 -32.0 -135.0) :rot #2f((-1.0 5.057622e-07 6.384060e-08) (-5.057622e-07 -1.0 2.176668e-13) (6.384060e-08 1.853787e-13 1.0))))
     (send blink15 :assoc blink16)
     (send blink35 :newcoords (make-coords :pos (float-vector 0.0 9.0 -135.0) :rot #2f((1.0 8.429367e-08 6.384060e-08) (-8.429367e-08 1.0 2.181042e-13) (-6.384060e-08 -2.234856e-13 1.0))))
     (send blink15 :assoc blink35)
     (send blink15 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((-8.344651e-07 1.0 0.0) (-3.576279e-07 -7.460699e-14 1.0) (1.0 8.344650e-07 3.576280e-07))))
     (send blink14 :assoc blink15)
     (send blink14 :newcoords (make-coords :pos (float-vector 0.0 0.0 -103.0) :rot #2f((1.0 -1.533975e-08 -9.349281e-09) (-9.349274e-09 5.066395e-07 -1.0) (1.533975e-08 1.0 5.066395e-07))))
     (send blink13 :assoc blink14)
     (send blink13 :newcoords (make-coords :pos (float-vector 17.9999 147.0 -6.103516e-05) :rot #2f((3.576278e-07 -1.0 0.0) (3.576279e-07 3.197442e-14 -1.0) (1.0 3.576279e-07 3.576278e-07))))
     (send blink12 :assoc blink13)
     (send blink12 :newcoords (make-coords :pos (float-vector -250.0 8.00006 17.0) :rot #2f((-2.980238e-08 -1.0 5.662441e-07) (-8.940692e-08 5.662441e-07 1.0) (-1.0 2.980230e-08 -8.940697e-08))))
     (send blink11 :assoc blink12)
     (send blink11 :newcoords (make-coords :pos (float-vector -18.0 0.0 0.0) :rot #2f((-3.278256e-07 7.450581e-07 1.0) (1.0 -3.278255e-07 3.278257e-07) (2.980232e-07 1.0 -7.450581e-07))))
     (send blink10 :assoc blink11)
     (send blink10 :newcoords (make-coords :pos (float-vector 6.103516e-05 -147.0 0.0) :rot #2f((1.0 3.278255e-07 9.364292e-08) (9.364292e-08 1.534927e-14 -1.0) (-3.278255e-07 1.0 -1.534927e-14))))
     (send blink9 :assoc blink10)
     (send blink34 :newcoords (make-coords :pos (float-vector 0.0 22.0 -68.0) :rot #2f((1.0 -8.424237e-08 -2.941806e-09) (8.429372e-08 0.999391 0.034899) (-9.992007e-16 -0.034899 0.999391))))
     (send blink33 :assoc blink34)
     (send blink8 :newcoords (make-coords :pos (float-vector 51.0 -32.0 -135.0) :rot #2f((1.0 -8.429367e-08 -5.536863e-08) (8.429367e-08 1.0 -5.960457e-08) (5.536864e-08 5.960456e-08 1.0))))
     (send blink7 :assoc blink8)
     (send blink33 :newcoords (make-coords :pos (float-vector 0.0 9.00003 -135.0) :rot #2f((1.0 -8.429367e-08 -5.536863e-08) (8.429367e-08 1.0 -5.960457e-08) (5.536864e-08 5.960456e-08 1.0))))
     (send blink7 :assoc blink33)
     (send blink7 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((4.172325e-07 -1.0 -2.980232e-08) (4.768372e-07 5.960469e-08 -1.0) (1.0 4.172325e-07 4.768371e-07))))
     (send blink6 :assoc blink7)
     (send blink6 :newcoords (make-coords :pos (float-vector 0.0 -6.103516e-05 103.0) :rot #2f((1.0 -9.349256e-09 -5.536871e-08) (-5.536872e-08 -1.132488e-06 -1.0) (9.349197e-09 1.0 -1.132488e-06))))
     (send blink5 :assoc blink6)
     (send blink5 :newcoords (make-coords :pos (float-vector 17.9999 147.0 -3.051758e-05) :rot #2f((3.278255e-07 1.0 6.854534e-07) (3.874301e-07 -6.854534e-07 1.0) (1.0 -3.278254e-07 -3.874302e-07))))
     (send blink4 :assoc blink5)
     (send blink4 :newcoords (make-coords :pos (float-vector -250.0 7.99992 -17.0) :rot #2f((-1.192093e-07 -1.0 7.152557e-07) (-5.960464e-07 -7.152557e-07 -1.0) (1.0 -1.192095e-07 -5.960464e-07))))
     (send blink3 :assoc blink4)
     (send blink3 :newcoords (make-coords :pos (float-vector -18.0 0.0 1.525879e-05) :rot #2f((-2.682209e-07 -2.980238e-08 -1.0) (1.0 4.470349e-07 -2.682209e-07) (4.470348e-07 -1.0 2.980229e-08))))
     (send blink2 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector -6.484985e-05 -147.0 0.0) :rot #2f((1.0 -3.000074e-07 9.364293e-08) (-9.364294e-08 1.404679e-14 1.0) (-3.000074e-07 -1.0 -1.404679e-14))))
     (send blink1 :assoc blink2)
     (send blink31 :newcoords (make-coords :pos (float-vector 45.0 4.577637e-05 115.0) :rot #2f((1.610126e-07 -3.278255e-07 -1.0) (-6.895385e-08 1.0 -3.278255e-07) (1.0 6.895392e-08 1.610126e-07))))
     (send blink30 :assoc blink31)
     (send blink30 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((5.364417e-07 6.394885e-14 1.0) (-1.0 -2.384186e-07 5.364418e-07) (2.086163e-07 -1.0 -3.552714e-14))))
     (send blink29 :assoc blink30)
     (send blink29 :newcoords (make-coords :pos (float-vector 0.000107 -300.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink28 :assoc blink29)
     (send blink28 :newcoords (make-coords :pos (float-vector -19.9999 -300.0 7.629395e-06) :rot #2f((1.0 -2.980234e-08 2.980234e-08) (2.980234e-08 1.0 7.168552e-15) (-2.980234e-08 -6.280372e-15 1.0))))
     (send blink27 :assoc blink28)
     (send blink27 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((3.874302e-07 -1.0 2.980232e-07) (-2.980226e-08 -3.278255e-07 -1.0) (1.0 3.874302e-07 -2.980235e-08))))
     (send blink26 :assoc blink27)
     (send blink26 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((-1.268804e-08 -9.364292e-08 1.0) (-3.278255e-07 1.0 9.364292e-08) (-1.0 -3.278255e-07 -1.268807e-08))))
     (send blink25 :assoc blink26)
     (send blink23 :newcoords (make-coords :pos (float-vector -45.0 1.525879e-05 -115.0) :rot #2f((-1.268804e-08 -3.576278e-07 1.0) (-3.915154e-08 1.0 3.576278e-07) (-1.0 -3.915154e-08 -1.268806e-08))))
     (send blink22 :assoc blink23)
     (send blink22 :newcoords (make-coords :pos (float-vector 7.629395e-06 -3.051758e-05 -7.629395e-06) :rot #2f((-2.086163e-07 2.980229e-08 -1.0) (1.0 2.682209e-07 -2.086163e-07) (2.682209e-07 -1.0 -2.980234e-08))))
     (send blink21 :assoc blink22)
     (send blink21 :newcoords (make-coords :pos (float-vector 9.155273e-05 -300.0 -2.288818e-05) :rot #2f((1.0 -2.980234e-08 2.980237e-08) (2.980235e-08 1.0 -1.685874e-07) (-2.980236e-08 1.685874e-07 1.0))))
     (send blink20 :assoc blink21)
     (send blink20 :newcoords (make-coords :pos (float-vector -19.9999 -300.0 1.525879e-05) :rot #2f((1.0 5.960462e-08 -5.960462e-08) (-5.960462e-08 1.0 -1.063199e-14) (5.960462e-08 1.418470e-14 1.0))))
     (send blink19 :assoc blink20)
     (send blink19 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((-1.788139e-07 1.0 2.980232e-07) (5.960462e-08 2.980232e-07 -1.0) (-1.0 -1.788139e-07 -5.960466e-08))))
     (send blink18 :assoc blink19)
     (send blink18 :newcoords (make-coords :pos (float-vector 0.0 0.0 0.0) :rot #2f((-5.882815e-07 -9.364314e-08 -1.0) (3.278258e-07 -1.0 9.364295e-08) (-1.0 -3.278258e-07 5.882815e-07))))
     (send blink17 :assoc blink18)
     (send blink32 :newcoords (make-coords :pos (float-vector -13.0 119.0 1.490116e-05) :rot #2f((1.0 -2.045311e-08 -3.576279e-07) (3.576279e-07 8.940696e-08 1.0) (-2.045309e-08 -1.0 8.940697e-08))))
     (send blink24 :assoc blink32)
     (send blink24 :newcoords (make-coords :pos (float-vector -53.5 -1.051620e-05 613.5) :rot #2f((1.0 3.576279e-07 -2.045309e-08) (-2.045311e-08 8.940696e-08 -1.0) (-3.576279e-07 1.0 8.940697e-08))))
     (send blink0 :assoc blink24)
     (send blink17 :newcoords (make-coords :pos (float-vector -3.814697e-05 88.0 100.0) :rot #2f((1.0 8.569488e-20 -6.278331e-07) (-8.569488e-20 -1.0 -2.729862e-13) (-6.278331e-07 2.729862e-13 -1.0))))
     (send blink0 :assoc blink17)
     (send blink25 :newcoords (make-coords :pos (float-vector 3.814697e-05 -88.0 100.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink25)
     (send blink1 :newcoords (make-coords :pos (float-vector 28.0 105.0 560.0) :rot #2f((1.0 8.569488e-20 -6.278331e-07) (-8.569488e-20 -1.0 -2.729862e-13) (-6.278331e-07 2.729862e-13 -1.0))))
     (send blink0 :assoc blink1)
     (send blink9 :newcoords (make-coords :pos (float-vector 28.0 -105.0 560.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink9)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of head-end-coords
     (setq head-end-coords
       (make-cascoords
	:coords (send (send blink32 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 161.5 2.030731e-05 70.5) :rot #2f((4.172325e-07 2.980232e-07 1.0) (-1.0 5.960467e-08 4.172325e-07) (-5.960464e-08 -1.0 2.980232e-07))))))
     (send blink32 :assoc head-end-coords)

     ;; definition of lleg-end-coords
     (setq lleg-end-coords
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -80.0 -3.051758e-05 -7.629395e-06) :rot #2f((-1.268804e-08 -3.576278e-07 1.0) (-3.915154e-08 1.0 3.576278e-07) (-1.0 -3.915154e-08 -1.268806e-08))))))
     (send blink22 :assoc lleg-end-coords)

     ;; definition of rleg-end-coords
     (setq rleg-end-coords
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 80.0 2.288818e-05 -1.144409e-05) :rot #2f((1.610126e-07 -3.278255e-07 -1.0) (-6.895385e-08 1.0 -3.278255e-07) (1.0 6.895392e-08 1.610126e-07))))))
     (send blink30 :assoc rleg-end-coords)

     ;; definition of larm-end-coords
     (setq larm-end-coords
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -6.103516e-05 0.0 -180.0) :rot #2f((4.241203e-07 -3.924415e-07 1.0) (-2.685855e-07 1.0 3.924416e-07) (-1.0 -2.685857e-07 4.241202e-07))))))
     (send blink7 :assoc larm-end-coords)

     ;; definition of rarm-end-coords
     (setq rarm-end-coords
       (make-cascoords
	:coords (send (send blink15 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -6.103516e-05 0.0 -180.0) :rot #2f((-4.145808e-07 1.573566e-07 -1.0) (-3.275186e-07 -1.0 -1.573565e-07) (-1.0 3.275186e-07 4.145808e-07))))))
     (send blink15 :assoc rarm-end-coords)

     ;; definition of joint

     ;; definition of :neck-p
     (setq joint23 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink24 :name :head-neck-p :axis :-z
			     :min  -60.0 :max   60.0))

     ;; definition of :neck-y
     (setq joint31 (instance rotational-joint :init
			     :parent-link blink24 :child-link blink32 :name :head-neck-y :axis :z 
			     :min  -90.0 :max   90.0))

     ;; definition of :crotch-y
     (setq joint16 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink17 :name :lleg-crotch-y :axis :-z
			     :min  -35.0 :max   95.0))

     ;; definition of :crotch-r
     (setq joint17 (instance rotational-joint :init
			     :parent-link blink17 :child-link blink18 :name :lleg-crotch-r :axis :-z
			     :min  -30.0 :max   35.0))

     ;; definition of :crotch-p
     (setq joint18 (instance rotational-joint :init
			     :parent-link blink18 :child-link blink19 :name :lleg-crotch-p :axis :-z
			     :min -135.0 :max   40.0))

     ;; definition of :knee-p
     (setq joint19 (instance rotational-joint :init
			     :parent-link blink19 :child-link blink20 :name :lleg-knee-p :axis :-z
			     :min    0.0 :max  150.0))

     ;; definition of :ankle-p
     (setq joint20 (instance rotational-joint :init
			     :parent-link blink20 :child-link blink21 :name :lleg-ankle-p :axis :-z
			     :min  -60.0 :max   80.0))

     ;; definition of :ankle-r
     (setq joint21 (instance rotational-joint :init
			     :parent-link blink21 :child-link blink22 :name :lleg-ankle-r :axis :-z
			     :min  -35.0 :max   21.5))

     ;; definition of :toe
     (setq joint22 (instance rotational-joint :init
			     :parent-link blink22 :child-link blink23 :name :lleg-toe  :axis :y 
			     :min  -60.0 :max   10.0))

     ;; definition of :crotch-y
     (setq joint24 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink25 :name :rleg-crotch-y :axis :-z
			     :min  -35.0 :max   95.0))

     ;; definition of :crotch-r
     (setq joint25 (instance rotational-joint :init
			     :parent-link blink25 :child-link blink26 :name :rleg-crotch-r :axis :-z
			     :min  -30.0 :max   35.0))

     ;; definition of :crotch-p
     (setq joint26 (instance rotational-joint :init
			     :parent-link blink26 :child-link blink27 :name :rleg-crotch-p :axis :-z
			     :min -135.0 :max   40.0))

     ;; definition of :knee-p
     (setq joint27 (instance rotational-joint :init
			     :parent-link blink27 :child-link blink28 :name :rleg-knee-p :axis :-z
			     :min    0.0 :max  150.0))

     ;; definition of :ankle-p
     (setq joint28 (instance rotational-joint :init
			     :parent-link blink28 :child-link blink29 :name :rleg-ankle-p :axis :-z
			     :min  -60.0 :max   80.0))

     ;; definition of :ankle-r
     (setq joint29 (instance rotational-joint :init
			     :parent-link blink29 :child-link blink30 :name :rleg-ankle-r :axis :-z
			     :min  -35.0 :max   21.5))

     ;; definition of :toe
     (setq joint30 (instance rotational-joint :init
			     :parent-link blink30 :child-link blink31 :name :rleg-toe  :axis :y 
			     :min  -60.0 :max   10.0))

     ;; definition of :shoulder-y
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :larm-shoulder-y :axis :-z
			     :min  -90.0 :max    0.0))

     ;; definition of :shoulder-p
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink1 :child-link blink2 :name :larm-shoulder-p :axis :-z
			     :min -180.0 :max   90.0))

     ;; definition of :shoulder-r
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink3 :name :larm-shoulder-r :axis :-z
			     :min  -20.0 :max   95.0))

     ;; definition of :elbow-p
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink3 :child-link blink4 :name :larm-elbow-p :axis :-z
			     :min -140.0 :max    0.0))

     ;; definition of :wrist-y
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink4 :child-link blink5 :name :larm-wrist-y :axis :-z
			     :min -150.0 :max  120.0))

     ;; definition of :wrist-r
     (setq joint5 (instance rotational-joint :init
			     :parent-link blink5 :child-link blink6 :name :larm-wrist-r :axis :z 
			     :min  -90.0 :max   90.0))

     ;; definition of :wrist-p
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink6 :child-link blink7 :name :larm-wrist-p :axis :y 
			     :min  -45.0 :max   45.0))

     ;; definition of :finger1
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink7 :child-link blink8 :name :larm-finger1 :axis :y 
			     :min -105.0 :max   30.0))

     ;; definition of :finger2
     (setq joint32 (instance rotational-joint :init
			     :parent-link blink7 :child-link blink33 :name :larm-finger2 :axis :x 
			     :min  -10.0 :max   50.0))

     ;; definition of :finger3
     (setq joint33 (instance rotational-joint :init
			     :parent-link blink33 :child-link blink34 :name :larm-finger3 :axis :x 
			     :min  -90.0 :max   -2.0))

     ;; definition of :shoulder-y
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink9 :name :rarm-shoulder-y :axis :-z
			     :min  -90.0 :max    0.0))

     ;; definition of :shoulder-p
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink9 :child-link blink10 :name :rarm-shoulder-p :axis :-z
			     :min -180.0 :max   90.0))

     ;; definition of :shoulder-r
     (setq joint10 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink11 :name :rarm-shoulder-r :axis :-z
			     :min  -20.0 :max   95.0))

     ;; definition of :elbow-p
     (setq joint11 (instance rotational-joint :init
			     :parent-link blink11 :child-link blink12 :name :rarm-elbow-p :axis :-z
			     :min -140.0 :max    0.0))

     ;; definition of :wrist-y
     (setq joint12 (instance rotational-joint :init
			     :parent-link blink12 :child-link blink13 :name :rarm-wrist-y :axis :-z
			     :min -150.0 :max  120.0))

     ;; definition of :wrist-r
     (setq joint13 (instance rotational-joint :init
			     :parent-link blink13 :child-link blink14 :name :rarm-wrist-r :axis :z 
			     :min  -90.0 :max   90.0))

     ;; definition of :wrist-p
     (setq joint14 (instance rotational-joint :init
			     :parent-link blink14 :child-link blink15 :name :rarm-wrist-p :axis :-y
			     :min  -45.0 :max   45.0))

     ;; definition of :finger1
     (setq joint15 (instance rotational-joint :init
			     :parent-link blink15 :child-link blink16 :name :rarm-finger1 :axis :y 
			     :min -105.0 :max   30.0))

     ;; definition of :finger2
     (setq joint34 (instance rotational-joint :init
			     :parent-link blink15 :child-link blink35 :name :rarm-finger2 :axis :x 
			     :min  -10.0 :max   50.0))

     ;; definition of :finger3
     (setq joint35 (instance rotational-joint :init
			     :parent-link blink35 :child-link blink36 :name :rarm-finger3 :axis :x 
			     :min  -90.0 :max   -2.0))

     (setq head-root-link blink24)
     (setq head (list blink24 blink32))
     (setq lleg-root-link blink17)
     (setq lleg (list blink17 blink18 blink19 blink20 blink21 blink22 blink23))
     (setq rleg-root-link blink25)
     (setq rleg (list blink25 blink26 blink27 blink28 blink29 blink30 blink31))
     (setq larm-root-link blink1)
     (setq larm (list blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink33 blink34))
     (setq rarm-root-link blink9)
     (setq rarm (list blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink35 blink36))
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink17 blink18 blink19 blink20 blink21 blink22 blink23 blink24 blink25 blink26 blink27 blink28 blink29 blink30 blink31 blink32 blink33 blink34 blink35 blink36))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16 joint17 joint18 joint19 joint20 joint21 joint22 joint23 joint24 joint25 joint26 joint27 joint28 joint29 joint30 joint31 joint32 joint33 joint34 joint35))
     ;; definition of collision-avoidance-links
     (setq collision-avoidance-links
       (list
        ))

     ;; definition of head camera-coords
     (setq sensor0
       (make-cascoords
	:coords (send (send blink32 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 122.5 -45.0 65.0) :rot #2f((3.278255e-07 2.980227e-08 1.0) (-1.0 3.278255e-07 3.278255e-07) (-3.278255e-07 -1.0 2.980234e-08))))
        :name "head-camera1"))
     (send blink32 :assoc sensor0)

     ;; definition of head camera-coords
     (setq sensor1
       (make-cascoords
	:coords (send (send blink32 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 122.5 45.0 65.0) :rot #2f((3.278255e-07 2.980227e-08 1.0) (-1.0 3.278255e-07 3.278255e-07) (-3.278255e-07 -1.0 2.980234e-08))))
        :name "head-camera0"))
     (send blink32 :assoc sensor1)

     ;; definition of lleg force-sensor-coords
     (setq sensor2
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.4999 49.0 -120.0) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-sensor11"))
     (send blink22 :assoc sensor2)

     ;; definition of lleg force-sensor-coords
     (setq sensor3
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.4999 16.3 -120.0) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-sensor10"))
     (send blink22 :assoc sensor3)

     ;; definition of lleg force-sensor-coords
     (setq sensor4
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.4999 -16.3 -120.0) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-sensor9"))
     (send blink22 :assoc sensor4)

     ;; definition of lleg force-sensor-coords
     (setq sensor5
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.4999 -49.0 -120.0) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-sensor8"))
     (send blink22 :assoc sensor5)

     ;; definition of lleg force-sensor-coords
     (setq sensor6
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 49.0 -58.3) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-sensor7"))
     (send blink22 :assoc sensor6)

     ;; definition of lleg force-sensor-coords
     (setq sensor7
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 -49.0 -58.3) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-sensor6"))
     (send blink22 :assoc sensor7)

     ;; definition of lleg force-sensor-coords
     (setq sensor8
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 49.0 3.29996) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-sensor5"))
     (send blink22 :assoc sensor8)

     ;; definition of lleg force-sensor-coords
     (setq sensor9
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 -49.0 3.29996) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-sensor4"))
     (send blink22 :assoc sensor9)

     ;; definition of lleg force-sensor-coords
     (setq sensor10
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 49.0 64.9999) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-sensor3"))
     (send blink22 :assoc sensor10)

     ;; definition of lleg force-sensor-coords
     (setq sensor11
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 16.3 64.9999) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-sensor2"))
     (send blink22 :assoc sensor11)

     ;; definition of lleg force-sensor-coords
     (setq sensor12
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 -16.3 64.9999) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-sensor1"))
     (send blink22 :assoc sensor12)

     ;; definition of lleg force-sensor-coords
     (setq sensor13
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -79.5 -49.0 64.9999) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-sensor0"))
     (send blink22 :assoc sensor13)

     ;; definition of lleg force-plate-coords
     (setq sensor14
       (make-cascoords
	:coords (send (send blink22 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -75.0 0.0 -17.0) :rot #2f((4.241202e-07 2.452517e-14 1.0) (1.343178e-15 1.0 -2.452517e-14) (-1.0 1.343188e-15 4.241202e-07))))
        :name "lleg-force-plate0"))
     (send blink22 :assoc sensor14)

     ;; definition of rleg force-sensor-coords
     (setq sensor15
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 49.0 120.0) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-sensor23"))
     (send blink30 :assoc sensor15)

     ;; definition of rleg force-sensor-coords
     (setq sensor16
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 16.3 120.0) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-sensor22"))
     (send blink30 :assoc sensor16)

     ;; definition of rleg force-sensor-coords
     (setq sensor17
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 -16.3 120.0) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-sensor21"))
     (send blink30 :assoc sensor17)

     ;; definition of rleg force-sensor-coords
     (setq sensor18
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 -49.0 120.0) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-sensor20"))
     (send blink30 :assoc sensor18)

     ;; definition of rleg force-sensor-coords
     (setq sensor19
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 49.0 58.3) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-sensor19"))
     (send blink30 :assoc sensor19)

     ;; definition of rleg force-sensor-coords
     (setq sensor20
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 -49.0 58.3) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-sensor18"))
     (send blink30 :assoc sensor20)

     ;; definition of rleg force-sensor-coords
     (setq sensor21
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 49.0 -3.30003) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-sensor17"))
     (send blink30 :assoc sensor21)

     ;; definition of rleg force-sensor-coords
     (setq sensor22
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 -49.0 -3.30003) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-sensor16"))
     (send blink30 :assoc sensor22)

     ;; definition of rleg force-sensor-coords
     (setq sensor23
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 49.0 -65.0) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-sensor15"))
     (send blink30 :assoc sensor23)

     ;; definition of rleg force-sensor-coords
     (setq sensor24
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 16.3 -65.0) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-sensor14"))
     (send blink30 :assoc sensor24)

     ;; definition of rleg force-sensor-coords
     (setq sensor25
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 -16.3 -65.0) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-sensor13"))
     (send blink30 :assoc sensor25)

     ;; definition of rleg force-sensor-coords
     (setq sensor26
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 79.5 -49.0 -65.0) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-sensor12"))
     (send blink30 :assoc sensor26)

     ;; definition of rleg force-plate-coords
     (setq sensor27
       (make-cascoords
	:coords (send (send blink30 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 75.0 7.629395e-06 17.0) :rot #2f((4.241202e-07 1.383836e-15 -1.0) (1.249876e-16 1.0 1.383836e-15) (1.0 -1.249882e-16 4.241202e-07))))
        :name "rleg-force-plate1"))
     (send blink30 :assoc sensor27)

     (setq sensors (list sensor0 sensor1 sensor2 sensor3 sensor4 sensor5 sensor6 sensor7 sensor8 sensor9 sensor10 sensor11 sensor12 sensor13 sensor14 sensor15 sensor16 sensor17 sensor18 sensor19 sensor20 sensor21 sensor22 sensor23 sensor24 sensor25 sensor26 sensor27))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)
     self))
  (:reset-pose () (send self :angle-vector (float-vector -3.0 45.0 0.0 -110.0 0.0 0.0 0.0 0.0 -3.0 45.0 0.0 -110.0 0.0 0.0 0.0 0.0 0.0 0.0 -17.54 42.976 -25.435 0.0 0.0 0.0 0.0 0.0 -17.54 42.976 -25.435 0.0 0.0 0.0 0.0 -2.0 0.0 -2.0)))
  )

(defun h7 (&rest args) (instance* h7-robot :init args))
;; (format *error-output* "(instance h7-robot :init) for generating model~%")
