;;
;;
;; this file is automatically generated from euslisp+euslib
;;
;;
(defclass toshiba-iron-object
  :super cascaded-link
  :slots (sensors))
(defmethod toshiba-iron-object
  (:init
   (&rest args &key (name "toshiba-iron") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
         joint0
        
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :bodyset158572608
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -60.9043 75.9058 -35.0) (float-vector -60.9044 34.0944 -35.0) (float-vector -52.2113 -6.80329 -35.0) (float-vector -35.2051 -44.9999 -35.0) (float-vector -10.629 -78.826 -35.0) (float-vector 0.0 -88.3964 -35.0) (float-vector 10.6288 -78.8262 -35.0) (float-vector 35.2049 -45.0002 -35.0) (float-vector 52.2112 -6.80361 -35.0) (float-vector 60.9043 34.0941 -35.0) (float-vector 60.9044 75.9054 -35.0) (float-vector 56.8457 95.0 -35.0) (float-vector -56.8457 95.0 -35.0)))
         (instance face :init :vertices (list (float-vector 60.9044 75.9054 -40.0) (float-vector 56.8457 95.0 -40.0) (float-vector 56.8457 95.0 -35.0) (float-vector 60.9044 75.9054 -35.0)))
         (instance face :init :vertices (list (float-vector 60.9043 34.0941 -40.0) (float-vector 60.9044 75.9054 -40.0) (float-vector 60.9044 75.9054 -35.0) (float-vector 60.9043 34.0941 -35.0)))
         (instance face :init :vertices (list (float-vector 52.2112 -6.80361 -40.0) (float-vector 60.9043 34.0941 -40.0) (float-vector 60.9043 34.0941 -35.0) (float-vector 52.2112 -6.80361 -35.0)))
         (instance face :init :vertices (list (float-vector 35.2049 -45.0002 -40.0) (float-vector 52.2112 -6.80361 -40.0) (float-vector 52.2112 -6.80361 -35.0) (float-vector 35.2049 -45.0002 -35.0)))
         (instance face :init :vertices (list (float-vector 10.6288 -78.8262 -40.0) (float-vector 35.2049 -45.0002 -40.0) (float-vector 35.2049 -45.0002 -35.0) (float-vector 10.6288 -78.8262 -35.0)))
         (instance face :init :vertices (list (float-vector -1.144409e-05 -88.3964 -40.0) (float-vector 10.6288 -78.8262 -40.0) (float-vector 10.6288 -78.8262 -35.0) (float-vector 0.0 -88.3964 -35.0)))
         (instance face :init :vertices (list (float-vector -10.629 -78.826 -40.0) (float-vector -35.2051 -44.9999 -40.0) (float-vector -52.2113 -6.80329 -40.0) (float-vector -60.9044 34.0944 -40.0) (float-vector -60.9043 75.9058 -40.0) (float-vector -56.8457 95.0 -40.0) (float-vector 56.8457 95.0 -40.0) (float-vector 60.9044 75.9054 -40.0) (float-vector 60.9043 34.0941 -40.0) (float-vector 52.2112 -6.80361 -40.0) (float-vector 35.2049 -45.0002 -40.0) (float-vector 10.6288 -78.8262 -40.0) (float-vector -1.144409e-05 -88.3964 -40.0)))
         (instance face :init :vertices (list (float-vector -10.629 -78.826 -40.0) (float-vector -1.144409e-05 -88.3964 -40.0) (float-vector 0.0 -88.3964 -35.0) (float-vector -10.629 -78.826 -35.0)))
         (instance face :init :vertices (list (float-vector -35.2051 -44.9999 -40.0) (float-vector -10.629 -78.826 -40.0) (float-vector -10.629 -78.826 -35.0) (float-vector -35.2051 -44.9999 -35.0)))
         (instance face :init :vertices (list (float-vector -52.2113 -6.80329 -40.0) (float-vector -35.2051 -44.9999 -40.0) (float-vector -35.2051 -44.9999 -35.0) (float-vector -52.2113 -6.80329 -35.0)))
         (instance face :init :vertices (list (float-vector -60.9044 34.0944 -40.0) (float-vector -52.2113 -6.80329 -40.0) (float-vector -52.2113 -6.80329 -35.0) (float-vector -60.9044 34.0944 -35.0)))
         (instance face :init :vertices (list (float-vector -60.9043 75.9058 -35.0) (float-vector -56.8457 95.0 -35.0) (float-vector -56.8457 95.0 -40.0) (float-vector -60.9043 75.9058 -40.0)))
         (instance face :init :vertices (list (float-vector -60.9043 75.9058 -40.0) (float-vector -60.9044 34.0944 -40.0) (float-vector -60.9044 34.0944 -35.0) (float-vector -60.9043 75.9058 -35.0)))
         (instance face :init :vertices (list (float-vector -56.8457 95.0 -35.0) (float-vector 56.8457 95.0 -35.0) (float-vector 56.8457 95.0 -40.0) (float-vector -56.8457 95.0 -40.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 60.0 70.0) (float-vector -15.0 60.0 70.0) (float-vector -15.0 -2.185152e-07 70.0) (float-vector 15.0 1.998160e-08 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 60.0 0.0) (float-vector 15.0 60.0 0.0) (float-vector 15.0 1.998160e-08 0.0) (float-vector -15.0 -2.185152e-07 0.0)))
         (instance face :init :vertices (list (float-vector 15.0 60.0 70.0) (float-vector 15.0 60.0 0.0) (float-vector -15.0 60.0 0.0) (float-vector -15.0 60.0 70.0)))
         (instance face :init :vertices (list (float-vector 15.0 1.998160e-08 70.0) (float-vector 15.0 1.998160e-08 0.0) (float-vector 15.0 60.0 0.0) (float-vector 15.0 60.0 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 -2.185152e-07 70.0) (float-vector -15.0 -2.185152e-07 0.0) (float-vector 15.0 1.998160e-08 0.0) (float-vector 15.0 1.998160e-08 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 60.0 70.0) (float-vector -15.0 60.0 0.0) (float-vector -15.0 -2.185152e-07 0.0) (float-vector -15.0 -2.185152e-07 70.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 150.0 70.0) (float-vector -15.0 150.0 70.0) (float-vector -15.0 -1.547730e-05 70.0) (float-vector 15.0 -1.905350e-05 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 150.0 55.0) (float-vector 15.0 150.0 55.0) (float-vector 15.0 -1.905350e-05 55.0) (float-vector -15.0 -1.547730e-05 55.0)))
         (instance face :init :vertices (list (float-vector 15.0 150.0 70.0) (float-vector 15.0 150.0 55.0) (float-vector -15.0 150.0 55.0) (float-vector -15.0 150.0 70.0)))
         (instance face :init :vertices (list (float-vector 15.0 -1.905350e-05 70.0) (float-vector 15.0 -1.905350e-05 55.0) (float-vector 15.0 150.0 55.0) (float-vector 15.0 150.0 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 -1.547730e-05 70.0) (float-vector -15.0 -1.547730e-05 55.0) (float-vector 15.0 -1.905350e-05 55.0) (float-vector 15.0 -1.905350e-05 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 150.0 70.0) (float-vector -15.0 150.0 55.0) (float-vector -15.0 -1.547730e-05 55.0) (float-vector -15.0 -1.547730e-05 70.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -43.6845 -25.9548 17.9861) (float-vector -2.288818e-05 -44.8889 21.6237) (float-vector -1.525879e-05 2.1978 35.0) (float-vector -39.2705 30.7295 35.0) (float-vector -57.7602 19.3022 27.9376) (float-vector -52.2113 -6.80328 21.6668)))
         (instance face :init :vertices (list (float-vector -39.2705 79.2705 35.0) (float-vector -57.7602 90.6978 27.9376) (float-vector -60.9043 75.9058 26.7366) (float-vector -60.9044 34.0944 26.7366) (float-vector -57.7602 19.3022 27.9376) (float-vector -39.2705 30.7295 35.0)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 107.802 35.0) (float-vector 1.907349e-05 125.0 30.1145) (float-vector -48.5619 125.0 20.0915) (float-vector -52.2112 116.803 21.6668) (float-vector -57.7602 90.6978 27.9376) (float-vector -39.2705 79.2705 35.0)))
         (instance face :init :vertices (list (float-vector -21.1794 -64.3047 -2.40919) (float-vector -2.288818e-05 -44.8889 21.6237) (float-vector -43.6845 -25.9548 17.9861) (float-vector -35.2051 -44.9999 6.72266)))
         (instance face :init :vertices (list (float-vector 39.2705 79.2705 35.0) (float-vector 57.7602 90.6978 27.9376) (float-vector 52.2114 116.803 21.6668) (float-vector 48.5619 125.0 20.0915) (float-vector 1.907349e-05 125.0 30.1145) (float-vector 1.525879e-05 107.802 35.0)))
         (instance face :init :vertices (list (float-vector 39.2705 30.7295 35.0) (float-vector 57.7602 19.3022 27.9376) (float-vector 60.9043 34.0941 26.7366) (float-vector 60.9044 75.9054 26.7366) (float-vector 57.7602 90.6978 27.9376) (float-vector 39.2705 79.2705 35.0)))
         (instance face :init :vertices (list (float-vector -2.288818e-05 -44.8889 21.6237) (float-vector 43.6845 -25.9548 17.9861) (float-vector 52.2112 -6.80362 21.6667) (float-vector 57.7602 19.3022 27.9376) (float-vector 39.2705 30.7295 35.0) (float-vector -1.525879e-05 2.1978 35.0)))
         (instance face :init :vertices (list (float-vector -2.288818e-05 -44.8889 21.6237) (float-vector 21.1793 -64.3047 -2.40919) (float-vector 35.2049 -45.0002 6.72247) (float-vector 43.6845 -25.9548 17.9861)))
         (instance face :init :vertices (list (float-vector 21.1793 -64.3047 -2.40919) (float-vector -2.288818e-05 -44.8889 21.6237) (float-vector -21.1794 -64.3047 -2.40919) (float-vector -10.6291 -78.826 -20.3836) (float-vector -3.051758e-05 -88.3964 -32.2299) (float-vector 10.6288 -78.8262 -20.3839)))
         (instance face :init :vertices (list (float-vector -1.525879e-05 2.1978 35.0) (float-vector 39.2705 30.7295 35.0) (float-vector 39.2705 79.2705 35.0) (float-vector 1.525879e-05 107.802 35.0) (float-vector -39.2705 79.2705 35.0) (float-vector -39.2705 30.7295 35.0)))
         (instance face :init :vertices (list (float-vector -48.5619 125.0 -35.0) (float-vector -48.5619 125.0 20.0915) (float-vector 1.907349e-05 125.0 30.1145) (float-vector 48.5619 125.0 20.0915) (float-vector 48.5619 125.0 -35.0)))
         (instance face :init :vertices (list (float-vector -52.2112 116.803 21.6668) (float-vector -52.2112 116.803 -35.0) (float-vector -60.9043 75.9058 -35.0) (float-vector -60.9043 75.9058 26.7366) (float-vector -57.7602 90.6978 27.9376)))
         (instance face :init :vertices (list (float-vector -48.5619 125.0 -35.0) (float-vector -52.2112 116.803 -35.0) (float-vector -52.2112 116.803 21.6668) (float-vector -48.5619 125.0 20.0915)))
         (instance face :init :vertices (list (float-vector -60.9044 34.0944 -35.0) (float-vector -60.9044 34.0944 26.7366) (float-vector -60.9043 75.9058 26.7366) (float-vector -60.9043 75.9058 -35.0)))
         (instance face :init :vertices (list (float-vector -52.2113 -6.80328 -35.0) (float-vector -52.2113 -6.80328 21.6668) (float-vector -57.7602 19.3022 27.9376) (float-vector -60.9044 34.0944 26.7366) (float-vector -60.9044 34.0944 -35.0)))
         (instance face :init :vertices (list (float-vector -35.2051 -44.9999 -35.0) (float-vector -35.2051 -44.9999 6.72266) (float-vector -43.6845 -25.9548 17.9861) (float-vector -52.2113 -6.80328 21.6668) (float-vector -52.2113 -6.80328 -35.0)))
         (instance face :init :vertices (list (float-vector -10.6291 -78.826 -35.0) (float-vector -10.6291 -78.826 -20.3836) (float-vector -21.1794 -64.3047 -2.40919) (float-vector -35.2051 -44.9999 6.72266) (float-vector -35.2051 -44.9999 -35.0)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 -88.3964 -35.0) (float-vector -3.051758e-05 -88.3964 -32.2299) (float-vector -10.6291 -78.826 -20.3836) (float-vector -10.6291 -78.826 -35.0)))
         (instance face :init :vertices (list (float-vector 10.6288 -78.8262 -35.0) (float-vector -3.051758e-05 -88.3964 -35.0) (float-vector -10.6291 -78.826 -35.0) (float-vector -35.2051 -44.9999 -35.0) (float-vector -52.2113 -6.80328 -35.0) (float-vector -60.9044 34.0944 -35.0) (float-vector -60.9043 75.9058 -35.0) (float-vector -52.2112 116.803 -35.0) (float-vector -48.5619 125.0 -35.0) (float-vector 48.5619 125.0 -35.0) (float-vector 52.2114 116.803 -35.0) (float-vector 60.9044 75.9054 -35.0) (float-vector 60.9043 34.0941 -35.0) (float-vector 52.2112 -6.80362 -35.0) (float-vector 35.2049 -45.0002 -35.0)))
         (instance face :init :vertices (list (float-vector 10.6288 -78.8262 -35.0) (float-vector 10.6288 -78.8262 -20.3839) (float-vector -3.051758e-05 -88.3964 -32.2299) (float-vector -3.051758e-05 -88.3964 -35.0)))
         (instance face :init :vertices (list (float-vector 35.2049 -45.0002 -35.0) (float-vector 35.2049 -45.0002 6.72247) (float-vector 21.1793 -64.3047 -2.40919) (float-vector 10.6288 -78.8262 -20.3839) (float-vector 10.6288 -78.8262 -35.0)))
         (instance face :init :vertices (list (float-vector 52.2112 -6.80362 -35.0) (float-vector 52.2112 -6.80362 21.6667) (float-vector 43.6845 -25.9548 17.9861) (float-vector 35.2049 -45.0002 6.72247) (float-vector 35.2049 -45.0002 -35.0)))
         (instance face :init :vertices (list (float-vector 60.9043 34.0941 -35.0) (float-vector 60.9043 34.0941 26.7366) (float-vector 57.7602 19.3022 27.9376) (float-vector 52.2112 -6.80362 21.6667) (float-vector 52.2112 -6.80362 -35.0)))
         (instance face :init :vertices (list (float-vector 60.9044 75.9054 -35.0) (float-vector 60.9044 75.9054 26.7366) (float-vector 60.9043 34.0941 26.7366) (float-vector 60.9043 34.0941 -35.0)))
         (instance face :init :vertices (list (float-vector 52.2114 116.803 21.6668) (float-vector 52.2114 116.803 -35.0) (float-vector 48.5619 125.0 -35.0) (float-vector 48.5619 125.0 20.0915)))
         (instance face :init :vertices (list (float-vector 52.2114 116.803 -35.0) (float-vector 52.2114 116.803 21.6668) (float-vector 57.7602 90.6978 27.9376) (float-vector 60.9044 75.9054 26.7366) (float-vector 60.9044 75.9054 -35.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 12.9904 -7.50001 70.0) (float-vector 15.0 0.0 70.0) (float-vector 12.9904 7.5 70.0) (float-vector 7.5 12.9904 70.0) (float-vector 3.814697e-06 15.0 70.0) (float-vector -7.5 12.9904 70.0) (float-vector -12.9904 7.50001 70.0) (float-vector -15.0 9.643070e-06 70.0) (float-vector -12.9904 -7.49999 70.0) (float-vector -7.50001 -12.9904 70.0) (float-vector -1.144409e-05 -15.0 70.0) (float-vector 7.49998 -12.9904 70.0)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 0.0) (float-vector 12.9904 -7.50001 0.0) (float-vector 7.49998 -12.9904 0.0) (float-vector -1.144409e-05 -15.0 0.0) (float-vector -7.50001 -12.9904 0.0) (float-vector -12.9904 -7.49999 0.0) (float-vector -15.0 9.643070e-06 0.0) (float-vector -12.9904 7.50001 0.0) (float-vector -7.5 12.9904 0.0) (float-vector 3.814697e-06 15.0 0.0) (float-vector 7.5 12.9904 0.0) (float-vector 12.9904 7.5 0.0)))
         (instance face :init :vertices (list (float-vector 12.9904 -7.50001 70.0) (float-vector 12.9904 -7.50001 0.0) (float-vector 15.0 0.0 0.0) (float-vector 15.0 0.0 70.0)))
         (instance face :init :vertices (list (float-vector 7.49998 -12.9904 70.0) (float-vector 7.49998 -12.9904 0.0) (float-vector 12.9904 -7.50001 0.0) (float-vector 12.9904 -7.50001 70.0)))
         (instance face :init :vertices (list (float-vector -1.144409e-05 -15.0 70.0) (float-vector -1.144409e-05 -15.0 0.0) (float-vector 7.49998 -12.9904 0.0) (float-vector 7.49998 -12.9904 70.0)))
         (instance face :init :vertices (list (float-vector -7.50001 -12.9904 70.0) (float-vector -7.50001 -12.9904 0.0) (float-vector -1.144409e-05 -15.0 0.0) (float-vector -1.144409e-05 -15.0 70.0)))
         (instance face :init :vertices (list (float-vector -12.9904 -7.49999 70.0) (float-vector -12.9904 -7.49999 0.0) (float-vector -7.50001 -12.9904 0.0) (float-vector -7.50001 -12.9904 70.0)))
         (instance face :init :vertices (list (float-vector -15.0 9.643070e-06 70.0) (float-vector -15.0 9.643070e-06 0.0) (float-vector -12.9904 -7.49999 0.0) (float-vector -12.9904 -7.49999 70.0)))
         (instance face :init :vertices (list (float-vector -12.9904 7.50001 70.0) (float-vector -12.9904 7.50001 0.0) (float-vector -15.0 9.643070e-06 0.0) (float-vector -15.0 9.643070e-06 70.0)))
         (instance face :init :vertices (list (float-vector -7.5 12.9904 70.0) (float-vector -7.5 12.9904 0.0) (float-vector -12.9904 7.50001 0.0) (float-vector -12.9904 7.50001 70.0)))
         (instance face :init :vertices (list (float-vector 3.814697e-06 15.0 70.0) (float-vector 3.814697e-06 15.0 0.0) (float-vector -7.5 12.9904 0.0) (float-vector -7.5 12.9904 70.0)))
         (instance face :init :vertices (list (float-vector 7.5 12.9904 70.0) (float-vector 7.5 12.9904 0.0) (float-vector 3.814697e-06 15.0 0.0) (float-vector 3.814697e-06 15.0 70.0)))
         (instance face :init :vertices (list (float-vector 12.9904 7.5 70.0) (float-vector 12.9904 7.5 0.0) (float-vector 7.5 12.9904 0.0) (float-vector 7.5 12.9904 70.0)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 70.0) (float-vector 15.0 0.0 0.0) (float-vector 12.9904 7.5 0.0) (float-vector 12.9904 7.5 70.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color (list))
     (send (elt bc 1) :set-color (list))
     (send (elt bc 2) :set-color (list))
     (send (elt bc 3) :set-color :pink)
     (send (elt bc 4) :set-color :white)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset158572608 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)
     self))
  )

(defun toshiba-iron (&rest args) (instance* toshiba-iron-object :init args))
;; (format *error-output* "(instance toshiba-iron-object :init) for generating model~%")
