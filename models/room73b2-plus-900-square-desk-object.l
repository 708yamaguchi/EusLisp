;;
;;
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room73b2-plus-900-square-desk-object
  :super cascaded-link
  :slots (sensors
         ))
(defmethod room73b2-plus-900-square-desk-object
  (:init
   (&rest args &key (name "room73b2-plus-900-square-desk") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 handle0 handle1
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :room73b2-plus-900-square-desk-bodyset12
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 450.0 450.0 700.0) (float-vector -450.0 450.0 700.0) (float-vector -450.0 -450.0 700.0) (float-vector 450.0 -450.0 700.0)))
         (instance face :init :vertices (list (float-vector -450.0 450.0 670.0) (float-vector 450.0 450.0 670.0) (float-vector 450.0 -450.0 670.0) (float-vector -450.0 -450.0 670.0)))
         (instance face :init :vertices (list (float-vector 450.0 450.0 700.0) (float-vector 450.0 450.0 670.0) (float-vector -450.0 450.0 670.0) (float-vector -450.0 450.0 700.0)))
         (instance face :init :vertices (list (float-vector 450.0 -450.0 700.0) (float-vector 450.0 -450.0 670.0) (float-vector 450.0 450.0 670.0) (float-vector 450.0 450.0 700.0)))
         (instance face :init :vertices (list (float-vector -450.0 -450.0 700.0) (float-vector -450.0 -450.0 670.0) (float-vector 450.0 -450.0 670.0) (float-vector 450.0 -450.0 700.0)))
         (instance face :init :vertices (list (float-vector -450.0 450.0 700.0) (float-vector -450.0 450.0 670.0) (float-vector -450.0 -450.0 670.0) (float-vector -450.0 -450.0 700.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 38.9711 -22.5 670.0) (float-vector 45.0 0.0 670.0) (float-vector 38.9711 22.5 670.0) (float-vector 22.5 38.9711 670.0) (float-vector 0.0 45.0 670.0) (float-vector -22.5 38.9711 670.0) (float-vector -38.9711 22.5 670.0) (float-vector -45.0 0.0 670.0) (float-vector -38.9711 -22.5 670.0) (float-vector -22.5 -38.9711 670.0) (float-vector 0.0 -45.0 670.0) (float-vector 22.5 -38.9711 670.0)))
         (instance face :init :vertices (list (float-vector 45.0 0.0 0.0) (float-vector 38.9711 -22.5 0.0) (float-vector 22.5 -38.9711 0.0) (float-vector 0.0 -45.0 0.0) (float-vector -22.5 -38.9711 0.0) (float-vector -38.9711 -22.5 0.0) (float-vector -45.0 0.0 0.0) (float-vector -38.9711 22.5 0.0) (float-vector -22.5 38.9711 0.0) (float-vector 0.0 45.0 0.0) (float-vector 22.5 38.9711 0.0) (float-vector 38.9711 22.5 0.0)))
         (instance face :init :vertices (list (float-vector 38.9711 -22.5 670.0) (float-vector 38.9711 -22.5 0.0) (float-vector 45.0 0.0 0.0) (float-vector 45.0 0.0 670.0)))
         (instance face :init :vertices (list (float-vector 22.5 -38.9711 670.0) (float-vector 22.5 -38.9711 0.0) (float-vector 38.9711 -22.5 0.0) (float-vector 38.9711 -22.5 670.0)))
         (instance face :init :vertices (list (float-vector 0.0 -45.0 670.0) (float-vector 0.0 -45.0 0.0) (float-vector 22.5 -38.9711 0.0) (float-vector 22.5 -38.9711 670.0)))
         (instance face :init :vertices (list (float-vector -22.5 -38.9711 670.0) (float-vector -22.5 -38.9711 0.0) (float-vector 0.0 -45.0 0.0) (float-vector 0.0 -45.0 670.0)))
         (instance face :init :vertices (list (float-vector -38.9711 -22.5 670.0) (float-vector -38.9711 -22.5 0.0) (float-vector -22.5 -38.9711 0.0) (float-vector -22.5 -38.9711 670.0)))
         (instance face :init :vertices (list (float-vector -45.0 0.0 670.0) (float-vector -45.0 0.0 0.0) (float-vector -38.9711 -22.5 0.0) (float-vector -38.9711 -22.5 670.0)))
         (instance face :init :vertices (list (float-vector -38.9711 22.5 670.0) (float-vector -38.9711 22.5 0.0) (float-vector -45.0 0.0 0.0) (float-vector -45.0 0.0 670.0)))
         (instance face :init :vertices (list (float-vector -22.5 38.9711 670.0) (float-vector -22.5 38.9711 0.0) (float-vector -38.9711 22.5 0.0) (float-vector -38.9711 22.5 670.0)))
         (instance face :init :vertices (list (float-vector 0.0 45.0 670.0) (float-vector 0.0 45.0 0.0) (float-vector -22.5 38.9711 0.0) (float-vector -22.5 38.9711 670.0)))
         (instance face :init :vertices (list (float-vector 22.5 38.9711 670.0) (float-vector 22.5 38.9711 0.0) (float-vector 0.0 45.0 0.0) (float-vector 0.0 45.0 670.0)))
         (instance face :init :vertices (list (float-vector 38.9711 22.5 670.0) (float-vector 38.9711 22.5 0.0) (float-vector 22.5 38.9711 0.0) (float-vector 22.5 38.9711 670.0)))
         (instance face :init :vertices (list (float-vector 45.0 0.0 670.0) (float-vector 45.0 0.0 0.0) (float-vector 38.9711 22.5 0.0) (float-vector 38.9711 22.5 670.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -300.52 335.876 50.0) (float-vector -335.876 300.52 50.0) (float-vector 300.52 -335.876 50.0) (float-vector 335.876 -300.52 50.0)))
         (instance face :init :vertices (list (float-vector -335.876 300.52 0.0) (float-vector -300.52 335.876 0.0) (float-vector 335.876 -300.52 0.0) (float-vector 300.52 -335.876 0.0)))
         (instance face :init :vertices (list (float-vector -300.52 335.876 50.0) (float-vector -300.52 335.876 0.0) (float-vector -335.876 300.52 0.0) (float-vector -335.876 300.52 50.0)))
         (instance face :init :vertices (list (float-vector 335.876 -300.52 50.0) (float-vector 335.876 -300.52 0.0) (float-vector -300.52 335.876 0.0) (float-vector -300.52 335.876 50.0)))
         (instance face :init :vertices (list (float-vector 300.52 -335.876 50.0) (float-vector 300.52 -335.876 0.0) (float-vector 335.876 -300.52 0.0) (float-vector 335.876 -300.52 50.0)))
         (instance face :init :vertices (list (float-vector -335.876 300.52 50.0) (float-vector -335.876 300.52 0.0) (float-vector 300.52 -335.876 0.0) (float-vector 300.52 -335.876 50.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 335.876 300.52 50.0) (float-vector 300.52 335.876 50.0) (float-vector -335.876 -300.52 50.0) (float-vector -300.52 -335.876 50.0)))
         (instance face :init :vertices (list (float-vector 300.52 335.876 0.0) (float-vector 335.876 300.52 0.0) (float-vector -300.52 -335.876 0.0) (float-vector -335.876 -300.52 0.0)))
         (instance face :init :vertices (list (float-vector 335.876 300.52 50.0) (float-vector 335.876 300.52 0.0) (float-vector 300.52 335.876 0.0) (float-vector 300.52 335.876 50.0)))
         (instance face :init :vertices (list (float-vector -300.52 -335.876 50.0) (float-vector -300.52 -335.876 0.0) (float-vector 335.876 300.52 0.0) (float-vector 335.876 300.52 50.0)))
         (instance face :init :vertices (list (float-vector -335.876 -300.52 50.0) (float-vector -335.876 -300.52 0.0) (float-vector -300.52 -335.876 0.0) (float-vector -300.52 -335.876 50.0)))
         (instance face :init :vertices (list (float-vector 300.52 335.876 50.0) (float-vector 300.52 335.876 0.0) (float-vector -335.876 -300.52 0.0) (float-vector -335.876 -300.52 50.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :palegoldenrod)
     (send (elt bc 1) :set-color :gray60)
     (send (elt bc 2) :set-color :gray60)
     (send (elt bc 3) :set-color :gray60)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-plus-900-square-desk-bodyset12 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 3280.0 -880.0 670.0) :rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) :name "handle-l"))
     (send self :assoc handle0)
     (setq handle1 (make-cascoords :pos (float-vector 3280.0 -280.0 670.0) :rot #2f((-1.0 1.232595e-32 -1.224606e-16) (1.224606e-16 2.220446e-16 -1.0) (1.232595e-32 -1.0 -2.220446e-16)) :name "handle-r"))
     (send self :assoc handle1)

     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))
  (:cameras (&rest args)
   (forward-message-to-all (list) args))

  (:handle () (list  handle0 handle1))
  (:handle-handle-l () handle0)
  (:handle-handle-r () handle1)
  (:attention () (list ))
  (:button () (list ))
  )

(defun room73b2-plus-900-square-desk (&rest args) (instance* room73b2-plus-900-square-desk-object :init args))
;; (format *error-output* "(instance room73b2-plus-900-square-desk-object :init) for generating model~%")
