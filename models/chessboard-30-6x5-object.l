;;
;;
;; this file is automatically generated from euslisp+euslib version EusLisp 8.26(r478M 647M 47109:47930) for Linux64 created on k-okada-t410s(Fri May 27 16:12:08 JST 2011)
;;
;;
(defclass chessboard-30-6x5-object
  :super cascaded-link
  :slots (sensors
         ))
(defmethod chessboard-30-6x5-object
  (:init
   (&rest args &key (name "chessboard-30-6x5") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 attention0
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of chessboard-30-6x5
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 101.191 92.5927 4.5) (float-vector -101.191 92.5927 4.5) (float-vector -101.191 -92.5927 4.5) (float-vector 101.191 -92.5927 4.5)))
         (instance face :init :vertices (list (float-vector -101.191 92.5927 -4.5) (float-vector 101.191 92.5927 -4.5) (float-vector 101.191 -92.5927 -4.5) (float-vector -101.191 -92.5927 -4.5)))
         (instance face :init :vertices (list (float-vector 101.191 92.5927 4.5) (float-vector 101.191 92.5927 -4.5) (float-vector -101.191 92.5927 -4.5) (float-vector -101.191 92.5927 4.5)))
         (instance face :init :vertices (list (float-vector 101.191 -92.5927 4.5) (float-vector 101.191 -92.5927 -4.5) (float-vector 101.191 92.5927 -4.5) (float-vector 101.191 92.5927 4.5)))
         (instance face :init :vertices (list (float-vector -101.191 -92.5927 4.5) (float-vector -101.191 -92.5927 -4.5) (float-vector 101.191 -92.5927 -4.5) (float-vector 101.191 -92.5927 4.5)))
         (instance face :init :vertices (list (float-vector -101.191 92.5927 4.5) (float-vector -101.191 92.5927 -4.5) (float-vector -101.191 -92.5927 -4.5) (float-vector -101.191 -92.5927 4.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 90.0 75.0 5.0) (float-vector 60.0 75.0 5.0) (float-vector 60.0 45.0 5.0) (float-vector 90.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 75.0 -5.0) (float-vector 90.0 75.0 -5.0) (float-vector 90.0 45.0 -5.0) (float-vector 60.0 45.0 -5.0)))
         (instance face :init :vertices (list (float-vector 90.0 75.0 5.0) (float-vector 90.0 75.0 -5.0) (float-vector 60.0 75.0 -5.0) (float-vector 60.0 75.0 5.0)))
         (instance face :init :vertices (list (float-vector 90.0 45.0 5.0) (float-vector 90.0 45.0 -5.0) (float-vector 90.0 75.0 -5.0) (float-vector 90.0 75.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 45.0 5.0) (float-vector 60.0 45.0 -5.0) (float-vector 90.0 45.0 -5.0) (float-vector 90.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 75.0 5.0) (float-vector 60.0 75.0 -5.0) (float-vector 60.0 45.0 -5.0) (float-vector 60.0 45.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 90.0 45.0 5.0) (float-vector 60.0 45.0 5.0) (float-vector 60.0 15.0 5.0) (float-vector 90.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 45.0 -5.0) (float-vector 90.0 45.0 -5.0) (float-vector 90.0 15.0 -5.0) (float-vector 60.0 15.0 -5.0)))
         (instance face :init :vertices (list (float-vector 90.0 45.0 5.0) (float-vector 90.0 45.0 -5.0) (float-vector 60.0 45.0 -5.0) (float-vector 60.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 90.0 15.0 5.0) (float-vector 90.0 15.0 -5.0) (float-vector 90.0 45.0 -5.0) (float-vector 90.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 15.0 5.0) (float-vector 60.0 15.0 -5.0) (float-vector 90.0 15.0 -5.0) (float-vector 90.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 45.0 5.0) (float-vector 60.0 45.0 -5.0) (float-vector 60.0 15.0 -5.0) (float-vector 60.0 15.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 90.0 15.0 5.0) (float-vector 60.0 15.0 5.0) (float-vector 60.0 -15.0 5.0) (float-vector 90.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 15.0 -5.0) (float-vector 90.0 15.0 -5.0) (float-vector 90.0 -15.0 -5.0) (float-vector 60.0 -15.0 -5.0)))
         (instance face :init :vertices (list (float-vector 90.0 15.0 5.0) (float-vector 90.0 15.0 -5.0) (float-vector 60.0 15.0 -5.0) (float-vector 60.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 90.0 -15.0 5.0) (float-vector 90.0 -15.0 -5.0) (float-vector 90.0 15.0 -5.0) (float-vector 90.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 -15.0 5.0) (float-vector 60.0 -15.0 -5.0) (float-vector 90.0 -15.0 -5.0) (float-vector 90.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 15.0 5.0) (float-vector 60.0 15.0 -5.0) (float-vector 60.0 -15.0 -5.0) (float-vector 60.0 -15.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 90.0 -15.0 5.0) (float-vector 60.0 -15.0 5.0) (float-vector 60.0 -45.0 5.0) (float-vector 90.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 -15.0 -5.0) (float-vector 90.0 -15.0 -5.0) (float-vector 90.0 -45.0 -5.0) (float-vector 60.0 -45.0 -5.0)))
         (instance face :init :vertices (list (float-vector 90.0 -15.0 5.0) (float-vector 90.0 -15.0 -5.0) (float-vector 60.0 -15.0 -5.0) (float-vector 60.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 90.0 -45.0 5.0) (float-vector 90.0 -45.0 -5.0) (float-vector 90.0 -15.0 -5.0) (float-vector 90.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 -45.0 5.0) (float-vector 60.0 -45.0 -5.0) (float-vector 90.0 -45.0 -5.0) (float-vector 90.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 -15.0 5.0) (float-vector 60.0 -15.0 -5.0) (float-vector 60.0 -45.0 -5.0) (float-vector 60.0 -45.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 90.0 -45.0 5.0) (float-vector 60.0 -45.0 5.0) (float-vector 60.0 -75.0 5.0) (float-vector 90.0 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 -45.0 -5.0) (float-vector 90.0 -45.0 -5.0) (float-vector 90.0 -75.0 -5.0) (float-vector 60.0 -75.0 -5.0)))
         (instance face :init :vertices (list (float-vector 90.0 -45.0 5.0) (float-vector 90.0 -45.0 -5.0) (float-vector 60.0 -45.0 -5.0) (float-vector 60.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 90.0 -75.0 5.0) (float-vector 90.0 -75.0 -5.0) (float-vector 90.0 -45.0 -5.0) (float-vector 90.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 -75.0 5.0) (float-vector 60.0 -75.0 -5.0) (float-vector 90.0 -75.0 -5.0) (float-vector 90.0 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 -45.0 5.0) (float-vector 60.0 -45.0 -5.0) (float-vector 60.0 -75.0 -5.0) (float-vector 60.0 -75.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 60.0 75.0 5.0) (float-vector 30.0 75.0 5.0) (float-vector 30.0 45.0 5.0) (float-vector 60.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 75.0 -5.0) (float-vector 60.0 75.0 -5.0) (float-vector 60.0 45.0 -5.0) (float-vector 30.0 45.0 -5.0)))
         (instance face :init :vertices (list (float-vector 60.0 75.0 5.0) (float-vector 60.0 75.0 -5.0) (float-vector 30.0 75.0 -5.0) (float-vector 30.0 75.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 45.0 5.0) (float-vector 60.0 45.0 -5.0) (float-vector 60.0 75.0 -5.0) (float-vector 60.0 75.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 45.0 5.0) (float-vector 30.0 45.0 -5.0) (float-vector 60.0 45.0 -5.0) (float-vector 60.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 75.0 5.0) (float-vector 30.0 75.0 -5.0) (float-vector 30.0 45.0 -5.0) (float-vector 30.0 45.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 60.0 45.0 5.0) (float-vector 30.0 45.0 5.0) (float-vector 30.0 15.0 5.0) (float-vector 60.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 45.0 -5.0) (float-vector 60.0 45.0 -5.0) (float-vector 60.0 15.0 -5.0) (float-vector 30.0 15.0 -5.0)))
         (instance face :init :vertices (list (float-vector 60.0 45.0 5.0) (float-vector 60.0 45.0 -5.0) (float-vector 30.0 45.0 -5.0) (float-vector 30.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 15.0 5.0) (float-vector 60.0 15.0 -5.0) (float-vector 60.0 45.0 -5.0) (float-vector 60.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 15.0 5.0) (float-vector 30.0 15.0 -5.0) (float-vector 60.0 15.0 -5.0) (float-vector 60.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 45.0 5.0) (float-vector 30.0 45.0 -5.0) (float-vector 30.0 15.0 -5.0) (float-vector 30.0 15.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 60.0 15.0 5.0) (float-vector 30.0 15.0 5.0) (float-vector 30.0 -15.0 5.0) (float-vector 60.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 15.0 -5.0) (float-vector 60.0 15.0 -5.0) (float-vector 60.0 -15.0 -5.0) (float-vector 30.0 -15.0 -5.0)))
         (instance face :init :vertices (list (float-vector 60.0 15.0 5.0) (float-vector 60.0 15.0 -5.0) (float-vector 30.0 15.0 -5.0) (float-vector 30.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 -15.0 5.0) (float-vector 60.0 -15.0 -5.0) (float-vector 60.0 15.0 -5.0) (float-vector 60.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 -15.0 5.0) (float-vector 30.0 -15.0 -5.0) (float-vector 60.0 -15.0 -5.0) (float-vector 60.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 15.0 5.0) (float-vector 30.0 15.0 -5.0) (float-vector 30.0 -15.0 -5.0) (float-vector 30.0 -15.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 60.0 -15.0 5.0) (float-vector 30.0 -15.0 5.0) (float-vector 30.0 -45.0 5.0) (float-vector 60.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 -15.0 -5.0) (float-vector 60.0 -15.0 -5.0) (float-vector 60.0 -45.0 -5.0) (float-vector 30.0 -45.0 -5.0)))
         (instance face :init :vertices (list (float-vector 60.0 -15.0 5.0) (float-vector 60.0 -15.0 -5.0) (float-vector 30.0 -15.0 -5.0) (float-vector 30.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 -45.0 5.0) (float-vector 60.0 -45.0 -5.0) (float-vector 60.0 -15.0 -5.0) (float-vector 60.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 -45.0 5.0) (float-vector 30.0 -45.0 -5.0) (float-vector 60.0 -45.0 -5.0) (float-vector 60.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 -15.0 5.0) (float-vector 30.0 -15.0 -5.0) (float-vector 30.0 -45.0 -5.0) (float-vector 30.0 -45.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 60.0 -45.0 5.0) (float-vector 30.0 -45.0 5.0) (float-vector 30.0 -75.0 5.0) (float-vector 60.0 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 -45.0 -5.0) (float-vector 60.0 -45.0 -5.0) (float-vector 60.0 -75.0 -5.0) (float-vector 30.0 -75.0 -5.0)))
         (instance face :init :vertices (list (float-vector 60.0 -45.0 5.0) (float-vector 60.0 -45.0 -5.0) (float-vector 30.0 -45.0 -5.0) (float-vector 30.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 60.0 -75.0 5.0) (float-vector 60.0 -75.0 -5.0) (float-vector 60.0 -45.0 -5.0) (float-vector 60.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 -75.0 5.0) (float-vector 30.0 -75.0 -5.0) (float-vector 60.0 -75.0 -5.0) (float-vector 60.0 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 -45.0 5.0) (float-vector 30.0 -45.0 -5.0) (float-vector 30.0 -75.0 -5.0) (float-vector 30.0 -75.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 75.0 5.0) (float-vector 0.0 75.0 5.0) (float-vector 0.0 45.0 5.0) (float-vector 30.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 75.0 -5.0) (float-vector 30.0 75.0 -5.0) (float-vector 30.0 45.0 -5.0) (float-vector 0.0 45.0 -5.0)))
         (instance face :init :vertices (list (float-vector 30.0 75.0 5.0) (float-vector 30.0 75.0 -5.0) (float-vector 0.0 75.0 -5.0) (float-vector 0.0 75.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 45.0 5.0) (float-vector 30.0 45.0 -5.0) (float-vector 30.0 75.0 -5.0) (float-vector 30.0 75.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 45.0 5.0) (float-vector 0.0 45.0 -5.0) (float-vector 30.0 45.0 -5.0) (float-vector 30.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 75.0 5.0) (float-vector 0.0 75.0 -5.0) (float-vector 0.0 45.0 -5.0) (float-vector 0.0 45.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 45.0 5.0) (float-vector 0.0 45.0 5.0) (float-vector 0.0 15.0 5.0) (float-vector 30.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 45.0 -5.0) (float-vector 30.0 45.0 -5.0) (float-vector 30.0 15.0 -5.0) (float-vector 0.0 15.0 -5.0)))
         (instance face :init :vertices (list (float-vector 30.0 45.0 5.0) (float-vector 30.0 45.0 -5.0) (float-vector 0.0 45.0 -5.0) (float-vector 0.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 15.0 5.0) (float-vector 30.0 15.0 -5.0) (float-vector 30.0 45.0 -5.0) (float-vector 30.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 15.0 5.0) (float-vector 0.0 15.0 -5.0) (float-vector 30.0 15.0 -5.0) (float-vector 30.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 45.0 5.0) (float-vector 0.0 45.0 -5.0) (float-vector 0.0 15.0 -5.0) (float-vector 0.0 15.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 15.0 5.0) (float-vector 0.0 15.0 5.0) (float-vector 0.0 -15.0 5.0) (float-vector 30.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 15.0 -5.0) (float-vector 30.0 15.0 -5.0) (float-vector 30.0 -15.0 -5.0) (float-vector 0.0 -15.0 -5.0)))
         (instance face :init :vertices (list (float-vector 30.0 15.0 5.0) (float-vector 30.0 15.0 -5.0) (float-vector 0.0 15.0 -5.0) (float-vector 0.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 -15.0 5.0) (float-vector 30.0 -15.0 -5.0) (float-vector 30.0 15.0 -5.0) (float-vector 30.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 5.0) (float-vector 0.0 -15.0 -5.0) (float-vector 30.0 -15.0 -5.0) (float-vector 30.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 15.0 5.0) (float-vector 0.0 15.0 -5.0) (float-vector 0.0 -15.0 -5.0) (float-vector 0.0 -15.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 -15.0 5.0) (float-vector 0.0 -15.0 5.0) (float-vector 0.0 -45.0 5.0) (float-vector 30.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -5.0) (float-vector 30.0 -15.0 -5.0) (float-vector 30.0 -45.0 -5.0) (float-vector 0.0 -45.0 -5.0)))
         (instance face :init :vertices (list (float-vector 30.0 -15.0 5.0) (float-vector 30.0 -15.0 -5.0) (float-vector 0.0 -15.0 -5.0) (float-vector 0.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 -45.0 5.0) (float-vector 30.0 -45.0 -5.0) (float-vector 30.0 -15.0 -5.0) (float-vector 30.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -45.0 5.0) (float-vector 0.0 -45.0 -5.0) (float-vector 30.0 -45.0 -5.0) (float-vector 30.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 5.0) (float-vector 0.0 -15.0 -5.0) (float-vector 0.0 -45.0 -5.0) (float-vector 0.0 -45.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 -45.0 5.0) (float-vector 0.0 -45.0 5.0) (float-vector 0.0 -75.0 5.0) (float-vector 30.0 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -45.0 -5.0) (float-vector 30.0 -45.0 -5.0) (float-vector 30.0 -75.0 -5.0) (float-vector 0.0 -75.0 -5.0)))
         (instance face :init :vertices (list (float-vector 30.0 -45.0 5.0) (float-vector 30.0 -45.0 -5.0) (float-vector 0.0 -45.0 -5.0) (float-vector 0.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 30.0 -75.0 5.0) (float-vector 30.0 -75.0 -5.0) (float-vector 30.0 -45.0 -5.0) (float-vector 30.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -75.0 5.0) (float-vector 0.0 -75.0 -5.0) (float-vector 30.0 -75.0 -5.0) (float-vector 30.0 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -45.0 5.0) (float-vector 0.0 -45.0 -5.0) (float-vector 0.0 -75.0 -5.0) (float-vector 0.0 -75.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.0 75.0 5.0) (float-vector -30.0 75.0 5.0) (float-vector -30.0 45.0 5.0) (float-vector 0.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 75.0 -5.0) (float-vector 0.0 75.0 -5.0) (float-vector 0.0 45.0 -5.0) (float-vector -30.0 45.0 -5.0)))
         (instance face :init :vertices (list (float-vector 0.0 75.0 5.0) (float-vector 0.0 75.0 -5.0) (float-vector -30.0 75.0 -5.0) (float-vector -30.0 75.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 45.0 5.0) (float-vector 0.0 45.0 -5.0) (float-vector 0.0 75.0 -5.0) (float-vector 0.0 75.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 45.0 5.0) (float-vector -30.0 45.0 -5.0) (float-vector 0.0 45.0 -5.0) (float-vector 0.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 75.0 5.0) (float-vector -30.0 75.0 -5.0) (float-vector -30.0 45.0 -5.0) (float-vector -30.0 45.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.0 45.0 5.0) (float-vector -30.0 45.0 5.0) (float-vector -30.0 15.0 5.0) (float-vector 0.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 45.0 -5.0) (float-vector 0.0 45.0 -5.0) (float-vector 0.0 15.0 -5.0) (float-vector -30.0 15.0 -5.0)))
         (instance face :init :vertices (list (float-vector 0.0 45.0 5.0) (float-vector 0.0 45.0 -5.0) (float-vector -30.0 45.0 -5.0) (float-vector -30.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 15.0 5.0) (float-vector 0.0 15.0 -5.0) (float-vector 0.0 45.0 -5.0) (float-vector 0.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 15.0 5.0) (float-vector -30.0 15.0 -5.0) (float-vector 0.0 15.0 -5.0) (float-vector 0.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 45.0 5.0) (float-vector -30.0 45.0 -5.0) (float-vector -30.0 15.0 -5.0) (float-vector -30.0 15.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.0 15.0 5.0) (float-vector -30.0 15.0 5.0) (float-vector -30.0 -15.0 5.0) (float-vector 0.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 15.0 -5.0) (float-vector 0.0 15.0 -5.0) (float-vector 0.0 -15.0 -5.0) (float-vector -30.0 -15.0 -5.0)))
         (instance face :init :vertices (list (float-vector 0.0 15.0 5.0) (float-vector 0.0 15.0 -5.0) (float-vector -30.0 15.0 -5.0) (float-vector -30.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 5.0) (float-vector 0.0 -15.0 -5.0) (float-vector 0.0 15.0 -5.0) (float-vector 0.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 -15.0 5.0) (float-vector -30.0 -15.0 -5.0) (float-vector 0.0 -15.0 -5.0) (float-vector 0.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 15.0 5.0) (float-vector -30.0 15.0 -5.0) (float-vector -30.0 -15.0 -5.0) (float-vector -30.0 -15.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.0 -15.0 5.0) (float-vector -30.0 -15.0 5.0) (float-vector -30.0 -45.0 5.0) (float-vector 0.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 -15.0 -5.0) (float-vector 0.0 -15.0 -5.0) (float-vector 0.0 -45.0 -5.0) (float-vector -30.0 -45.0 -5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 5.0) (float-vector 0.0 -15.0 -5.0) (float-vector -30.0 -15.0 -5.0) (float-vector -30.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -45.0 5.0) (float-vector 0.0 -45.0 -5.0) (float-vector 0.0 -15.0 -5.0) (float-vector 0.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 -45.0 5.0) (float-vector -30.0 -45.0 -5.0) (float-vector 0.0 -45.0 -5.0) (float-vector 0.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 -15.0 5.0) (float-vector -30.0 -15.0 -5.0) (float-vector -30.0 -45.0 -5.0) (float-vector -30.0 -45.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.0 -45.0 5.0) (float-vector -30.0 -45.0 5.0) (float-vector -30.0 -75.0 5.0) (float-vector 0.0 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 -45.0 -5.0) (float-vector 0.0 -45.0 -5.0) (float-vector 0.0 -75.0 -5.0) (float-vector -30.0 -75.0 -5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -45.0 5.0) (float-vector 0.0 -45.0 -5.0) (float-vector -30.0 -45.0 -5.0) (float-vector -30.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector 0.0 -75.0 5.0) (float-vector 0.0 -75.0 -5.0) (float-vector 0.0 -45.0 -5.0) (float-vector 0.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 -75.0 5.0) (float-vector -30.0 -75.0 -5.0) (float-vector 0.0 -75.0 -5.0) (float-vector 0.0 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 -45.0 5.0) (float-vector -30.0 -45.0 -5.0) (float-vector -30.0 -75.0 -5.0) (float-vector -30.0 -75.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 75.0 5.0) (float-vector -60.0 75.0 5.0) (float-vector -60.0 45.0 5.0) (float-vector -30.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 75.0 -5.0) (float-vector -30.0 75.0 -5.0) (float-vector -30.0 45.0 -5.0) (float-vector -60.0 45.0 -5.0)))
         (instance face :init :vertices (list (float-vector -30.0 75.0 5.0) (float-vector -30.0 75.0 -5.0) (float-vector -60.0 75.0 -5.0) (float-vector -60.0 75.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 45.0 5.0) (float-vector -30.0 45.0 -5.0) (float-vector -30.0 75.0 -5.0) (float-vector -30.0 75.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 45.0 5.0) (float-vector -60.0 45.0 -5.0) (float-vector -30.0 45.0 -5.0) (float-vector -30.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 75.0 5.0) (float-vector -60.0 75.0 -5.0) (float-vector -60.0 45.0 -5.0) (float-vector -60.0 45.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 45.0 5.0) (float-vector -60.0 45.0 5.0) (float-vector -60.0 15.0 5.0) (float-vector -30.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 45.0 -5.0) (float-vector -30.0 45.0 -5.0) (float-vector -30.0 15.0 -5.0) (float-vector -60.0 15.0 -5.0)))
         (instance face :init :vertices (list (float-vector -30.0 45.0 5.0) (float-vector -30.0 45.0 -5.0) (float-vector -60.0 45.0 -5.0) (float-vector -60.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 15.0 5.0) (float-vector -30.0 15.0 -5.0) (float-vector -30.0 45.0 -5.0) (float-vector -30.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 15.0 5.0) (float-vector -60.0 15.0 -5.0) (float-vector -30.0 15.0 -5.0) (float-vector -30.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 45.0 5.0) (float-vector -60.0 45.0 -5.0) (float-vector -60.0 15.0 -5.0) (float-vector -60.0 15.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 15.0 5.0) (float-vector -60.0 15.0 5.0) (float-vector -60.0 -15.0 5.0) (float-vector -30.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 15.0 -5.0) (float-vector -30.0 15.0 -5.0) (float-vector -30.0 -15.0 -5.0) (float-vector -60.0 -15.0 -5.0)))
         (instance face :init :vertices (list (float-vector -30.0 15.0 5.0) (float-vector -30.0 15.0 -5.0) (float-vector -60.0 15.0 -5.0) (float-vector -60.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 -15.0 5.0) (float-vector -30.0 -15.0 -5.0) (float-vector -30.0 15.0 -5.0) (float-vector -30.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 -15.0 5.0) (float-vector -60.0 -15.0 -5.0) (float-vector -30.0 -15.0 -5.0) (float-vector -30.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 15.0 5.0) (float-vector -60.0 15.0 -5.0) (float-vector -60.0 -15.0 -5.0) (float-vector -60.0 -15.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 -15.0 5.0) (float-vector -60.0 -15.0 5.0) (float-vector -60.0 -45.0 5.0) (float-vector -30.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 -15.0 -5.0) (float-vector -30.0 -15.0 -5.0) (float-vector -30.0 -45.0 -5.0) (float-vector -60.0 -45.0 -5.0)))
         (instance face :init :vertices (list (float-vector -30.0 -15.0 5.0) (float-vector -30.0 -15.0 -5.0) (float-vector -60.0 -15.0 -5.0) (float-vector -60.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 -45.0 5.0) (float-vector -30.0 -45.0 -5.0) (float-vector -30.0 -15.0 -5.0) (float-vector -30.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 -45.0 5.0) (float-vector -60.0 -45.0 -5.0) (float-vector -30.0 -45.0 -5.0) (float-vector -30.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 -15.0 5.0) (float-vector -60.0 -15.0 -5.0) (float-vector -60.0 -45.0 -5.0) (float-vector -60.0 -45.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -30.0 -45.0 5.0) (float-vector -60.0 -45.0 5.0) (float-vector -60.0 -75.0 5.0) (float-vector -30.0 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 -45.0 -5.0) (float-vector -30.0 -45.0 -5.0) (float-vector -30.0 -75.0 -5.0) (float-vector -60.0 -75.0 -5.0)))
         (instance face :init :vertices (list (float-vector -30.0 -45.0 5.0) (float-vector -30.0 -45.0 -5.0) (float-vector -60.0 -45.0 -5.0) (float-vector -60.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector -30.0 -75.0 5.0) (float-vector -30.0 -75.0 -5.0) (float-vector -30.0 -45.0 -5.0) (float-vector -30.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 -75.0 5.0) (float-vector -60.0 -75.0 -5.0) (float-vector -30.0 -75.0 -5.0) (float-vector -30.0 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 -45.0 5.0) (float-vector -60.0 -45.0 -5.0) (float-vector -60.0 -75.0 -5.0) (float-vector -60.0 -75.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -60.0 75.0 5.0) (float-vector -90.0 75.0 5.0) (float-vector -90.0 45.0 5.0) (float-vector -60.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 75.0 -5.0) (float-vector -60.0 75.0 -5.0) (float-vector -60.0 45.0 -5.0) (float-vector -90.0 45.0 -5.0)))
         (instance face :init :vertices (list (float-vector -60.0 75.0 5.0) (float-vector -60.0 75.0 -5.0) (float-vector -90.0 75.0 -5.0) (float-vector -90.0 75.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 45.0 5.0) (float-vector -60.0 45.0 -5.0) (float-vector -60.0 75.0 -5.0) (float-vector -60.0 75.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 45.0 5.0) (float-vector -90.0 45.0 -5.0) (float-vector -60.0 45.0 -5.0) (float-vector -60.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 75.0 5.0) (float-vector -90.0 75.0 -5.0) (float-vector -90.0 45.0 -5.0) (float-vector -90.0 45.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -60.0 45.0 5.0) (float-vector -90.0 45.0 5.0) (float-vector -90.0 15.0 5.0) (float-vector -60.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 45.0 -5.0) (float-vector -60.0 45.0 -5.0) (float-vector -60.0 15.0 -5.0) (float-vector -90.0 15.0 -5.0)))
         (instance face :init :vertices (list (float-vector -60.0 45.0 5.0) (float-vector -60.0 45.0 -5.0) (float-vector -90.0 45.0 -5.0) (float-vector -90.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 15.0 5.0) (float-vector -60.0 15.0 -5.0) (float-vector -60.0 45.0 -5.0) (float-vector -60.0 45.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 15.0 5.0) (float-vector -90.0 15.0 -5.0) (float-vector -60.0 15.0 -5.0) (float-vector -60.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 45.0 5.0) (float-vector -90.0 45.0 -5.0) (float-vector -90.0 15.0 -5.0) (float-vector -90.0 15.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -60.0 15.0 5.0) (float-vector -90.0 15.0 5.0) (float-vector -90.0 -15.0 5.0) (float-vector -60.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 15.0 -5.0) (float-vector -60.0 15.0 -5.0) (float-vector -60.0 -15.0 -5.0) (float-vector -90.0 -15.0 -5.0)))
         (instance face :init :vertices (list (float-vector -60.0 15.0 5.0) (float-vector -60.0 15.0 -5.0) (float-vector -90.0 15.0 -5.0) (float-vector -90.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 -15.0 5.0) (float-vector -60.0 -15.0 -5.0) (float-vector -60.0 15.0 -5.0) (float-vector -60.0 15.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 -15.0 5.0) (float-vector -90.0 -15.0 -5.0) (float-vector -60.0 -15.0 -5.0) (float-vector -60.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 15.0 5.0) (float-vector -90.0 15.0 -5.0) (float-vector -90.0 -15.0 -5.0) (float-vector -90.0 -15.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -60.0 -15.0 5.0) (float-vector -90.0 -15.0 5.0) (float-vector -90.0 -45.0 5.0) (float-vector -60.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 -15.0 -5.0) (float-vector -60.0 -15.0 -5.0) (float-vector -60.0 -45.0 -5.0) (float-vector -90.0 -45.0 -5.0)))
         (instance face :init :vertices (list (float-vector -60.0 -15.0 5.0) (float-vector -60.0 -15.0 -5.0) (float-vector -90.0 -15.0 -5.0) (float-vector -90.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 -45.0 5.0) (float-vector -60.0 -45.0 -5.0) (float-vector -60.0 -15.0 -5.0) (float-vector -60.0 -15.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 -45.0 5.0) (float-vector -90.0 -45.0 -5.0) (float-vector -60.0 -45.0 -5.0) (float-vector -60.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 -15.0 5.0) (float-vector -90.0 -15.0 -5.0) (float-vector -90.0 -45.0 -5.0) (float-vector -90.0 -45.0 5.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -60.0 -45.0 5.0) (float-vector -90.0 -45.0 5.0) (float-vector -90.0 -75.0 5.0) (float-vector -60.0 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 -45.0 -5.0) (float-vector -60.0 -45.0 -5.0) (float-vector -60.0 -75.0 -5.0) (float-vector -90.0 -75.0 -5.0)))
         (instance face :init :vertices (list (float-vector -60.0 -45.0 5.0) (float-vector -60.0 -45.0 -5.0) (float-vector -90.0 -45.0 -5.0) (float-vector -90.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector -60.0 -75.0 5.0) (float-vector -60.0 -75.0 -5.0) (float-vector -60.0 -45.0 -5.0) (float-vector -60.0 -45.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 -75.0 5.0) (float-vector -90.0 -75.0 -5.0) (float-vector -60.0 -75.0 -5.0) (float-vector -60.0 -75.0 5.0)))
         (instance face :init :vertices (list (float-vector -90.0 -45.0 5.0) (float-vector -90.0 -45.0 -5.0) (float-vector -90.0 -75.0 -5.0) (float-vector -90.0 -75.0 5.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :black)
     (send (elt bc 3) :set-color :white)
     (send (elt bc 4) :set-color :black)
     (send (elt bc 5) :set-color :white)
     (send (elt bc 6) :set-color :black)
     (send (elt bc 7) :set-color :white)
     (send (elt bc 8) :set-color :black)
     (send (elt bc 9) :set-color :white)
     (send (elt bc 10) :set-color :black)
     (send (elt bc 11) :set-color :white)
     (send (elt bc 12) :set-color :black)
     (send (elt bc 13) :set-color :white)
     (send (elt bc 14) :set-color :black)
     (send (elt bc 15) :set-color :white)
     (send (elt bc 16) :set-color :black)
     (send (elt bc 17) :set-color :white)
     (send (elt bc 18) :set-color :black)
     (send (elt bc 19) :set-color :white)
     (send (elt bc 20) :set-color :black)
     (send (elt bc 21) :set-color :white)
     (send (elt bc 22) :set-color :black)
     (send (elt bc 23) :set-color :white)
     (send (elt bc 24) :set-color :black)
     (send (elt bc 25) :set-color :white)
     (send (elt bc 26) :set-color :black)
     (send (elt bc 27) :set-color :white)
     (send (elt bc 28) :set-color :black)
     (send (elt bc 29) :set-color :white)
     (send (elt bc 30) :set-color :black)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name 'chessboard-30-6x5 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; definition of :attention
     (setq attention0 (make-cascoords :pos (float-vector -60.0 -45.0 0.0) :rot #2f((2.220446e-16 1.0 0.0) (1.0 -2.220446e-16 0.0) (0.0 0.0 -1.0)) :name "origin"))
     (send self :assoc attention0)

     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))
  (:cameras (&rest args)
   (forward-message-to-all (list) args))

  (:handle () (list ))
  (:attention () (list  attention0))
  (:attention-origin () attention0)
  (:button () (list ))
  )

(defun chessboard-30-6x5 (&rest args) (instance* chessboard-30-6x5-object :init args))
;; (format *error-output* "(instance chessboard-30-6x5-object :init) for generating model~%")
