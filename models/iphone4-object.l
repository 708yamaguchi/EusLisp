;;
;;
;; this file is automatically generated from euslisp+euslib version EusLisp 8.26(r472M 620 46418M) for Linux64 created on k-okada-t410s(Sat Mar 5 02:43:35 JST 2011)
;;
;;
(defclass iphone4-object
  :super cascaded-link
  :slots (sensors))
(defmethod iphone4-object
  (:init
   (&rest args &key (name "iphone4") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
         joint0
        
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of iphone4
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -49.6 -29.3 3.15) (float-vector 49.6 -29.3 3.15) (float-vector 50.8515 -29.2015 3.15) (float-vector 52.0721 -28.9085 3.15) (float-vector 53.2319 -28.4281 3.15) (float-vector 54.3023 -27.7721 3.15) (float-vector 55.2569 -26.9569 3.15) (float-vector 56.0721 -26.0023 3.15) (float-vector 56.7281 -24.9319 3.15) (float-vector 57.2085 -23.7721 3.15) (float-vector 57.5015 -22.5515 3.15) (float-vector 57.6 -21.3 3.15) (float-vector 57.6 21.3 3.15) (float-vector 57.5015 22.5515 3.15) (float-vector 57.2085 23.7721 3.15) (float-vector 56.7281 24.9319 3.15) (float-vector 56.0721 26.0023 3.15) (float-vector 55.2569 26.9569 3.15) (float-vector 54.3023 27.7721 3.15) (float-vector 53.2319 28.4281 3.15) (float-vector 52.0721 28.9085 3.15) (float-vector 50.8515 29.2015 3.15) (float-vector 49.6 29.3 3.15) (float-vector -49.6 29.3 3.15) (float-vector -50.8515 29.2015 3.15) (float-vector -52.0721 28.9085 3.15) (float-vector -53.2319 28.4281 3.15) (float-vector -54.3023 27.7721 3.15) (float-vector -55.2569 26.9569 3.15) (float-vector -56.0721 26.0023 3.15) (float-vector -56.7281 24.9319 3.15) (float-vector -57.2085 23.7721 3.15) (float-vector -57.5015 22.5515 3.15) (float-vector -57.6 21.3 3.15) (float-vector -57.6 -21.3 3.15) (float-vector -57.5015 -22.5515 3.15) (float-vector -57.2085 -23.7721 3.15) (float-vector -56.7281 -24.9319 3.15) (float-vector -56.0721 -26.0023 3.15) (float-vector -55.2569 -26.9569 3.15) (float-vector -54.3023 -27.7721 3.15) (float-vector -53.2319 -28.4281 3.15) (float-vector -52.0721 -28.9085 3.15) (float-vector -50.8515 -29.2015 3.15)))
         (instance face :init :vertices (list (float-vector 49.6 -29.3 -3.15) (float-vector -49.6 -29.3 -3.15) (float-vector -50.8515 -29.2015 -3.15) (float-vector -52.0721 -28.9085 -3.15) (float-vector -53.2319 -28.4281 -3.15) (float-vector -54.3023 -27.7721 -3.15) (float-vector -55.2569 -26.9569 -3.15) (float-vector -56.0721 -26.0023 -3.15) (float-vector -56.7281 -24.9319 -3.15) (float-vector -57.2085 -23.7721 -3.15) (float-vector -57.5015 -22.5515 -3.15) (float-vector -57.6 -21.3 -3.15) (float-vector -57.6 21.3 -3.15) (float-vector -57.5015 22.5515 -3.15) (float-vector -57.2085 23.7721 -3.15) (float-vector -56.7281 24.9319 -3.15) (float-vector -56.0721 26.0023 -3.15) (float-vector -55.2569 26.9569 -3.15) (float-vector -54.3023 27.7721 -3.15) (float-vector -53.2319 28.4281 -3.15) (float-vector -52.0721 28.9085 -3.15) (float-vector -50.8515 29.2015 -3.15) (float-vector -49.6 29.3 -3.15) (float-vector 49.6 29.3 -3.15) (float-vector 50.8515 29.2015 -3.15) (float-vector 52.0721 28.9085 -3.15) (float-vector 53.2319 28.4281 -3.15) (float-vector 54.3023 27.7721 -3.15) (float-vector 55.2569 26.9569 -3.15) (float-vector 56.0721 26.0023 -3.15) (float-vector 56.7281 24.9319 -3.15) (float-vector 57.2085 23.7721 -3.15) (float-vector 57.5015 22.5515 -3.15) (float-vector 57.6 21.3 -3.15) (float-vector 57.6 -21.3 -3.15) (float-vector 57.5015 -22.5515 -3.15) (float-vector 57.2085 -23.7721 -3.15) (float-vector 56.7281 -24.9319 -3.15) (float-vector 56.0721 -26.0023 -3.15) (float-vector 55.2569 -26.9569 -3.15) (float-vector 54.3023 -27.7721 -3.15) (float-vector 53.2319 -28.4281 -3.15) (float-vector 52.0721 -28.9085 -3.15) (float-vector 50.8515 -29.2015 -3.15)))
         (instance face :init :vertices (list (float-vector -49.6 -29.3 3.15) (float-vector -49.6 -29.3 -3.15) (float-vector 49.6 -29.3 -3.15) (float-vector 49.6 -29.3 3.15)))
         (instance face :init :vertices (list (float-vector -50.8515 -29.2015 3.15) (float-vector -50.8515 -29.2015 -3.15) (float-vector -49.6 -29.3 -3.15) (float-vector -49.6 -29.3 3.15)))
         (instance face :init :vertices (list (float-vector -52.0721 -28.9085 3.15) (float-vector -52.0721 -28.9085 -3.15) (float-vector -50.8515 -29.2015 -3.15) (float-vector -50.8515 -29.2015 3.15)))
         (instance face :init :vertices (list (float-vector -53.2319 -28.4281 3.15) (float-vector -53.2319 -28.4281 -3.15) (float-vector -52.0721 -28.9085 -3.15) (float-vector -52.0721 -28.9085 3.15)))
         (instance face :init :vertices (list (float-vector -54.3023 -27.7721 3.15) (float-vector -54.3023 -27.7721 -3.15) (float-vector -53.2319 -28.4281 -3.15) (float-vector -53.2319 -28.4281 3.15)))
         (instance face :init :vertices (list (float-vector -55.2569 -26.9569 3.15) (float-vector -55.2569 -26.9569 -3.15) (float-vector -54.3023 -27.7721 -3.15) (float-vector -54.3023 -27.7721 3.15)))
         (instance face :init :vertices (list (float-vector -56.0721 -26.0023 3.15) (float-vector -56.0721 -26.0023 -3.15) (float-vector -55.2569 -26.9569 -3.15) (float-vector -55.2569 -26.9569 3.15)))
         (instance face :init :vertices (list (float-vector -56.7281 -24.9319 3.15) (float-vector -56.7281 -24.9319 -3.15) (float-vector -56.0721 -26.0023 -3.15) (float-vector -56.0721 -26.0023 3.15)))
         (instance face :init :vertices (list (float-vector -57.2085 -23.7721 3.15) (float-vector -57.2085 -23.7721 -3.15) (float-vector -56.7281 -24.9319 -3.15) (float-vector -56.7281 -24.9319 3.15)))
         (instance face :init :vertices (list (float-vector -57.5015 -22.5515 3.15) (float-vector -57.5015 -22.5515 -3.15) (float-vector -57.2085 -23.7721 -3.15) (float-vector -57.2085 -23.7721 3.15)))
         (instance face :init :vertices (list (float-vector -57.6 -21.3 3.15) (float-vector -57.6 -21.3 -3.15) (float-vector -57.5015 -22.5515 -3.15) (float-vector -57.5015 -22.5515 3.15)))
         (instance face :init :vertices (list (float-vector -57.6 21.3 3.15) (float-vector -57.6 21.3 -3.15) (float-vector -57.6 -21.3 -3.15) (float-vector -57.6 -21.3 3.15)))
         (instance face :init :vertices (list (float-vector -57.5015 22.5515 3.15) (float-vector -57.5015 22.5515 -3.15) (float-vector -57.6 21.3 -3.15) (float-vector -57.6 21.3 3.15)))
         (instance face :init :vertices (list (float-vector -57.2085 23.7721 3.15) (float-vector -57.2085 23.7721 -3.15) (float-vector -57.5015 22.5515 -3.15) (float-vector -57.5015 22.5515 3.15)))
         (instance face :init :vertices (list (float-vector -56.7281 24.9319 3.15) (float-vector -56.7281 24.9319 -3.15) (float-vector -57.2085 23.7721 -3.15) (float-vector -57.2085 23.7721 3.15)))
         (instance face :init :vertices (list (float-vector -56.0721 26.0023 3.15) (float-vector -56.0721 26.0023 -3.15) (float-vector -56.7281 24.9319 -3.15) (float-vector -56.7281 24.9319 3.15)))
         (instance face :init :vertices (list (float-vector -55.2569 26.9569 3.15) (float-vector -55.2569 26.9569 -3.15) (float-vector -56.0721 26.0023 -3.15) (float-vector -56.0721 26.0023 3.15)))
         (instance face :init :vertices (list (float-vector -54.3023 27.7721 3.15) (float-vector -54.3023 27.7721 -3.15) (float-vector -55.2569 26.9569 -3.15) (float-vector -55.2569 26.9569 3.15)))
         (instance face :init :vertices (list (float-vector -53.2319 28.4281 3.15) (float-vector -53.2319 28.4281 -3.15) (float-vector -54.3023 27.7721 -3.15) (float-vector -54.3023 27.7721 3.15)))
         (instance face :init :vertices (list (float-vector -52.0721 28.9085 3.15) (float-vector -52.0721 28.9085 -3.15) (float-vector -53.2319 28.4281 -3.15) (float-vector -53.2319 28.4281 3.15)))
         (instance face :init :vertices (list (float-vector -50.8515 29.2015 3.15) (float-vector -50.8515 29.2015 -3.15) (float-vector -52.0721 28.9085 -3.15) (float-vector -52.0721 28.9085 3.15)))
         (instance face :init :vertices (list (float-vector -49.6 29.3 3.15) (float-vector -49.6 29.3 -3.15) (float-vector -50.8515 29.2015 -3.15) (float-vector -50.8515 29.2015 3.15)))
         (instance face :init :vertices (list (float-vector 49.6 29.3 3.15) (float-vector 49.6 29.3 -3.15) (float-vector -49.6 29.3 -3.15) (float-vector -49.6 29.3 3.15)))
         (instance face :init :vertices (list (float-vector 50.8515 29.2015 3.15) (float-vector 50.8515 29.2015 -3.15) (float-vector 49.6 29.3 -3.15) (float-vector 49.6 29.3 3.15)))
         (instance face :init :vertices (list (float-vector 52.0721 28.9085 3.15) (float-vector 52.0721 28.9085 -3.15) (float-vector 50.8515 29.2015 -3.15) (float-vector 50.8515 29.2015 3.15)))
         (instance face :init :vertices (list (float-vector 53.2319 28.4281 3.15) (float-vector 53.2319 28.4281 -3.15) (float-vector 52.0721 28.9085 -3.15) (float-vector 52.0721 28.9085 3.15)))
         (instance face :init :vertices (list (float-vector 54.3023 27.7721 3.15) (float-vector 54.3023 27.7721 -3.15) (float-vector 53.2319 28.4281 -3.15) (float-vector 53.2319 28.4281 3.15)))
         (instance face :init :vertices (list (float-vector 55.2569 26.9569 3.15) (float-vector 55.2569 26.9569 -3.15) (float-vector 54.3023 27.7721 -3.15) (float-vector 54.3023 27.7721 3.15)))
         (instance face :init :vertices (list (float-vector 56.0721 26.0023 3.15) (float-vector 56.0721 26.0023 -3.15) (float-vector 55.2569 26.9569 -3.15) (float-vector 55.2569 26.9569 3.15)))
         (instance face :init :vertices (list (float-vector 56.7281 24.9319 3.15) (float-vector 56.7281 24.9319 -3.15) (float-vector 56.0721 26.0023 -3.15) (float-vector 56.0721 26.0023 3.15)))
         (instance face :init :vertices (list (float-vector 57.2085 23.7721 3.15) (float-vector 57.2085 23.7721 -3.15) (float-vector 56.7281 24.9319 -3.15) (float-vector 56.7281 24.9319 3.15)))
         (instance face :init :vertices (list (float-vector 57.5015 22.5515 3.15) (float-vector 57.5015 22.5515 -3.15) (float-vector 57.2085 23.7721 -3.15) (float-vector 57.2085 23.7721 3.15)))
         (instance face :init :vertices (list (float-vector 57.6 21.3 3.15) (float-vector 57.6 21.3 -3.15) (float-vector 57.5015 22.5515 -3.15) (float-vector 57.5015 22.5515 3.15)))
         (instance face :init :vertices (list (float-vector 57.6 -21.3 3.15) (float-vector 57.6 -21.3 -3.15) (float-vector 57.6 21.3 -3.15) (float-vector 57.6 21.3 3.15)))
         (instance face :init :vertices (list (float-vector 57.5015 -22.5515 3.15) (float-vector 57.5015 -22.5515 -3.15) (float-vector 57.6 -21.3 -3.15) (float-vector 57.6 -21.3 3.15)))
         (instance face :init :vertices (list (float-vector 57.2085 -23.7721 3.15) (float-vector 57.2085 -23.7721 -3.15) (float-vector 57.5015 -22.5515 -3.15) (float-vector 57.5015 -22.5515 3.15)))
         (instance face :init :vertices (list (float-vector 56.7281 -24.9319 3.15) (float-vector 56.7281 -24.9319 -3.15) (float-vector 57.2085 -23.7721 -3.15) (float-vector 57.2085 -23.7721 3.15)))
         (instance face :init :vertices (list (float-vector 56.0721 -26.0023 3.15) (float-vector 56.0721 -26.0023 -3.15) (float-vector 56.7281 -24.9319 -3.15) (float-vector 56.7281 -24.9319 3.15)))
         (instance face :init :vertices (list (float-vector 55.2569 -26.9569 3.15) (float-vector 55.2569 -26.9569 -3.15) (float-vector 56.0721 -26.0023 -3.15) (float-vector 56.0721 -26.0023 3.15)))
         (instance face :init :vertices (list (float-vector 54.3023 -27.7721 3.15) (float-vector 54.3023 -27.7721 -3.15) (float-vector 55.2569 -26.9569 -3.15) (float-vector 55.2569 -26.9569 3.15)))
         (instance face :init :vertices (list (float-vector 53.2319 -28.4281 3.15) (float-vector 53.2319 -28.4281 -3.15) (float-vector 54.3023 -27.7721 -3.15) (float-vector 54.3023 -27.7721 3.15)))
         (instance face :init :vertices (list (float-vector 52.0721 -28.9085 3.15) (float-vector 52.0721 -28.9085 -3.15) (float-vector 53.2319 -28.4281 -3.15) (float-vector 53.2319 -28.4281 3.15)))
         (instance face :init :vertices (list (float-vector 50.8515 -29.2015 3.15) (float-vector 50.8515 -29.2015 -3.15) (float-vector 52.0721 -28.9085 -3.15) (float-vector 52.0721 -28.9085 3.15)))
         (instance face :init :vertices (list (float-vector 49.6 -29.3 3.15) (float-vector 49.6 -29.3 -3.15) (float-vector 50.8515 -29.2015 -3.15) (float-vector 50.8515 -29.2015 3.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -45.6 5.0 0.0) (float-vector -45.6 -5.0 0.0) (float-vector -44.4 -5.0 0.0) (float-vector -44.4 5.0 0.0)))
         (instance face :init :vertices (list (float-vector -45.6 5.0 0.0) (float-vector -44.4 5.0 0.0) (float-vector -44.4 5.0 4.65) (float-vector -45.6 5.0 4.65)))
         (instance face :init :vertices (list (float-vector -44.4 5.0 4.65) (float-vector -44.4 5.0 0.0) (float-vector -44.4 -5.0 0.0) (float-vector -44.4 -5.0 4.65)))
         (instance face :init :vertices (list (float-vector -44.4 -5.0 4.65) (float-vector -44.4 -5.0 0.0) (float-vector -45.6 -5.0 0.0) (float-vector -45.6 -5.0 4.65)))
         (instance face :init :vertices (list (float-vector -45.6 -5.0 4.65) (float-vector -45.6 -5.0 0.0) (float-vector -45.6 5.0 0.0) (float-vector -45.6 5.0 4.65)))
         (instance face :init :vertices (list (float-vector 50.1015 -28.4515 -4.65) (float-vector 51.3221 -28.1585 -4.65) (float-vector 51.3221 -28.1585 4.65) (float-vector 50.1015 -28.4515 4.65)))
         (instance face :init :vertices (list (float-vector 50.1015 -28.4515 -4.65) (float-vector 50.1015 -28.4515 4.65) (float-vector 48.85 -28.55 4.65) (float-vector 48.85 -28.55 -4.65)))
         (instance face :init :vertices (list (float-vector 51.3221 -28.1585 4.65) (float-vector 51.3221 -28.1585 -4.65) (float-vector 52.4819 -27.6781 -4.65) (float-vector 52.4819 -27.6781 4.65)))
         (instance face :init :vertices (list (float-vector 52.4819 -27.6781 4.65) (float-vector 52.4819 -27.6781 -4.65) (float-vector 53.5523 -27.0221 -4.65) (float-vector 53.5523 -27.0221 4.65)))
         (instance face :init :vertices (list (float-vector 53.5523 -27.0221 4.65) (float-vector 53.5523 -27.0221 -4.65) (float-vector 54.5069 -26.2069 -4.65) (float-vector 54.5069 -26.2069 4.65)))
         (instance face :init :vertices (list (float-vector 54.5069 -26.2069 4.65) (float-vector 54.5069 -26.2069 -4.65) (float-vector 55.3221 -25.2523 -4.65) (float-vector 55.3221 -25.2523 4.65)))
         (instance face :init :vertices (list (float-vector 55.3221 -25.2523 4.65) (float-vector 55.3221 -25.2523 -4.65) (float-vector 55.9781 -24.1819 -4.65) (float-vector 55.9781 -24.1819 4.65)))
         (instance face :init :vertices (list (float-vector 55.9781 -24.1819 4.65) (float-vector 55.9781 -24.1819 -4.65) (float-vector 56.4585 -23.0221 -4.65) (float-vector 56.4585 -23.0221 4.65)))
         (instance face :init :vertices (list (float-vector 56.4585 -23.0221 4.65) (float-vector 56.4585 -23.0221 -4.65) (float-vector 56.7515 -21.8015 -4.65) (float-vector 56.7515 -21.8015 4.65)))
         (instance face :init :vertices (list (float-vector 56.7515 -21.8015 4.65) (float-vector 56.7515 -21.8015 -4.65) (float-vector 56.85 -20.55 -4.65) (float-vector 56.85 -20.55 4.65)))
         (instance face :init :vertices (list (float-vector 56.85 -20.55 4.65) (float-vector 56.85 -20.55 -4.65) (float-vector 56.85 20.55 -4.65) (float-vector 56.85 20.55 4.65)))
         (instance face :init :vertices (list (float-vector 56.85 20.55 4.65) (float-vector 56.85 20.55 -4.65) (float-vector 56.7515 21.8015 -4.65) (float-vector 56.7515 21.8015 4.65)))
         (instance face :init :vertices (list (float-vector 56.7515 21.8015 4.65) (float-vector 56.7515 21.8015 -4.65) (float-vector 56.4585 23.0221 -4.65) (float-vector 56.4585 23.0221 4.65)))
         (instance face :init :vertices (list (float-vector 56.4585 23.0221 4.65) (float-vector 56.4585 23.0221 -4.65) (float-vector 55.9781 24.1819 -4.65) (float-vector 55.9781 24.1819 4.65)))
         (instance face :init :vertices (list (float-vector 55.9781 24.1819 4.65) (float-vector 55.9781 24.1819 -4.65) (float-vector 55.3221 25.2523 -4.65) (float-vector 55.3221 25.2523 4.65)))
         (instance face :init :vertices (list (float-vector 55.3221 25.2523 4.65) (float-vector 55.3221 25.2523 -4.65) (float-vector 54.5069 26.2069 -4.65) (float-vector 54.5069 26.2069 4.65)))
         (instance face :init :vertices (list (float-vector 54.5069 26.2069 4.65) (float-vector 54.5069 26.2069 -4.65) (float-vector 53.5523 27.0221 -4.65) (float-vector 53.5523 27.0221 4.65)))
         (instance face :init :vertices (list (float-vector 53.5523 27.0221 4.65) (float-vector 53.5523 27.0221 -4.65) (float-vector 52.4819 27.6781 -4.65) (float-vector 52.4819 27.6781 4.65)))
         (instance face :init :vertices (list (float-vector 52.4819 27.6781 4.65) (float-vector 52.4819 27.6781 -4.65) (float-vector 51.3221 28.1585 -4.65) (float-vector 51.3221 28.1585 4.65)))
         (instance face :init :vertices (list (float-vector 51.3221 28.1585 4.65) (float-vector 51.3221 28.1585 -4.65) (float-vector 50.1015 28.4515 -4.65) (float-vector 50.1015 28.4515 4.65)))
         (instance face :init :vertices (list (float-vector 50.1015 28.4515 4.65) (float-vector 50.1015 28.4515 -4.65) (float-vector 48.85 28.55 -4.65) (float-vector 48.85 28.55 4.65)))
         (instance face :init :vertices (list (float-vector 48.85 28.55 4.65) (float-vector 48.85 28.55 -4.65) (float-vector -48.85 28.55 -4.65) (float-vector -48.85 28.55 4.65)))
         (instance face :init :vertices (list (float-vector -48.85 28.55 4.65) (float-vector -48.85 28.55 -4.65) (float-vector -50.1015 28.4515 -4.65) (float-vector -50.1015 28.4515 4.65)))
         (instance face :init :vertices (list (float-vector -50.1015 28.4515 4.65) (float-vector -50.1015 28.4515 -4.65) (float-vector -51.3221 28.1585 -4.65) (float-vector -51.3221 28.1585 4.65)))
         (instance face :init :vertices (list (float-vector -51.3221 28.1585 4.65) (float-vector -51.3221 28.1585 -4.65) (float-vector -52.4819 27.6781 -4.65) (float-vector -52.4819 27.6781 4.65)))
         (instance face :init :vertices (list (float-vector -52.4819 27.6781 4.65) (float-vector -52.4819 27.6781 -4.65) (float-vector -53.5523 27.0221 -4.65) (float-vector -53.5523 27.0221 4.65)))
         (instance face :init :vertices (list (float-vector -53.5523 27.0221 4.65) (float-vector -53.5523 27.0221 -4.65) (float-vector -54.5069 26.2069 -4.65) (float-vector -54.5069 26.2069 4.65)))
         (instance face :init :vertices (list (float-vector -54.5069 26.2069 4.65) (float-vector -54.5069 26.2069 -4.65) (float-vector -55.3221 25.2523 -4.65) (float-vector -55.3221 25.2523 4.65)))
         (instance face :init :vertices (list (float-vector -55.3221 25.2523 4.65) (float-vector -55.3221 25.2523 -4.65) (float-vector -55.9781 24.1819 -4.65) (float-vector -55.9781 24.1819 4.65)))
         (instance face :init :vertices (list (float-vector -55.9781 24.1819 4.65) (float-vector -55.9781 24.1819 -4.65) (float-vector -56.4585 23.0221 -4.65) (float-vector -56.4585 23.0221 4.65)))
         (instance face :init :vertices (list (float-vector -56.4585 23.0221 4.65) (float-vector -56.4585 23.0221 -4.65) (float-vector -56.7515 21.8015 -4.65) (float-vector -56.7515 21.8015 4.65)))
         (instance face :init :vertices (list (float-vector -56.7515 21.8015 4.65) (float-vector -56.7515 21.8015 -4.65) (float-vector -56.85 20.55 -4.65) (float-vector -56.85 20.55 4.65)))
         (instance face :init :vertices (list (float-vector -56.85 20.55 4.65) (float-vector -56.85 20.55 -4.65) (float-vector -56.85 -20.55 -4.65) (float-vector -56.85 -20.55 4.65)))
         (instance face :init :vertices (list (float-vector -56.85 -20.55 4.65) (float-vector -56.85 -20.55 -4.65) (float-vector -56.7515 -21.8015 -4.65) (float-vector -56.7515 -21.8015 4.65)))
         (instance face :init :vertices (list (float-vector -56.7515 -21.8015 4.65) (float-vector -56.7515 -21.8015 -4.65) (float-vector -56.4585 -23.0221 -4.65) (float-vector -56.4585 -23.0221 4.65)))
         (instance face :init :vertices (list (float-vector -56.4585 -23.0221 4.65) (float-vector -56.4585 -23.0221 -4.65) (float-vector -55.9781 -24.1819 -4.65) (float-vector -55.9781 -24.1819 4.65)))
         (instance face :init :vertices (list (float-vector -55.9781 -24.1819 4.65) (float-vector -55.9781 -24.1819 -4.65) (float-vector -55.3221 -25.2523 -4.65) (float-vector -55.3221 -25.2523 4.65)))
         (instance face :init :vertices (list (float-vector -55.3221 -25.2523 4.65) (float-vector -55.3221 -25.2523 -4.65) (float-vector -54.5069 -26.2069 -4.65) (float-vector -54.5069 -26.2069 4.65)))
         (instance face :init :vertices (list (float-vector -54.5069 -26.2069 4.65) (float-vector -54.5069 -26.2069 -4.65) (float-vector -53.5523 -27.0221 -4.65) (float-vector -53.5523 -27.0221 4.65)))
         (instance face :init :vertices (list (float-vector -53.5523 -27.0221 4.65) (float-vector -53.5523 -27.0221 -4.65) (float-vector -52.4819 -27.6781 -4.65) (float-vector -52.4819 -27.6781 4.65)))
         (instance face :init :vertices (list (float-vector -52.4819 -27.6781 4.65) (float-vector -52.4819 -27.6781 -4.65) (float-vector -51.3221 -28.1585 -4.65) (float-vector -51.3221 -28.1585 4.65)))
         (instance face :init :vertices (list (float-vector -51.3221 -28.1585 4.65) (float-vector -51.3221 -28.1585 -4.65) (float-vector -50.1015 -28.4515 -4.65) (float-vector -50.1015 -28.4515 4.65)))
         (instance face :init :vertices (list (float-vector -50.1015 -28.4515 4.65) (float-vector -50.1015 -28.4515 -4.65) (float-vector -48.85 -28.55 -4.65) (float-vector -48.85 -28.55 4.65)))
         (instance face :init :vertices (list (float-vector 48.85 -28.55 4.65) (float-vector 50.1015 -28.4515 4.65) (float-vector 51.3221 -28.1585 4.65) (float-vector 52.4819 -27.6781 4.65) (float-vector 53.5523 -27.0221 4.65) (float-vector 54.5069 -26.2069 4.65) (float-vector 55.3221 -25.2523 4.65) (float-vector 55.9781 -24.1819 4.65) (float-vector 56.4585 -23.0221 4.65) (float-vector 56.7515 -21.8015 4.65) (float-vector 56.85 -20.55 4.65) (float-vector 56.85 20.55 4.65) (float-vector 56.7515 21.8015 4.65) (float-vector 56.4585 23.0221 4.65) (float-vector 55.9781 24.1819 4.65) (float-vector 55.3221 25.2523 4.65) (float-vector 54.5069 26.2069 4.65) (float-vector 53.5523 27.0221 4.65) (float-vector 52.4819 27.6781 4.65) (float-vector 51.3221 28.1585 4.65) (float-vector 50.1015 28.4515 4.65) (float-vector 48.85 28.55 4.65) (float-vector -48.85 28.55 4.65) (float-vector -50.1015 28.4515 4.65) (float-vector -51.3221 28.1585 4.65) (float-vector -52.4819 27.6781 4.65) (float-vector -53.5523 27.0221 4.65) (float-vector -54.5069 26.2069 4.65) (float-vector -55.3221 25.2523 4.65) (float-vector -55.9781 24.1819 4.65) (float-vector -56.4585 23.0221 4.65) (float-vector -56.7515 21.8015 4.65) (float-vector -56.85 20.55 4.65) (float-vector -56.85 -20.55 4.65) (float-vector -56.7515 -21.8015 4.65) (float-vector -56.4585 -23.0221 4.65) (float-vector -55.9781 -24.1819 4.65) (float-vector -55.3221 -25.2523 4.65) (float-vector -54.5069 -26.2069 4.65) (float-vector -53.5523 -27.0221 4.65) (float-vector -52.4819 -27.6781 4.65) (float-vector -51.3221 -28.1585 4.65) (float-vector -50.1015 -28.4515 4.65) (float-vector -48.85 -28.55 4.65))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -36.0 25.27 4.65) (float-vector 36.0 25.27 4.65) (float-vector 36.0 -25.27 4.65) (float-vector -36.0 -25.27 4.65)))
         (instance hole :init :vertices (list (float-vector -45.6 5.0 4.65) (float-vector -44.4 5.0 4.65) (float-vector -44.4 -5.0 4.65) (float-vector -45.6 -5.0 4.65)))
         (instance hole :init :vertices (list (float-vector 50.0 -5.19615 4.65) (float-vector 47.0 -6.0 4.65) (float-vector 44.0 -5.19615 4.65) (float-vector 41.8038 -3.0 4.65) (float-vector 41.0 4.884981e-15 4.65) (float-vector 41.8038 3.0 4.65) (float-vector 44.0 5.19615 4.65) (float-vector 47.0 6.0 4.65) (float-vector 50.0 5.19615 4.65) (float-vector 52.1962 3.0 4.65) (float-vector 53.0 0.0 4.65) (float-vector 52.1962 -3.0 4.65)))
))
         (instance face :init :vertices (list (float-vector -48.85 -28.55 -4.65) (float-vector -50.1015 -28.4515 -4.65) (float-vector -51.3221 -28.1585 -4.65) (float-vector -52.4819 -27.6781 -4.65) (float-vector -53.5523 -27.0221 -4.65) (float-vector -54.5069 -26.2069 -4.65) (float-vector -55.3221 -25.2523 -4.65) (float-vector -55.9781 -24.1819 -4.65) (float-vector -56.4585 -23.0221 -4.65) (float-vector -56.7515 -21.8015 -4.65) (float-vector -56.85 -20.55 -4.65) (float-vector -56.85 20.55 -4.65) (float-vector -56.7515 21.8015 -4.65) (float-vector -56.4585 23.0221 -4.65) (float-vector -55.9781 24.1819 -4.65) (float-vector -55.3221 25.2523 -4.65) (float-vector -54.5069 26.2069 -4.65) (float-vector -53.5523 27.0221 -4.65) (float-vector -52.4819 27.6781 -4.65) (float-vector -51.3221 28.1585 -4.65) (float-vector -50.1015 28.4515 -4.65) (float-vector -48.85 28.55 -4.65) (float-vector 48.85 28.55 -4.65) (float-vector 50.1015 28.4515 -4.65) (float-vector 51.3221 28.1585 -4.65) (float-vector 52.4819 27.6781 -4.65) (float-vector 53.5523 27.0221 -4.65) (float-vector 54.5069 26.2069 -4.65) (float-vector 55.3221 25.2523 -4.65) (float-vector 55.9781 24.1819 -4.65) (float-vector 56.4585 23.0221 -4.65) (float-vector 56.7515 21.8015 -4.65) (float-vector 56.85 20.55 -4.65) (float-vector 56.85 -20.55 -4.65) (float-vector 56.7515 -21.8015 -4.65) (float-vector 56.4585 -23.0221 -4.65) (float-vector 55.9781 -24.1819 -4.65) (float-vector 55.3221 -25.2523 -4.65) (float-vector 54.5069 -26.2069 -4.65) (float-vector 53.5523 -27.0221 -4.65) (float-vector 52.4819 -27.6781 -4.65) (float-vector 51.3221 -28.1585 -4.65) (float-vector 50.1015 -28.4515 -4.65) (float-vector 48.85 -28.55 -4.65))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -36.0 -25.27 -4.65) (float-vector 36.0 -25.27 -4.65) (float-vector 36.0 25.27 -4.65) (float-vector -36.0 25.27 -4.65)))
))
         (instance face :init :vertices (list (float-vector 48.85 -28.55 -4.65) (float-vector 48.85 -28.55 4.65) (float-vector -48.85 -28.55 4.65) (float-vector -48.85 -28.55 -4.65)))
         (instance face :init :vertices (list (float-vector -36.0 -25.27 -4.65) (float-vector -36.0 25.27 -4.65) (float-vector -36.0 25.27 4.65) (float-vector -36.0 -25.27 4.65)))
         (instance face :init :vertices (list (float-vector 36.0 -25.27 -4.65) (float-vector -36.0 -25.27 -4.65) (float-vector -36.0 -25.27 4.65) (float-vector 36.0 -25.27 4.65)))
         (instance face :init :vertices (list (float-vector 36.0 25.27 4.65) (float-vector -36.0 25.27 4.65) (float-vector -36.0 25.27 -4.65) (float-vector 36.0 25.27 -4.65)))
         (instance face :init :vertices (list (float-vector 36.0 25.27 -4.65) (float-vector 36.0 -25.27 -4.65) (float-vector 36.0 -25.27 4.65) (float-vector 36.0 25.27 4.65)))
         (instance face :init :vertices (list (float-vector 53.0 0.0 4.65) (float-vector 52.1962 3.0 4.65) (float-vector 52.1962 3.0 4.0) (float-vector 53.0 0.0 4.0)))
         (instance face :init :vertices (list (float-vector 52.1962 3.0 4.0) (float-vector 52.1962 3.0 4.65) (float-vector 50.0 5.19615 4.65) (float-vector 50.0 5.19615 4.0)))
         (instance face :init :vertices (list (float-vector 50.0 5.19615 4.0) (float-vector 50.0 5.19615 4.65) (float-vector 47.0 6.0 4.65) (float-vector 47.0 6.0 4.0)))
         (instance face :init :vertices (list (float-vector 47.0 6.0 4.0) (float-vector 47.0 6.0 4.65) (float-vector 44.0 5.19615 4.65) (float-vector 44.0 5.19615 4.0)))
         (instance face :init :vertices (list (float-vector 44.0 5.19615 4.0) (float-vector 44.0 5.19615 4.65) (float-vector 41.8038 3.0 4.65) (float-vector 41.8038 3.0 4.0)))
         (instance face :init :vertices (list (float-vector 41.8038 3.0 4.0) (float-vector 41.8038 3.0 4.65) (float-vector 41.0 4.884981e-15 4.65) (float-vector 41.0 4.884981e-15 4.0)))
         (instance face :init :vertices (list (float-vector 41.0 4.884981e-15 4.0) (float-vector 41.0 4.884981e-15 4.65) (float-vector 41.8038 -3.0 4.65) (float-vector 41.8038 -3.0 4.0)))
         (instance face :init :vertices (list (float-vector 41.8038 -3.0 4.0) (float-vector 41.8038 -3.0 4.65) (float-vector 44.0 -5.19615 4.65) (float-vector 44.0 -5.19615 4.0)))
         (instance face :init :vertices (list (float-vector 44.0 -5.19615 4.0) (float-vector 44.0 -5.19615 4.65) (float-vector 47.0 -6.0 4.65) (float-vector 47.0 -6.0 4.0)))
         (instance face :init :vertices (list (float-vector 47.0 -6.0 4.0) (float-vector 47.0 -6.0 4.65) (float-vector 50.0 -5.19615 4.65) (float-vector 50.0 -5.19615 4.0)))
         (instance face :init :vertices (list (float-vector 50.0 -5.19615 4.0) (float-vector 50.0 -5.19615 4.65) (float-vector 52.1962 -3.0 4.65) (float-vector 52.1962 -3.0 4.0)))
         (instance face :init :vertices (list (float-vector 52.1962 -3.0 4.0) (float-vector 52.1962 -3.0 4.65) (float-vector 53.0 0.0 4.65) (float-vector 53.0 0.0 4.0)))
         (instance face :init :vertices (list (float-vector 53.0 0.0 4.0) (float-vector 52.1962 3.0 4.0) (float-vector 50.0 5.19615 4.0) (float-vector 47.0 6.0 4.0) (float-vector 44.0 5.19615 4.0) (float-vector 41.8038 3.0 4.0) (float-vector 41.0 4.884981e-15 4.0) (float-vector 41.8038 -3.0 4.0) (float-vector 44.0 -5.19615 4.0) (float-vector 47.0 -6.0 4.0) (float-vector 50.0 -5.19615 4.0) (float-vector 52.1962 -3.0 4.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -36.0 -25.27 4.65) (float-vector 36.0 -25.27 4.65) (float-vector 36.0 25.27 4.65) (float-vector -36.0 25.27 4.65)))
         (instance face :init :vertices (list (float-vector 36.0 -25.27 -4.65) (float-vector -36.0 -25.27 -4.65) (float-vector -36.0 25.27 -4.65) (float-vector 36.0 25.27 -4.65)))
         (instance face :init :vertices (list (float-vector -36.0 -25.27 4.65) (float-vector -36.0 -25.27 -4.65) (float-vector 36.0 -25.27 -4.65) (float-vector 36.0 -25.27 4.65)))
         (instance face :init :vertices (list (float-vector -36.0 25.27 4.65) (float-vector -36.0 25.27 -4.65) (float-vector -36.0 -25.27 -4.65) (float-vector -36.0 -25.27 4.65)))
         (instance face :init :vertices (list (float-vector 36.0 25.27 4.65) (float-vector 36.0 25.27 -4.65) (float-vector -36.0 25.27 -4.65) (float-vector -36.0 25.27 4.65)))
         (instance face :init :vertices (list (float-vector 36.0 -25.27 4.65) (float-vector 36.0 -25.27 -4.65) (float-vector 36.0 25.27 -4.65) (float-vector 36.0 25.27 4.65)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     ;; paste texture iphone4-desktop.jpg
     (send (elt bc 2) :paste-texture-to-face (elt (send (elt bc 2) :faces)0) :file "models/iphone4-desktop.jpg")
     (send (elt bc 0) :set-color :gray80)
     (send (elt bc 1) :set-color :gray10)
     (send (elt bc 2) :set-color :gray0)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name 'iphone4 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))
  (:handle () (list ))
  (:attention () (list ))
  (:button () (list ))
  )

(defun iphone4 (&rest args) (instance* iphone4-object :init args))
;; (format *error-output* "(instance iphone4-object :init) for generating model~%")
