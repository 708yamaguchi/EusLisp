;;
;;
;; this file is automatically generated from euslisp+euslib
;;
;;
(defclass arrow-object
  :super cascaded-link
  :slots (sensors))
(defmethod arrow-object
  (:init
   (&rest args &key (name "arrow") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
         joint0
        
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :bodyset177702600
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 0.5 0.5) (float-vector -0.5 0.5 0.5) (float-vector -0.5 -0.5 0.5) (float-vector 0.5 -0.5 0.5)))
         (instance face :init :vertices (list (float-vector -0.5 0.5 -0.5) (float-vector 0.5 0.5 -0.5) (float-vector 0.5 -0.5 -0.5) (float-vector -0.5 -0.5 -0.5)))
         (instance face :init :vertices (list (float-vector 0.5 0.5 0.5) (float-vector 0.5 0.5 -0.5) (float-vector -0.5 0.5 -0.5) (float-vector -0.5 0.5 0.5)))
         (instance face :init :vertices (list (float-vector 0.5 -0.5 0.5) (float-vector 0.5 -0.5 -0.5) (float-vector 0.5 0.5 -0.5) (float-vector 0.5 0.5 0.5)))
         (instance face :init :vertices (list (float-vector -0.5 -0.5 0.5) (float-vector -0.5 -0.5 -0.5) (float-vector 0.5 -0.5 -0.5) (float-vector 0.5 -0.5 0.5)))
         (instance face :init :vertices (list (float-vector -0.5 0.5 0.5) (float-vector -0.5 0.5 -0.5) (float-vector -0.5 -0.5 -0.5) (float-vector -0.5 -0.5 0.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 140.0 0.0 -33.3333) (float-vector 140.0 -12.7564 -30.7958) (float-vector 140.0 -23.5704 -23.57) (float-vector 140.0 -30.7961 -12.7559) (float-vector 140.0 -33.3333 0.000234) (float-vector 140.0 -30.7959 12.7563) (float-vector 140.0 -23.5701 23.5704) (float-vector 140.0 -12.756 30.7961) (float-vector 140.0 0.000116 33.3334) (float-vector 140.0 12.7562 30.796) (float-vector 140.0 23.5703 23.5702) (float-vector 140.0 30.796 12.7561) (float-vector 140.0 33.3333 1.758985e-05) (float-vector 140.0 30.796 -12.7561) (float-vector 140.0 23.5702 -23.5702) (float-vector 140.0 12.7561 -30.7959)))
         (instance face :init :vertices (list (float-vector 140.0 -12.7564 -30.7958) (float-vector 140.0 0.0 -33.3333) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 0.0 -33.3333) (float-vector 140.0 12.7561 -30.7959) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 12.7561 -30.7959) (float-vector 140.0 23.5702 -23.5702) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 23.5702 -23.5702) (float-vector 140.0 30.796 -12.7561) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 30.796 -12.7561) (float-vector 140.0 33.3333 1.758985e-05) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 33.3333 1.758985e-05) (float-vector 140.0 30.796 12.7561) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 30.796 12.7561) (float-vector 140.0 23.5703 23.5702) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 23.5703 23.5702) (float-vector 140.0 12.7562 30.796) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 12.7562 30.796) (float-vector 140.0 0.000116 33.3334) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 0.000116 33.3334) (float-vector 140.0 -12.756 30.7961) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 -12.756 30.7961) (float-vector 140.0 -23.5701 23.5704) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 -23.5701 23.5704) (float-vector 140.0 -30.7959 12.7563) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 -30.7959 12.7563) (float-vector 140.0 -33.3333 0.000234) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 -33.3333 0.000234) (float-vector 140.0 -30.7961 -12.7559) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 -30.7961 -12.7559) (float-vector 140.0 -23.5704 -23.57) (float-vector 200.0 0.0 6.939552e-05)))
         (instance face :init :vertices (list (float-vector 140.0 -23.5704 -23.57) (float-vector 140.0 -12.7564 -30.7958) (float-vector 200.0 0.0 6.939552e-05)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 140.0 -8.33335 -14.4337) (float-vector 140.0 0.0 -16.6666) (float-vector 140.0 8.33333 -14.4337) (float-vector 140.0 14.4338 -8.33329) (float-vector 140.0 16.6667 3.814384e-05) (float-vector 140.0 14.4338 8.33337) (float-vector 140.0 8.33334 14.4338) (float-vector 140.0 1.136450e-05 16.6667) (float-vector 140.0 -8.33332 14.4338) (float-vector 140.0 -14.4337 8.33339) (float-vector 140.0 -16.6667 6.052377e-05) (float-vector 140.0 -14.4338 -8.33327)))
         (instance face :init :vertices (list (float-vector 7.068669e-06 0.0 -16.6667) (float-vector 6.121641e-06 -8.33335 -14.4338) (float-vector 3.534327e-06 -14.4338 -8.33333) (float-vector -7.029995e-12 -16.6667 1.146951e-06) (float-vector -3.534340e-06 -14.4337 8.33333) (float-vector -6.121649e-06 -8.33332 14.4337) (float-vector -7.068669e-06 1.136450e-05 16.6666) (float-vector -6.121645e-06 8.33334 14.4337) (float-vector -3.534332e-06 14.4338 8.33331) (float-vector 2.461789e-12 16.6667 -2.123298e-05) (float-vector 3.534336e-06 14.4338 -8.33335) (float-vector 6.121647e-06 8.33333 -14.4338)))
         (instance face :init :vertices (list (float-vector 140.0 -8.33335 -14.4337) (float-vector 6.121641e-06 -8.33335 -14.4338) (float-vector 7.068669e-06 0.0 -16.6667) (float-vector 140.0 0.0 -16.6666)))
         (instance face :init :vertices (list (float-vector 140.0 -14.4338 -8.33327) (float-vector 3.534327e-06 -14.4338 -8.33333) (float-vector 6.121641e-06 -8.33335 -14.4338) (float-vector 140.0 -8.33335 -14.4337)))
         (instance face :init :vertices (list (float-vector 140.0 -16.6667 6.052377e-05) (float-vector -7.029995e-12 -16.6667 1.146951e-06) (float-vector 3.534327e-06 -14.4338 -8.33333) (float-vector 140.0 -14.4338 -8.33327)))
         (instance face :init :vertices (list (float-vector 140.0 -14.4337 8.33339) (float-vector -3.534340e-06 -14.4337 8.33333) (float-vector -7.029995e-12 -16.6667 1.146951e-06) (float-vector 140.0 -16.6667 6.052377e-05)))
         (instance face :init :vertices (list (float-vector 140.0 -8.33332 14.4338) (float-vector -6.121649e-06 -8.33332 14.4337) (float-vector -3.534340e-06 -14.4337 8.33333) (float-vector 140.0 -14.4337 8.33339)))
         (instance face :init :vertices (list (float-vector 140.0 1.136450e-05 16.6667) (float-vector -7.068669e-06 1.136450e-05 16.6666) (float-vector -6.121649e-06 -8.33332 14.4337) (float-vector 140.0 -8.33332 14.4338)))
         (instance face :init :vertices (list (float-vector 140.0 8.33334 14.4338) (float-vector -6.121645e-06 8.33334 14.4337) (float-vector -7.068669e-06 1.136450e-05 16.6666) (float-vector 140.0 1.136450e-05 16.6667)))
         (instance face :init :vertices (list (float-vector 140.0 14.4338 8.33337) (float-vector -3.534332e-06 14.4338 8.33331) (float-vector -6.121645e-06 8.33334 14.4337) (float-vector 140.0 8.33334 14.4338)))
         (instance face :init :vertices (list (float-vector 140.0 16.6667 3.814384e-05) (float-vector 2.461789e-12 16.6667 -2.123298e-05) (float-vector -3.534332e-06 14.4338 8.33331) (float-vector 140.0 14.4338 8.33337)))
         (instance face :init :vertices (list (float-vector 140.0 14.4338 -8.33329) (float-vector 3.534336e-06 14.4338 -8.33335) (float-vector 2.461789e-12 16.6667 -2.123298e-05) (float-vector 140.0 16.6667 3.814384e-05)))
         (instance face :init :vertices (list (float-vector 140.0 8.33333 -14.4337) (float-vector 6.121647e-06 8.33333 -14.4338) (float-vector 3.534336e-06 14.4338 -8.33335) (float-vector 140.0 14.4338 -8.33329)))
         (instance face :init :vertices (list (float-vector 140.0 0.0 -16.6666) (float-vector 7.068669e-06 0.0 -16.6667) (float-vector 6.121647e-06 8.33333 -14.4338) (float-vector 140.0 8.33333 -14.4337)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 33.3333 140.0 4.394830e-05) (float-vector 30.7959 140.0 12.7564) (float-vector 23.57 140.0 23.5704) (float-vector 12.7559 140.0 30.7961) (float-vector -0.00019 140.0 33.3334) (float-vector -12.7563 140.0 30.796) (float-vector -23.5703 140.0 23.5701) (float-vector -30.796 140.0 12.756) (float-vector -33.3333 140.0 -7.234685e-05) (float-vector -30.7959 140.0 -12.7561) (float-vector -23.5702 140.0 -23.5702) (float-vector -12.7561 140.0 -30.7959) (float-vector 2.635844e-05 140.0 -33.3333) (float-vector 12.7561 140.0 -30.7959) (float-vector 23.5702 140.0 -23.5702) (float-vector 30.796 140.0 -12.7561)))
         (instance face :init :vertices (list (float-vector 30.7959 140.0 12.7564) (float-vector 33.3333 140.0 4.394830e-05) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector 33.3333 140.0 4.394830e-05) (float-vector 30.796 140.0 -12.7561) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector 30.796 140.0 -12.7561) (float-vector 23.5702 140.0 -23.5702) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector 23.5702 140.0 -23.5702) (float-vector 12.7561 140.0 -30.7959) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector 12.7561 140.0 -30.7959) (float-vector 2.635844e-05 140.0 -33.3333) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector 2.635844e-05 140.0 -33.3333) (float-vector -12.7561 140.0 -30.7959) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector -12.7561 140.0 -30.7959) (float-vector -23.5702 140.0 -23.5702) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector -23.5702 140.0 -23.5702) (float-vector -30.7959 140.0 -12.7561) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector -30.7959 140.0 -12.7561) (float-vector -33.3333 140.0 -7.234685e-05) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector -33.3333 140.0 -7.234685e-05) (float-vector -30.796 140.0 12.756) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector -30.796 140.0 12.756) (float-vector -23.5703 140.0 23.5701) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector -23.5703 140.0 23.5701) (float-vector -12.7563 140.0 30.796) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector -12.7563 140.0 30.796) (float-vector -0.00019 140.0 33.3334) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector -0.00019 140.0 33.3334) (float-vector 12.7559 140.0 30.7961) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector 12.7559 140.0 30.7961) (float-vector 23.57 140.0 23.5704) (float-vector 0.0 200.0 6.898225e-05)))
         (instance face :init :vertices (list (float-vector 23.57 140.0 23.5704) (float-vector 30.7959 140.0 12.7564) (float-vector 0.0 200.0 6.898225e-05)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.4337 140.0 8.33339) (float-vector 16.6667 140.0 4.394830e-05) (float-vector 14.4338 140.0 -8.33329) (float-vector 8.33334 140.0 -14.4337) (float-vector 5.804461e-06 140.0 -16.6666) (float-vector -8.33332 140.0 -14.4337) (float-vector -14.4338 140.0 -8.33329) (float-vector -16.6667 140.0 3.258379e-05) (float-vector -14.4338 140.0 8.33336) (float-vector -8.33334 140.0 14.4338) (float-vector -1.657548e-05 140.0 16.6667) (float-vector 8.33331 140.0 14.4338)))
         (instance face :init :vertices (list (float-vector 16.6667 0.0 -1.446425e-05) (float-vector 14.4337 -3.476944e-06 8.33333) (float-vector 8.33331 -6.022236e-06 14.4337) (float-vector -1.657548e-05 -6.953873e-06 16.6666) (float-vector -8.33334 -6.022228e-06 14.4337) (float-vector -14.4338 -3.476932e-06 8.33331) (float-vector -16.6667 4.741639e-12 -2.582875e-05) (float-vector -14.4338 3.476940e-06 -8.33335) (float-vector -8.33332 6.022232e-06 -14.4338) (float-vector 5.804461e-06 6.953873e-06 -16.6667) (float-vector 8.33334 6.022230e-06 -14.4338) (float-vector 14.4338 3.476936e-06 -8.33334)))
         (instance face :init :vertices (list (float-vector 14.4337 140.0 8.33339) (float-vector 14.4337 -3.476944e-06 8.33333) (float-vector 16.6667 0.0 -1.446425e-05) (float-vector 16.6667 140.0 4.394830e-05)))
         (instance face :init :vertices (list (float-vector 8.33331 140.0 14.4338) (float-vector 8.33331 -6.022236e-06 14.4337) (float-vector 14.4337 -3.476944e-06 8.33333) (float-vector 14.4337 140.0 8.33339)))
         (instance face :init :vertices (list (float-vector -1.657548e-05 140.0 16.6667) (float-vector -1.657548e-05 -6.953873e-06 16.6666) (float-vector 8.33331 -6.022236e-06 14.4337) (float-vector 8.33331 140.0 14.4338)))
         (instance face :init :vertices (list (float-vector -8.33334 140.0 14.4338) (float-vector -8.33334 -6.022228e-06 14.4337) (float-vector -1.657548e-05 -6.953873e-06 16.6666) (float-vector -1.657548e-05 140.0 16.6667)))
         (instance face :init :vertices (list (float-vector -14.4338 140.0 8.33336) (float-vector -14.4338 -3.476932e-06 8.33331) (float-vector -8.33334 -6.022228e-06 14.4337) (float-vector -8.33334 140.0 14.4338)))
         (instance face :init :vertices (list (float-vector -16.6667 140.0 3.258379e-05) (float-vector -16.6667 4.741639e-12 -2.582875e-05) (float-vector -14.4338 -3.476932e-06 8.33331) (float-vector -14.4338 140.0 8.33336)))
         (instance face :init :vertices (list (float-vector -14.4338 140.0 -8.33329) (float-vector -14.4338 3.476940e-06 -8.33335) (float-vector -16.6667 4.741639e-12 -2.582875e-05) (float-vector -16.6667 140.0 3.258379e-05)))
         (instance face :init :vertices (list (float-vector -8.33332 140.0 -14.4337) (float-vector -8.33332 6.022232e-06 -14.4338) (float-vector -14.4338 3.476940e-06 -8.33335) (float-vector -14.4338 140.0 -8.33329)))
         (instance face :init :vertices (list (float-vector 5.804461e-06 140.0 -16.6666) (float-vector 5.804461e-06 6.953873e-06 -16.6667) (float-vector -8.33332 6.022232e-06 -14.4338) (float-vector -8.33332 140.0 -14.4337)))
         (instance face :init :vertices (list (float-vector 8.33334 140.0 -14.4337) (float-vector 8.33334 6.022230e-06 -14.4338) (float-vector 5.804461e-06 6.953873e-06 -16.6667) (float-vector 5.804461e-06 140.0 -16.6666)))
         (instance face :init :vertices (list (float-vector 14.4338 140.0 -8.33329) (float-vector 14.4338 3.476936e-06 -8.33334) (float-vector 8.33334 6.022230e-06 -14.4338) (float-vector 8.33334 140.0 -14.4337)))
         (instance face :init :vertices (list (float-vector 16.6667 140.0 4.394830e-05) (float-vector 16.6667 0.0 -1.446425e-05) (float-vector 14.4338 3.476936e-06 -8.33334) (float-vector 14.4338 140.0 -8.33329)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 33.3333 0.0 140.0) (float-vector 30.7959 -12.7564 140.0) (float-vector 23.57 -23.5704 140.0) (float-vector 12.7559 -30.7961 140.0) (float-vector -0.00019 -33.3333 140.0) (float-vector -12.7563 -30.7959 140.0) (float-vector -23.5703 -23.5701 140.0) (float-vector -30.796 -12.756 140.0) (float-vector -33.3333 0.000116 140.0) (float-vector -30.7959 12.7562 140.0) (float-vector -23.5702 23.5703 140.0) (float-vector -12.7561 30.796 140.0) (float-vector 2.635844e-05 33.3333 140.0) (float-vector 12.7561 30.796 140.0) (float-vector 23.5702 23.5702 140.0) (float-vector 30.796 12.7561 140.0)))
         (instance face :init :vertices (list (float-vector 30.7959 -12.7564 140.0) (float-vector 33.3333 0.0 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector 33.3333 0.0 140.0) (float-vector 30.796 12.7561 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector 30.796 12.7561 140.0) (float-vector 23.5702 23.5702 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector 23.5702 23.5702 140.0) (float-vector 12.7561 30.796 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector 12.7561 30.796 140.0) (float-vector 2.635844e-05 33.3333 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector 2.635844e-05 33.3333 140.0) (float-vector -12.7561 30.796 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector -12.7561 30.796 140.0) (float-vector -23.5702 23.5703 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector -23.5702 23.5703 140.0) (float-vector -30.7959 12.7562 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector -30.7959 12.7562 140.0) (float-vector -33.3333 0.000116 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector -33.3333 0.000116 140.0) (float-vector -30.796 -12.756 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector -30.796 -12.756 140.0) (float-vector -23.5703 -23.5701 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector -23.5703 -23.5701 140.0) (float-vector -12.7563 -30.7959 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector -12.7563 -30.7959 140.0) (float-vector -0.00019 -33.3333 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector -0.00019 -33.3333 140.0) (float-vector 12.7559 -30.7961 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector 12.7559 -30.7961 140.0) (float-vector 23.57 -23.5704 140.0) (float-vector 0.0 0.0 200.0)))
         (instance face :init :vertices (list (float-vector 23.57 -23.5704 140.0) (float-vector 30.7959 -12.7564 140.0) (float-vector 0.0 0.0 200.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.4337 -8.33335 140.0) (float-vector 16.6667 0.0 140.0) (float-vector 14.4338 8.33333 140.0) (float-vector 8.33334 14.4338 140.0) (float-vector 5.804461e-06 16.6667 140.0) (float-vector -8.33332 14.4338 140.0) (float-vector -14.4338 8.33334 140.0) (float-vector -16.6667 1.136450e-05 140.0) (float-vector -14.4338 -8.33332 140.0) (float-vector -8.33334 -14.4337 140.0) (float-vector -1.657548e-05 -16.6667 140.0) (float-vector 8.33331 -14.4338 140.0)))
         (instance face :init :vertices (list (float-vector 16.6667 0.0 0.0) (float-vector 14.4337 -8.33335 0.0) (float-vector 8.33331 -14.4338 0.0) (float-vector -1.657548e-05 -16.6667 0.0) (float-vector -8.33334 -14.4337 0.0) (float-vector -14.4338 -8.33332 0.0) (float-vector -16.6667 1.136450e-05 0.0) (float-vector -14.4338 8.33334 0.0) (float-vector -8.33332 14.4338 0.0) (float-vector 5.804461e-06 16.6667 0.0) (float-vector 8.33334 14.4338 0.0) (float-vector 14.4338 8.33333 0.0)))
         (instance face :init :vertices (list (float-vector 14.4337 -8.33335 140.0) (float-vector 14.4337 -8.33335 0.0) (float-vector 16.6667 0.0 0.0) (float-vector 16.6667 0.0 140.0)))
         (instance face :init :vertices (list (float-vector 8.33331 -14.4338 140.0) (float-vector 8.33331 -14.4338 0.0) (float-vector 14.4337 -8.33335 0.0) (float-vector 14.4337 -8.33335 140.0)))
         (instance face :init :vertices (list (float-vector -1.657548e-05 -16.6667 140.0) (float-vector -1.657548e-05 -16.6667 0.0) (float-vector 8.33331 -14.4338 0.0) (float-vector 8.33331 -14.4338 140.0)))
         (instance face :init :vertices (list (float-vector -8.33334 -14.4337 140.0) (float-vector -8.33334 -14.4337 0.0) (float-vector -1.657548e-05 -16.6667 0.0) (float-vector -1.657548e-05 -16.6667 140.0)))
         (instance face :init :vertices (list (float-vector -14.4338 -8.33332 140.0) (float-vector -14.4338 -8.33332 0.0) (float-vector -8.33334 -14.4337 0.0) (float-vector -8.33334 -14.4337 140.0)))
         (instance face :init :vertices (list (float-vector -16.6667 1.136450e-05 140.0) (float-vector -16.6667 1.136450e-05 0.0) (float-vector -14.4338 -8.33332 0.0) (float-vector -14.4338 -8.33332 140.0)))
         (instance face :init :vertices (list (float-vector -14.4338 8.33334 140.0) (float-vector -14.4338 8.33334 0.0) (float-vector -16.6667 1.136450e-05 0.0) (float-vector -16.6667 1.136450e-05 140.0)))
         (instance face :init :vertices (list (float-vector -8.33332 14.4338 140.0) (float-vector -8.33332 14.4338 0.0) (float-vector -14.4338 8.33334 0.0) (float-vector -14.4338 8.33334 140.0)))
         (instance face :init :vertices (list (float-vector 5.804461e-06 16.6667 140.0) (float-vector 5.804461e-06 16.6667 0.0) (float-vector -8.33332 14.4338 0.0) (float-vector -8.33332 14.4338 140.0)))
         (instance face :init :vertices (list (float-vector 8.33334 14.4338 140.0) (float-vector 8.33334 14.4338 0.0) (float-vector 5.804461e-06 16.6667 0.0) (float-vector 5.804461e-06 16.6667 140.0)))
         (instance face :init :vertices (list (float-vector 14.4338 8.33333 140.0) (float-vector 14.4338 8.33333 0.0) (float-vector 8.33334 14.4338 0.0) (float-vector 8.33334 14.4338 140.0)))
         (instance face :init :vertices (list (float-vector 16.6667 0.0 140.0) (float-vector 16.6667 0.0 0.0) (float-vector 14.4338 8.33333 0.0) (float-vector 14.4338 8.33333 140.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color (list))
     (send (elt bc 1) :set-color :red)
     (send (elt bc 2) :set-color :red)
     (send (elt bc 3) :set-color :green)
     (send (elt bc 4) :set-color :green)
     (send (elt bc 5) :set-color :blue)
     (send (elt bc 6) :set-color :blue)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset177702600 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)
     self))
  )

(defun arrow (&rest args) (instance* arrow-object :init args))
;; (format *error-output* "(instance arrow-object :init) for generating model~%")
