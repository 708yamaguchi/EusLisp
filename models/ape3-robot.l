;;
;;
;; this file is automatically generated from euslisp+euslib
;;
;;
(defclass ape3-robot
  :super robot-model
  :slots (sensors))
(defmethod ape3-robot
  (:init
   (&rest args &key (name "ape3") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16
        
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -15.0 60.0) (float-vector 10.0 -15.0 90.0) (float-vector 10.0 -70.0 90.0) (float-vector 10.0 -70.0 60.0) (float-vector 10.0 -69.0 60.0) (float-vector 10.0 -69.0 89.0) (float-vector 10.0 -16.0 89.0) (float-vector 10.0 -16.0 60.0)))
         (instance face :init :vertices (list (float-vector -9.99997 -15.0 90.0) (float-vector -9.99997 -70.0 90.0) (float-vector 10.0 -70.0 90.0) (float-vector 10.0 -15.0 90.0)))
         (instance face :init :vertices (list (float-vector -9.99998 -15.0 60.0) (float-vector -9.99998 -16.0 60.0) (float-vector -9.99997 -16.0 89.0) (float-vector -9.99997 -69.0 89.0) (float-vector -9.99998 -69.0 60.0) (float-vector -9.99998 -70.0 60.0) (float-vector -9.99997 -70.0 90.0) (float-vector -9.99997 -15.0 90.0)))
         (instance face :init :vertices (list (float-vector -7.07105 -70.0 52.9289) (float-vector -9.99998 -70.0 60.0) (float-vector -9.99998 -69.0 60.0) (float-vector -7.07105 -69.0 52.9289)))
         (instance face :init :vertices (list (float-vector -7.07105 -15.0 52.9289) (float-vector -7.07105 -16.0 52.9289) (float-vector -9.99998 -16.0 60.0) (float-vector -9.99998 -15.0 60.0)))
         (instance face :init :vertices (list (float-vector 1.732203e-05 -70.0 50.0) (float-vector -7.07105 -70.0 52.9289) (float-vector -7.07105 -69.0 52.9289) (float-vector 1.722839e-05 -69.0 50.0)))
         (instance face :init :vertices (list (float-vector 1.217167e-05 -15.0 50.0) (float-vector 1.226531e-05 -16.0 50.0) (float-vector -7.07105 -16.0 52.9289) (float-vector -7.07105 -15.0 52.9289)))
         (instance face :init :vertices (list (float-vector 7.07109 -70.0 52.9289) (float-vector 1.732203e-05 -70.0 50.0) (float-vector 1.722839e-05 -69.0 50.0) (float-vector 7.07109 -69.0 52.9289)))
         (instance face :init :vertices (list (float-vector 7.07108 -15.0 52.9289) (float-vector 7.07108 -16.0 52.9289) (float-vector 1.226531e-05 -16.0 50.0) (float-vector 1.217167e-05 -15.0 50.0)))
         (instance face :init :vertices (list (float-vector 10.0 -70.0 60.0) (float-vector 10.0 -70.0 90.0) (float-vector -9.99997 -70.0 90.0) (float-vector -9.99998 -70.0 60.0) (float-vector -7.07105 -70.0 52.9289) (float-vector 1.732203e-05 -70.0 50.0) (float-vector 7.07109 -70.0 52.9289)))
         (instance face :init :vertices (list (float-vector 7.07108 -15.0 52.9289) (float-vector 1.217167e-05 -15.0 50.0) (float-vector -7.07105 -15.0 52.9289) (float-vector -9.99998 -15.0 60.0) (float-vector -9.99997 -15.0 90.0) (float-vector 10.0 -15.0 90.0) (float-vector 10.0 -15.0 60.0)))
         (instance face :init :vertices (list (float-vector 7.07109 -70.0 52.9289) (float-vector 7.07109 -69.0 52.9289) (float-vector 10.0 -69.0 60.0) (float-vector 10.0 -70.0 60.0)))
         (instance face :init :vertices (list (float-vector 10.0 -15.0 60.0) (float-vector 10.0 -16.0 60.0) (float-vector 7.07108 -16.0 52.9289) (float-vector 7.07108 -15.0 52.9289)))
         (instance face :init :vertices (list (float-vector 10.0 -69.0 89.0) (float-vector 10.0 -69.0 60.0) (float-vector 7.07109 -69.0 52.9289) (float-vector 1.722839e-05 -69.0 50.0) (float-vector -7.07105 -69.0 52.9289) (float-vector -9.99998 -69.0 60.0) (float-vector -9.99997 -69.0 89.0)))
         (instance face :init :vertices (list (float-vector 10.0 -16.0 89.0) (float-vector 10.0 -69.0 89.0) (float-vector -9.99997 -69.0 89.0) (float-vector -9.99997 -16.0 89.0)))
         (instance face :init :vertices (list (float-vector -9.99997 -16.0 89.0) (float-vector -9.99998 -16.0 60.0) (float-vector -7.07105 -16.0 52.9289) (float-vector 1.226531e-05 -16.0 50.0) (float-vector 7.07108 -16.0 52.9289) (float-vector 10.0 -16.0 60.0) (float-vector 10.0 -16.0 89.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -67.0 185.15) (float-vector 11.5 -67.0 142.85) (float-vector 11.5 -22.0 142.85) (float-vector 11.5 -22.0 185.15)))
         (instance face :init :vertices (list (float-vector 11.5 -22.0 142.85) (float-vector -11.5 -22.0 142.85) (float-vector -11.5 -22.0 185.15) (float-vector 11.5 -22.0 185.15)))
         (instance face :init :vertices (list (float-vector -11.5 -22.0 142.85) (float-vector -11.5 -67.0 142.85) (float-vector -11.5 -67.0 185.15) (float-vector -11.5 -22.0 185.15)))
         (instance face :init :vertices (list (float-vector -11.5 -67.0 185.15) (float-vector 11.5 -67.0 185.15) (float-vector 11.5 -22.0 185.15) (float-vector -11.5 -22.0 185.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09328 -60.25 185.15) (float-vector 5.25001 -64.0933 185.15) (float-vector 1.317405e-05 -65.5 185.15) (float-vector -5.24998 -64.0933 185.15) (float-vector -9.09325 -60.25 185.15) (float-vector -10.5 -55.0 185.15) (float-vector -9.09324 -49.75 185.15) (float-vector -5.24997 -45.9067 185.15) (float-vector 2.668027e-05 -44.5 185.15) (float-vector 5.25002 -45.9067 185.15) (float-vector 9.09329 -49.75 185.15) (float-vector 10.5 -55.0 185.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -67.0 142.85) (float-vector 11.5 -67.0 142.85) (float-vector 11.5 -67.0 185.15) (float-vector -11.5 -67.0 185.15)))
         (instance face :init :vertices (list (float-vector 11.5 -67.0 142.85) (float-vector -11.5 -67.0 142.85) (float-vector -11.5 -22.0 142.85) (float-vector 11.5 -22.0 142.85))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.25001 -64.0933 142.85) (float-vector 9.09328 -60.25 142.85) (float-vector 10.5 -55.0 142.85) (float-vector 9.09329 -49.75 142.85) (float-vector 5.25002 -45.9067 142.85) (float-vector 2.668027e-05 -44.5 142.85) (float-vector -5.24997 -45.9067 142.85) (float-vector -9.09324 -49.75 142.85) (float-vector -10.5 -55.0 142.85) (float-vector -9.09325 -60.25 142.85) (float-vector -5.24998 -64.0933 142.85) (float-vector 1.317405e-05 -65.5 142.85)))
))
         (instance face :init :vertices (list (float-vector 10.5 -55.0 187.15) (float-vector 10.5 -55.0 185.15) (float-vector 9.09329 -49.75 185.15) (float-vector 9.09329 -49.75 187.15)))
         (instance face :init :vertices (list (float-vector 10.5 -55.0 142.85) (float-vector 10.5 -55.0 140.85) (float-vector 9.09329 -49.75 140.85) (float-vector 9.09329 -49.75 142.85)))
         (instance face :init :vertices (list (float-vector 5.25002 -45.9067 185.15) (float-vector 5.25002 -45.9067 187.15) (float-vector 9.09329 -49.75 187.15) (float-vector 9.09329 -49.75 185.15)))
         (instance face :init :vertices (list (float-vector 9.09329 -49.75 140.85) (float-vector 5.25002 -45.9067 140.85) (float-vector 5.25002 -45.9067 142.85) (float-vector 9.09329 -49.75 142.85)))
         (instance face :init :vertices (list (float-vector 2.668027e-05 -44.5 185.15) (float-vector 2.668027e-05 -44.5 187.15) (float-vector 5.25002 -45.9067 187.15) (float-vector 5.25002 -45.9067 185.15)))
         (instance face :init :vertices (list (float-vector 5.25002 -45.9067 140.85) (float-vector 2.668027e-05 -44.5 140.85) (float-vector 2.668027e-05 -44.5 142.85) (float-vector 5.25002 -45.9067 142.85)))
         (instance face :init :vertices (list (float-vector -5.24997 -45.9067 185.15) (float-vector -5.24997 -45.9067 187.15) (float-vector 2.668027e-05 -44.5 187.15) (float-vector 2.668027e-05 -44.5 185.15)))
         (instance face :init :vertices (list (float-vector 2.668027e-05 -44.5 140.85) (float-vector -5.24997 -45.9067 140.85) (float-vector -5.24997 -45.9067 142.85) (float-vector 2.668027e-05 -44.5 142.85)))
         (instance face :init :vertices (list (float-vector -9.09324 -49.75 185.15) (float-vector -9.09324 -49.75 187.15) (float-vector -5.24997 -45.9067 187.15) (float-vector -5.24997 -45.9067 185.15)))
         (instance face :init :vertices (list (float-vector -5.24997 -45.9067 140.85) (float-vector -9.09324 -49.75 140.85) (float-vector -9.09324 -49.75 142.85) (float-vector -5.24997 -45.9067 142.85)))
         (instance face :init :vertices (list (float-vector -10.5 -55.0 185.15) (float-vector -10.5 -55.0 187.15) (float-vector -9.09324 -49.75 187.15) (float-vector -9.09324 -49.75 185.15)))
         (instance face :init :vertices (list (float-vector -9.09324 -49.75 140.85) (float-vector -10.5 -55.0 140.85) (float-vector -10.5 -55.0 142.85) (float-vector -9.09324 -49.75 142.85)))
         (instance face :init :vertices (list (float-vector -9.09325 -60.25 185.15) (float-vector -9.09325 -60.25 187.15) (float-vector -10.5 -55.0 187.15) (float-vector -10.5 -55.0 185.15)))
         (instance face :init :vertices (list (float-vector -10.5 -55.0 140.85) (float-vector -9.09325 -60.25 140.85) (float-vector -9.09325 -60.25 142.85) (float-vector -10.5 -55.0 142.85)))
         (instance face :init :vertices (list (float-vector -5.24998 -64.0933 185.15) (float-vector -5.24998 -64.0933 187.15) (float-vector -9.09325 -60.25 187.15) (float-vector -9.09325 -60.25 185.15)))
         (instance face :init :vertices (list (float-vector -9.09325 -60.25 140.85) (float-vector -5.24998 -64.0933 140.85) (float-vector -5.24998 -64.0933 142.85) (float-vector -9.09325 -60.25 142.85)))
         (instance face :init :vertices (list (float-vector 1.317405e-05 -65.5 185.15) (float-vector 1.317405e-05 -65.5 187.15) (float-vector -5.24998 -64.0933 187.15) (float-vector -5.24998 -64.0933 185.15)))
         (instance face :init :vertices (list (float-vector -5.24998 -64.0933 140.85) (float-vector 1.317405e-05 -65.5 140.85) (float-vector 1.317405e-05 -65.5 142.85) (float-vector -5.24998 -64.0933 142.85)))
         (instance face :init :vertices (list (float-vector 5.25001 -64.0933 185.15) (float-vector 5.25001 -64.0933 187.15) (float-vector 1.317405e-05 -65.5 187.15) (float-vector 1.317405e-05 -65.5 185.15)))
         (instance face :init :vertices (list (float-vector 1.317405e-05 -65.5 140.85) (float-vector 5.25001 -64.0933 140.85) (float-vector 5.25001 -64.0933 142.85) (float-vector 1.317405e-05 -65.5 142.85)))
         (instance face :init :vertices (list (float-vector 9.09328 -60.25 185.15) (float-vector 9.09328 -60.25 187.15) (float-vector 5.25001 -64.0933 187.15) (float-vector 5.25001 -64.0933 185.15)))
         (instance face :init :vertices (list (float-vector 5.25001 -64.0933 140.85) (float-vector 9.09328 -60.25 140.85) (float-vector 9.09328 -60.25 142.85) (float-vector 5.25001 -64.0933 142.85)))
         (instance face :init :vertices (list (float-vector 9.09328 -60.25 187.15) (float-vector 10.5 -55.0 187.15) (float-vector 9.09329 -49.75 187.15) (float-vector 5.25002 -45.9067 187.15) (float-vector 2.668027e-05 -44.5 187.15) (float-vector -5.24997 -45.9067 187.15) (float-vector -9.09324 -49.75 187.15) (float-vector -10.5 -55.0 187.15) (float-vector -9.09325 -60.25 187.15) (float-vector -5.24998 -64.0933 187.15) (float-vector 1.317405e-05 -65.5 187.15) (float-vector 5.25001 -64.0933 187.15)))
         (instance face :init :vertices (list (float-vector 10.5 -55.0 187.15) (float-vector 9.09328 -60.25 187.15) (float-vector 9.09328 -60.25 185.15) (float-vector 10.5 -55.0 185.15)))
         (instance face :init :vertices (list (float-vector 9.09328 -60.25 140.85) (float-vector 10.5 -55.0 140.85) (float-vector 10.5 -55.0 142.85) (float-vector 9.09328 -60.25 142.85)))
         (instance face :init :vertices (list (float-vector 10.5 -55.0 140.85) (float-vector 9.09328 -60.25 140.85) (float-vector 5.25001 -64.0933 140.85) (float-vector 1.317405e-05 -65.5 140.85) (float-vector -5.24998 -64.0933 140.85) (float-vector -9.09325 -60.25 140.85) (float-vector -10.5 -55.0 140.85) (float-vector -9.09324 -49.75 140.85) (float-vector -5.24997 -45.9067 140.85) (float-vector 2.668027e-05 -44.5 140.85) (float-vector 5.25002 -45.9067 140.85) (float-vector 9.09329 -49.75 140.85)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 9.99998 70.0 60.0) (float-vector 9.99999 70.0 90.0) (float-vector 9.99999 15.0 90.0) (float-vector 9.99998 15.0 60.0) (float-vector 9.99998 16.0 60.0) (float-vector 9.99999 16.0 89.0) (float-vector 9.99999 69.0 89.0) (float-vector 9.99998 69.0 60.0)))
         (instance face :init :vertices (list (float-vector -10.0 70.0 90.0) (float-vector -10.0 15.0 90.0) (float-vector 9.99999 15.0 90.0) (float-vector 9.99999 70.0 90.0)))
         (instance face :init :vertices (list (float-vector -10.0 70.0 60.0) (float-vector -10.0 69.0 60.0) (float-vector -10.0 69.0 89.0) (float-vector -10.0 16.0 89.0) (float-vector -10.0 16.0 60.0) (float-vector -10.0 15.0 60.0) (float-vector -10.0 15.0 90.0) (float-vector -10.0 70.0 90.0)))
         (instance face :init :vertices (list (float-vector -7.07109 15.0 52.9289) (float-vector -10.0 15.0 60.0) (float-vector -10.0 16.0 60.0) (float-vector -7.07109 16.0 52.9289)))
         (instance face :init :vertices (list (float-vector -7.07109 70.0 52.9289) (float-vector -7.07109 69.0 52.9289) (float-vector -10.0 69.0 60.0) (float-vector -10.0 70.0 60.0)))
         (instance face :init :vertices (list (float-vector -1.872818e-05 15.0 50.0) (float-vector -7.07109 15.0 52.9289) (float-vector -7.07109 16.0 52.9289) (float-vector -1.882183e-05 16.0 50.0)))
         (instance face :init :vertices (list (float-vector -2.387854e-05 70.0 50.0) (float-vector -2.378490e-05 69.0 50.0) (float-vector -7.07109 69.0 52.9289) (float-vector -7.07109 70.0 52.9289)))
         (instance face :init :vertices (list (float-vector 7.07105 15.0 52.9289) (float-vector -1.872818e-05 15.0 50.0) (float-vector -1.882183e-05 16.0 50.0) (float-vector 7.07105 16.0 52.9289)))
         (instance face :init :vertices (list (float-vector 7.07104 70.0 52.9289) (float-vector 7.07104 69.0 52.9289) (float-vector -2.378490e-05 69.0 50.0) (float-vector -2.387854e-05 70.0 50.0)))
         (instance face :init :vertices (list (float-vector 9.99998 15.0 60.0) (float-vector 9.99999 15.0 90.0) (float-vector -10.0 15.0 90.0) (float-vector -10.0 15.0 60.0) (float-vector -7.07109 15.0 52.9289) (float-vector -1.872818e-05 15.0 50.0) (float-vector 7.07105 15.0 52.9289)))
         (instance face :init :vertices (list (float-vector 7.07104 70.0 52.9289) (float-vector -2.387854e-05 70.0 50.0) (float-vector -7.07109 70.0 52.9289) (float-vector -10.0 70.0 60.0) (float-vector -10.0 70.0 90.0) (float-vector 9.99999 70.0 90.0) (float-vector 9.99998 70.0 60.0)))
         (instance face :init :vertices (list (float-vector 7.07105 15.0 52.9289) (float-vector 7.07105 16.0 52.9289) (float-vector 9.99998 16.0 60.0) (float-vector 9.99998 15.0 60.0)))
         (instance face :init :vertices (list (float-vector 9.99998 70.0 60.0) (float-vector 9.99998 69.0 60.0) (float-vector 7.07104 69.0 52.9289) (float-vector 7.07104 70.0 52.9289)))
         (instance face :init :vertices (list (float-vector 9.99999 16.0 89.0) (float-vector 9.99998 16.0 60.0) (float-vector 7.07105 16.0 52.9289) (float-vector -1.882183e-05 16.0 50.0) (float-vector -7.07109 16.0 52.9289) (float-vector -10.0 16.0 60.0) (float-vector -10.0 16.0 89.0)))
         (instance face :init :vertices (list (float-vector 9.99999 69.0 89.0) (float-vector 9.99999 16.0 89.0) (float-vector -10.0 16.0 89.0) (float-vector -10.0 69.0 89.0)))
         (instance face :init :vertices (list (float-vector -10.0 69.0 89.0) (float-vector -10.0 69.0 60.0) (float-vector -7.07109 69.0 52.9289) (float-vector -2.378490e-05 69.0 50.0) (float-vector 7.07104 69.0 52.9289) (float-vector 9.99998 69.0 60.0) (float-vector 9.99999 69.0 89.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 67.0 142.85) (float-vector 11.5 67.0 185.15) (float-vector 11.5 22.0 185.15) (float-vector 11.5 22.0 142.85)))
         (instance face :init :vertices (list (float-vector 11.5 22.0 185.15) (float-vector -11.5 22.0 185.15) (float-vector -11.5 22.0 142.85) (float-vector 11.5 22.0 142.85)))
         (instance face :init :vertices (list (float-vector -11.5 22.0 185.15) (float-vector -11.5 67.0 185.15) (float-vector -11.5 67.0 142.85) (float-vector -11.5 22.0 142.85)))
         (instance face :init :vertices (list (float-vector -11.5 67.0 142.85) (float-vector 11.5 67.0 142.85) (float-vector 11.5 22.0 142.85) (float-vector -11.5 22.0 142.85))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09322 60.25 142.85) (float-vector 5.24995 64.0933 142.85) (float-vector -5.472360e-05 65.5 142.85) (float-vector -5.25005 64.0933 142.85) (float-vector -9.09331 60.25 142.85) (float-vector -10.5 55.0 142.85) (float-vector -9.0933 49.75 142.85) (float-vector -5.25002 45.9067 142.85) (float-vector -2.528585e-05 44.5 142.85) (float-vector 5.24997 45.9067 142.85) (float-vector 9.09324 49.75 142.85) (float-vector 10.5 55.0 142.85)))
))
         (instance face :init :vertices (list (float-vector -11.5 67.0 185.15) (float-vector 11.5 67.0 185.15) (float-vector 11.5 67.0 142.85) (float-vector -11.5 67.0 142.85)))
         (instance face :init :vertices (list (float-vector 11.5 67.0 185.15) (float-vector -11.5 67.0 185.15) (float-vector -11.5 22.0 185.15) (float-vector 11.5 22.0 185.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.24997 64.0933 185.15) (float-vector 9.09325 60.25 185.15) (float-vector 10.5 55.0 185.15) (float-vector 9.09326 49.75 185.15) (float-vector 5.25 45.9067 185.15) (float-vector 1.271470e-06 44.5 185.15) (float-vector -5.25 45.9067 185.15) (float-vector -9.09327 49.75 185.15) (float-vector -10.5 55.0 185.15) (float-vector -9.09328 60.25 185.15) (float-vector -5.25002 64.0933 185.15) (float-vector -2.816627e-05 65.5 185.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 55.0 140.85) (float-vector 10.5 55.0 142.85) (float-vector 9.09324 49.75 142.85) (float-vector 9.09323 49.75 140.85)))
         (instance face :init :vertices (list (float-vector 10.5 55.0 185.15) (float-vector 10.5 55.0 187.15) (float-vector 9.09326 49.75 187.15) (float-vector 9.09326 49.75 185.15)))
         (instance face :init :vertices (list (float-vector 5.24997 45.9067 142.85) (float-vector 5.24997 45.9067 140.85) (float-vector 9.09323 49.75 140.85) (float-vector 9.09324 49.75 142.85)))
         (instance face :init :vertices (list (float-vector 9.09326 49.75 187.15) (float-vector 5.25 45.9067 187.15) (float-vector 5.25 45.9067 185.15) (float-vector 9.09326 49.75 185.15)))
         (instance face :init :vertices (list (float-vector -2.528585e-05 44.5 142.85) (float-vector -2.654152e-05 44.5 140.85) (float-vector 5.24997 45.9067 140.85) (float-vector 5.24997 45.9067 142.85)))
         (instance face :init :vertices (list (float-vector 5.25 45.9067 187.15) (float-vector 2.527135e-06 44.5 187.15) (float-vector 1.271470e-06 44.5 185.15) (float-vector 5.25 45.9067 185.15)))
         (instance face :init :vertices (list (float-vector -5.25002 45.9067 142.85) (float-vector -5.25003 45.9067 140.85) (float-vector -2.654152e-05 44.5 140.85) (float-vector -2.528585e-05 44.5 142.85)))
         (instance face :init :vertices (list (float-vector 2.527135e-06 44.5 187.15) (float-vector -5.25 45.9067 187.15) (float-vector -5.25 45.9067 185.15) (float-vector 1.271470e-06 44.5 185.15)))
         (instance face :init :vertices (list (float-vector -9.0933 49.75 142.85) (float-vector -9.0933 49.75 140.85) (float-vector -5.25003 45.9067 140.85) (float-vector -5.25002 45.9067 142.85)))
         (instance face :init :vertices (list (float-vector -5.25 45.9067 187.15) (float-vector -9.09327 49.75 187.15) (float-vector -9.09327 49.75 185.15) (float-vector -5.25 45.9067 185.15)))
         (instance face :init :vertices (list (float-vector -10.5 55.0 142.85) (float-vector -10.5 55.0 140.85) (float-vector -9.0933 49.75 140.85) (float-vector -9.0933 49.75 142.85)))
         (instance face :init :vertices (list (float-vector -9.09327 49.75 187.15) (float-vector -10.5 55.0 187.15) (float-vector -10.5 55.0 185.15) (float-vector -9.09327 49.75 185.15)))
         (instance face :init :vertices (list (float-vector -9.09331 60.25 142.85) (float-vector -9.09331 60.25 140.85) (float-vector -10.5 55.0 140.85) (float-vector -10.5 55.0 142.85)))
         (instance face :init :vertices (list (float-vector -10.5 55.0 187.15) (float-vector -9.09328 60.25 187.15) (float-vector -9.09328 60.25 185.15) (float-vector -10.5 55.0 185.15)))
         (instance face :init :vertices (list (float-vector -5.25005 64.0933 142.85) (float-vector -5.25005 64.0933 140.85) (float-vector -9.09331 60.25 140.85) (float-vector -9.09331 60.25 142.85)))
         (instance face :init :vertices (list (float-vector -9.09328 60.25 187.15) (float-vector -5.25002 64.0933 187.15) (float-vector -5.25002 64.0933 185.15) (float-vector -9.09328 60.25 185.15)))
         (instance face :init :vertices (list (float-vector -5.472360e-05 65.5 142.85) (float-vector -5.597925e-05 65.5 140.85) (float-vector -5.25005 64.0933 140.85) (float-vector -5.25005 64.0933 142.85)))
         (instance face :init :vertices (list (float-vector -5.25002 64.0933 187.15) (float-vector -2.691060e-05 65.5 187.15) (float-vector -2.816627e-05 65.5 185.15) (float-vector -5.25002 64.0933 185.15)))
         (instance face :init :vertices (list (float-vector 5.24995 64.0933 142.85) (float-vector 5.24994 64.0933 140.85) (float-vector -5.597925e-05 65.5 140.85) (float-vector -5.472360e-05 65.5 142.85)))
         (instance face :init :vertices (list (float-vector -2.691060e-05 65.5 187.15) (float-vector 5.24998 64.0933 187.15) (float-vector 5.24997 64.0933 185.15) (float-vector -2.816627e-05 65.5 185.15)))
         (instance face :init :vertices (list (float-vector 9.09322 60.25 142.85) (float-vector 9.09322 60.25 140.85) (float-vector 5.24994 64.0933 140.85) (float-vector 5.24995 64.0933 142.85)))
         (instance face :init :vertices (list (float-vector 5.24998 64.0933 187.15) (float-vector 9.09325 60.25 187.15) (float-vector 9.09325 60.25 185.15) (float-vector 5.24997 64.0933 185.15)))
         (instance face :init :vertices (list (float-vector 9.09322 60.25 140.85) (float-vector 10.5 55.0 140.85) (float-vector 9.09323 49.75 140.85) (float-vector 5.24997 45.9067 140.85) (float-vector -2.654152e-05 44.5 140.85) (float-vector -5.25003 45.9067 140.85) (float-vector -9.0933 49.75 140.85) (float-vector -10.5 55.0 140.85) (float-vector -9.09331 60.25 140.85) (float-vector -5.25005 64.0933 140.85) (float-vector -5.597925e-05 65.5 140.85) (float-vector 5.24994 64.0933 140.85)))
         (instance face :init :vertices (list (float-vector 10.5 55.0 140.85) (float-vector 9.09322 60.25 140.85) (float-vector 9.09322 60.25 142.85) (float-vector 10.5 55.0 142.85)))
         (instance face :init :vertices (list (float-vector 9.09325 60.25 187.15) (float-vector 10.5 55.0 187.15) (float-vector 10.5 55.0 185.15) (float-vector 9.09325 60.25 185.15)))
         (instance face :init :vertices (list (float-vector 10.5 55.0 187.15) (float-vector 9.09325 60.25 187.15) (float-vector 5.24998 64.0933 187.15) (float-vector -2.691060e-05 65.5 187.15) (float-vector -5.25002 64.0933 187.15) (float-vector -9.09328 60.25 187.15) (float-vector -10.5 55.0 187.15) (float-vector -9.09327 49.75 187.15) (float-vector -5.25 45.9067 187.15) (float-vector 2.527135e-06 44.5 187.15) (float-vector 5.25 45.9067 187.15) (float-vector 9.09326 49.75 187.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -7.0 -6.5 184.5) (float-vector -7.0 -6.5 155.5) (float-vector 21.0 -6.49999 155.5) (float-vector 21.0 -6.49999 184.5)))
         (instance face :init :vertices (list (float-vector 21.0 -6.49999 155.5) (float-vector 21.0 6.50001 155.5) (float-vector 21.0 6.50001 184.5) (float-vector 21.0 -6.49999 184.5)))
         (instance face :init :vertices (list (float-vector 21.0 6.50001 155.5) (float-vector -7.0 6.5 155.5) (float-vector -7.0 6.5 184.5) (float-vector 21.0 6.50001 184.5)))
         (instance face :init :vertices (list (float-vector -7.0 6.5 184.5) (float-vector -7.0 -6.5 184.5) (float-vector 21.0 -6.49999 184.5) (float-vector 21.0 6.50001 184.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -2.75 -4.76314 184.5) (float-vector -4.76314 -2.75 184.5) (float-vector -5.5 3.356041e-06 184.5) (float-vector -4.76314 2.75 184.5) (float-vector -2.75 4.76314 184.5) (float-vector 1.433868e-06 5.5 184.5) (float-vector 2.75 4.76314 184.5) (float-vector 4.76314 2.75 184.5) (float-vector 5.5 4.883047e-07 184.5) (float-vector 4.76314 -2.75 184.5) (float-vector 2.75 -4.76314 184.5) (float-vector 2.332661e-06 -5.5 184.5)))
))
         (instance face :init :vertices (list (float-vector -7.0 6.5 155.5) (float-vector -7.0 -6.5 155.5) (float-vector -7.0 -6.5 184.5) (float-vector -7.0 6.5 184.5)))
         (instance face :init :vertices (list (float-vector -7.0 -6.5 155.5) (float-vector -7.0 6.5 155.5) (float-vector 21.0 6.50001 155.5) (float-vector 21.0 -6.49999 155.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -4.76314 -2.75 155.5) (float-vector -2.75 -4.76314 155.5) (float-vector 2.332661e-06 -5.5 155.5) (float-vector 2.75 -4.76314 155.5) (float-vector 4.76314 -2.75 155.5) (float-vector 5.5 4.883047e-07 155.5) (float-vector 4.76314 2.75 155.5) (float-vector 2.75 4.76314 155.5) (float-vector 1.433868e-06 5.5 155.5) (float-vector -2.75 4.76314 155.5) (float-vector -4.76314 2.75 155.5) (float-vector -5.5 3.356041e-06 155.5)))
))
         (instance face :init :vertices (list (float-vector 2.332661e-06 -5.5 186.5) (float-vector 2.332661e-06 -5.5 184.5) (float-vector 2.75 -4.76314 184.5) (float-vector 2.75 -4.76314 186.5)))
         (instance face :init :vertices (list (float-vector 2.332661e-06 -5.5 155.5) (float-vector 2.332661e-06 -5.5 153.5) (float-vector 2.75 -4.76314 153.5) (float-vector 2.75 -4.76314 155.5)))
         (instance face :init :vertices (list (float-vector 4.76314 -2.75 184.5) (float-vector 4.76314 -2.75 186.5) (float-vector 2.75 -4.76314 186.5) (float-vector 2.75 -4.76314 184.5)))
         (instance face :init :vertices (list (float-vector 2.75 -4.76314 153.5) (float-vector 4.76314 -2.75 153.5) (float-vector 4.76314 -2.75 155.5) (float-vector 2.75 -4.76314 155.5)))
         (instance face :init :vertices (list (float-vector 5.5 4.883047e-07 184.5) (float-vector 5.5 4.883047e-07 186.5) (float-vector 4.76314 -2.75 186.5) (float-vector 4.76314 -2.75 184.5)))
         (instance face :init :vertices (list (float-vector 4.76314 -2.75 153.5) (float-vector 5.5 4.883047e-07 153.5) (float-vector 5.5 4.883047e-07 155.5) (float-vector 4.76314 -2.75 155.5)))
         (instance face :init :vertices (list (float-vector 4.76314 2.75 184.5) (float-vector 4.76314 2.75 186.5) (float-vector 5.5 4.883047e-07 186.5) (float-vector 5.5 4.883047e-07 184.5)))
         (instance face :init :vertices (list (float-vector 5.5 4.883047e-07 153.5) (float-vector 4.76314 2.75 153.5) (float-vector 4.76314 2.75 155.5) (float-vector 5.5 4.883047e-07 155.5)))
         (instance face :init :vertices (list (float-vector 2.75 4.76314 184.5) (float-vector 2.75 4.76314 186.5) (float-vector 4.76314 2.75 186.5) (float-vector 4.76314 2.75 184.5)))
         (instance face :init :vertices (list (float-vector 4.76314 2.75 153.5) (float-vector 2.75 4.76314 153.5) (float-vector 2.75 4.76314 155.5) (float-vector 4.76314 2.75 155.5)))
         (instance face :init :vertices (list (float-vector 1.433868e-06 5.5 184.5) (float-vector 1.433868e-06 5.5 186.5) (float-vector 2.75 4.76314 186.5) (float-vector 2.75 4.76314 184.5)))
         (instance face :init :vertices (list (float-vector 2.75 4.76314 153.5) (float-vector 1.433868e-06 5.5 153.5) (float-vector 1.433868e-06 5.5 155.5) (float-vector 2.75 4.76314 155.5)))
         (instance face :init :vertices (list (float-vector -2.75 4.76314 184.5) (float-vector -2.75 4.76314 186.5) (float-vector 1.433868e-06 5.5 186.5) (float-vector 1.433868e-06 5.5 184.5)))
         (instance face :init :vertices (list (float-vector 1.433868e-06 5.5 153.5) (float-vector -2.75 4.76314 153.5) (float-vector -2.75 4.76314 155.5) (float-vector 1.433868e-06 5.5 155.5)))
         (instance face :init :vertices (list (float-vector -4.76314 2.75 184.5) (float-vector -4.76314 2.75 186.5) (float-vector -2.75 4.76314 186.5) (float-vector -2.75 4.76314 184.5)))
         (instance face :init :vertices (list (float-vector -2.75 4.76314 153.5) (float-vector -4.76314 2.75 153.5) (float-vector -4.76314 2.75 155.5) (float-vector -2.75 4.76314 155.5)))
         (instance face :init :vertices (list (float-vector -5.5 3.356041e-06 184.5) (float-vector -5.5 3.356041e-06 186.5) (float-vector -4.76314 2.75 186.5) (float-vector -4.76314 2.75 184.5)))
         (instance face :init :vertices (list (float-vector -4.76314 2.75 153.5) (float-vector -5.5 3.356041e-06 153.5) (float-vector -5.5 3.356041e-06 155.5) (float-vector -4.76314 2.75 155.5)))
         (instance face :init :vertices (list (float-vector -4.76314 -2.75 184.5) (float-vector -4.76314 -2.75 186.5) (float-vector -5.5 3.356041e-06 186.5) (float-vector -5.5 3.356041e-06 184.5)))
         (instance face :init :vertices (list (float-vector -5.5 3.356041e-06 153.5) (float-vector -4.76314 -2.75 153.5) (float-vector -4.76314 -2.75 155.5) (float-vector -5.5 3.356041e-06 155.5)))
         (instance face :init :vertices (list (float-vector -2.75 -4.76314 184.5) (float-vector -2.75 -4.76314 186.5) (float-vector -4.76314 -2.75 186.5) (float-vector -4.76314 -2.75 184.5)))
         (instance face :init :vertices (list (float-vector -4.76314 -2.75 153.5) (float-vector -2.75 -4.76314 153.5) (float-vector -2.75 -4.76314 155.5) (float-vector -4.76314 -2.75 155.5)))
         (instance face :init :vertices (list (float-vector -2.75 -4.76314 186.5) (float-vector 2.332661e-06 -5.5 186.5) (float-vector 2.75 -4.76314 186.5) (float-vector 4.76314 -2.75 186.5) (float-vector 5.5 4.883047e-07 186.5) (float-vector 4.76314 2.75 186.5) (float-vector 2.75 4.76314 186.5) (float-vector 1.433868e-06 5.5 186.5) (float-vector -2.75 4.76314 186.5) (float-vector -4.76314 2.75 186.5) (float-vector -5.5 3.356041e-06 186.5) (float-vector -4.76314 -2.75 186.5)))
         (instance face :init :vertices (list (float-vector 2.332661e-06 -5.5 186.5) (float-vector -2.75 -4.76314 186.5) (float-vector -2.75 -4.76314 184.5) (float-vector 2.332661e-06 -5.5 184.5)))
         (instance face :init :vertices (list (float-vector -2.75 -4.76314 153.5) (float-vector 2.332661e-06 -5.5 153.5) (float-vector 2.332661e-06 -5.5 155.5) (float-vector -2.75 -4.76314 155.5)))
         (instance face :init :vertices (list (float-vector 2.332661e-06 -5.5 153.5) (float-vector -2.75 -4.76314 153.5) (float-vector -4.76314 -2.75 153.5) (float-vector -5.5 3.356041e-06 153.5) (float-vector -4.76314 2.75 153.5) (float-vector -2.75 4.76314 153.5) (float-vector 1.433868e-06 5.5 153.5) (float-vector 2.75 4.76314 153.5) (float-vector 4.76314 2.75 153.5) (float-vector 5.5 4.883047e-07 153.5) (float-vector 4.76314 -2.75 153.5) (float-vector 2.75 -4.76314 153.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 70.0 90.0) (float-vector -9.99997 -70.0 90.0) (float-vector -9.99997 -70.0 130.0) (float-vector -10.0 70.0 130.0)))
         (instance face :init :vertices (list (float-vector 10.0 -70.0 90.0) (float-vector 9.99997 70.0 90.0) (float-vector 9.99997 70.0 130.0) (float-vector 10.0 -70.0 130.0)))
         (instance face :init :vertices (list (float-vector -10.0 70.0 90.0) (float-vector 9.99997 70.0 90.0) (float-vector 10.0 -70.0 90.0) (float-vector -9.99997 -70.0 90.0)))
         (instance face :init :vertices (list (float-vector -10.0 70.0 130.0) (float-vector 9.99997 70.0 130.0) (float-vector 9.99997 70.0 90.0) (float-vector -10.0 70.0 90.0)))
         (instance face :init :vertices (list (float-vector -9.99997 -70.0 130.0) (float-vector 10.0 -70.0 130.0) (float-vector 9.99997 70.0 130.0) (float-vector -10.0 70.0 130.0)))
         (instance face :init :vertices (list (float-vector -9.99997 -70.0 90.0) (float-vector 10.0 -70.0 90.0) (float-vector 10.0 -70.0 130.0) (float-vector -9.99997 -70.0 130.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (send (elt bc 2) :set-color :gray90)
     (send (elt bc 3) :set-color :gray40)
     (send (elt bc 4) :set-color :gray40)
     (send (elt bc 5) :set-color (list))
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 385.731 :centroid (float-vector 0.38597 4.884537e-07 130.515) :inertia-tensor #2f((5.550875e+05 0.129804 -4136.52) (0.129804 2.483947e+05 -0.009876) (-4136.52 -0.009876 3.237792e+05))))

     ;; definition of :rleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 5.24999 -9.09326 21.15) (float-vector -1.015257e-05 -10.5 21.15) (float-vector -5.25001 -9.09326 21.15) (float-vector -9.09327 -5.24998 21.15) (float-vector -10.5 1.525879e-05 21.15) (float-vector -9.09326 5.25002 21.15) (float-vector -5.25 9.09328 21.15) (float-vector 3.353663e-06 10.5 21.15) (float-vector 5.25 9.09328 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.24999 -9.09328 -21.15) (float-vector 9.09326 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09326 -21.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector -5.25 9.09328 -21.15) (float-vector -9.09326 5.25 -21.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -1.015257e-05 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09328 21.15) (float-vector 5.25 9.09328 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 5.25 9.09326 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 3.353663e-06 10.5 21.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector 5.25 9.09328 23.15) (float-vector 5.25 9.09328 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector 5.25 9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09328 21.15) (float-vector -5.25 9.09328 23.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector 3.353663e-06 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 3.353663e-06 10.5 -23.15) (float-vector -5.25 9.09328 -23.15) (float-vector -5.25 9.09328 -21.15) (float-vector 3.353663e-06 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25002 21.15) (float-vector -9.09327 5.25002 23.15) (float-vector -5.25 9.09328 23.15) (float-vector -5.25 9.09328 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09328 -23.15) (float-vector -9.09326 5.25 -23.15) (float-vector -9.09326 5.25 -21.15) (float-vector -5.25 9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 1.525879e-05 21.15) (float-vector -10.5 1.525879e-05 23.15) (float-vector -9.09327 5.25002 23.15) (float-vector -9.09326 5.25002 21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09326 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.24998 21.15) (float-vector -9.09327 -5.24998 23.15) (float-vector -10.5 1.525879e-05 23.15) (float-vector -10.5 1.525879e-05 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 0.0 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 21.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -9.09327 -5.24998 23.15) (float-vector -9.09327 -5.24998 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.015257e-05 -10.5 21.15) (float-vector -1.015257e-05 -10.5 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -5.25001 -9.09326 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 -23.15) (float-vector -1.015257e-05 -10.5 -23.15) (float-vector -1.015257e-05 -10.5 -21.15) (float-vector -5.25001 -9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09326 21.15) (float-vector 5.24999 -9.09326 23.15) (float-vector -1.015257e-05 -10.5 23.15) (float-vector -1.015257e-05 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.015257e-05 -10.5 -23.15) (float-vector 5.24999 -9.09328 -23.15) (float-vector 5.24999 -9.09328 -21.15) (float-vector -1.015257e-05 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 9.09326 -5.25 23.15) (float-vector 5.24999 -9.09326 23.15) (float-vector 5.24999 -9.09326 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09328 -23.15) (float-vector 9.09326 -5.25 -23.15) (float-vector 9.09326 -5.25 -21.15) (float-vector 5.24999 -9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09328 23.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector -5.25 9.09328 23.15) (float-vector -9.09327 5.25002 23.15) (float-vector -10.5 1.525879e-05 23.15) (float-vector -9.09327 -5.24998 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -1.015257e-05 -10.5 23.15) (float-vector 5.24999 -9.09326 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09326 -5.25 23.15) (float-vector 9.09326 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09326 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09326 -5.25 -23.15) (float-vector 5.24999 -9.09328 -23.15) (float-vector -1.015257e-05 -10.5 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -9.09326 5.25 -23.15) (float-vector -5.25 9.09328 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -11.5 86.0 21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 41.0 -21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 41.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector 11.5 41.0 21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 41.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 86.0 21.15) (float-vector 11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 86.0 21.15) (float-vector -11.5 86.0 21.15) (float-vector -11.5 41.0 21.15) (float-vector 11.5 41.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -9.09326 79.25 21.15) (float-vector -5.24998 83.0933 21.15) (float-vector 1.674482e-05 84.5 21.15) (float-vector 5.25001 83.0933 21.15) (float-vector 9.09327 79.25 21.15) (float-vector 10.5 74.0 21.15) (float-vector 9.09326 68.75 21.15) (float-vector 5.24999 64.9067 21.15) (float-vector -9.945914e-06 63.5 21.15) (float-vector -5.25001 64.9067 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -10.5 74.0 21.15)))
))
         (instance face :init :vertices (list (float-vector 11.5 86.0 -21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 86.0 21.15) (float-vector 11.5 86.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 86.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector -11.5 41.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -5.24998 83.0933 -21.15) (float-vector -9.09326 79.25 -21.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09327 68.75 -21.15) (float-vector -5.25001 64.9067 -21.15) (float-vector -9.945914e-06 63.5 -21.15) (float-vector 5.24999 64.9067 -21.15) (float-vector 9.09326 68.75 -21.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09327 79.25 -21.15) (float-vector 5.25001 83.0933 -21.15) (float-vector 1.674482e-05 84.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -10.5 74.0 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -9.09327 68.75 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -21.15) (float-vector -10.5 74.0 -23.15) (float-vector -9.09327 68.75 -23.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 64.9067 21.15) (float-vector -5.25001 64.9067 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -9.09327 68.75 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 68.75 -23.15) (float-vector -5.25001 64.9067 -23.15) (float-vector -5.25001 64.9067 -21.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -9.945914e-06 63.5 21.15) (float-vector -9.945914e-06 63.5 23.15) (float-vector -5.25001 64.9067 23.15) (float-vector -5.25001 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 64.9067 -23.15) (float-vector -9.945914e-06 63.5 -23.15) (float-vector -9.945914e-06 63.5 -21.15) (float-vector -5.25001 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 64.9067 21.15) (float-vector 5.24999 64.9067 23.15) (float-vector -9.945914e-06 63.5 23.15) (float-vector -9.945914e-06 63.5 21.15)))
         (instance face :init :vertices (list (float-vector -9.945914e-06 63.5 -23.15) (float-vector 5.24999 64.9067 -23.15) (float-vector 5.24999 64.9067 -21.15) (float-vector -9.945914e-06 63.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 68.75 21.15) (float-vector 9.09326 68.75 23.15) (float-vector 5.24999 64.9067 23.15) (float-vector 5.24999 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 64.9067 -23.15) (float-vector 9.09326 68.75 -23.15) (float-vector 9.09326 68.75 -21.15) (float-vector 5.24999 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 21.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09326 68.75 23.15) (float-vector 9.09326 68.75 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 68.75 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09326 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 21.15) (float-vector 9.09327 79.25 23.15) (float-vector 10.5 74.0 23.15) (float-vector 10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 9.09327 79.25 -21.15) (float-vector 10.5 74.0 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25001 83.0933 21.15) (float-vector 5.25001 83.0933 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 9.09327 79.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 -23.15) (float-vector 5.25001 83.0933 -23.15) (float-vector 5.25001 83.0933 -21.15) (float-vector 9.09327 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector 1.674482e-05 84.5 21.15) (float-vector 1.674482e-05 84.5 23.15) (float-vector 5.25001 83.0933 23.15) (float-vector 5.25001 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector 5.25001 83.0933 -23.15) (float-vector 1.674482e-05 84.5 -23.15) (float-vector 1.674482e-05 84.5 -21.15) (float-vector 5.25001 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -5.24998 83.0933 21.15) (float-vector -5.24998 83.0933 23.15) (float-vector 1.674482e-05 84.5 23.15) (float-vector 1.674482e-05 84.5 21.15)))
         (instance face :init :vertices (list (float-vector 1.674482e-05 84.5 -23.15) (float-vector -5.24998 83.0933 -23.15) (float-vector -5.24998 83.0933 -21.15) (float-vector 1.674482e-05 84.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 79.25 21.15) (float-vector -9.09326 79.25 23.15) (float-vector -5.24998 83.0933 23.15) (float-vector -5.24998 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector -5.24998 83.0933 -23.15) (float-vector -9.09326 79.25 -23.15) (float-vector -9.09326 79.25 -21.15) (float-vector -5.24998 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 79.25 23.15) (float-vector -10.5 74.0 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -5.25001 64.9067 23.15) (float-vector -9.945914e-06 63.5 23.15) (float-vector 5.24999 64.9067 23.15) (float-vector 9.09326 68.75 23.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 5.25001 83.0933 23.15) (float-vector 1.674482e-05 84.5 23.15) (float-vector -5.24998 83.0933 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -9.09326 79.25 23.15) (float-vector -9.09326 79.25 21.15) (float-vector -10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 79.25 -23.15) (float-vector -10.5 74.0 -23.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09326 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -23.15) (float-vector -9.09326 79.25 -23.15) (float-vector -5.24998 83.0933 -23.15) (float-vector 1.674482e-05 84.5 -23.15) (float-vector 5.25001 83.0933 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 9.09326 68.75 -23.15) (float-vector 5.24999 64.9067 -23.15) (float-vector -9.945914e-06 63.5 -23.15) (float-vector -5.25001 64.9067 -23.15) (float-vector -9.09327 68.75 -23.15)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-p :weight 130 :centroid (float-vector -3.774983e-06 37.0 5.861477e-07) :inertia-tensor #2f((1.347484e+05 0.006697 7.388297e-11) (0.006697 25114.8 -4.634785e-09) (7.388296e-11 -4.634785e-09 1.210953e+05))))

     ;; definition of :rleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 29.0 26.5) (float-vector 10.0 29.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -27.5) (float-vector -10.0 30.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 7.629395e-06 -27.5) (float-vector -10.0 7.629395e-06 -26.5) (float-vector -10.0 29.0 -26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 7.629395e-06 26.5) (float-vector -10.0 7.629395e-06 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 7.629395e-06 27.5) (float-vector -10.0 7.629395e-06 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 7.629395e-06 -26.5) (float-vector -10.0 7.629395e-06 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -9.99999 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector 0.0 -9.99999 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -27.5) (float-vector 0.0 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 0.0 -9.99999 27.5) (float-vector 0.0 -9.99999 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 0.0 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 7.629395e-06 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector 0.0 -9.99999 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 0.0 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 7.629395e-06 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 0.0 -9.99999 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 7.629395e-06 26.5) (float-vector -10.0 29.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 -26.5) (float-vector 10.0 29.0 26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 29.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 29.0 -26.5) (float-vector -10.0 7.629395e-06 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 29.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 80.0 -30.0) (float-vector -10.0 30.0 -30.0) (float-vector -10.0 30.0 30.0) (float-vector -10.0 80.0 30.0) (float-vector -10.0 80.0 29.0) (float-vector -10.0 31.0 29.0) (float-vector -10.0 31.0 -29.0) (float-vector -10.0 80.0 -29.0)))
         (instance face :init :vertices (list (float-vector 9.99997 30.0 -30.0) (float-vector 9.99997 30.0 30.0) (float-vector -10.0 30.0 30.0) (float-vector -10.0 30.0 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 -30.0) (float-vector 10.0 80.0 -29.0) (float-vector 9.99997 31.0 -29.0) (float-vector 9.99997 31.0 29.0) (float-vector 10.0 80.0 29.0) (float-vector 10.0 80.0 30.0) (float-vector 9.99997 30.0 30.0) (float-vector 9.99997 30.0 -30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 87.071 30.0) (float-vector 10.0 80.0 30.0) (float-vector 10.0 80.0 29.0) (float-vector 7.07107 87.071 29.0)))
         (instance face :init :vertices (list (float-vector 7.07107 87.071 -30.0) (float-vector 7.07107 87.071 -29.0) (float-vector 10.0 80.0 -29.0) (float-vector 10.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector 6.278337e-06 90.0 30.0) (float-vector 7.07107 87.071 30.0) (float-vector 7.07107 87.071 29.0) (float-vector 6.278337e-06 90.0 29.0)))
         (instance face :init :vertices (list (float-vector 6.278337e-06 90.0 -30.0) (float-vector 6.278337e-06 90.0 -29.0) (float-vector 7.07107 87.071 -29.0) (float-vector 7.07107 87.071 -30.0)))
         (instance face :init :vertices (list (float-vector -7.07106 87.0711 30.0) (float-vector 6.278337e-06 90.0 30.0) (float-vector 6.278337e-06 90.0 29.0) (float-vector -7.07106 87.0711 29.0)))
         (instance face :init :vertices (list (float-vector -7.07106 87.0711 -30.0) (float-vector -7.07106 87.0711 -29.0) (float-vector 6.278337e-06 90.0 -29.0) (float-vector 6.278337e-06 90.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 30.0) (float-vector -10.0 30.0 30.0) (float-vector 9.99997 30.0 30.0) (float-vector 10.0 80.0 30.0) (float-vector 7.07107 87.071 30.0) (float-vector 6.278337e-06 90.0 30.0) (float-vector -7.07106 87.0711 30.0)))
         (instance face :init :vertices (list (float-vector -7.07106 87.0711 -30.0) (float-vector 6.278337e-06 90.0 -30.0) (float-vector 7.07107 87.071 -30.0) (float-vector 10.0 80.0 -30.0) (float-vector 9.99997 30.0 -30.0) (float-vector -10.0 30.0 -30.0) (float-vector -10.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector -7.07106 87.0711 30.0) (float-vector -7.07106 87.0711 29.0) (float-vector -10.0 80.0 29.0) (float-vector -10.0 80.0 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 -30.0) (float-vector -10.0 80.0 -29.0) (float-vector -7.07106 87.0711 -29.0) (float-vector -7.07106 87.0711 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 29.0) (float-vector -10.0 80.0 29.0) (float-vector -7.07106 87.0711 29.0) (float-vector 6.278337e-06 90.0 29.0) (float-vector 7.07107 87.071 29.0) (float-vector 10.0 80.0 29.0) (float-vector 9.99997 31.0 29.0)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 -29.0) (float-vector -10.0 31.0 29.0) (float-vector 9.99997 31.0 29.0) (float-vector 9.99997 31.0 -29.0)))
         (instance face :init :vertices (list (float-vector 9.99997 31.0 -29.0) (float-vector 10.0 80.0 -29.0) (float-vector 7.07107 87.071 -29.0) (float-vector 6.278337e-06 90.0 -29.0) (float-vector -7.07106 87.0711 -29.0) (float-vector -10.0 80.0 -29.0) (float-vector -10.0 31.0 -29.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-knee-p :weight 16.1614 :centroid (float-vector -1.032441e-05 36.2992 -3.069626e-05) :inertia-tensor #2f((18252.6 0.000753 -1.880731e-10) (0.000753 10370.2 0.001038) (-1.880731e-10 0.001038 8959.85))))

     ;; definition of :rleg-ankle-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.4 -14.0 24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 45.0 -24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 45.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector -14.4 45.0 24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 45.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 -14.0 24.9) (float-vector -14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 24.9) (float-vector 14.4 -14.0 24.9) (float-vector 14.4 45.0 24.9) (float-vector -14.4 45.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 11.6047 -6.70001 24.9) (float-vector 6.69999 -11.6047 24.9) (float-vector -1.172899e-05 -13.4 24.9) (float-vector -6.70001 -11.6047 24.9) (float-vector -11.6047 -6.69999 24.9) (float-vector -13.4 7.629395e-06 24.9) (float-vector -11.6047 6.7 24.9) (float-vector -6.69999 11.6047 24.9) (float-vector 4.040310e-06 13.4 24.9) (float-vector 6.7 11.6047 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 13.4 0.0 24.9)))
))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 -24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 -14.0 24.9) (float-vector -14.4 -14.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 -14.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector 14.4 45.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 6.69999 -11.6047 -24.9) (float-vector 11.6047 -6.70001 -24.9) (float-vector 13.4 0.0 -24.9) (float-vector 11.6047 6.7 -24.9) (float-vector 6.7 11.6047 -24.9) (float-vector 4.040310e-06 13.4 -24.9) (float-vector -6.69999 11.6047 -24.9) (float-vector -11.6047 6.7 -24.9) (float-vector -13.4 7.629395e-06 -24.9) (float-vector -11.6047 -6.69999 -24.9) (float-vector -6.70001 -11.6047 -24.9) (float-vector -1.172899e-05 -13.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector 13.4 0.0 26.9) (float-vector 13.4 0.0 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 11.6047 6.7 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 -24.9) (float-vector 13.4 0.0 -26.9) (float-vector 11.6047 6.7 -26.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 24.9) (float-vector 6.7 11.6047 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 6.7 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 6.7 11.6047 -24.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 4.040310e-06 13.4 24.9) (float-vector 4.040310e-06 13.4 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 6.7 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 -26.9) (float-vector 4.040310e-06 13.4 -26.9) (float-vector 4.040310e-06 13.4 -24.9) (float-vector 6.7 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -6.69999 11.6047 24.9) (float-vector -6.69999 11.6047 26.9) (float-vector 4.040310e-06 13.4 26.9) (float-vector 4.040310e-06 13.4 24.9)))
         (instance face :init :vertices (list (float-vector 4.040310e-06 13.4 -26.9) (float-vector -6.69999 11.6047 -26.9) (float-vector -6.69999 11.6047 -24.9) (float-vector 4.040310e-06 13.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 24.9) (float-vector -11.6047 6.7 26.9) (float-vector -6.69999 11.6047 26.9) (float-vector -6.69999 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.69999 11.6047 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -11.6047 6.7 -24.9) (float-vector -6.69999 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -13.4 7.629395e-06 24.9) (float-vector -13.4 7.629395e-06 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 -26.9) (float-vector -13.4 7.629395e-06 -26.9) (float-vector -13.4 7.629395e-06 -24.9) (float-vector -11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.69999 24.9) (float-vector -11.6047 -6.69999 26.9) (float-vector -13.4 7.629395e-06 26.9) (float-vector -13.4 7.629395e-06 24.9)))
         (instance face :init :vertices (list (float-vector -13.4 7.629395e-06 -26.9) (float-vector -11.6047 -6.69999 -26.9) (float-vector -11.6047 -6.69999 -24.9) (float-vector -13.4 7.629395e-06 -24.9)))
         (instance face :init :vertices (list (float-vector -6.70001 -11.6047 24.9) (float-vector -6.70001 -11.6047 26.9) (float-vector -11.6047 -6.69999 26.9) (float-vector -11.6047 -6.69999 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.69999 -26.9) (float-vector -6.70001 -11.6047 -26.9) (float-vector -6.70001 -11.6047 -24.9) (float-vector -11.6047 -6.69999 -24.9)))
         (instance face :init :vertices (list (float-vector -1.172899e-05 -13.4 24.9) (float-vector -1.172899e-05 -13.4 26.9) (float-vector -6.70001 -11.6047 26.9) (float-vector -6.70001 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.70001 -11.6047 -26.9) (float-vector -1.172896e-05 -13.4 -26.9) (float-vector -1.172899e-05 -13.4 -24.9) (float-vector -6.70001 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 6.69999 -11.6047 24.9) (float-vector 6.69999 -11.6047 26.9) (float-vector -1.172899e-05 -13.4 26.9) (float-vector -1.172899e-05 -13.4 24.9)))
         (instance face :init :vertices (list (float-vector -1.172896e-05 -13.4 -26.9) (float-vector 6.69999 -11.6047 -26.9) (float-vector 6.69999 -11.6047 -24.9) (float-vector -1.172899e-05 -13.4 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.70001 24.9) (float-vector 11.6047 -6.70001 26.9) (float-vector 6.69999 -11.6047 26.9) (float-vector 6.69999 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.69999 -11.6047 -26.9) (float-vector 11.6047 -6.70001 -26.9) (float-vector 11.6047 -6.70001 -24.9) (float-vector 6.69999 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.70001 26.9) (float-vector 13.4 0.0 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 4.040310e-06 13.4 26.9) (float-vector -6.69999 11.6047 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -13.4 7.629395e-06 26.9) (float-vector -11.6047 -6.69999 26.9) (float-vector -6.70001 -11.6047 26.9) (float-vector -1.172899e-05 -13.4 26.9) (float-vector 6.69999 -11.6047 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 26.9) (float-vector 11.6047 -6.70001 26.9) (float-vector 11.6047 -6.70001 24.9) (float-vector 13.4 0.0 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.70001 -26.9) (float-vector 13.4 0.0 -26.9) (float-vector 13.4 0.0 -24.9) (float-vector 11.6047 -6.70001 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 -26.9) (float-vector 11.6047 -6.70001 -26.9) (float-vector 6.69999 -11.6047 -26.9) (float-vector -1.172896e-05 -13.4 -26.9) (float-vector -6.70001 -11.6047 -26.9) (float-vector -11.6047 -6.69999 -26.9) (float-vector -13.4 7.629395e-06 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -6.69999 11.6047 -26.9) (float-vector 4.040310e-06 13.4 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 11.6047 6.7 -26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -20.0 25.0) (float-vector 75.0 -20.0 25.0001) (float-vector 75.0 -20.0 -24.9999)))
         (instance face :init :vertices (list (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -25.0 -25.0) (float-vector 75.0 -25.0 -24.9999) (float-vector 75.0 -25.0 25.0001)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 -24.9999) (float-vector 75.0 -25.0 -24.9999) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 25.0001) (float-vector 75.0 -25.0 25.0001) (float-vector 75.0 -25.0 -24.9999) (float-vector 75.0 -20.0 -24.9999)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 25.0) (float-vector -20.0 -25.0 25.0) (float-vector 75.0 -25.0 25.0001) (float-vector 75.0 -20.0 25.0001)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 27.5 -20.0 -25.0) (float-vector 27.5 -20.0 25.0) (float-vector 27.5 9.99998 15.0) (float-vector 27.5 9.99997 -15.0)))
         (instance face :init :vertices (list (float-vector 72.5 -20.0 25.0001) (float-vector 72.5 -20.0001 -24.9999) (float-vector 72.5 9.99994 -14.9999) (float-vector 72.5 9.99995 15.0001)))
         (instance face :init :vertices (list (float-vector 27.5 -20.0 -25.0) (float-vector 72.5 -20.0001 -24.9999) (float-vector 72.5 -20.0 25.0001) (float-vector 27.5 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 27.5 9.99997 -15.0) (float-vector 72.5 9.99994 -14.9999) (float-vector 72.5 -20.0001 -24.9999) (float-vector 27.5 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 27.5 9.99998 15.0) (float-vector 72.5 9.99995 15.0001) (float-vector 72.5 9.99994 -14.9999) (float-vector 27.5 9.99997 -15.0)))
         (instance face :init :vertices (list (float-vector 27.5 -20.0 25.0) (float-vector 72.5 -20.0 25.0001) (float-vector 72.5 9.99995 15.0001) (float-vector 27.5 9.99998 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :lightgoldenrod)
     (send (elt bc 2) :set-color :yellow)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-ankle-p :weight 272.0 :centroid (float-vector 28.6764 0.959808 2.587926e-05) :inertia-tensor #2f((1.384288e+05 65174.2 -0.147701) (65174.2 2.573434e+05 0.059507) (-0.147701 0.059507 2.827949e+05))))

     ;; definition of :rarm-shoulder-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 39.0 26.5) (float-vector 10.0 39.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -27.5) (float-vector -10.0 40.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 39.0 -26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -27.5) (float-vector 0.0 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 0.0 -10.0 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 0.0 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 0.0 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 39.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 -26.5) (float-vector 10.0 39.0 26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 39.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 39.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 39.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.0002 94.9 29.4) (float-vector -14.0001 45.1 29.4) (float-vector 44.9999 45.1001 29.4) (float-vector 44.9998 94.9001 29.4)))
         (instance face :init :vertices (list (float-vector 44.9999 45.1001 29.4) (float-vector 44.9999 45.1001 0.599976) (float-vector 44.9998 94.9001 0.599976) (float-vector 44.9998 94.9001 29.4)))
         (instance face :init :vertices (list (float-vector 44.9999 45.1001 0.599976) (float-vector -14.0001 45.1 0.599976) (float-vector -14.0002 94.9 0.599976) (float-vector 44.9998 94.9001 0.599976)))
         (instance face :init :vertices (list (float-vector -14.0002 94.9 0.599976) (float-vector -14.0002 94.9 29.4) (float-vector 44.9998 94.9001 29.4) (float-vector 44.9998 94.9001 0.599976))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -6.70016 94.9 26.6047) (float-vector -11.6049 94.9 21.7) (float-vector -13.4002 94.9 14.9999) (float-vector -11.6049 94.9 8.29996) (float-vector -6.70014 94.9 3.3952) (float-vector -0.000147 94.9 1.59998) (float-vector 6.69985 94.9 3.39523) (float-vector 11.6046 94.9 8.29996) (float-vector 13.3998 94.9 15.0) (float-vector 11.6046 94.9 21.7) (float-vector 6.69984 94.9 26.6047) (float-vector -0.000155 94.9 28.4)))
))
         (instance face :init :vertices (list (float-vector -14.0001 45.1 0.599976) (float-vector -14.0001 45.1 29.4) (float-vector -14.0002 94.9 29.4) (float-vector -14.0002 94.9 0.599976)))
         (instance face :init :vertices (list (float-vector -14.0001 45.1 29.4) (float-vector -14.0001 45.1 0.599976) (float-vector 44.9999 45.1001 0.599976) (float-vector 44.9999 45.1001 29.4))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -11.6048 45.1 21.7) (float-vector -6.70009 45.1 26.6047) (float-vector -7.665096e-05 45.1 28.4) (float-vector 6.69992 45.1 26.6047) (float-vector 11.6047 45.1 21.7) (float-vector 13.3999 45.1 15.0) (float-vector 11.6047 45.1 8.29999) (float-vector 6.69993 45.1 3.39523) (float-vector -6.876633e-05 45.1 1.59998) (float-vector -6.70007 45.1 3.39523) (float-vector -11.6048 45.1 8.29996) (float-vector -13.4001 45.1 15.0)))
))
         (instance face :init :vertices (list (float-vector -0.000158 96.9 28.4) (float-vector -0.000155 94.9 28.4) (float-vector 6.69984 94.9 26.6047) (float-vector 6.69984 96.9 26.6047)))
         (instance face :init :vertices (list (float-vector -7.665096e-05 45.1 28.4) (float-vector -7.351412e-05 43.1 28.4) (float-vector 6.69992 43.1 26.6047) (float-vector 6.69992 45.1 26.6047)))
         (instance face :init :vertices (list (float-vector 11.6046 94.9 21.7) (float-vector 11.6046 96.9 21.7) (float-vector 6.69984 96.9 26.6047) (float-vector 6.69984 94.9 26.6047)))
         (instance face :init :vertices (list (float-vector 6.69992 43.1 26.6047) (float-vector 11.6047 43.1 21.7) (float-vector 11.6047 45.1 21.7) (float-vector 6.69992 45.1 26.6047)))
         (instance face :init :vertices (list (float-vector 13.3998 94.9 15.0) (float-vector 13.3998 96.9 15.0) (float-vector 11.6046 96.9 21.7) (float-vector 11.6046 94.9 21.7)))
         (instance face :init :vertices (list (float-vector 11.6047 43.1 21.7) (float-vector 13.3999 43.1 15.0) (float-vector 13.3999 45.1 15.0) (float-vector 11.6047 45.1 21.7)))
         (instance face :init :vertices (list (float-vector 11.6046 94.9 8.29996) (float-vector 11.6046 96.9 8.29996) (float-vector 13.3998 96.9 15.0) (float-vector 13.3998 94.9 15.0)))
         (instance face :init :vertices (list (float-vector 13.3999 43.1 15.0) (float-vector 11.6047 43.1 8.29999) (float-vector 11.6047 45.1 8.29999) (float-vector 13.3999 45.1 15.0)))
         (instance face :init :vertices (list (float-vector 6.69985 94.9 3.39523) (float-vector 6.69985 96.9 3.39523) (float-vector 11.6046 96.9 8.29996) (float-vector 11.6046 94.9 8.29996)))
         (instance face :init :vertices (list (float-vector 11.6047 43.1 8.29999) (float-vector 6.69993 43.1 3.39523) (float-vector 6.69993 45.1 3.39523) (float-vector 11.6047 45.1 8.29999)))
         (instance face :init :vertices (list (float-vector -0.000147 94.9 1.59998) (float-vector -0.00015 96.9 1.59998) (float-vector 6.69985 96.9 3.39523) (float-vector 6.69985 94.9 3.39523)))
         (instance face :init :vertices (list (float-vector 6.69993 43.1 3.39523) (float-vector -6.562949e-05 43.1 1.59998) (float-vector -6.876633e-05 45.1 1.59998) (float-vector 6.69993 45.1 3.39523)))
         (instance face :init :vertices (list (float-vector -6.70014 94.9 3.3952) (float-vector -6.70015 96.9 3.3952) (float-vector -0.00015 96.9 1.59998) (float-vector -0.000147 94.9 1.59998)))
         (instance face :init :vertices (list (float-vector -6.562949e-05 43.1 1.59998) (float-vector -6.70006 43.1 3.39523) (float-vector -6.70007 45.1 3.39523) (float-vector -6.876633e-05 45.1 1.59998)))
         (instance face :init :vertices (list (float-vector -11.6049 94.9 8.29996) (float-vector -11.6049 96.9 8.29996) (float-vector -6.70015 96.9 3.3952) (float-vector -6.70014 94.9 3.3952)))
         (instance face :init :vertices (list (float-vector -6.70006 43.1 3.39523) (float-vector -11.6048 43.1 8.29996) (float-vector -11.6048 45.1 8.29996) (float-vector -6.70007 45.1 3.39523)))
         (instance face :init :vertices (list (float-vector -13.4002 94.9 14.9999) (float-vector -13.4002 96.9 14.9999) (float-vector -11.6049 96.9 8.29996) (float-vector -11.6049 94.9 8.29996)))
         (instance face :init :vertices (list (float-vector -11.6048 43.1 8.29996) (float-vector -13.4001 43.1 15.0) (float-vector -13.4001 45.1 15.0) (float-vector -11.6048 45.1 8.29996)))
         (instance face :init :vertices (list (float-vector -11.6049 94.9 21.7) (float-vector -11.6049 96.9 21.7) (float-vector -13.4002 96.9 14.9999) (float-vector -13.4002 94.9 14.9999)))
         (instance face :init :vertices (list (float-vector -13.4001 43.1 15.0) (float-vector -11.6048 43.1 21.7) (float-vector -11.6048 45.1 21.7) (float-vector -13.4001 45.1 15.0)))
         (instance face :init :vertices (list (float-vector -6.70016 94.9 26.6047) (float-vector -6.70017 96.9 26.6047) (float-vector -11.6049 96.9 21.7) (float-vector -11.6049 94.9 21.7)))
         (instance face :init :vertices (list (float-vector -11.6048 43.1 21.7) (float-vector -6.70008 43.1 26.6047) (float-vector -6.70009 45.1 26.6047) (float-vector -11.6048 45.1 21.7)))
         (instance face :init :vertices (list (float-vector -6.70017 96.9 26.6047) (float-vector -0.000158 96.9 28.4) (float-vector 6.69984 96.9 26.6047) (float-vector 11.6046 96.9 21.7) (float-vector 13.3998 96.9 15.0) (float-vector 11.6046 96.9 8.29996) (float-vector 6.69985 96.9 3.39523) (float-vector -0.00015 96.9 1.59998) (float-vector -6.70015 96.9 3.3952) (float-vector -11.6049 96.9 8.29996) (float-vector -13.4002 96.9 14.9999) (float-vector -11.6049 96.9 21.7)))
         (instance face :init :vertices (list (float-vector -0.000158 96.9 28.4) (float-vector -6.70017 96.9 26.6047) (float-vector -6.70016 94.9 26.6047) (float-vector -0.000155 94.9 28.4)))
         (instance face :init :vertices (list (float-vector -6.70008 43.1 26.6047) (float-vector -7.351412e-05 43.1 28.4) (float-vector -7.665096e-05 45.1 28.4) (float-vector -6.70009 45.1 26.6047)))
         (instance face :init :vertices (list (float-vector -7.351412e-05 43.1 28.4) (float-vector -6.70008 43.1 26.6047) (float-vector -11.6048 43.1 21.7) (float-vector -13.4001 43.1 15.0) (float-vector -11.6048 43.1 8.29996) (float-vector -6.70006 43.1 3.39523) (float-vector -6.562949e-05 43.1 1.59998) (float-vector 6.69993 43.1 3.39523) (float-vector 11.6047 43.1 8.29999) (float-vector 13.3999 43.1 15.0) (float-vector 11.6047 43.1 21.7) (float-vector 6.69992 43.1 26.6047)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-y :weight 114.946 :centroid (float-vector 14.0702 66.8696 13.9631) :inertia-tensor #2f((52874.0 -5062.77 -1676.95) (-5062.76 46430.0 -5024.22) (-1676.95 -5024.22 72431.2))))

     ;; definition of :rarm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -30.0) (float-vector 10.0 50.0 -30.0) (float-vector 10.0 50.0 30.0) (float-vector 10.0 0.0 30.0) (float-vector 10.0 0.0 29.0) (float-vector 10.0 49.0 29.0) (float-vector 10.0 49.0 -29.0) (float-vector 10.0 0.0 -29.0)))
         (instance face :init :vertices (list (float-vector -10.0 50.0 -30.0) (float-vector -10.0 50.0 30.0) (float-vector 10.0 50.0 30.0) (float-vector 10.0 50.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 3.051758e-05 -30.0) (float-vector -10.0 3.051758e-05 -29.0) (float-vector -10.0 49.0 -29.0) (float-vector -10.0 49.0 29.0) (float-vector -10.0 3.051758e-05 29.0) (float-vector -10.0 3.051758e-05 30.0) (float-vector -10.0 50.0 30.0) (float-vector -10.0 50.0 -30.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07104 30.0) (float-vector -10.0 3.051758e-05 30.0) (float-vector -10.0 3.051758e-05 29.0) (float-vector -7.07107 -7.07104 29.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07104 -30.0) (float-vector -7.07107 -7.07104 -29.0) (float-vector -10.0 3.051758e-05 -29.0) (float-vector -10.0 3.051758e-05 -30.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 30.0) (float-vector -7.07107 -7.07104 30.0) (float-vector -7.07107 -7.07104 29.0) (float-vector 0.0 -10.0 29.0)))
         (instance face :init :vertices (list (float-vector 0.0 -9.99997 -30.0) (float-vector 0.0 -9.99997 -29.0) (float-vector -7.07107 -7.07104 -29.0) (float-vector -7.07107 -7.07104 -30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07104 30.0) (float-vector 0.0 -10.0 30.0) (float-vector 0.0 -10.0 29.0) (float-vector 7.07107 -7.07104 29.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07104 -30.0) (float-vector 7.07107 -7.07104 -29.0) (float-vector 0.0 -9.99997 -29.0) (float-vector 0.0 -9.99997 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 30.0) (float-vector 10.0 50.0 30.0) (float-vector -10.0 50.0 30.0) (float-vector -10.0 3.051758e-05 30.0) (float-vector -7.07107 -7.07104 30.0) (float-vector 0.0 -10.0 30.0) (float-vector 7.07107 -7.07104 30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07104 -30.0) (float-vector 0.0 -9.99997 -30.0) (float-vector -7.07107 -7.07104 -30.0) (float-vector -10.0 3.051758e-05 -30.0) (float-vector -10.0 50.0 -30.0) (float-vector 10.0 50.0 -30.0) (float-vector 10.0 0.0 -30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07104 30.0) (float-vector 7.07107 -7.07104 29.0) (float-vector 10.0 0.0 29.0) (float-vector 10.0 0.0 30.0)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -30.0) (float-vector 10.0 0.0 -29.0) (float-vector 7.07107 -7.07104 -29.0) (float-vector 7.07107 -7.07104 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 49.0 29.0) (float-vector 10.0 0.0 29.0) (float-vector 7.07107 -7.07104 29.0) (float-vector 0.0 -10.0 29.0) (float-vector -7.07107 -7.07104 29.0) (float-vector -10.0 3.051758e-05 29.0) (float-vector -10.0 49.0 29.0)))
         (instance face :init :vertices (list (float-vector 10.0 49.0 -29.0) (float-vector 10.0 49.0 29.0) (float-vector -10.0 49.0 29.0) (float-vector -10.0 49.0 -29.0)))
         (instance face :init :vertices (list (float-vector -10.0 49.0 -29.0) (float-vector -10.0 3.051758e-05 -29.0) (float-vector -7.07107 -7.07104 -29.0) (float-vector 0.0 -9.99997 -29.0) (float-vector 7.07107 -7.07104 -29.0) (float-vector 10.0 0.0 -29.0) (float-vector 10.0 49.0 -29.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 90.0 -27.5) (float-vector -10.0 50.0 -27.5) (float-vector -10.0 50.0 27.5) (float-vector -10.0 90.0 27.5) (float-vector -10.0 90.0 26.5) (float-vector -10.0 51.0 26.5) (float-vector -10.0 51.0 -26.5) (float-vector -10.0 90.0 -26.5)))
         (instance face :init :vertices (list (float-vector 9.99997 50.0 -27.5) (float-vector 9.99997 50.0 27.5) (float-vector -10.0 50.0 27.5) (float-vector -10.0 50.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 90.0 -27.5) (float-vector 10.0 90.0 -26.5) (float-vector 9.99997 51.0 -26.5) (float-vector 9.99997 51.0 26.5) (float-vector 10.0 90.0 26.5) (float-vector 10.0 90.0 27.5) (float-vector 9.99997 50.0 27.5) (float-vector 9.99997 50.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 97.0711 27.5) (float-vector 10.0 90.0 27.5) (float-vector 10.0 90.0 26.5) (float-vector 7.07107 97.0711 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 97.071 -27.5) (float-vector 7.07107 97.071 -26.5) (float-vector 10.0 90.0 -26.5) (float-vector 10.0 90.0 -27.5)))
         (instance face :init :vertices (list (float-vector 6.278337e-06 100.0 27.5) (float-vector 7.07107 97.0711 27.5) (float-vector 7.07107 97.0711 26.5) (float-vector 6.278337e-06 100.0 26.5)))
         (instance face :init :vertices (list (float-vector 6.278337e-06 100.0 -27.5) (float-vector 6.278337e-06 100.0 -26.5) (float-vector 7.07107 97.071 -26.5) (float-vector 7.07107 97.071 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 97.0711 27.5) (float-vector 6.278337e-06 100.0 27.5) (float-vector 6.278337e-06 100.0 26.5) (float-vector -7.07106 97.0711 26.5)))
         (instance face :init :vertices (list (float-vector -7.07106 97.0711 -27.5) (float-vector -7.07106 97.0711 -26.5) (float-vector 6.278337e-06 100.0 -26.5) (float-vector 6.278337e-06 100.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 90.0 27.5) (float-vector -10.0 50.0 27.5) (float-vector 9.99997 50.0 27.5) (float-vector 10.0 90.0 27.5) (float-vector 7.07107 97.0711 27.5) (float-vector 6.278337e-06 100.0 27.5) (float-vector -7.07106 97.0711 27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 97.0711 -27.5) (float-vector 6.278337e-06 100.0 -27.5) (float-vector 7.07107 97.071 -27.5) (float-vector 10.0 90.0 -27.5) (float-vector 9.99997 50.0 -27.5) (float-vector -10.0 50.0 -27.5) (float-vector -10.0 90.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 97.0711 27.5) (float-vector -7.07106 97.0711 26.5) (float-vector -10.0 90.0 26.5) (float-vector -10.0 90.0 27.5)))
         (instance face :init :vertices (list (float-vector -10.0 90.0 -27.5) (float-vector -10.0 90.0 -26.5) (float-vector -7.07106 97.0711 -26.5) (float-vector -7.07106 97.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 51.0 26.5) (float-vector -10.0 90.0 26.5) (float-vector -7.07106 97.0711 26.5) (float-vector 6.278337e-06 100.0 26.5) (float-vector 7.07107 97.0711 26.5) (float-vector 10.0 90.0 26.5) (float-vector 9.99997 51.0 26.5)))
         (instance face :init :vertices (list (float-vector -10.0 51.0 -26.5) (float-vector -10.0 51.0 26.5) (float-vector 9.99997 51.0 26.5) (float-vector 9.99997 51.0 -26.5)))
         (instance face :init :vertices (list (float-vector 9.99997 51.0 -26.5) (float-vector 10.0 90.0 -26.5) (float-vector 7.07107 97.071 -26.5) (float-vector 6.278337e-06 100.0 -26.5) (float-vector -7.07106 97.0711 -26.5) (float-vector -10.0 90.0 -26.5) (float-vector -10.0 51.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-p :weight 17.2414 :centroid (float-vector -5.946507e-06 46.7303 -3.814697e-05) :inertia-tensor #2f((21505.3 0.002003 -0.000177) (0.002003 11193.6 7.700222e-05) (-0.000177 7.700222e-05 11461.2))))

     ;; definition of :rarm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09326 -5.25002 21.15) (float-vector 5.24999 -9.09328 21.15) (float-vector -1.015255e-05 -10.5 21.15) (float-vector -5.25001 -9.09328 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 0.0 21.15) (float-vector -9.09326 5.25 21.15) (float-vector -5.25 9.09326 21.15) (float-vector 3.353634e-06 10.5 21.15) (float-vector 5.25 9.09326 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 -1.525879e-05 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.24999 -9.09328 -21.15) (float-vector 9.09326 -5.25002 -21.15) (float-vector 10.5 -1.525879e-05 -21.15) (float-vector 9.09327 5.24998 -21.15) (float-vector 5.25 9.09326 -21.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector -5.25 9.09326 -21.15) (float-vector -9.09326 5.25 -21.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -1.015258e-05 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 -1.525879e-05 23.15) (float-vector 10.5 -1.525879e-05 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 -1.525879e-05 -21.15) (float-vector 10.5 -1.525879e-05 -23.15) (float-vector 9.09327 5.24998 -23.15) (float-vector 9.09327 5.24998 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 21.15) (float-vector 5.25 9.09325 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.24998 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 5.25 9.09326 -21.15) (float-vector 9.09327 5.24998 -21.15)))
         (instance face :init :vertices (list (float-vector 3.353634e-06 10.5 21.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector 5.25 9.09325 23.15) (float-vector 5.25 9.09326 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector 5.25 9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09326 21.15) (float-vector -5.25 9.09326 23.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector 3.353634e-06 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 3.353663e-06 10.5 -23.15) (float-vector -5.25 9.09326 -23.15) (float-vector -5.25 9.09326 -21.15) (float-vector 3.353663e-06 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09326 23.15) (float-vector -5.25 9.09326 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09326 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -9.09326 5.25 -21.15) (float-vector -5.25 9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 21.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09326 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09326 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 0.0 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09328 21.15) (float-vector -5.25001 -9.09328 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.015255e-05 -10.5 21.15) (float-vector -1.015258e-05 -10.5 23.15) (float-vector -5.25001 -9.09328 23.15) (float-vector -5.25001 -9.09328 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 -23.15) (float-vector -1.015258e-05 -10.5 -23.15) (float-vector -1.015258e-05 -10.5 -21.15) (float-vector -5.25001 -9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09328 21.15) (float-vector 5.24999 -9.09329 23.15) (float-vector -1.015258e-05 -10.5 23.15) (float-vector -1.015255e-05 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.015258e-05 -10.5 -23.15) (float-vector 5.24999 -9.09328 -23.15) (float-vector 5.24999 -9.09328 -21.15) (float-vector -1.015258e-05 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25002 21.15) (float-vector 9.09326 -5.25002 23.15) (float-vector 5.24999 -9.09329 23.15) (float-vector 5.24999 -9.09328 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09328 -23.15) (float-vector 9.09326 -5.25002 -23.15) (float-vector 9.09326 -5.25002 -21.15) (float-vector 5.24999 -9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25002 23.15) (float-vector 10.5 -1.525879e-05 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09325 23.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector -5.25 9.09326 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25001 -9.09328 23.15) (float-vector -1.015258e-05 -10.5 23.15) (float-vector 5.24999 -9.09329 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 -1.525879e-05 23.15) (float-vector 9.09326 -5.25002 23.15) (float-vector 9.09326 -5.25002 21.15) (float-vector 10.5 -1.525879e-05 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25002 -23.15) (float-vector 10.5 -1.525879e-05 -23.15) (float-vector 10.5 -1.525879e-05 -21.15) (float-vector 9.09326 -5.25002 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 -1.525879e-05 -23.15) (float-vector 9.09326 -5.25002 -23.15) (float-vector 5.24999 -9.09328 -23.15) (float-vector -1.015258e-05 -10.5 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 5.25 -23.15) (float-vector -5.25 9.09326 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 9.09327 5.24998 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 6.5 56.0 14.5) (float-vector 6.5 56.0 -14.5) (float-vector 6.5 84.0 -14.5) (float-vector 6.5 84.0 14.5)))
         (instance face :init :vertices (list (float-vector 6.5 84.0 -14.5) (float-vector -6.5 84.0 -14.5) (float-vector -6.5 84.0 14.5) (float-vector 6.5 84.0 14.5)))
         (instance face :init :vertices (list (float-vector -6.5 84.0 -14.5) (float-vector -6.5 56.0 -14.5) (float-vector -6.5 56.0 14.5) (float-vector -6.5 84.0 14.5)))
         (instance face :init :vertices (list (float-vector -6.5 56.0 14.5) (float-vector 6.5 56.0 14.5) (float-vector 6.5 84.0 14.5) (float-vector -6.5 84.0 14.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 4.76314 60.25 14.5) (float-vector 2.74999 58.2368 14.5) (float-vector -5.688693e-06 57.5 14.5) (float-vector -2.75 58.2369 14.5) (float-vector -4.76314 60.25 14.5) (float-vector -5.5 63.0 14.5) (float-vector -4.76314 65.75 14.5) (float-vector -2.75 67.7631 14.5) (float-vector 1.844368e-06 68.5 14.5) (float-vector 2.75 67.7631 14.5) (float-vector 4.76314 65.75 14.5) (float-vector 5.5 63.0 14.5)))
))
         (instance face :init :vertices (list (float-vector -6.5 56.0 -14.5) (float-vector 6.5 56.0 -14.5) (float-vector 6.5 56.0 14.5) (float-vector -6.5 56.0 14.5)))
         (instance face :init :vertices (list (float-vector 6.5 56.0 -14.5) (float-vector -6.5 56.0 -14.5) (float-vector -6.5 84.0 -14.5) (float-vector 6.5 84.0 -14.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 2.74999 58.2368 -14.5) (float-vector 4.76314 60.25 -14.5) (float-vector 5.5 63.0 -14.5) (float-vector 4.76314 65.75 -14.5) (float-vector 2.75 67.7631 -14.5) (float-vector 1.844339e-06 68.5 -14.5) (float-vector -2.75 67.7631 -14.5) (float-vector -4.76314 65.75 -14.5) (float-vector -5.5 63.0 -14.5) (float-vector -4.76314 60.25 -14.5) (float-vector -2.75 58.2369 -14.5) (float-vector -5.688722e-06 57.5 -14.5)))
))
         (instance face :init :vertices (list (float-vector 5.5 63.0 16.5) (float-vector 5.5 63.0 14.5) (float-vector 4.76314 65.75 14.5) (float-vector 4.76314 65.75 16.5)))
         (instance face :init :vertices (list (float-vector 5.5 63.0 -14.5) (float-vector 5.5 63.0 -16.5) (float-vector 4.76314 65.75 -16.5) (float-vector 4.76314 65.75 -14.5)))
         (instance face :init :vertices (list (float-vector 2.75 67.7631 14.5) (float-vector 2.75 67.7631 16.5) (float-vector 4.76314 65.75 16.5) (float-vector 4.76314 65.75 14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 65.75 -16.5) (float-vector 2.75 67.7631 -16.5) (float-vector 2.75 67.7631 -14.5) (float-vector 4.76314 65.75 -14.5)))
         (instance face :init :vertices (list (float-vector 1.844368e-06 68.5 14.5) (float-vector 1.844368e-06 68.5 16.5) (float-vector 2.75 67.7631 16.5) (float-vector 2.75 67.7631 14.5)))
         (instance face :init :vertices (list (float-vector 2.75 67.7631 -16.5) (float-vector 1.844339e-06 68.5 -16.5) (float-vector 1.844339e-06 68.5 -14.5) (float-vector 2.75 67.7631 -14.5)))
         (instance face :init :vertices (list (float-vector -2.75 67.7631 14.5) (float-vector -2.75 67.7631 16.5) (float-vector 1.844368e-06 68.5 16.5) (float-vector 1.844368e-06 68.5 14.5)))
         (instance face :init :vertices (list (float-vector 1.844339e-06 68.5 -16.5) (float-vector -2.75 67.7631 -16.5) (float-vector -2.75 67.7631 -14.5) (float-vector 1.844339e-06 68.5 -14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 65.75 14.5) (float-vector -4.76314 65.75 16.5) (float-vector -2.75 67.7631 16.5) (float-vector -2.75 67.7631 14.5)))
         (instance face :init :vertices (list (float-vector -2.75 67.7631 -16.5) (float-vector -4.76314 65.75 -16.5) (float-vector -4.76314 65.75 -14.5) (float-vector -2.75 67.7631 -14.5)))
         (instance face :init :vertices (list (float-vector -5.5 63.0 14.5) (float-vector -5.5 63.0 16.5) (float-vector -4.76314 65.75 16.5) (float-vector -4.76314 65.75 14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 65.75 -16.5) (float-vector -5.5 63.0 -16.5) (float-vector -5.5 63.0 -14.5) (float-vector -4.76314 65.75 -14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 60.25 14.5) (float-vector -4.76314 60.25 16.5) (float-vector -5.5 63.0 16.5) (float-vector -5.5 63.0 14.5)))
         (instance face :init :vertices (list (float-vector -5.5 63.0 -16.5) (float-vector -4.76314 60.25 -16.5) (float-vector -4.76314 60.25 -14.5) (float-vector -5.5 63.0 -14.5)))
         (instance face :init :vertices (list (float-vector -2.75 58.2369 14.5) (float-vector -2.75 58.2369 16.5) (float-vector -4.76314 60.25 16.5) (float-vector -4.76314 60.25 14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 60.25 -16.5) (float-vector -2.75 58.2369 -16.5) (float-vector -2.75 58.2369 -14.5) (float-vector -4.76314 60.25 -14.5)))
         (instance face :init :vertices (list (float-vector -5.688693e-06 57.5 14.5) (float-vector -5.688693e-06 57.5 16.5) (float-vector -2.75 58.2369 16.5) (float-vector -2.75 58.2369 14.5)))
         (instance face :init :vertices (list (float-vector -2.75 58.2369 -16.5) (float-vector -5.688722e-06 57.5 -16.5) (float-vector -5.688722e-06 57.5 -14.5) (float-vector -2.75 58.2369 -14.5)))
         (instance face :init :vertices (list (float-vector 2.74999 58.2368 14.5) (float-vector 2.74999 58.2368 16.5) (float-vector -5.688693e-06 57.5 16.5) (float-vector -5.688693e-06 57.5 14.5)))
         (instance face :init :vertices (list (float-vector -5.688722e-06 57.5 -16.5) (float-vector 2.74999 58.2368 -16.5) (float-vector 2.74999 58.2368 -14.5) (float-vector -5.688722e-06 57.5 -14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 60.25 14.5) (float-vector 4.76314 60.25 16.5) (float-vector 2.74999 58.2368 16.5) (float-vector 2.74999 58.2368 14.5)))
         (instance face :init :vertices (list (float-vector 2.74999 58.2368 -16.5) (float-vector 4.76314 60.25 -16.5) (float-vector 4.76314 60.25 -14.5) (float-vector 2.74999 58.2368 -14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 60.25 16.5) (float-vector 5.5 63.0 16.5) (float-vector 4.76314 65.75 16.5) (float-vector 2.75 67.7631 16.5) (float-vector 1.844368e-06 68.5 16.5) (float-vector -2.75 67.7631 16.5) (float-vector -4.76314 65.75 16.5) (float-vector -5.5 63.0 16.5) (float-vector -4.76314 60.25 16.5) (float-vector -2.75 58.2369 16.5) (float-vector -5.688693e-06 57.5 16.5) (float-vector 2.74999 58.2368 16.5)))
         (instance face :init :vertices (list (float-vector 5.5 63.0 16.5) (float-vector 4.76314 60.25 16.5) (float-vector 4.76314 60.25 14.5) (float-vector 5.5 63.0 14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 60.25 -16.5) (float-vector 5.5 63.0 -16.5) (float-vector 5.5 63.0 -14.5) (float-vector 4.76314 60.25 -14.5)))
         (instance face :init :vertices (list (float-vector 5.5 63.0 -16.5) (float-vector 4.76314 60.25 -16.5) (float-vector 2.74999 58.2368 -16.5) (float-vector -5.688722e-06 57.5 -16.5) (float-vector -2.75 58.2369 -16.5) (float-vector -4.76314 60.25 -16.5) (float-vector -5.5 63.0 -16.5) (float-vector -4.76314 65.75 -16.5) (float-vector -2.75 67.7631 -16.5) (float-vector 1.844339e-06 68.5 -16.5) (float-vector 2.75 67.7631 -16.5) (float-vector 4.76314 65.75 -16.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-elbow-p :weight 87 :centroid (float-vector -6.660121e-07 25.257 -1.525879e-05) :inertia-tensor #2f((81977.6 -6.552011e-05 -8.265196e-10) (-6.552011e-05 14409.1 -9.313226e-09) (-8.265195e-10 -9.313226e-09 73919.0))))

     ;; definition of :rarm-gripper
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -1.525879e-05 -17.5) (float-vector 10.0 40.0 -17.5) (float-vector 10.0 40.0 17.5) (float-vector 10.0 -1.525879e-05 17.5) (float-vector 10.0 -1.525879e-05 16.5) (float-vector 10.0 39.0 16.5) (float-vector 10.0 39.0 -16.5) (float-vector 10.0 -1.525879e-05 -16.5)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -17.5) (float-vector -10.0 40.0 17.5) (float-vector 10.0 40.0 17.5) (float-vector 10.0 40.0 -17.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -17.5) (float-vector -10.0 0.0 -16.5) (float-vector -10.0 39.0 -16.5) (float-vector -10.0 39.0 16.5) (float-vector -10.0 0.0 16.5) (float-vector -10.0 0.0 17.5) (float-vector -10.0 40.0 17.5) (float-vector -10.0 40.0 -17.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07108 17.5) (float-vector -10.0 0.0 17.5) (float-vector -10.0 0.0 16.5) (float-vector -7.07107 -7.07108 16.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07108 -17.5) (float-vector -7.07107 -7.07108 -16.5) (float-vector -10.0 0.0 -16.5) (float-vector -10.0 0.0 -17.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 17.5) (float-vector -7.07107 -7.07108 17.5) (float-vector -7.07107 -7.07108 16.5) (float-vector 0.0 -10.0 16.5)))
         (instance face :init :vertices (list (float-vector -2.910383e-11 -10.0 -17.5) (float-vector -2.910383e-11 -10.0 -16.5) (float-vector -7.07107 -7.07108 -16.5) (float-vector -7.07107 -7.07108 -17.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 17.5) (float-vector 0.0 -10.0 17.5) (float-vector 0.0 -10.0 16.5) (float-vector 7.07107 -7.07108 16.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 -17.5) (float-vector 7.07107 -7.07108 -16.5) (float-vector -2.910383e-11 -10.0 -16.5) (float-vector -2.910383e-11 -10.0 -17.5)))
         (instance face :init :vertices (list (float-vector 10.0 -1.525879e-05 17.5) (float-vector 10.0 40.0 17.5) (float-vector -10.0 40.0 17.5) (float-vector -10.0 0.0 17.5) (float-vector -7.07107 -7.07108 17.5) (float-vector 0.0 -10.0 17.5) (float-vector 7.07107 -7.07108 17.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 -17.5) (float-vector -2.910383e-11 -10.0 -17.5) (float-vector -7.07107 -7.07108 -17.5) (float-vector -10.0 0.0 -17.5) (float-vector -10.0 40.0 -17.5) (float-vector 10.0 40.0 -17.5) (float-vector 10.0 -1.525879e-05 -17.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 17.5) (float-vector 7.07107 -7.07108 16.5) (float-vector 10.0 -1.525879e-05 16.5) (float-vector 10.0 -1.525879e-05 17.5)))
         (instance face :init :vertices (list (float-vector 10.0 -1.525879e-05 -17.5) (float-vector 10.0 -1.525879e-05 -16.5) (float-vector 7.07107 -7.07108 -16.5) (float-vector 7.07107 -7.07108 -17.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 16.5) (float-vector 10.0 -1.525879e-05 16.5) (float-vector 7.07107 -7.07108 16.5) (float-vector 0.0 -10.0 16.5) (float-vector -7.07107 -7.07108 16.5) (float-vector -10.0 0.0 16.5) (float-vector -10.0 39.0 16.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 -16.5) (float-vector 10.0 39.0 16.5) (float-vector -10.0 39.0 16.5) (float-vector -10.0 39.0 -16.5)))
         (instance face :init :vertices (list (float-vector -10.0 39.0 -16.5) (float-vector -10.0 0.0 -16.5) (float-vector -7.07107 -7.07108 -16.5) (float-vector -2.910383e-11 -10.0 -16.5) (float-vector 7.07107 -7.07108 -16.5) (float-vector 10.0 -1.525879e-05 -16.5) (float-vector 10.0 39.0 -16.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-gripper :weight 6.86568 :centroid (float-vector -9.426585e-07 22.3863 -0.001152) :inertia-tensor #2f((3493.11 -7.268133e-06 -2.059647e-08) (-7.268132e-06 1860.18 -5.214264e-05) (-2.059647e-08 -5.214264e-05 2090.64))))

     ;; definition of :lleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 5.24999 -9.09328 21.15) (float-vector -1.015257e-05 -10.5 21.15) (float-vector -5.25001 -9.09326 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 0.0 21.15) (float-vector -9.09326 5.25 21.15) (float-vector -5.25 9.09328 21.15) (float-vector 3.353663e-06 10.5 21.15) (float-vector 5.25 9.09326 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.24999 -9.09328 -21.15) (float-vector 9.09326 -5.25002 -21.15) (float-vector 10.5 -1.525879e-05 -21.15) (float-vector 9.09327 5.24998 -21.15) (float-vector 5.25 9.09326 -21.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector -5.25 9.09326 -21.15) (float-vector -9.09326 5.25 -21.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25001 -9.09328 -21.15) (float-vector -1.015257e-05 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 -1.525879e-05 -21.15) (float-vector 10.5 -1.525879e-05 -23.15) (float-vector 9.09327 5.24998 -23.15) (float-vector 9.09327 5.24998 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 21.15) (float-vector 5.25 9.09326 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.24998 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 5.25 9.09326 -21.15) (float-vector 9.09327 5.24998 -21.15)))
         (instance face :init :vertices (list (float-vector 3.353663e-06 10.5 21.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector 5.25 9.09326 23.15) (float-vector 5.25 9.09326 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector 5.25 9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09328 21.15) (float-vector -5.25 9.09328 23.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector 3.353663e-06 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 3.353663e-06 10.5 -23.15) (float-vector -5.25 9.09326 -23.15) (float-vector -5.25 9.09326 -21.15) (float-vector 3.353663e-06 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09328 23.15) (float-vector -5.25 9.09328 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09326 -23.15) (float-vector -9.09326 5.25 -23.15) (float-vector -9.09326 5.25 -21.15) (float-vector -5.25 9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 21.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09326 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09326 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 0.0 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 21.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25001 -9.09328 -23.15) (float-vector -5.25001 -9.09328 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.015257e-05 -10.5 21.15) (float-vector -1.015258e-05 -10.5 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -5.25001 -9.09326 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09328 -23.15) (float-vector -1.015257e-05 -10.5 -23.15) (float-vector -1.015257e-05 -10.5 -21.15) (float-vector -5.25001 -9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09328 21.15) (float-vector 5.24999 -9.09328 23.15) (float-vector -1.015258e-05 -10.5 23.15) (float-vector -1.015257e-05 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.015257e-05 -10.5 -23.15) (float-vector 5.24999 -9.09328 -23.15) (float-vector 5.24999 -9.09328 -21.15) (float-vector -1.015257e-05 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 9.09326 -5.25 23.15) (float-vector 5.24999 -9.09328 23.15) (float-vector 5.24999 -9.09328 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09328 -23.15) (float-vector 9.09326 -5.25002 -23.15) (float-vector 9.09326 -5.25002 -21.15) (float-vector 5.24999 -9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09326 23.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector -5.25 9.09328 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -1.015258e-05 -10.5 23.15) (float-vector 5.24999 -9.09328 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09326 -5.25 23.15) (float-vector 9.09326 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25002 -23.15) (float-vector 10.5 -1.525879e-05 -23.15) (float-vector 10.5 -1.525879e-05 -21.15) (float-vector 9.09326 -5.25002 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 -1.525879e-05 -23.15) (float-vector 9.09326 -5.25002 -23.15) (float-vector 5.24999 -9.09328 -23.15) (float-vector -1.015257e-05 -10.5 -23.15) (float-vector -5.25001 -9.09328 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -9.09326 5.25 -23.15) (float-vector -5.25 9.09326 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 9.09327 5.24998 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -11.5 86.0 21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 41.0 -21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 41.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector 11.5 41.0 21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 41.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 86.0 21.15) (float-vector 11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 86.0 21.15) (float-vector -11.5 86.0 21.15) (float-vector -11.5 41.0 21.15) (float-vector 11.5 41.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -9.09326 79.25 21.15) (float-vector -5.24998 83.0933 21.15) (float-vector 1.674482e-05 84.5 21.15) (float-vector 5.25001 83.0932 21.15) (float-vector 9.09327 79.25 21.15) (float-vector 10.5 74.0 21.15) (float-vector 9.09326 68.75 21.15) (float-vector 5.24999 64.9067 21.15) (float-vector -9.945914e-06 63.5 21.15) (float-vector -5.25001 64.9067 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -10.5 74.0 21.15)))
))
         (instance face :init :vertices (list (float-vector 11.5 86.0 -21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 86.0 21.15) (float-vector 11.5 86.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 86.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector -11.5 41.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -5.24998 83.0933 -21.15) (float-vector -9.09326 79.25 -21.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09327 68.75 -21.15) (float-vector -5.25001 64.9067 -21.15) (float-vector -9.945914e-06 63.5 -21.15) (float-vector 5.24999 64.9067 -21.15) (float-vector 9.09326 68.75 -21.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09327 79.25 -21.15) (float-vector 5.25001 83.0932 -21.15) (float-vector 1.674482e-05 84.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -10.5 74.0 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -9.09327 68.75 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -21.15) (float-vector -10.5 74.0 -23.15) (float-vector -9.09327 68.75 -23.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 64.9067 21.15) (float-vector -5.25001 64.9067 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -9.09327 68.75 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 68.75 -23.15) (float-vector -5.25001 64.9067 -23.15) (float-vector -5.25001 64.9067 -21.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -9.945914e-06 63.5 21.15) (float-vector -9.945914e-06 63.5 23.15) (float-vector -5.25001 64.9067 23.15) (float-vector -5.25001 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 64.9067 -23.15) (float-vector -9.945914e-06 63.5 -23.15) (float-vector -9.945914e-06 63.5 -21.15) (float-vector -5.25001 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 64.9067 21.15) (float-vector 5.24999 64.9067 23.15) (float-vector -9.945914e-06 63.5 23.15) (float-vector -9.945914e-06 63.5 21.15)))
         (instance face :init :vertices (list (float-vector -9.945914e-06 63.5 -23.15) (float-vector 5.24999 64.9067 -23.15) (float-vector 5.24999 64.9067 -21.15) (float-vector -9.945914e-06 63.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 68.75 21.15) (float-vector 9.09326 68.75 23.15) (float-vector 5.24999 64.9067 23.15) (float-vector 5.24999 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 64.9067 -23.15) (float-vector 9.09326 68.75 -23.15) (float-vector 9.09326 68.75 -21.15) (float-vector 5.24999 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 21.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09326 68.75 23.15) (float-vector 9.09326 68.75 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 68.75 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09326 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 21.15) (float-vector 9.09327 79.25 23.15) (float-vector 10.5 74.0 23.15) (float-vector 10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 9.09327 79.25 -21.15) (float-vector 10.5 74.0 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25001 83.0932 21.15) (float-vector 5.25001 83.0933 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 9.09327 79.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 -23.15) (float-vector 5.25001 83.0932 -23.15) (float-vector 5.25001 83.0932 -21.15) (float-vector 9.09327 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector 1.674482e-05 84.5 21.15) (float-vector 1.674480e-05 84.5 23.15) (float-vector 5.25001 83.0933 23.15) (float-vector 5.25001 83.0932 21.15)))
         (instance face :init :vertices (list (float-vector 5.25001 83.0932 -23.15) (float-vector 1.674482e-05 84.5 -23.15) (float-vector 1.674482e-05 84.5 -21.15) (float-vector 5.25001 83.0932 -21.15)))
         (instance face :init :vertices (list (float-vector -5.24998 83.0933 21.15) (float-vector -5.24998 83.0933 23.15) (float-vector 1.674480e-05 84.5 23.15) (float-vector 1.674482e-05 84.5 21.15)))
         (instance face :init :vertices (list (float-vector 1.674482e-05 84.5 -23.15) (float-vector -5.24998 83.0933 -23.15) (float-vector -5.24998 83.0933 -21.15) (float-vector 1.674482e-05 84.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 79.25 21.15) (float-vector -9.09326 79.25 23.15) (float-vector -5.24998 83.0933 23.15) (float-vector -5.24998 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector -5.24998 83.0933 -23.15) (float-vector -9.09326 79.25 -23.15) (float-vector -9.09326 79.25 -21.15) (float-vector -5.24998 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 79.25 23.15) (float-vector -10.5 74.0 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -5.25001 64.9067 23.15) (float-vector -9.945914e-06 63.5 23.15) (float-vector 5.24999 64.9067 23.15) (float-vector 9.09326 68.75 23.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 5.25001 83.0933 23.15) (float-vector 1.674480e-05 84.5 23.15) (float-vector -5.24998 83.0933 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -9.09326 79.25 23.15) (float-vector -9.09326 79.25 21.15) (float-vector -10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 79.25 -23.15) (float-vector -10.5 74.0 -23.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09326 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -23.15) (float-vector -9.09326 79.25 -23.15) (float-vector -5.24998 83.0933 -23.15) (float-vector 1.674482e-05 84.5 -23.15) (float-vector 5.25001 83.0932 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 9.09326 68.75 -23.15) (float-vector 5.24999 64.9067 -23.15) (float-vector -9.945914e-06 63.5 -23.15) (float-vector -5.25001 64.9067 -23.15) (float-vector -9.09327 68.75 -23.15)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-p :weight 130 :centroid (float-vector -3.774983e-06 37.0 5.861477e-07) :inertia-tensor #2f((1.347484e+05 0.006697 7.388297e-11) (0.006697 25114.8 -4.634785e-09) (7.388296e-11 -4.634785e-09 1.210953e+05))))

     ;; definition of :lleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -7.629395e-06 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 -7.629395e-06 27.5) (float-vector 10.0 -7.629395e-06 26.5) (float-vector 10.0 29.0 26.5) (float-vector 10.0 29.0 -26.5) (float-vector 10.0 -7.629395e-06 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -27.5) (float-vector -10.0 30.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 29.0 -26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07108 -27.5) (float-vector -7.07107 -7.07108 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -27.5) (float-vector 0.0 -10.0 -26.5) (float-vector -7.07107 -7.07108 -26.5) (float-vector -7.07107 -7.07108 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 0.0 -10.0 26.5) (float-vector 7.07107 -7.07108 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 0.0 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 -7.629395e-06 27.5) (float-vector 10.0 30.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07107 -7.07108 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 0.0 -10.0 -27.5) (float-vector -7.07107 -7.07108 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 -7.629395e-06 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 27.5) (float-vector 7.07107 -7.07108 26.5) (float-vector 10.0 -7.629395e-06 26.5) (float-vector 10.0 -7.629395e-06 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 -7.629395e-06 -27.5) (float-vector 10.0 -7.629395e-06 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 26.5) (float-vector 10.0 -7.629395e-06 26.5) (float-vector 7.07107 -7.07108 26.5) (float-vector 0.0 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 29.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 -26.5) (float-vector 10.0 29.0 26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 29.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 29.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07108 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 -7.629395e-06 -26.5) (float-vector 10.0 29.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 80.0 -30.0) (float-vector -10.0 30.0 -30.0) (float-vector -10.0 30.0 30.0) (float-vector -10.0 80.0 30.0) (float-vector -10.0 80.0 29.0) (float-vector -10.0 31.0 29.0) (float-vector -10.0 31.0 -29.0) (float-vector -10.0 80.0 -29.0)))
         (instance face :init :vertices (list (float-vector 9.99997 30.0 -30.0) (float-vector 9.99997 30.0 30.0) (float-vector -10.0 30.0 30.0) (float-vector -10.0 30.0 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 -30.0) (float-vector 10.0 80.0 -29.0) (float-vector 9.99997 31.0 -29.0) (float-vector 9.99997 31.0 29.0) (float-vector 10.0 80.0 29.0) (float-vector 10.0 80.0 30.0) (float-vector 9.99997 30.0 30.0) (float-vector 9.99997 30.0 -30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 87.071 30.0) (float-vector 10.0 80.0 30.0) (float-vector 10.0 80.0 29.0) (float-vector 7.07107 87.071 29.0)))
         (instance face :init :vertices (list (float-vector 7.07107 87.071 -30.0) (float-vector 7.07107 87.071 -29.0) (float-vector 10.0 80.0 -29.0) (float-vector 10.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector 6.278337e-06 90.0 30.0) (float-vector 7.07107 87.071 30.0) (float-vector 7.07107 87.071 29.0) (float-vector 6.278337e-06 90.0 29.0)))
         (instance face :init :vertices (list (float-vector 6.278337e-06 90.0 -30.0) (float-vector 6.278337e-06 90.0 -29.0) (float-vector 7.07107 87.071 -29.0) (float-vector 7.07107 87.071 -30.0)))
         (instance face :init :vertices (list (float-vector -7.07106 87.071 30.0) (float-vector 6.278337e-06 90.0 30.0) (float-vector 6.278337e-06 90.0 29.0) (float-vector -7.07106 87.071 29.0)))
         (instance face :init :vertices (list (float-vector -7.07106 87.0711 -30.0) (float-vector -7.07106 87.0711 -29.0) (float-vector 6.278337e-06 90.0 -29.0) (float-vector 6.278337e-06 90.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 30.0) (float-vector -10.0 30.0 30.0) (float-vector 9.99997 30.0 30.0) (float-vector 10.0 80.0 30.0) (float-vector 7.07107 87.071 30.0) (float-vector 6.278337e-06 90.0 30.0) (float-vector -7.07106 87.071 30.0)))
         (instance face :init :vertices (list (float-vector -7.07106 87.0711 -30.0) (float-vector 6.278337e-06 90.0 -30.0) (float-vector 7.07107 87.071 -30.0) (float-vector 10.0 80.0 -30.0) (float-vector 9.99997 30.0 -30.0) (float-vector -10.0 30.0 -30.0) (float-vector -10.0 80.0 -30.0)))
         (instance face :init :vertices (list (float-vector -7.07106 87.071 30.0) (float-vector -7.07106 87.071 29.0) (float-vector -10.0 80.0 29.0) (float-vector -10.0 80.0 30.0)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 -30.0) (float-vector -10.0 80.0 -29.0) (float-vector -7.07106 87.0711 -29.0) (float-vector -7.07106 87.0711 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 29.0) (float-vector -10.0 80.0 29.0) (float-vector -7.07106 87.071 29.0) (float-vector 6.278337e-06 90.0 29.0) (float-vector 7.07107 87.071 29.0) (float-vector 10.0 80.0 29.0) (float-vector 9.99997 31.0 29.0)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 -29.0) (float-vector -10.0 31.0 29.0) (float-vector 9.99997 31.0 29.0) (float-vector 9.99997 31.0 -29.0)))
         (instance face :init :vertices (list (float-vector 9.99997 31.0 -29.0) (float-vector 10.0 80.0 -29.0) (float-vector 7.07107 87.071 -29.0) (float-vector 6.278337e-06 90.0 -29.0) (float-vector -7.07106 87.0711 -29.0) (float-vector -10.0 80.0 -29.0) (float-vector -10.0 31.0 -29.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-knee-p :weight 16.1614 :centroid (float-vector -1.032441e-05 36.2992 -3.069626e-05) :inertia-tensor #2f((18252.6 0.000753 -1.880731e-10) (0.000753 10370.2 0.001038) (-1.880731e-10 0.001038 8959.85))))

     ;; definition of :lleg-ankle-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.4 -14.0 24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 45.0 -24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 45.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector -14.4 45.0 24.9) (float-vector 14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 45.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 -14.0 24.9) (float-vector -14.4 45.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 24.9) (float-vector 14.4 -14.0 24.9) (float-vector 14.4 45.0 24.9) (float-vector -14.4 45.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 11.6047 -6.70001 24.9) (float-vector 6.69999 -11.6047 24.9) (float-vector -1.172899e-05 -13.4 24.9) (float-vector -6.70001 -11.6047 24.9) (float-vector -11.6047 -6.69999 24.9) (float-vector -13.4 7.629395e-06 24.9) (float-vector -11.6047 6.7 24.9) (float-vector -6.69999 11.6047 24.9) (float-vector 4.040310e-06 13.4 24.9) (float-vector 6.7 11.6047 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 13.4 0.0 24.9)))
))
         (instance face :init :vertices (list (float-vector -14.4 -14.0 -24.9) (float-vector 14.4 -14.0 -24.9) (float-vector 14.4 -14.0 24.9) (float-vector -14.4 -14.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 -14.0 -24.9) (float-vector -14.4 -14.0 -24.9) (float-vector -14.4 45.0 -24.9) (float-vector 14.4 45.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 6.69999 -11.6047 -24.9) (float-vector 11.6047 -6.70001 -24.9) (float-vector 13.4 0.0 -24.9) (float-vector 11.6047 6.7 -24.9) (float-vector 6.7 11.6047 -24.9) (float-vector 4.040310e-06 13.4 -24.9) (float-vector -6.69999 11.6047 -24.9) (float-vector -11.6047 6.7 -24.9) (float-vector -13.4 7.629395e-06 -24.9) (float-vector -11.6047 -6.69999 -24.9) (float-vector -6.70001 -11.6047 -24.9) (float-vector -1.172899e-05 -13.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector 13.4 0.0 26.9) (float-vector 13.4 0.0 24.9) (float-vector 11.6047 6.7 24.9) (float-vector 11.6047 6.7 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 -24.9) (float-vector 13.4 0.0 -26.9) (float-vector 11.6047 6.7 -26.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 24.9) (float-vector 6.7 11.6047 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 6.7 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 6.7 11.6047 -24.9) (float-vector 11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector 4.040310e-06 13.4 24.9) (float-vector 4.040310e-06 13.4 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 6.7 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.7 11.6047 -26.9) (float-vector 4.040281e-06 13.4 -26.9) (float-vector 4.040310e-06 13.4 -24.9) (float-vector 6.7 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -6.69999 11.6047 24.9) (float-vector -6.69999 11.6047 26.9) (float-vector 4.040310e-06 13.4 26.9) (float-vector 4.040310e-06 13.4 24.9)))
         (instance face :init :vertices (list (float-vector 4.040281e-06 13.4 -26.9) (float-vector -6.69999 11.6047 -26.9) (float-vector -6.69999 11.6047 -24.9) (float-vector 4.040310e-06 13.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 24.9) (float-vector -11.6047 6.7 26.9) (float-vector -6.69999 11.6047 26.9) (float-vector -6.69999 11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.69999 11.6047 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -11.6047 6.7 -24.9) (float-vector -6.69999 11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -13.4 7.629395e-06 24.9) (float-vector -13.4 7.629395e-06 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -11.6047 6.7 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 6.7 -26.9) (float-vector -13.4 7.629395e-06 -26.9) (float-vector -13.4 7.629395e-06 -24.9) (float-vector -11.6047 6.7 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.69999 24.9) (float-vector -11.6047 -6.69999 26.9) (float-vector -13.4 7.629395e-06 26.9) (float-vector -13.4 7.629395e-06 24.9)))
         (instance face :init :vertices (list (float-vector -13.4 7.629395e-06 -26.9) (float-vector -11.6047 -6.69999 -26.9) (float-vector -11.6047 -6.69999 -24.9) (float-vector -13.4 7.629395e-06 -24.9)))
         (instance face :init :vertices (list (float-vector -6.70001 -11.6047 24.9) (float-vector -6.70001 -11.6047 26.9) (float-vector -11.6047 -6.69999 26.9) (float-vector -11.6047 -6.69999 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 -6.69999 -26.9) (float-vector -6.70001 -11.6047 -26.9) (float-vector -6.70001 -11.6047 -24.9) (float-vector -11.6047 -6.69999 -24.9)))
         (instance face :init :vertices (list (float-vector -1.172899e-05 -13.4 24.9) (float-vector -1.172899e-05 -13.4 26.9) (float-vector -6.70001 -11.6047 26.9) (float-vector -6.70001 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector -6.70001 -11.6047 -26.9) (float-vector -1.172896e-05 -13.4 -26.9) (float-vector -1.172899e-05 -13.4 -24.9) (float-vector -6.70001 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 6.69999 -11.6047 24.9) (float-vector 6.69999 -11.6047 26.9) (float-vector -1.172899e-05 -13.4 26.9) (float-vector -1.172899e-05 -13.4 24.9)))
         (instance face :init :vertices (list (float-vector -1.172896e-05 -13.4 -26.9) (float-vector 6.69999 -11.6047 -26.9) (float-vector 6.69999 -11.6047 -24.9) (float-vector -1.172899e-05 -13.4 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.70001 24.9) (float-vector 11.6047 -6.70001 26.9) (float-vector 6.69999 -11.6047 26.9) (float-vector 6.69999 -11.6047 24.9)))
         (instance face :init :vertices (list (float-vector 6.69999 -11.6047 -26.9) (float-vector 11.6047 -6.70001 -26.9) (float-vector 11.6047 -6.70001 -24.9) (float-vector 6.69999 -11.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.70001 26.9) (float-vector 13.4 0.0 26.9) (float-vector 11.6047 6.7 26.9) (float-vector 6.7 11.6047 26.9) (float-vector 4.040310e-06 13.4 26.9) (float-vector -6.69999 11.6047 26.9) (float-vector -11.6047 6.7 26.9) (float-vector -13.4 7.629395e-06 26.9) (float-vector -11.6047 -6.69999 26.9) (float-vector -6.70001 -11.6047 26.9) (float-vector -1.172899e-05 -13.4 26.9) (float-vector 6.69999 -11.6047 26.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 26.9) (float-vector 11.6047 -6.70001 26.9) (float-vector 11.6047 -6.70001 24.9) (float-vector 13.4 0.0 24.9)))
         (instance face :init :vertices (list (float-vector 11.6047 -6.70001 -26.9) (float-vector 13.4 0.0 -26.9) (float-vector 13.4 0.0 -24.9) (float-vector 11.6047 -6.70001 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4 0.0 -26.9) (float-vector 11.6047 -6.70001 -26.9) (float-vector 6.69999 -11.6047 -26.9) (float-vector -1.172896e-05 -13.4 -26.9) (float-vector -6.70001 -11.6047 -26.9) (float-vector -11.6047 -6.69999 -26.9) (float-vector -13.4 7.629395e-06 -26.9) (float-vector -11.6047 6.7 -26.9) (float-vector -6.69999 11.6047 -26.9) (float-vector 4.040281e-06 13.4 -26.9) (float-vector 6.7 11.6047 -26.9) (float-vector 11.6047 6.7 -26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -20.0 25.0) (float-vector 74.9999 -20.0 25.0001) (float-vector 75.0 -20.0 -24.9999)))
         (instance face :init :vertices (list (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -25.0 -25.0) (float-vector 75.0 -25.0 -24.9999) (float-vector 74.9999 -25.0 25.0001)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 -24.9999) (float-vector 75.0 -25.0 -24.9999) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 74.9999 -20.0 25.0001) (float-vector 74.9999 -25.0 25.0001) (float-vector 75.0 -25.0 -24.9999) (float-vector 75.0 -20.0 -24.9999)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 25.0) (float-vector -20.0 -25.0 25.0) (float-vector 74.9999 -25.0 25.0001) (float-vector 74.9999 -20.0 25.0001)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 27.5 -20.0 -25.0) (float-vector 27.5 -20.0 25.0) (float-vector 27.5 9.99998 15.0) (float-vector 27.5 9.99997 -15.0)))
         (instance face :init :vertices (list (float-vector 72.4999 -20.0 25.0001) (float-vector 72.5 -20.0001 -24.9999) (float-vector 72.5 9.99994 -14.9999) (float-vector 72.5 9.99995 15.0001)))
         (instance face :init :vertices (list (float-vector 27.5 -20.0 -25.0) (float-vector 72.5 -20.0001 -24.9999) (float-vector 72.4999 -20.0 25.0001) (float-vector 27.5 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 27.5 9.99997 -15.0) (float-vector 72.5 9.99994 -14.9999) (float-vector 72.5 -20.0001 -24.9999) (float-vector 27.5 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 27.5 9.99998 15.0) (float-vector 72.5 9.99995 15.0001) (float-vector 72.5 9.99994 -14.9999) (float-vector 27.5 9.99997 -15.0)))
         (instance face :init :vertices (list (float-vector 27.5 -20.0 25.0) (float-vector 72.4999 -20.0 25.0001) (float-vector 72.5 9.99995 15.0001) (float-vector 27.5 9.99998 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :lightgoldenrod)
     (send (elt bc 2) :set-color :yellow)
     (setq blink11 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-ankle-p :weight 272.0 :centroid (float-vector 28.6764 0.959808 2.587926e-05) :inertia-tensor #2f((1.384288e+05 65174.2 -0.147701) (65174.2 2.573434e+05 0.059507) (-0.147701 0.059507 2.827949e+05))))

     ;; definition of :larm-shoulder-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 39.0 26.5) (float-vector 10.0 39.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -27.5) (float-vector -10.0 40.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 39.0 -26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -27.5) (float-vector 0.0 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 0.0 -10.0 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 0.0 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 0.0 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 39.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 -26.5) (float-vector 10.0 39.0 26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 39.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 39.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 39.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.0 45.1 -29.4) (float-vector -14.0 94.9 -29.4) (float-vector 45.0 94.9 -29.4) (float-vector 45.0 45.1 -29.4)))
         (instance face :init :vertices (list (float-vector 45.0 94.9 -29.4) (float-vector 45.0 94.9 -0.600037) (float-vector 45.0 45.1 -0.600006) (float-vector 45.0 45.1 -29.4)))
         (instance face :init :vertices (list (float-vector 45.0 94.9 -0.600037) (float-vector -14.0 94.9 -0.600037) (float-vector -14.0 45.1 -0.600006) (float-vector 45.0 45.1 -0.600006)))
         (instance face :init :vertices (list (float-vector -14.0 45.1 -0.600006) (float-vector -14.0 45.1 -29.4) (float-vector 45.0 45.1 -29.4) (float-vector 45.0 45.1 -0.600006))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -6.70002 45.1 -26.6047) (float-vector -11.6048 45.1 -21.7) (float-vector -13.4 45.1 -15.0) (float-vector -11.6047 45.1 -8.30002) (float-vector -6.7 45.1 -3.39526) (float-vector -6.921066e-06 45.1 -1.60004) (float-vector 6.69999 45.1 -3.39529) (float-vector 11.6047 45.1 -8.30002) (float-vector 13.4 45.1 -15.0) (float-vector 11.6047 45.1 -21.7) (float-vector 6.69998 45.1 -26.6048) (float-vector -1.235641e-05 45.1 -28.4)))
))
         (instance face :init :vertices (list (float-vector -14.0 94.9 -0.600037) (float-vector -14.0 94.9 -29.4) (float-vector -14.0 45.1 -29.4) (float-vector -14.0 45.1 -0.600006)))
         (instance face :init :vertices (list (float-vector -14.0 94.9 -29.4) (float-vector -14.0 94.9 -0.600037) (float-vector 45.0 94.9 -0.600037) (float-vector 45.0 94.9 -29.4))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -11.6048 94.9 -21.7) (float-vector -6.70005 94.9 -26.6048) (float-vector -3.622648e-05 94.9 -28.4) (float-vector 6.69996 94.9 -26.6048) (float-vector 11.6047 94.9 -21.7) (float-vector 13.4 94.9 -15.0001) (float-vector 11.6047 94.9 -8.30005) (float-vector 6.69997 94.9 -3.39532) (float-vector -3.079111e-05 94.9 -1.60004) (float-vector -6.70003 94.9 -3.39529) (float-vector -11.6048 94.9 -8.30002) (float-vector -13.4 94.9 -15.0)))
))
         (instance face :init :vertices (list (float-vector -1.139777e-05 43.1 -28.4) (float-vector -1.235641e-05 45.1 -28.4) (float-vector 6.69998 45.1 -26.6048) (float-vector 6.69999 43.1 -26.6048)))
         (instance face :init :vertices (list (float-vector -3.622648e-05 94.9 -28.4) (float-vector -3.718512e-05 96.9 -28.4) (float-vector 6.69996 96.9 -26.6048) (float-vector 6.69996 94.9 -26.6048)))
         (instance face :init :vertices (list (float-vector 11.6047 45.1 -21.7) (float-vector 11.6047 43.1 -21.7) (float-vector 6.69999 43.1 -26.6048) (float-vector 6.69998 45.1 -26.6048)))
         (instance face :init :vertices (list (float-vector 6.69996 96.9 -26.6048) (float-vector 11.6047 96.9 -21.7) (float-vector 11.6047 94.9 -21.7) (float-vector 6.69996 94.9 -26.6048)))
         (instance face :init :vertices (list (float-vector 13.4 45.1 -15.0) (float-vector 13.4 43.1 -15.0) (float-vector 11.6047 43.1 -21.7) (float-vector 11.6047 45.1 -21.7)))
         (instance face :init :vertices (list (float-vector 11.6047 96.9 -21.7) (float-vector 13.4 96.9 -15.0001) (float-vector 13.4 94.9 -15.0001) (float-vector 11.6047 94.9 -21.7)))
         (instance face :init :vertices (list (float-vector 11.6047 45.1 -8.30002) (float-vector 11.6047 43.1 -8.30002) (float-vector 13.4 43.1 -15.0) (float-vector 13.4 45.1 -15.0)))
         (instance face :init :vertices (list (float-vector 13.4 96.9 -15.0001) (float-vector 11.6047 96.9 -8.30005) (float-vector 11.6047 94.9 -8.30005) (float-vector 13.4 94.9 -15.0001)))
         (instance face :init :vertices (list (float-vector 6.69999 45.1 -3.39529) (float-vector 6.69999 43.1 -3.39529) (float-vector 11.6047 43.1 -8.30002) (float-vector 11.6047 45.1 -8.30002)))
         (instance face :init :vertices (list (float-vector 11.6047 96.9 -8.30005) (float-vector 6.69996 96.9 -3.39532) (float-vector 6.69997 94.9 -3.39532) (float-vector 11.6047 94.9 -8.30005)))
         (instance face :init :vertices (list (float-vector -6.921066e-06 45.1 -1.60004) (float-vector -5.962429e-06 43.1 -1.60004) (float-vector 6.69999 43.1 -3.39529) (float-vector 6.69999 45.1 -3.39529)))
         (instance face :init :vertices (list (float-vector 6.69996 96.9 -3.39532) (float-vector -3.174975e-05 96.9 -1.60004) (float-vector -3.079111e-05 94.9 -1.60004) (float-vector 6.69997 94.9 -3.39532)))
         (instance face :init :vertices (list (float-vector -6.7 45.1 -3.39526) (float-vector -6.7 43.1 -3.39526) (float-vector -5.962429e-06 43.1 -1.60004) (float-vector -6.921066e-06 45.1 -1.60004)))
         (instance face :init :vertices (list (float-vector -3.174975e-05 96.9 -1.60004) (float-vector -6.70003 96.9 -3.39529) (float-vector -6.70003 94.9 -3.39529) (float-vector -3.079111e-05 94.9 -1.60004)))
         (instance face :init :vertices (list (float-vector -11.6047 45.1 -8.30002) (float-vector -11.6047 43.1 -8.30002) (float-vector -6.7 43.1 -3.39526) (float-vector -6.7 45.1 -3.39526)))
         (instance face :init :vertices (list (float-vector -6.70003 96.9 -3.39529) (float-vector -11.6048 96.9 -8.30002) (float-vector -11.6048 94.9 -8.30002) (float-vector -6.70003 94.9 -3.39529)))
         (instance face :init :vertices (list (float-vector -13.4 45.1 -15.0) (float-vector -13.4 43.1 -15.0) (float-vector -11.6047 43.1 -8.30002) (float-vector -11.6047 45.1 -8.30002)))
         (instance face :init :vertices (list (float-vector -11.6048 96.9 -8.30002) (float-vector -13.4 96.9 -15.0) (float-vector -13.4 94.9 -15.0) (float-vector -11.6048 94.9 -8.30002)))
         (instance face :init :vertices (list (float-vector -11.6048 45.1 -21.7) (float-vector -11.6048 43.1 -21.7) (float-vector -13.4 43.1 -15.0) (float-vector -13.4 45.1 -15.0)))
         (instance face :init :vertices (list (float-vector -13.4 96.9 -15.0) (float-vector -11.6048 96.9 -21.7) (float-vector -11.6048 94.9 -21.7) (float-vector -13.4 94.9 -15.0)))
         (instance face :init :vertices (list (float-vector -6.70002 45.1 -26.6047) (float-vector -6.70002 43.1 -26.6047) (float-vector -11.6048 43.1 -21.7) (float-vector -11.6048 45.1 -21.7)))
         (instance face :init :vertices (list (float-vector -11.6048 96.9 -21.7) (float-vector -6.70005 96.9 -26.6048) (float-vector -6.70005 94.9 -26.6048) (float-vector -11.6048 94.9 -21.7)))
         (instance face :init :vertices (list (float-vector -6.70002 43.1 -26.6047) (float-vector -1.139777e-05 43.1 -28.4) (float-vector 6.69999 43.1 -26.6048) (float-vector 11.6047 43.1 -21.7) (float-vector 13.4 43.1 -15.0) (float-vector 11.6047 43.1 -8.30002) (float-vector 6.69999 43.1 -3.39529) (float-vector -5.962429e-06 43.1 -1.60004) (float-vector -6.7 43.1 -3.39526) (float-vector -11.6047 43.1 -8.30002) (float-vector -13.4 43.1 -15.0) (float-vector -11.6048 43.1 -21.7)))
         (instance face :init :vertices (list (float-vector -1.139777e-05 43.1 -28.4) (float-vector -6.70002 43.1 -26.6047) (float-vector -6.70002 45.1 -26.6047) (float-vector -1.235641e-05 45.1 -28.4)))
         (instance face :init :vertices (list (float-vector -6.70005 96.9 -26.6048) (float-vector -3.718512e-05 96.9 -28.4) (float-vector -3.622648e-05 94.9 -28.4) (float-vector -6.70005 94.9 -26.6048)))
         (instance face :init :vertices (list (float-vector -3.718512e-05 96.9 -28.4) (float-vector -6.70005 96.9 -26.6048) (float-vector -11.6048 96.9 -21.7) (float-vector -13.4 96.9 -15.0) (float-vector -11.6048 96.9 -8.30002) (float-vector -6.70003 96.9 -3.39529) (float-vector -3.174975e-05 96.9 -1.60004) (float-vector 6.69996 96.9 -3.39532) (float-vector 11.6047 96.9 -8.30005) (float-vector 13.4 96.9 -15.0001) (float-vector 11.6047 96.9 -21.7) (float-vector 6.69996 96.9 -26.6048)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink12 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-y :weight 114.946 :centroid (float-vector 14.0703 66.8696 -13.9631) :inertia-tensor #2f((52874.0 -5062.78 1676.97) (-5062.78 46430.0 5024.24) (1676.97 5024.24 72431.1))))

     ;; definition of :larm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -3.051758e-05 -30.0) (float-vector 10.0 50.0 -30.0) (float-vector 10.0 50.0 30.0) (float-vector 10.0 -3.051758e-05 30.0) (float-vector 10.0 -3.051758e-05 29.0) (float-vector 10.0 49.0 29.0) (float-vector 10.0 49.0 -29.0) (float-vector 10.0 -3.051758e-05 -29.0)))
         (instance face :init :vertices (list (float-vector -10.0 50.0 -30.0) (float-vector -10.0 50.0 30.0) (float-vector 10.0 50.0 30.0) (float-vector 10.0 50.0 -30.0)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -30.0) (float-vector -10.0 0.0 -29.0) (float-vector -10.0 49.0 -29.0) (float-vector -10.0 49.0 29.0) (float-vector -10.0 0.0 29.0) (float-vector -10.0 0.0 30.0) (float-vector -10.0 50.0 30.0) (float-vector -10.0 50.0 -30.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07108 30.0) (float-vector -10.0 0.0 30.0) (float-vector -10.0 0.0 29.0) (float-vector -7.07107 -7.07108 29.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07108 -30.0) (float-vector -7.07107 -7.07108 -29.0) (float-vector -10.0 0.0 -29.0) (float-vector -10.0 0.0 -30.0)))
         (instance face :init :vertices (list (float-vector -2.910383e-11 -10.0 30.0) (float-vector -7.07107 -7.07108 30.0) (float-vector -7.07107 -7.07108 29.0) (float-vector -2.910383e-11 -10.0 29.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -30.0) (float-vector -2.910383e-11 -10.0 -29.0) (float-vector -7.07107 -7.07108 -29.0) (float-vector -7.07107 -7.07108 -30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07111 30.0) (float-vector -2.910383e-11 -10.0 30.0) (float-vector -2.910383e-11 -10.0 29.0) (float-vector 7.07107 -7.07111 29.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07111 -30.0) (float-vector 7.07107 -7.07108 -29.0) (float-vector -2.910383e-11 -10.0 -29.0) (float-vector 0.0 -10.0 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 -3.051758e-05 30.0) (float-vector 10.0 50.0 30.0) (float-vector -10.0 50.0 30.0) (float-vector -10.0 0.0 30.0) (float-vector -7.07107 -7.07108 30.0) (float-vector -2.910383e-11 -10.0 30.0) (float-vector 7.07107 -7.07111 30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07111 -30.0) (float-vector 0.0 -10.0 -30.0) (float-vector -7.07107 -7.07108 -30.0) (float-vector -10.0 0.0 -30.0) (float-vector -10.0 50.0 -30.0) (float-vector 10.0 50.0 -30.0) (float-vector 10.0 -3.051758e-05 -30.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07111 30.0) (float-vector 7.07107 -7.07111 29.0) (float-vector 10.0 -3.051758e-05 29.0) (float-vector 10.0 -3.051758e-05 30.0)))
         (instance face :init :vertices (list (float-vector 10.0 -3.051758e-05 -30.0) (float-vector 10.0 -3.051758e-05 -29.0) (float-vector 7.07107 -7.07108 -29.0) (float-vector 7.07107 -7.07111 -30.0)))
         (instance face :init :vertices (list (float-vector 10.0 49.0 29.0) (float-vector 10.0 -3.051758e-05 29.0) (float-vector 7.07107 -7.07111 29.0) (float-vector -2.910383e-11 -10.0 29.0) (float-vector -7.07107 -7.07108 29.0) (float-vector -10.0 0.0 29.0) (float-vector -10.0 49.0 29.0)))
         (instance face :init :vertices (list (float-vector 10.0 49.0 -29.0) (float-vector 10.0 49.0 29.0) (float-vector -10.0 49.0 29.0) (float-vector -10.0 49.0 -29.0)))
         (instance face :init :vertices (list (float-vector -10.0 49.0 -29.0) (float-vector -10.0 0.0 -29.0) (float-vector -7.07107 -7.07108 -29.0) (float-vector -2.910383e-11 -10.0 -29.0) (float-vector 7.07107 -7.07108 -29.0) (float-vector 10.0 -3.051758e-05 -29.0) (float-vector 10.0 49.0 -29.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 90.0 -27.5) (float-vector -10.0 50.0 -27.5) (float-vector -10.0 50.0 27.5) (float-vector -10.0 90.0 27.5) (float-vector -10.0 90.0 26.5) (float-vector -10.0 51.0 26.5) (float-vector -10.0 51.0 -26.5) (float-vector -10.0 90.0 -26.5)))
         (instance face :init :vertices (list (float-vector 9.99997 50.0 -27.5) (float-vector 9.99997 50.0 27.5) (float-vector -10.0 50.0 27.5) (float-vector -10.0 50.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 90.0 -27.5) (float-vector 10.0 90.0 -26.5) (float-vector 9.99997 51.0 -26.5) (float-vector 9.99997 51.0 26.5) (float-vector 10.0 90.0 26.5) (float-vector 10.0 90.0 27.5) (float-vector 9.99997 50.0 27.5) (float-vector 9.99997 50.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 97.071 27.5) (float-vector 10.0 90.0 27.5) (float-vector 10.0 90.0 26.5) (float-vector 7.07107 97.071 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 97.071 -27.5) (float-vector 7.07107 97.071 -26.5) (float-vector 10.0 90.0 -26.5) (float-vector 10.0 90.0 -27.5)))
         (instance face :init :vertices (list (float-vector 6.278307e-06 100.0 27.5) (float-vector 7.07107 97.071 27.5) (float-vector 7.07107 97.071 26.5) (float-vector 6.278307e-06 100.0 26.5)))
         (instance face :init :vertices (list (float-vector 6.278307e-06 100.0 -27.5) (float-vector 6.278337e-06 100.0 -26.5) (float-vector 7.07107 97.071 -26.5) (float-vector 7.07107 97.071 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 97.071 27.5) (float-vector 6.278307e-06 100.0 27.5) (float-vector 6.278307e-06 100.0 26.5) (float-vector -7.07106 97.071 26.5)))
         (instance face :init :vertices (list (float-vector -7.07106 97.071 -27.5) (float-vector -7.07106 97.071 -26.5) (float-vector 6.278337e-06 100.0 -26.5) (float-vector 6.278307e-06 100.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 90.0 27.5) (float-vector -10.0 50.0 27.5) (float-vector 9.99997 50.0 27.5) (float-vector 10.0 90.0 27.5) (float-vector 7.07107 97.071 27.5) (float-vector 6.278307e-06 100.0 27.5) (float-vector -7.07106 97.071 27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 97.071 -27.5) (float-vector 6.278307e-06 100.0 -27.5) (float-vector 7.07107 97.071 -27.5) (float-vector 10.0 90.0 -27.5) (float-vector 9.99997 50.0 -27.5) (float-vector -10.0 50.0 -27.5) (float-vector -10.0 90.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 97.071 27.5) (float-vector -7.07106 97.071 26.5) (float-vector -10.0 90.0 26.5) (float-vector -10.0 90.0 27.5)))
         (instance face :init :vertices (list (float-vector -10.0 90.0 -27.5) (float-vector -10.0 90.0 -26.5) (float-vector -7.07106 97.071 -26.5) (float-vector -7.07106 97.071 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 51.0 26.5) (float-vector -10.0 90.0 26.5) (float-vector -7.07106 97.071 26.5) (float-vector 6.278307e-06 100.0 26.5) (float-vector 7.07107 97.071 26.5) (float-vector 10.0 90.0 26.5) (float-vector 9.99997 51.0 26.5)))
         (instance face :init :vertices (list (float-vector -10.0 51.0 -26.5) (float-vector -10.0 51.0 26.5) (float-vector 9.99997 51.0 26.5) (float-vector 9.99997 51.0 -26.5)))
         (instance face :init :vertices (list (float-vector 9.99997 51.0 -26.5) (float-vector 10.0 90.0 -26.5) (float-vector 7.07107 97.071 -26.5) (float-vector 6.278337e-06 100.0 -26.5) (float-vector -7.07106 97.071 -26.5) (float-vector -10.0 90.0 -26.5) (float-vector -10.0 51.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink13 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-p :weight 17.2414 :centroid (float-vector -1.979089e-06 46.7304 4.577637e-05) :inertia-tensor #2f((21505.3 0.001857 -4.925395e-09) (0.001857 11193.6 -0.001125) (-4.925393e-09 -0.001125 11461.2))))

     ;; definition of :larm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 5.24999 -9.09328 21.15) (float-vector -1.015258e-05 -10.5 21.15) (float-vector -5.25001 -9.09326 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 1.525879e-05 21.15) (float-vector -9.09326 5.25 21.15) (float-vector -5.24999 9.09326 21.15) (float-vector 3.353634e-06 10.5 21.15) (float-vector 5.25 9.09326 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.24999 -9.09328 -21.15) (float-vector 9.09326 -5.25002 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09326 -21.15) (float-vector 3.353634e-06 10.5 -21.15) (float-vector -5.24999 9.09328 -21.15) (float-vector -9.09326 5.25 -21.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -1.015258e-05 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 21.15) (float-vector 5.25 9.09326 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 5.25 9.09326 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 3.353634e-06 10.5 21.15) (float-vector 3.353634e-06 10.5 23.15) (float-vector 5.25 9.09326 23.15) (float-vector 5.25 9.09326 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 -23.15) (float-vector 3.353634e-06 10.5 -23.15) (float-vector 3.353634e-06 10.5 -21.15) (float-vector 5.25 9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector -5.24999 9.09326 21.15) (float-vector -5.24999 9.09326 23.15) (float-vector 3.353634e-06 10.5 23.15) (float-vector 3.353634e-06 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 3.353634e-06 10.5 -23.15) (float-vector -5.24999 9.09326 -23.15) (float-vector -5.24999 9.09328 -21.15) (float-vector 3.353634e-06 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25 21.15) (float-vector -9.09326 5.25 23.15) (float-vector -5.24999 9.09326 23.15) (float-vector -5.24999 9.09326 21.15)))
         (instance face :init :vertices (list (float-vector -5.24999 9.09326 -23.15) (float-vector -9.09326 5.25 -23.15) (float-vector -9.09326 5.25 -21.15) (float-vector -5.24999 9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 1.525879e-05 21.15) (float-vector -10.5 1.525879e-05 23.15) (float-vector -9.09326 5.25 23.15) (float-vector -9.09326 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09326 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.24998 23.15) (float-vector -10.5 1.525879e-05 23.15) (float-vector -10.5 1.525879e-05 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 0.0 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 21.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -9.09327 -5.24998 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.015258e-05 -10.5 21.15) (float-vector -1.015258e-05 -10.5 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -5.25001 -9.09326 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 -23.15) (float-vector -1.015258e-05 -10.5 -23.15) (float-vector -1.015258e-05 -10.5 -21.15) (float-vector -5.25001 -9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09328 21.15) (float-vector 5.24999 -9.09328 23.15) (float-vector -1.015258e-05 -10.5 23.15) (float-vector -1.015258e-05 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.015258e-05 -10.5 -23.15) (float-vector 5.24999 -9.09326 -23.15) (float-vector 5.24999 -9.09328 -21.15) (float-vector -1.015258e-05 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 9.09326 -5.25 23.15) (float-vector 5.24999 -9.09328 23.15) (float-vector 5.24999 -9.09328 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09326 -23.15) (float-vector 9.09326 -5.25002 -23.15) (float-vector 9.09326 -5.25002 -21.15) (float-vector 5.24999 -9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09326 23.15) (float-vector 3.353634e-06 10.5 23.15) (float-vector -5.24999 9.09326 23.15) (float-vector -9.09326 5.25 23.15) (float-vector -10.5 1.525879e-05 23.15) (float-vector -9.09327 -5.24998 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -1.015258e-05 -10.5 23.15) (float-vector 5.24999 -9.09328 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09326 -5.25 23.15) (float-vector 9.09326 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25002 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09326 -5.25002 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09326 -5.25002 -23.15) (float-vector 5.24999 -9.09326 -23.15) (float-vector -1.015258e-05 -10.5 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -9.09326 5.25 -23.15) (float-vector -5.24999 9.09326 -23.15) (float-vector 3.353634e-06 10.5 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 6.5 56.0 14.5) (float-vector 6.5 56.0 -14.5) (float-vector 6.5 84.0 -14.5) (float-vector 6.5 84.0 14.5)))
         (instance face :init :vertices (list (float-vector 6.5 84.0 -14.5) (float-vector -6.5 84.0 -14.5) (float-vector -6.5 84.0 14.5) (float-vector 6.5 84.0 14.5)))
         (instance face :init :vertices (list (float-vector -6.5 84.0 -14.5) (float-vector -6.5 56.0 -14.5) (float-vector -6.5 56.0 14.5) (float-vector -6.5 84.0 14.5)))
         (instance face :init :vertices (list (float-vector -6.5 56.0 14.5) (float-vector 6.5 56.0 14.5) (float-vector 6.5 84.0 14.5) (float-vector -6.5 84.0 14.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 4.76313 60.25 14.5) (float-vector 2.74999 58.2369 14.5) (float-vector -5.688693e-06 57.5 14.5) (float-vector -2.75 58.2369 14.5) (float-vector -4.76314 60.25 14.5) (float-vector -5.5 63.0 14.5) (float-vector -4.76314 65.75 14.5) (float-vector -2.75 67.7631 14.5) (float-vector 1.844368e-06 68.5 14.5) (float-vector 2.75 67.7631 14.5) (float-vector 4.76314 65.75 14.5) (float-vector 5.5 63.0 14.5)))
))
         (instance face :init :vertices (list (float-vector -6.5 56.0 -14.5) (float-vector 6.5 56.0 -14.5) (float-vector 6.5 56.0 14.5) (float-vector -6.5 56.0 14.5)))
         (instance face :init :vertices (list (float-vector 6.5 56.0 -14.5) (float-vector -6.5 56.0 -14.5) (float-vector -6.5 84.0 -14.5) (float-vector 6.5 84.0 -14.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 2.74999 58.2369 -14.5) (float-vector 4.76314 60.25 -14.5) (float-vector 5.5 63.0 -14.5) (float-vector 4.76314 65.75 -14.5) (float-vector 2.75 67.7631 -14.5) (float-vector 1.844368e-06 68.5 -14.5) (float-vector -2.75 67.7631 -14.5) (float-vector -4.76314 65.75 -14.5) (float-vector -5.5 63.0 -14.5) (float-vector -4.76314 60.25 -14.5) (float-vector -2.75 58.2369 -14.5) (float-vector -5.688693e-06 57.5 -14.5)))
))
         (instance face :init :vertices (list (float-vector 5.5 63.0 16.5) (float-vector 5.5 63.0 14.5) (float-vector 4.76314 65.75 14.5) (float-vector 4.76314 65.75 16.5)))
         (instance face :init :vertices (list (float-vector 5.5 63.0 -14.5) (float-vector 5.5 63.0 -16.5) (float-vector 4.76314 65.75 -16.5) (float-vector 4.76314 65.75 -14.5)))
         (instance face :init :vertices (list (float-vector 2.75 67.7631 14.5) (float-vector 2.75 67.7631 16.5) (float-vector 4.76314 65.75 16.5) (float-vector 4.76314 65.75 14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 65.75 -16.5) (float-vector 2.75 67.7631 -16.5) (float-vector 2.75 67.7631 -14.5) (float-vector 4.76314 65.75 -14.5)))
         (instance face :init :vertices (list (float-vector 1.844368e-06 68.5 14.5) (float-vector 1.844310e-06 68.5 16.5) (float-vector 2.75 67.7631 16.5) (float-vector 2.75 67.7631 14.5)))
         (instance face :init :vertices (list (float-vector 2.75 67.7631 -16.5) (float-vector 1.844368e-06 68.5 -16.5) (float-vector 1.844368e-06 68.5 -14.5) (float-vector 2.75 67.7631 -14.5)))
         (instance face :init :vertices (list (float-vector -2.75 67.7631 14.5) (float-vector -2.75 67.7631 16.5) (float-vector 1.844310e-06 68.5 16.5) (float-vector 1.844368e-06 68.5 14.5)))
         (instance face :init :vertices (list (float-vector 1.844368e-06 68.5 -16.5) (float-vector -2.75 67.7631 -16.5) (float-vector -2.75 67.7631 -14.5) (float-vector 1.844368e-06 68.5 -14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 65.75 14.5) (float-vector -4.76314 65.75 16.5) (float-vector -2.75 67.7631 16.5) (float-vector -2.75 67.7631 14.5)))
         (instance face :init :vertices (list (float-vector -2.75 67.7631 -16.5) (float-vector -4.76314 65.75 -16.5) (float-vector -4.76314 65.75 -14.5) (float-vector -2.75 67.7631 -14.5)))
         (instance face :init :vertices (list (float-vector -5.5 63.0 14.5) (float-vector -5.5 63.0 16.5) (float-vector -4.76314 65.75 16.5) (float-vector -4.76314 65.75 14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 65.75 -16.5) (float-vector -5.5 63.0 -16.5) (float-vector -5.5 63.0 -14.5) (float-vector -4.76314 65.75 -14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 60.25 14.5) (float-vector -4.76314 60.25 16.5) (float-vector -5.5 63.0 16.5) (float-vector -5.5 63.0 14.5)))
         (instance face :init :vertices (list (float-vector -5.5 63.0 -16.5) (float-vector -4.76314 60.25 -16.5) (float-vector -4.76314 60.25 -14.5) (float-vector -5.5 63.0 -14.5)))
         (instance face :init :vertices (list (float-vector -2.75 58.2369 14.5) (float-vector -2.75 58.2369 16.5) (float-vector -4.76314 60.25 16.5) (float-vector -4.76314 60.25 14.5)))
         (instance face :init :vertices (list (float-vector -4.76314 60.25 -16.5) (float-vector -2.75 58.2369 -16.5) (float-vector -2.75 58.2369 -14.5) (float-vector -4.76314 60.25 -14.5)))
         (instance face :init :vertices (list (float-vector -5.688693e-06 57.5 14.5) (float-vector -5.688693e-06 57.5 16.5) (float-vector -2.75 58.2369 16.5) (float-vector -2.75 58.2369 14.5)))
         (instance face :init :vertices (list (float-vector -2.75 58.2369 -16.5) (float-vector -5.688693e-06 57.5 -16.5) (float-vector -5.688693e-06 57.5 -14.5) (float-vector -2.75 58.2369 -14.5)))
         (instance face :init :vertices (list (float-vector 2.74999 58.2369 14.5) (float-vector 2.74999 58.2369 16.5) (float-vector -5.688693e-06 57.5 16.5) (float-vector -5.688693e-06 57.5 14.5)))
         (instance face :init :vertices (list (float-vector -5.688693e-06 57.5 -16.5) (float-vector 2.74999 58.2369 -16.5) (float-vector 2.74999 58.2369 -14.5) (float-vector -5.688693e-06 57.5 -14.5)))
         (instance face :init :vertices (list (float-vector 4.76313 60.25 14.5) (float-vector 4.76314 60.25 16.5) (float-vector 2.74999 58.2369 16.5) (float-vector 2.74999 58.2369 14.5)))
         (instance face :init :vertices (list (float-vector 2.74999 58.2369 -16.5) (float-vector 4.76313 60.25 -16.5) (float-vector 4.76314 60.25 -14.5) (float-vector 2.74999 58.2369 -14.5)))
         (instance face :init :vertices (list (float-vector 4.76314 60.25 16.5) (float-vector 5.5 63.0 16.5) (float-vector 4.76314 65.75 16.5) (float-vector 2.75 67.7631 16.5) (float-vector 1.844310e-06 68.5 16.5) (float-vector -2.75 67.7631 16.5) (float-vector -4.76314 65.75 16.5) (float-vector -5.5 63.0 16.5) (float-vector -4.76314 60.25 16.5) (float-vector -2.75 58.2369 16.5) (float-vector -5.688693e-06 57.5 16.5) (float-vector 2.74999 58.2369 16.5)))
         (instance face :init :vertices (list (float-vector 5.5 63.0 16.5) (float-vector 4.76314 60.25 16.5) (float-vector 4.76313 60.25 14.5) (float-vector 5.5 63.0 14.5)))
         (instance face :init :vertices (list (float-vector 4.76313 60.25 -16.5) (float-vector 5.5 63.0 -16.5) (float-vector 5.5 63.0 -14.5) (float-vector 4.76314 60.25 -14.5)))
         (instance face :init :vertices (list (float-vector 5.5 63.0 -16.5) (float-vector 4.76313 60.25 -16.5) (float-vector 2.74999 58.2369 -16.5) (float-vector -5.688693e-06 57.5 -16.5) (float-vector -2.75 58.2369 -16.5) (float-vector -4.76314 60.25 -16.5) (float-vector -5.5 63.0 -16.5) (float-vector -4.76314 65.75 -16.5) (float-vector -2.75 67.7631 -16.5) (float-vector 1.844368e-06 68.5 -16.5) (float-vector 2.75 67.7631 -16.5) (float-vector 4.76314 65.75 -16.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink14 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-elbow-p :weight 87 :centroid (float-vector -4.916437e-07 25.257 1.525879e-05) :inertia-tensor #2f((81977.6 -6.552794e-05 8.089279e-10) (-6.552794e-05 14409.1 -0.007471) (8.089278e-10 -0.007471 73919.0))))

     ;; definition of :larm-gripper
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -17.5) (float-vector 10.0 40.0 -17.5) (float-vector 10.0 40.0 17.5) (float-vector 10.0 0.0 17.5) (float-vector 10.0 0.0 16.5) (float-vector 10.0 39.0 16.5) (float-vector 10.0 39.0 -16.5) (float-vector 10.0 0.0 -16.5)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -17.5) (float-vector -10.0 40.0 17.5) (float-vector 10.0 40.0 17.5) (float-vector 10.0 40.0 -17.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -17.5) (float-vector -10.0 0.0 -16.5) (float-vector -10.0 39.0 -16.5) (float-vector -10.0 39.0 16.5) (float-vector -10.0 0.0 16.5) (float-vector -10.0 0.0 17.5) (float-vector -10.0 40.0 17.5) (float-vector -10.0 40.0 -17.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07108 17.5) (float-vector -10.0 0.0 17.5) (float-vector -10.0 0.0 16.5) (float-vector -7.07107 -7.07108 16.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07108 -17.5) (float-vector -7.07107 -7.07108 -16.5) (float-vector -10.0 0.0 -16.5) (float-vector -10.0 0.0 -17.5)))
         (instance face :init :vertices (list (float-vector -5.820766e-11 -10.0 17.5) (float-vector -7.07107 -7.07108 17.5) (float-vector -7.07107 -7.07108 16.5) (float-vector 0.0 -10.0 16.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -17.5) (float-vector -5.820766e-11 -10.0 -16.5) (float-vector -7.07107 -7.07108 -16.5) (float-vector -7.07107 -7.07108 -17.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 17.5) (float-vector -5.820766e-11 -10.0 17.5) (float-vector 0.0 -10.0 16.5) (float-vector 7.07107 -7.07108 16.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 -17.5) (float-vector 7.07107 -7.07108 -16.5) (float-vector -5.820766e-11 -10.0 -16.5) (float-vector 0.0 -10.0 -17.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 17.5) (float-vector 10.0 40.0 17.5) (float-vector -10.0 40.0 17.5) (float-vector -10.0 0.0 17.5) (float-vector -7.07107 -7.07108 17.5) (float-vector -5.820766e-11 -10.0 17.5) (float-vector 7.07107 -7.07108 17.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 -17.5) (float-vector 0.0 -10.0 -17.5) (float-vector -7.07107 -7.07108 -17.5) (float-vector -10.0 0.0 -17.5) (float-vector -10.0 40.0 -17.5) (float-vector 10.0 40.0 -17.5) (float-vector 10.0 0.0 -17.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 17.5) (float-vector 7.07107 -7.07108 16.5) (float-vector 10.0 0.0 16.5) (float-vector 10.0 0.0 17.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -17.5) (float-vector 10.0 0.0 -16.5) (float-vector 7.07107 -7.07108 -16.5) (float-vector 7.07107 -7.07108 -17.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 16.5) (float-vector 10.0 0.0 16.5) (float-vector 7.07107 -7.07108 16.5) (float-vector 0.0 -10.0 16.5) (float-vector -7.07107 -7.07108 16.5) (float-vector -10.0 0.0 16.5) (float-vector -10.0 39.0 16.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 -16.5) (float-vector 10.0 39.0 16.5) (float-vector -10.0 39.0 16.5) (float-vector -10.0 39.0 -16.5)))
         (instance face :init :vertices (list (float-vector -10.0 39.0 -16.5) (float-vector -10.0 0.0 -16.5) (float-vector -7.07107 -7.07108 -16.5) (float-vector -5.820766e-11 -10.0 -16.5) (float-vector 7.07107 -7.07108 -16.5) (float-vector 10.0 0.0 -16.5) (float-vector 10.0 39.0 -16.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (setq blink15 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-gripper :weight 6.86568 :centroid (float-vector -4.901347e-06 22.3889 0.000175) :inertia-tensor #2f((3493.11 -7.223555e-06 7.426366e-09) (-7.223554e-06 1860.18 -3.042966e-05) (7.426365e-09 -3.042966e-05 2090.64))))

     ;; definition of :head-neck-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 2.273737e-13 -20.0) (float-vector 10.0 20.0 -20.0) (float-vector 10.0 20.0 20.0) (float-vector 10.0 2.273737e-13 20.0) (float-vector 10.0 2.273737e-13 19.0) (float-vector 10.0 19.0 19.0) (float-vector 10.0 19.0 -19.0) (float-vector 10.0 2.273737e-13 -19.0)))
         (instance face :init :vertices (list (float-vector -10.0 20.0 -20.0) (float-vector -10.0 20.0 20.0) (float-vector 10.0 20.0 20.0) (float-vector 10.0 20.0 -20.0)))
         (instance face :init :vertices (list (float-vector -10.0 -2.273737e-13 -20.0) (float-vector -10.0 -2.273737e-13 -19.0) (float-vector -10.0 19.0 -19.0) (float-vector -10.0 19.0 19.0) (float-vector -10.0 -2.273737e-13 19.0) (float-vector -10.0 -2.273737e-13 20.0) (float-vector -10.0 20.0 20.0) (float-vector -10.0 20.0 -20.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 20.0) (float-vector -10.0 -2.273737e-13 20.0) (float-vector -10.0 -2.273737e-13 19.0) (float-vector -7.07107 -7.07107 19.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -20.0) (float-vector -7.07107 -7.07107 -19.0) (float-vector -10.0 -2.273737e-13 -19.0) (float-vector -10.0 -2.273737e-13 -20.0)))
         (instance face :init :vertices (list (float-vector 2.273737e-13 -10.0 20.0) (float-vector -7.07107 -7.07107 20.0) (float-vector -7.07107 -7.07107 19.0) (float-vector 2.273737e-13 -10.0 19.0)))
         (instance face :init :vertices (list (float-vector 2.273737e-13 -10.0 -20.0) (float-vector 2.273737e-13 -10.0 -19.0) (float-vector -7.07107 -7.07107 -19.0) (float-vector -7.07107 -7.07107 -20.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 20.0) (float-vector 2.273737e-13 -10.0 20.0) (float-vector 2.273737e-13 -10.0 19.0) (float-vector 7.07107 -7.07107 19.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -20.0) (float-vector 7.07107 -7.07107 -19.0) (float-vector 2.273737e-13 -10.0 -19.0) (float-vector 2.273737e-13 -10.0 -20.0)))
         (instance face :init :vertices (list (float-vector 10.0 2.273737e-13 20.0) (float-vector 10.0 20.0 20.0) (float-vector -10.0 20.0 20.0) (float-vector -10.0 -2.273737e-13 20.0) (float-vector -7.07107 -7.07107 20.0) (float-vector 2.273737e-13 -10.0 20.0) (float-vector 7.07107 -7.07107 20.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -20.0) (float-vector 2.273737e-13 -10.0 -20.0) (float-vector -7.07107 -7.07107 -20.0) (float-vector -10.0 -2.273737e-13 -20.0) (float-vector -10.0 20.0 -20.0) (float-vector 10.0 20.0 -20.0) (float-vector 10.0 2.273737e-13 -20.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 20.0) (float-vector 7.07107 -7.07107 19.0) (float-vector 10.0 2.273737e-13 19.0) (float-vector 10.0 2.273737e-13 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 2.273737e-13 -20.0) (float-vector 10.0 2.273737e-13 -19.0) (float-vector 7.07107 -7.07107 -19.0) (float-vector 7.07107 -7.07107 -20.0)))
         (instance face :init :vertices (list (float-vector 10.0 19.0 19.0) (float-vector 10.0 2.273737e-13 19.0) (float-vector 7.07107 -7.07107 19.0) (float-vector 2.273737e-13 -10.0 19.0) (float-vector -7.07107 -7.07107 19.0) (float-vector -10.0 -2.273737e-13 19.0) (float-vector -10.0 19.0 19.0)))
         (instance face :init :vertices (list (float-vector 10.0 19.0 -19.0) (float-vector 10.0 19.0 19.0) (float-vector -10.0 19.0 19.0) (float-vector -10.0 19.0 -19.0)))
         (instance face :init :vertices (list (float-vector -10.0 19.0 -19.0) (float-vector -10.0 -2.273737e-13 -19.0) (float-vector -7.07107 -7.07107 -19.0) (float-vector 2.273737e-13 -10.0 -19.0) (float-vector 7.07107 -7.07107 -19.0) (float-vector 10.0 2.273737e-13 -19.0) (float-vector 10.0 19.0 -19.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.5 6.99999 20.5) (float-vector 14.5 7.00001 20.5) (float-vector 14.5 -21.0 20.5) (float-vector -14.5 -21.0 20.5)))
         (instance face :init :vertices (list (float-vector 14.5 -21.0 20.5) (float-vector 14.5 -21.0 33.5) (float-vector -14.5 -21.0 33.5) (float-vector -14.5 -21.0 20.5)))
         (instance face :init :vertices (list (float-vector 14.5 -21.0 33.5) (float-vector 14.5 7.00001 33.5) (float-vector -14.5 6.99999 33.5) (float-vector -14.5 -21.0 33.5)))
         (instance face :init :vertices (list (float-vector -14.5 6.99999 33.5) (float-vector -14.5 6.99999 20.5) (float-vector -14.5 -21.0 20.5) (float-vector -14.5 -21.0 33.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -14.5 2.75 22.2368) (float-vector -14.5 4.76313 24.25) (float-vector -14.5 5.49999 27.0) (float-vector -14.5 4.76313 29.75) (float-vector -14.5 2.74999 31.7631) (float-vector -14.5 -1.218124e-05 32.5) (float-vector -14.5 -2.75001 31.7631) (float-vector -14.5 -4.76315 29.75) (float-vector -14.5 -5.50001 27.0) (float-vector -14.5 -4.76315 24.25) (float-vector -14.5 -2.75001 22.2368) (float-vector -14.5 -9.070369e-06 21.5)))
))
         (instance face :init :vertices (list (float-vector 14.5 7.00001 33.5) (float-vector 14.5 7.00001 20.5) (float-vector -14.5 6.99999 20.5) (float-vector -14.5 6.99999 33.5)))
         (instance face :init :vertices (list (float-vector 14.5 7.00001 20.5) (float-vector 14.5 7.00001 33.5) (float-vector 14.5 -21.0 33.5) (float-vector 14.5 -21.0 20.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 14.5 4.76315 24.25) (float-vector 14.5 2.75001 22.2369) (float-vector 14.5 8.414718e-06 21.5) (float-vector 14.5 -2.74999 22.2369) (float-vector 14.5 -4.76313 24.25) (float-vector 14.5 -5.49999 27.0) (float-vector 14.5 -4.76313 29.75) (float-vector 14.5 -2.74999 31.7632) (float-vector 14.5 5.303840e-06 32.5) (float-vector 14.5 2.75 31.7632) (float-vector 14.5 4.76315 29.75) (float-vector 14.5 5.50001 27.0)))
))
         (instance face :init :vertices (list (float-vector -16.5 -1.027624e-05 21.5) (float-vector -14.5 -9.070369e-06 21.5) (float-vector -14.5 -2.75001 22.2368) (float-vector -16.5 -2.75001 22.2368)))
         (instance face :init :vertices (list (float-vector 14.5 8.414718e-06 21.5) (float-vector 16.5 9.620588e-06 21.5) (float-vector 16.5 -2.74999 22.2369) (float-vector 14.5 -2.74999 22.2369)))
         (instance face :init :vertices (list (float-vector -14.5 -4.76315 24.25) (float-vector -16.5 -4.76315 24.25) (float-vector -16.5 -2.75001 22.2368) (float-vector -14.5 -2.75001 22.2368)))
         (instance face :init :vertices (list (float-vector 16.5 -2.74999 22.2369) (float-vector 16.5 -4.76313 24.25) (float-vector 14.5 -4.76313 24.25) (float-vector 14.5 -2.74999 22.2369)))
         (instance face :init :vertices (list (float-vector -14.5 -5.50001 27.0) (float-vector -16.5 -5.50001 27.0) (float-vector -16.5 -4.76315 24.25) (float-vector -14.5 -4.76315 24.25)))
         (instance face :init :vertices (list (float-vector 16.5 -4.76313 24.25) (float-vector 16.5 -5.49999 27.0) (float-vector 14.5 -5.49999 27.0) (float-vector 14.5 -4.76313 24.25)))
         (instance face :init :vertices (list (float-vector -14.5 -4.76315 29.75) (float-vector -16.5 -4.76315 29.75) (float-vector -16.5 -5.50001 27.0) (float-vector -14.5 -5.50001 27.0)))
         (instance face :init :vertices (list (float-vector 16.5 -5.49999 27.0) (float-vector 16.5 -4.76313 29.75) (float-vector 14.5 -4.76313 29.75) (float-vector 14.5 -5.49999 27.0)))
         (instance face :init :vertices (list (float-vector -14.5 -2.75001 31.7631) (float-vector -16.5 -2.75001 31.7631) (float-vector -16.5 -4.76315 29.75) (float-vector -14.5 -4.76315 29.75)))
         (instance face :init :vertices (list (float-vector 16.5 -4.76313 29.75) (float-vector 16.5 -2.74999 31.7632) (float-vector 14.5 -2.74999 31.7632) (float-vector 14.5 -4.76313 29.75)))
         (instance face :init :vertices (list (float-vector -14.5 -1.218124e-05 32.5) (float-vector -16.5 -1.338712e-05 32.5) (float-vector -16.5 -2.75001 31.7631) (float-vector -14.5 -2.75001 31.7631)))
         (instance face :init :vertices (list (float-vector 16.5 -2.74999 31.7632) (float-vector 16.5 6.509708e-06 32.5) (float-vector 14.5 5.303840e-06 32.5) (float-vector 14.5 -2.74999 31.7632)))
         (instance face :init :vertices (list (float-vector -14.5 2.74999 31.7631) (float-vector -16.5 2.74999 31.7631) (float-vector -16.5 -1.338712e-05 32.5) (float-vector -14.5 -1.218124e-05 32.5)))
         (instance face :init :vertices (list (float-vector 16.5 6.509708e-06 32.5) (float-vector 16.5 2.75001 31.7632) (float-vector 14.5 2.75 31.7632) (float-vector 14.5 5.303840e-06 32.5)))
         (instance face :init :vertices (list (float-vector -14.5 4.76313 29.75) (float-vector -16.5 4.76313 29.75) (float-vector -16.5 2.74999 31.7631) (float-vector -14.5 2.74999 31.7631)))
         (instance face :init :vertices (list (float-vector 16.5 2.75001 31.7632) (float-vector 16.5 4.76315 29.75) (float-vector 14.5 4.76315 29.75) (float-vector 14.5 2.75 31.7632)))
         (instance face :init :vertices (list (float-vector -14.5 5.49999 27.0) (float-vector -16.5 5.49999 27.0) (float-vector -16.5 4.76313 29.75) (float-vector -14.5 4.76313 29.75)))
         (instance face :init :vertices (list (float-vector 16.5 4.76315 29.75) (float-vector 16.5 5.50001 27.0) (float-vector 14.5 5.50001 27.0) (float-vector 14.5 4.76315 29.75)))
         (instance face :init :vertices (list (float-vector -14.5 4.76313 24.25) (float-vector -16.5 4.76313 24.25) (float-vector -16.5 5.49999 27.0) (float-vector -14.5 5.49999 27.0)))
         (instance face :init :vertices (list (float-vector 16.5 5.50001 27.0) (float-vector 16.5 4.76315 24.25) (float-vector 14.5 4.76315 24.25) (float-vector 14.5 5.50001 27.0)))
         (instance face :init :vertices (list (float-vector -14.5 2.75 22.2368) (float-vector -16.5 2.75 22.2368) (float-vector -16.5 4.76313 24.25) (float-vector -14.5 4.76313 24.25)))
         (instance face :init :vertices (list (float-vector 16.5 4.76315 24.25) (float-vector 16.5 2.75002 22.2369) (float-vector 14.5 2.75001 22.2369) (float-vector 14.5 4.76315 24.25)))
         (instance face :init :vertices (list (float-vector -16.5 2.75 22.2368) (float-vector -16.5 -1.027624e-05 21.5) (float-vector -16.5 -2.75001 22.2368) (float-vector -16.5 -4.76315 24.25) (float-vector -16.5 -5.50001 27.0) (float-vector -16.5 -4.76315 29.75) (float-vector -16.5 -2.75001 31.7631) (float-vector -16.5 -1.338712e-05 32.5) (float-vector -16.5 2.74999 31.7631) (float-vector -16.5 4.76313 29.75) (float-vector -16.5 5.49999 27.0) (float-vector -16.5 4.76313 24.25)))
         (instance face :init :vertices (list (float-vector -16.5 -1.027624e-05 21.5) (float-vector -16.5 2.75 22.2368) (float-vector -14.5 2.75 22.2368) (float-vector -14.5 -9.070369e-06 21.5)))
         (instance face :init :vertices (list (float-vector 16.5 2.75002 22.2369) (float-vector 16.5 9.620588e-06 21.5) (float-vector 14.5 8.414718e-06 21.5) (float-vector 14.5 2.75001 22.2369)))
         (instance face :init :vertices (list (float-vector 16.5 9.620588e-06 21.5) (float-vector 16.5 2.75002 22.2369) (float-vector 16.5 4.76315 24.25) (float-vector 16.5 5.50001 27.0) (float-vector 16.5 4.76315 29.75) (float-vector 16.5 2.75001 31.7632) (float-vector 16.5 6.509708e-06 32.5) (float-vector 16.5 -2.74999 31.7632) (float-vector 16.5 -4.76313 29.75) (float-vector 16.5 -5.49999 27.0) (float-vector 16.5 -4.76313 24.25) (float-vector 16.5 -2.74999 22.2369)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink16 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-neck-y :weight 26.9757 :centroid (float-vector -4.362959e-06 -3.34891 22.0198) :inertia-tensor #2f((7927.48 -0.000471 6.505637e-05) (-0.000471 6334.64 2030.51) (6.505637e-05 2030.51 5008.21))))

     ;; definition of :head-neck-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -20.0) (float-vector 10.0 30.0 -20.0) (float-vector 10.0 30.0 20.0) (float-vector 10.0 3.051758e-05 20.0) (float-vector 10.0 3.051758e-05 19.0) (float-vector 10.0 29.0 19.0) (float-vector 10.0 29.0 -19.0) (float-vector 10.0 0.0 -19.0)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -20.0) (float-vector -10.0 30.0 20.0) (float-vector 10.0 30.0 20.0) (float-vector 10.0 30.0 -20.0)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -20.0) (float-vector -10.0 0.0 -19.0) (float-vector -10.0 29.0 -19.0) (float-vector -10.0 29.0 19.0) (float-vector -10.0 3.051758e-05 19.0) (float-vector -10.0 3.051758e-05 20.0) (float-vector -10.0 30.0 20.0) (float-vector -10.0 30.0 -20.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07104 20.0) (float-vector -10.0 3.051758e-05 20.0) (float-vector -10.0 3.051758e-05 19.0) (float-vector -7.07107 -7.07104 19.0)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07104 -20.0) (float-vector -7.07107 -7.07104 -19.0) (float-vector -10.0 0.0 -19.0) (float-vector -10.0 0.0 -20.0)))
         (instance face :init :vertices (list (float-vector -7.275958e-12 -9.99997 20.0) (float-vector -7.07107 -7.07104 20.0) (float-vector -7.07107 -7.07104 19.0) (float-vector -7.275958e-12 -9.99997 19.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -20.0) (float-vector 0.0 -10.0 -19.0) (float-vector -7.07107 -7.07104 -19.0) (float-vector -7.07107 -7.07104 -20.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07104 20.0) (float-vector -7.275958e-12 -9.99997 20.0) (float-vector -7.275958e-12 -9.99997 19.0) (float-vector 7.07107 -7.07104 19.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 -20.0) (float-vector 7.07107 -7.07108 -19.0) (float-vector 0.0 -10.0 -19.0) (float-vector 0.0 -10.0 -20.0)))
         (instance face :init :vertices (list (float-vector 10.0 3.051758e-05 20.0) (float-vector 10.0 30.0 20.0) (float-vector -10.0 30.0 20.0) (float-vector -10.0 3.051758e-05 20.0) (float-vector -7.07107 -7.07104 20.0) (float-vector -7.275958e-12 -9.99997 20.0) (float-vector 7.07107 -7.07104 20.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 -20.0) (float-vector 0.0 -10.0 -20.0) (float-vector -7.07107 -7.07104 -20.0) (float-vector -10.0 0.0 -20.0) (float-vector -10.0 30.0 -20.0) (float-vector 10.0 30.0 -20.0) (float-vector 10.0 0.0 -20.0)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07104 20.0) (float-vector 7.07107 -7.07104 19.0) (float-vector 10.0 3.051758e-05 19.0) (float-vector 10.0 3.051758e-05 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -20.0) (float-vector 10.0 0.0 -19.0) (float-vector 7.07107 -7.07108 -19.0) (float-vector 7.07107 -7.07108 -20.0)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 19.0) (float-vector 10.0 3.051758e-05 19.0) (float-vector 7.07107 -7.07104 19.0) (float-vector -7.275958e-12 -9.99997 19.0) (float-vector -7.07107 -7.07104 19.0) (float-vector -10.0 3.051758e-05 19.0) (float-vector -10.0 29.0 19.0)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 -19.0) (float-vector 10.0 29.0 19.0) (float-vector -10.0 29.0 19.0) (float-vector -10.0 29.0 -19.0)))
         (instance face :init :vertices (list (float-vector -10.0 29.0 -19.0) (float-vector -10.0 0.0 -19.0) (float-vector -7.07107 -7.07104 -19.0) (float-vector 0.0 -10.0 -19.0) (float-vector 7.07107 -7.07108 -19.0) (float-vector 10.0 0.0 -19.0) (float-vector 10.0 29.0 -19.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 45.0 54.0 13.0) (float-vector 45.0 60.5 11.2583) (float-vector 39.0 60.5 11.2583) (float-vector 39.0 54.0 13.0)))
         (instance face :init :vertices (list (float-vector 45.0 54.0 13.0) (float-vector 45.0 47.5 11.2583) (float-vector 45.0 42.7417 6.49999) (float-vector 45.0 41.0 -9.349678e-06) (float-vector 45.0 42.7417 -6.50001) (float-vector 45.0 47.5 -11.2583) (float-vector 45.0 54.0 -13.0) (float-vector 45.0 60.5 -11.2584) (float-vector 45.0 65.2584 -6.50003) (float-vector 45.0 67.0 -3.946858e-05) (float-vector 45.0 65.2584 6.49996) (float-vector 45.0 60.5 11.2583)))
         (instance face :init :vertices (list (float-vector 45.0 65.2584 6.49996) (float-vector 39.0 65.2584 6.49996) (float-vector 39.0 60.5 11.2583) (float-vector 45.0 60.5 11.2583)))
         (instance face :init :vertices (list (float-vector 45.0 67.0 -3.946858e-05) (float-vector 39.0 67.0 -4.158894e-05) (float-vector 39.0 65.2584 6.49996) (float-vector 45.0 65.2584 6.49996)))
         (instance face :init :vertices (list (float-vector 45.0 65.2584 -6.50003) (float-vector 39.0 65.2584 -6.50004) (float-vector 39.0 67.0 -4.158894e-05) (float-vector 45.0 67.0 -3.946858e-05)))
         (instance face :init :vertices (list (float-vector 45.0 60.5 -11.2584) (float-vector 39.0 60.5 -11.2584) (float-vector 39.0 65.2584 -6.50004) (float-vector 45.0 65.2584 -6.50003)))
         (instance face :init :vertices (list (float-vector 45.0 54.0 -13.0) (float-vector 39.0 54.0 -13.0) (float-vector 39.0 60.5 -11.2584) (float-vector 45.0 60.5 -11.2584)))
         (instance face :init :vertices (list (float-vector 45.0 47.5 -11.2583) (float-vector 39.0 47.5 -11.2583) (float-vector 39.0 54.0 -13.0) (float-vector 45.0 54.0 -13.0)))
         (instance face :init :vertices (list (float-vector 45.0 42.7417 -6.50001) (float-vector 39.0 42.7417 -6.50001) (float-vector 39.0 47.5 -11.2583) (float-vector 45.0 47.5 -11.2583)))
         (instance face :init :vertices (list (float-vector 45.0 41.0 -9.349678e-06) (float-vector 39.0 41.0 -1.147004e-05) (float-vector 39.0 42.7417 -6.50001) (float-vector 45.0 42.7417 -6.50001)))
         (instance face :init :vertices (list (float-vector 45.0 42.7417 6.49999) (float-vector 39.0 42.7417 6.49998) (float-vector 39.0 41.0 -1.147004e-05) (float-vector 45.0 41.0 -9.349678e-06)))
         (instance face :init :vertices (list (float-vector 45.0 47.5 11.2583) (float-vector 39.0 47.5 11.2583) (float-vector 39.0 42.7417 6.49998) (float-vector 45.0 42.7417 6.49999)))
         (instance face :init :vertices (list (float-vector 39.0 54.0 13.0) (float-vector 39.0 47.5 11.2583) (float-vector 45.0 47.5 11.2583) (float-vector 45.0 54.0 13.0)))
         (instance face :init :vertices (list (float-vector -19.0 74.0 -19.0001) (float-vector -19.0 32.0 -19.0) (float-vector -19.0 32.0 19.0) (float-vector -19.0 74.0 18.9999)))
         (instance face :init :vertices (list (float-vector -19.0 74.0 -19.0001) (float-vector 39.0 74.0 -19.0) (float-vector 39.0 32.0 -19.0) (float-vector -19.0 32.0 -19.0)))
         (instance face :init :vertices (list (float-vector 39.0 74.0 -19.0) (float-vector 39.0 74.0 19.0) (float-vector 39.0 32.0 19.0) (float-vector 39.0 32.0 -19.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 39.0 47.5 11.2583) (float-vector 39.0 54.0 13.0) (float-vector 39.0 60.5 11.2583) (float-vector 39.0 65.2584 6.49996) (float-vector 39.0 67.0 -4.158894e-05) (float-vector 39.0 65.2584 -6.50004) (float-vector 39.0 60.5 -11.2584) (float-vector 39.0 54.0 -13.0) (float-vector 39.0 47.5 -11.2583) (float-vector 39.0 42.7417 -6.50001) (float-vector 39.0 41.0 -1.147004e-05) (float-vector 39.0 42.7417 6.49998)))
))
         (instance face :init :vertices (list (float-vector 39.0 32.0 19.0) (float-vector -19.0 32.0 19.0) (float-vector -19.0 32.0 -19.0) (float-vector 39.0 32.0 -19.0)))
         (instance face :init :vertices (list (float-vector 39.0 74.0 19.0) (float-vector -19.0 74.0 18.9999) (float-vector -19.0 32.0 19.0) (float-vector 39.0 32.0 19.0)))
         (instance face :init :vertices (list (float-vector -19.0 74.0 18.9999) (float-vector 39.0 74.0 19.0) (float-vector 39.0 74.0 -19.0) (float-vector -19.0 74.0 -19.0001)))
         (instance face :init :vertices (list (float-vector 63.75 79.0 19.5) (float-vector -53.0 79.0 19.4999) (float-vector -53.0 79.0 -19.5001) (float-vector 63.75 79.0 -19.5)))
         (instance face :init :vertices (list (float-vector -15.0 60.0 19.4999) (float-vector -53.0 79.0 19.4999) (float-vector 63.75 79.0 19.5) (float-vector 40.0 60.0 19.5)))
         (instance face :init :vertices (list (float-vector 40.0 60.0 -19.5) (float-vector 63.75 79.0 -19.5) (float-vector -53.0 79.0 -19.5001) (float-vector -15.0 60.0 -19.5)))
         (instance face :init :vertices (list (float-vector 40.0 60.0 -20.5) (float-vector 65.0 80.0 -20.5) (float-vector 65.0 80.0 20.5) (float-vector 40.0 60.0 20.5) (float-vector 40.0 60.0 19.5) (float-vector 63.75 79.0 19.5) (float-vector 63.75 79.0 -19.5) (float-vector 40.0 60.0 -19.5)))
         (instance face :init :vertices (list (float-vector -55.0 80.0 -20.5001) (float-vector 65.0 80.0 -20.5) (float-vector 40.0 60.0 -20.5) (float-vector -15.0 60.0 -20.5)))
         (instance face :init :vertices (list (float-vector -15.0 60.0 20.4999) (float-vector 40.0 60.0 20.5) (float-vector 65.0 80.0 20.5) (float-vector -55.0 80.0 20.4999)))
         (instance face :init :vertices (list (float-vector -15.0 60.0 -19.5) (float-vector -15.0 60.0 -20.5) (float-vector 40.0 60.0 -20.5) (float-vector 40.0 60.0 -19.5)))
         (instance face :init :vertices (list (float-vector -15.0 60.0 20.4999) (float-vector -15.0 60.0 19.4999) (float-vector 40.0 60.0 19.5) (float-vector 40.0 60.0 20.5)))
         (instance face :init :vertices (list (float-vector -55.0 80.0 20.4999) (float-vector -55.0 80.0 -20.5001) (float-vector -15.0 60.0 -20.5) (float-vector -15.0 60.0 -19.5) (float-vector -53.0 79.0 -19.5001) (float-vector -53.0 79.0 19.4999) (float-vector -15.0 60.0 19.4999) (float-vector -15.0 60.0 20.4999)))
         (instance face :init :vertices (list (float-vector -55.0 80.0 -20.5001) (float-vector -55.0 80.0 20.4999) (float-vector 65.0 80.0 20.5) (float-vector 65.0 80.0 -20.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-neck-p :weight 206.056 :centroid (float-vector 10.3529 53.7278 -3.204809e-05) :inertia-tensor #2f((10761.0 -2270.37 0.002555) (-2270.37 2620.58 0.008877) (0.002555 0.008877 9842.31))))

     ;; definition of assoc
     (send blink3 :newcoords (make-coords :pos (float-vector 2.910383e-11 80.0 3.814697e-06) :rot #2f((-1.0 -7.152560e-07 -2.713120e-13) (7.152560e-07 -1.0 3.348904e-14) (-2.713120e-13 3.348885e-14 1.0))))
     (send blink2 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector 1.455192e-11 74.0 0.0) :rot #2f((1.0 1.430512e-06 2.009723e-14) (-1.430512e-06 1.0 6.697864e-14) (-2.009713e-14 -6.697866e-14 1.0))))
     (send blink1 :assoc blink2)
     (send blink7 :newcoords (make-coords :pos (float-vector -2.682209e-06 63.0 -7.629395e-06) :rot #2f((1.0 8.038875e-14 -8.038872e-14) (-8.038875e-14 1.0 3.231174e-27) (8.038872e-14 3.231174e-27 1.0))))
     (send blink6 :assoc blink7)
     (send blink6 :newcoords (make-coords :pos (float-vector 2.682194e-06 90.0 7.629395e-06) :rot #2f((1.0 1.341105e-06 -2.980201e-08) (-1.341105e-06 1.0 6.774117e-13) (2.980201e-08 -6.374441e-13 1.0))))
     (send blink5 :assoc blink6)
     (send blink5 :newcoords (make-coords :pos (float-vector -0.000116 70.0 15.0) :rot #2f((1.0 3.278261e-07 -1.662062e-06) (1.662062e-06 -4.172322e-07 1.0) (3.278254e-07 -1.0 -4.172328e-07))))
     (send blink4 :assoc blink5)
     (send blink11 :newcoords (make-coords :pos (float-vector 2.910383e-11 80.0 3.814697e-06) :rot #2f((-1.0 -7.152560e-07 -2.713120e-13) (7.152560e-07 -1.0 3.348904e-14) (-2.713120e-13 3.348885e-14 1.0))))
     (send blink10 :assoc blink11)
     (send blink10 :newcoords (make-coords :pos (float-vector 0.0 74.0 0.0) :rot #2f((1.0 1.430512e-06 2.009723e-14) (-1.430512e-06 1.0 6.697864e-14) (-2.009713e-14 -6.697866e-14 1.0))))
     (send blink9 :assoc blink10)
     (send blink15 :newcoords (make-coords :pos (float-vector -2.682209e-06 63.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink14 :assoc blink15)
     (send blink14 :newcoords (make-coords :pos (float-vector 5.364418e-06 89.9999 -7.629395e-06) :rot #2f((1.0 1.370907e-06 -5.960441e-08) (-1.370907e-06 1.0 7.098935e-13) (5.960441e-08 -6.281814e-13 1.0))))
     (send blink13 :assoc blink14)
     (send blink13 :newcoords (make-coords :pos (float-vector -2.551608e-05 70.0 -15.0) :rot #2f((1.0 3.258410e-07 4.154778e-07) (4.154776e-07 5.066395e-07 -1.0) (-3.258413e-07 1.0 5.066394e-07))))
     (send blink12 :assoc blink13)
     (send blink8 :newcoords (make-coords :pos (float-vector -8.475745e-06 1.168132e-19 27.0) :rot #2f((6.854534e-07 -5.066394e-07 -1.0) (-1.0 -2.682210e-07 -6.854534e-07) (-2.682209e-07 1.0 -5.066394e-07))))
     (send blink16 :assoc blink8)
     (send blink16 :newcoords (make-coords :pos (float-vector 0.0 0.0 170.0) :rot #2f((4.241202e-07 -1.0 0.0) (1.0 4.241202e-07 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink16)
     (send blink12 :newcoords (make-coords :pos (float-vector -2.332661e-05 55.0 164.0) :rot #2f((-1.0 -1.432993e-06 -6.278329e-07) (-1.432993e-06 1.0 -4.213685e-13) (6.278329e-07 4.783117e-13 -1.0))))
     (send blink0 :assoc blink12)
     (send blink9 :newcoords (make-coords :pos (float-vector -1.802511e-05 42.5 60.0) :rot #2f((-1.0 -1.043081e-06 9.364294e-08) (-9.364287e-08 -8.429375e-08 -1.0) (1.043081e-06 -1.0 8.429365e-08))))
     (send blink0 :assoc blink9)
     (send blink4 :newcoords (make-coords :pos (float-vector 2.332661e-05 -55.0 164.0) :rot #2f((-1.0 -6.743496e-07 0.0) (6.743496e-07 -1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink4)
     (send blink1 :newcoords (make-coords :pos (float-vector 1.802511e-05 -42.5 60.0) :rot #2f((-1.0 -1.043081e-06 9.364294e-08) (-9.364287e-08 -8.429375e-08 -1.0) (1.043081e-06 -1.0 8.429365e-08))))
     (send blink0 :assoc blink1)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of head-end-coords
     (setq head-end-coords
       (make-cascoords
	:coords (send (send blink8 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 40.0 70.0 -3.049758e-05) :rot #2f((-3.302871e-07 1.192090e-07 1.0) (6.845760e-07 -1.0 1.192093e-07) (1.0 6.845761e-07 3.302870e-07))))))
     (send blink8 :assoc head-end-coords)

     ;; definition of larm-end-coords
     (setq larm-end-coords
       (make-cascoords
	:coords (send (send blink15 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 40.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))))
     (send blink15 :assoc larm-end-coords)

     ;; definition of lleg-end-coords
     (setq lleg-end-coords
       (make-cascoords
	:coords (send (send blink11 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -20.0 -25.0 -1.907349e-05) :rot #2f((-1.013279e-06 1.0 2.980232e-07) (5.960458e-08 -2.980233e-07 1.0) (1.0 1.013279e-06 -5.960459e-08))))))
     (send blink11 :assoc lleg-end-coords)

     ;; definition of rarm-end-coords
     (setq rarm-end-coords
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -2.910383e-11 40.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))))
     (send blink7 :assoc rarm-end-coords)

     ;; definition of rleg-end-coords
     (setq rleg-end-coords
       (make-cascoords
	:coords (send (send blink3 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -20.0 -25.0 -1.907349e-05) :rot #2f((-1.013279e-06 1.0 2.980232e-07) (5.960458e-08 -2.980233e-07 1.0) (1.0 1.013279e-06 -5.960459e-08))))))
     (send blink3 :assoc rleg-end-coords)

     ;; definition of joint

     ;; definition of :neck-y
     (setq joint15 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink16 :name :head-neck-y :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :neck-p
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink16 :child-link blink8 :name :head-neck-p :axis :-z
			     :min    0.0 :max  180.0))

     ;; definition of :shoulder-y
     (setq joint11 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink12 :name :larm-shoulder-y :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :shoulder-p
     (setq joint12 (instance rotational-joint :init
			     :parent-link blink12 :child-link blink13 :name :larm-shoulder-p :axis :-z
			     :min  -45.0 :max  135.0))

     ;; definition of :elbow-p
     (setq joint13 (instance rotational-joint :init
			     :parent-link blink13 :child-link blink14 :name :larm-elbow-p :axis :-z
			     :min -135.0 :max   45.0))

     ;; definition of :gripper
     (setq joint14 (instance rotational-joint :init
			     :parent-link blink14 :child-link blink15 :name :larm-gripper :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :crotch-p
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink9 :name :lleg-crotch-p :axis :-z
			     :min -135.0 :max   45.0))

     ;; definition of :knee-p
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink9 :child-link blink10 :name :lleg-knee-p :axis :-z
			     :min  -45.0 :max  135.0))

     ;; definition of :ankle-p
     (setq joint10 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink11 :name :lleg-ankle-p :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :shoulder-y
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink4 :name :rarm-shoulder-y :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :shoulder-p
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink4 :child-link blink5 :name :rarm-shoulder-p :axis :-z
			     :min  -45.0 :max  135.0))

     ;; definition of :elbow-p
     (setq joint5 (instance rotational-joint :init
			     :parent-link blink5 :child-link blink6 :name :rarm-elbow-p :axis :-z
			     :min -135.0 :max   45.0))

     ;; definition of :gripper
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink6 :child-link blink7 :name :rarm-gripper :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :crotch-p
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :rleg-crotch-p :axis :-z
			     :min -135.0 :max   45.0))

     ;; definition of :knee-p
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink1 :child-link blink2 :name :rleg-knee-p :axis :-z
			     :min  -45.0 :max  135.0))

     ;; definition of :ankle-p
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink3 :name :rleg-ankle-p :axis :-z
			     :min  -90.0 :max   90.0))

     (setq head-root-link blink16)
     (setq head (list blink16 blink8))
     (setq larm-root-link blink12)
     (setq larm (list blink12 blink13 blink14 blink15))
     (setq lleg-root-link blink9)
     (setq lleg (list blink9 blink10 blink11))
     (setq rarm-root-link blink4)
     (setq rarm (list blink4 blink5 blink6 blink7))
     (setq rleg-root-link blink1)
     (setq rleg (list blink1 blink2 blink3))
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15))
     ;; definition of collision-avoidance-links
     (setq collision-avoidance-links
       (list
        ))

     (setq sensors (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)
     self))
  )

(defun ape3 (&rest args) (instance* ape3-robot :init args))
;; (format *error-output* "(instance ape3-robot :init) for generating model~%")
