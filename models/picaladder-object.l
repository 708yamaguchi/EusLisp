;;
;;
;; this file is automatically generated from euslisp+euslib version EusLisp 8.26(r478M 647M 47109:47930) for Linux64 created on k-okada-t410s(Fri May 27 16:12:08 JST 2011)
;;
;;
(defclass picaladder-object
  :super cascaded-link
  :slots (sensors
         ))
(defmethod picaladder-object
  (:init
   (&rest args &key (name "picaladder") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :bodyset129988120
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 1824.0 -562.0 -456.0) (float-vector 1824.0 -562.0 -476.0) (float-vector 1824.0 -622.0 -476.0) (float-vector 1824.0 -622.0 -456.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -269.0) (float-vector 0.0 -10.0 -249.0) (float-vector 0.0 -70.0 -249.0) (float-vector 0.0 -70.0 -269.0)))
         (instance face :init :vertices (list (float-vector 1824.0 -562.0 -456.0) (float-vector 0.0 -10.0 -249.0) (float-vector 0.0 -10.0 -269.0) (float-vector 1824.0 -562.0 -476.0)))
         (instance face :init :vertices (list (float-vector 1824.0 -622.0 -456.0) (float-vector 0.0 -70.0 -249.0) (float-vector 0.0 -10.0 -249.0) (float-vector 1824.0 -562.0 -456.0)))
         (instance face :init :vertices (list (float-vector 1824.0 -622.0 -476.0) (float-vector 0.0 -70.0 -269.0) (float-vector 0.0 -70.0 -249.0) (float-vector 1824.0 -622.0 -456.0)))
         (instance face :init :vertices (list (float-vector 1824.0 -562.0 -476.0) (float-vector 0.0 -10.0 -269.0) (float-vector 0.0 -70.0 -269.0) (float-vector 1824.0 -622.0 -476.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 1824.0 -562.0 476.0) (float-vector 1824.0 -562.0 456.0) (float-vector 1824.0 -622.0 456.0) (float-vector 1824.0 -622.0 476.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 249.0) (float-vector 0.0 -10.0 269.0) (float-vector 0.0 -70.0 269.0) (float-vector 0.0 -70.0 249.0)))
         (instance face :init :vertices (list (float-vector 1824.0 -562.0 476.0) (float-vector 0.0 -10.0 269.0) (float-vector 0.0 -10.0 249.0) (float-vector 1824.0 -562.0 456.0)))
         (instance face :init :vertices (list (float-vector 1824.0 -622.0 476.0) (float-vector 0.0 -70.0 269.0) (float-vector 0.0 -10.0 269.0) (float-vector 1824.0 -562.0 476.0)))
         (instance face :init :vertices (list (float-vector 1824.0 -622.0 456.0) (float-vector 0.0 -70.0 249.0) (float-vector 0.0 -70.0 269.0) (float-vector 1824.0 -622.0 476.0)))
         (instance face :init :vertices (list (float-vector 1824.0 -562.0 456.0) (float-vector 0.0 -10.0 249.0) (float-vector 0.0 -70.0 249.0) (float-vector 1824.0 -622.0 456.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 1520.0 -530.0 432.0) (float-vector 1520.0 -470.0 432.0) (float-vector 1556.0 -480.0 432.0) (float-vector 1539.0 -531.0 432.0)))
         (instance face :init :vertices (list (float-vector 1520.0 -470.0 -431.0) (float-vector 1520.0 -530.0 -431.0) (float-vector 1539.0 -531.0 -431.0) (float-vector 1556.0 -480.0 -431.0)))
         (instance face :init :vertices (list (float-vector 1520.0 -530.0 432.0) (float-vector 1520.0 -530.0 -431.0) (float-vector 1520.0 -470.0 -431.0) (float-vector 1520.0 -470.0 432.0)))
         (instance face :init :vertices (list (float-vector 1539.0 -531.0 432.0) (float-vector 1539.0 -531.0 -431.0) (float-vector 1520.0 -530.0 -431.0) (float-vector 1520.0 -530.0 432.0)))
         (instance face :init :vertices (list (float-vector 1556.0 -480.0 432.0) (float-vector 1556.0 -480.0 -431.0) (float-vector 1539.0 -531.0 -431.0) (float-vector 1539.0 -531.0 432.0)))
         (instance face :init :vertices (list (float-vector 1520.0 -470.0 432.0) (float-vector 1520.0 -470.0 -431.0) (float-vector 1556.0 -480.0 -431.0) (float-vector 1556.0 -480.0 432.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 1216.0 -438.0 397.0) (float-vector 1216.0 -378.0 397.0) (float-vector 1252.0 -388.0 397.0) (float-vector 1235.0 -439.0 397.0)))
         (instance face :init :vertices (list (float-vector 1216.0 -378.0 -397.0) (float-vector 1216.0 -438.0 -397.0) (float-vector 1235.0 -439.0 -397.0) (float-vector 1252.0 -388.0 -397.0)))
         (instance face :init :vertices (list (float-vector 1216.0 -438.0 397.0) (float-vector 1216.0 -438.0 -397.0) (float-vector 1216.0 -378.0 -397.0) (float-vector 1216.0 -378.0 397.0)))
         (instance face :init :vertices (list (float-vector 1235.0 -439.0 397.0) (float-vector 1235.0 -439.0 -397.0) (float-vector 1216.0 -438.0 -397.0) (float-vector 1216.0 -438.0 397.0)))
         (instance face :init :vertices (list (float-vector 1252.0 -388.0 397.0) (float-vector 1252.0 -388.0 -397.0) (float-vector 1235.0 -439.0 -397.0) (float-vector 1235.0 -439.0 397.0)))
         (instance face :init :vertices (list (float-vector 1216.0 -378.0 397.0) (float-vector 1216.0 -378.0 -397.0) (float-vector 1252.0 -388.0 -397.0) (float-vector 1252.0 -388.0 397.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 912.0 -346.0 363.0) (float-vector 912.0 -286.0 363.0) (float-vector 948.0 -296.0 363.0) (float-vector 931.0 -347.0 363.0)))
         (instance face :init :vertices (list (float-vector 912.0 -286.0 -362.0) (float-vector 912.0 -346.0 -362.0) (float-vector 931.0 -347.0 -362.0) (float-vector 948.0 -296.0 -362.0)))
         (instance face :init :vertices (list (float-vector 912.0 -346.0 363.0) (float-vector 912.0 -346.0 -362.0) (float-vector 912.0 -286.0 -362.0) (float-vector 912.0 -286.0 363.0)))
         (instance face :init :vertices (list (float-vector 931.0 -347.0 363.0) (float-vector 931.0 -347.0 -362.0) (float-vector 912.0 -346.0 -362.0) (float-vector 912.0 -346.0 363.0)))
         (instance face :init :vertices (list (float-vector 948.0 -296.0 363.0) (float-vector 948.0 -296.0 -362.0) (float-vector 931.0 -347.0 -362.0) (float-vector 931.0 -347.0 363.0)))
         (instance face :init :vertices (list (float-vector 912.0 -286.0 363.0) (float-vector 912.0 -286.0 -362.0) (float-vector 948.0 -296.0 -362.0) (float-vector 948.0 -296.0 363.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 608.0 -254.0 328.0) (float-vector 608.0 -194.0 328.0) (float-vector 644.0 -204.0 328.0) (float-vector 627.0 -255.0 328.0)))
         (instance face :init :vertices (list (float-vector 608.0 -194.0 -328.0) (float-vector 608.0 -254.0 -328.0) (float-vector 627.0 -255.0 -328.0) (float-vector 644.0 -204.0 -328.0)))
         (instance face :init :vertices (list (float-vector 608.0 -254.0 328.0) (float-vector 608.0 -254.0 -328.0) (float-vector 608.0 -194.0 -328.0) (float-vector 608.0 -194.0 328.0)))
         (instance face :init :vertices (list (float-vector 627.0 -255.0 328.0) (float-vector 627.0 -255.0 -328.0) (float-vector 608.0 -254.0 -328.0) (float-vector 608.0 -254.0 328.0)))
         (instance face :init :vertices (list (float-vector 644.0 -204.0 328.0) (float-vector 644.0 -204.0 -328.0) (float-vector 627.0 -255.0 -328.0) (float-vector 627.0 -255.0 328.0)))
         (instance face :init :vertices (list (float-vector 608.0 -194.0 328.0) (float-vector 608.0 -194.0 -328.0) (float-vector 644.0 -204.0 -328.0) (float-vector 644.0 -204.0 328.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 304.0 -162.0 294.0) (float-vector 304.0 -102.0 294.0) (float-vector 340.0 -112.0 294.0) (float-vector 323.0 -163.0 294.0)))
         (instance face :init :vertices (list (float-vector 304.0 -102.0 -293.0) (float-vector 304.0 -162.0 -293.0) (float-vector 323.0 -163.0 -293.0) (float-vector 340.0 -112.0 -293.0)))
         (instance face :init :vertices (list (float-vector 304.0 -162.0 294.0) (float-vector 304.0 -162.0 -293.0) (float-vector 304.0 -102.0 -293.0) (float-vector 304.0 -102.0 294.0)))
         (instance face :init :vertices (list (float-vector 323.0 -163.0 294.0) (float-vector 323.0 -163.0 -293.0) (float-vector 304.0 -162.0 -293.0) (float-vector 304.0 -162.0 294.0)))
         (instance face :init :vertices (list (float-vector 340.0 -112.0 294.0) (float-vector 340.0 -112.0 -293.0) (float-vector 323.0 -163.0 -293.0) (float-vector 323.0 -163.0 294.0)))
         (instance face :init :vertices (list (float-vector 304.0 -102.0 294.0) (float-vector 304.0 -102.0 -293.0) (float-vector 340.0 -112.0 -293.0) (float-vector 340.0 -112.0 294.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.0 -70.0 259.0) (float-vector 0.0 -10.0 259.0) (float-vector 36.0 -20.0 259.0) (float-vector 19.0 -71.0 259.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -259.0) (float-vector 0.0 -70.0 -259.0) (float-vector 19.0 -71.0 -259.0) (float-vector 36.0 -20.0 -259.0)))
         (instance face :init :vertices (list (float-vector 0.0 -70.0 259.0) (float-vector 0.0 -70.0 -259.0) (float-vector 0.0 -10.0 -259.0) (float-vector 0.0 -10.0 259.0)))
         (instance face :init :vertices (list (float-vector 19.0 -71.0 259.0) (float-vector 19.0 -71.0 -259.0) (float-vector 0.0 -70.0 -259.0) (float-vector 0.0 -70.0 259.0)))
         (instance face :init :vertices (list (float-vector 36.0 -20.0 259.0) (float-vector 36.0 -20.0 -259.0) (float-vector 19.0 -71.0 -259.0) (float-vector 19.0 -71.0 259.0)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 259.0) (float-vector 0.0 -10.0 -259.0) (float-vector 36.0 -20.0 -259.0) (float-vector 36.0 -20.0 259.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 1824.0 562.0 456.0) (float-vector 1824.0 562.0 476.0) (float-vector 1824.0 622.0 476.0) (float-vector 1824.0 622.0 456.0)))
         (instance face :init :vertices (list (float-vector 0.0 10.0 269.0) (float-vector 0.0 10.0 249.0) (float-vector 0.0 70.0 249.0) (float-vector 0.0 70.0 269.0)))
         (instance face :init :vertices (list (float-vector 1824.0 562.0 456.0) (float-vector 0.0 10.0 249.0) (float-vector 0.0 10.0 269.0) (float-vector 1824.0 562.0 476.0)))
         (instance face :init :vertices (list (float-vector 1824.0 622.0 456.0) (float-vector 0.0 70.0 249.0) (float-vector 0.0 10.0 249.0) (float-vector 1824.0 562.0 456.0)))
         (instance face :init :vertices (list (float-vector 1824.0 622.0 476.0) (float-vector 0.0 70.0 269.0) (float-vector 0.0 70.0 249.0) (float-vector 1824.0 622.0 456.0)))
         (instance face :init :vertices (list (float-vector 1824.0 562.0 476.0) (float-vector 0.0 10.0 269.0) (float-vector 0.0 70.0 269.0) (float-vector 1824.0 622.0 476.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 1824.0 562.0 -476.0) (float-vector 1824.0 562.0 -456.0) (float-vector 1824.0 622.0 -456.0) (float-vector 1824.0 622.0 -476.0)))
         (instance face :init :vertices (list (float-vector 0.0 10.0 -249.0) (float-vector 0.0 10.0 -269.0) (float-vector 0.0 70.0 -269.0) (float-vector 0.0 70.0 -249.0)))
         (instance face :init :vertices (list (float-vector 1824.0 562.0 -476.0) (float-vector 0.0 10.0 -269.0) (float-vector 0.0 10.0 -249.0) (float-vector 1824.0 562.0 -456.0)))
         (instance face :init :vertices (list (float-vector 1824.0 622.0 -476.0) (float-vector 0.0 70.0 -269.0) (float-vector 0.0 10.0 -269.0) (float-vector 1824.0 562.0 -476.0)))
         (instance face :init :vertices (list (float-vector 1824.0 622.0 -456.0) (float-vector 0.0 70.0 -249.0) (float-vector 0.0 70.0 -269.0) (float-vector 1824.0 622.0 -476.0)))
         (instance face :init :vertices (list (float-vector 1824.0 562.0 -456.0) (float-vector 0.0 10.0 -249.0) (float-vector 0.0 70.0 -249.0) (float-vector 1824.0 622.0 -456.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 1520.0 530.0 -432.0) (float-vector 1520.0 470.0 -432.0) (float-vector 1556.0 480.0 -432.0) (float-vector 1539.0 531.0 -432.0)))
         (instance face :init :vertices (list (float-vector 1520.0 470.0 431.0) (float-vector 1520.0 530.0 431.0) (float-vector 1539.0 531.0 431.0) (float-vector 1556.0 480.0 431.0)))
         (instance face :init :vertices (list (float-vector 1520.0 530.0 -432.0) (float-vector 1520.0 530.0 431.0) (float-vector 1520.0 470.0 431.0) (float-vector 1520.0 470.0 -432.0)))
         (instance face :init :vertices (list (float-vector 1539.0 531.0 -432.0) (float-vector 1539.0 531.0 431.0) (float-vector 1520.0 530.0 431.0) (float-vector 1520.0 530.0 -432.0)))
         (instance face :init :vertices (list (float-vector 1556.0 480.0 -432.0) (float-vector 1556.0 480.0 431.0) (float-vector 1539.0 531.0 431.0) (float-vector 1539.0 531.0 -432.0)))
         (instance face :init :vertices (list (float-vector 1520.0 470.0 -432.0) (float-vector 1520.0 470.0 431.0) (float-vector 1556.0 480.0 431.0) (float-vector 1556.0 480.0 -432.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 1216.0 438.0 -397.0) (float-vector 1216.0 378.0 -397.0) (float-vector 1252.0 388.0 -397.0) (float-vector 1235.0 439.0 -397.0)))
         (instance face :init :vertices (list (float-vector 1216.0 378.0 397.0) (float-vector 1216.0 438.0 397.0) (float-vector 1235.0 439.0 397.0) (float-vector 1252.0 388.0 397.0)))
         (instance face :init :vertices (list (float-vector 1216.0 438.0 -397.0) (float-vector 1216.0 438.0 397.0) (float-vector 1216.0 378.0 397.0) (float-vector 1216.0 378.0 -397.0)))
         (instance face :init :vertices (list (float-vector 1235.0 439.0 -397.0) (float-vector 1235.0 439.0 397.0) (float-vector 1216.0 438.0 397.0) (float-vector 1216.0 438.0 -397.0)))
         (instance face :init :vertices (list (float-vector 1252.0 388.0 -397.0) (float-vector 1252.0 388.0 397.0) (float-vector 1235.0 439.0 397.0) (float-vector 1235.0 439.0 -397.0)))
         (instance face :init :vertices (list (float-vector 1216.0 378.0 -397.0) (float-vector 1216.0 378.0 397.0) (float-vector 1252.0 388.0 397.0) (float-vector 1252.0 388.0 -397.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 912.0 346.0 -363.0) (float-vector 912.0 286.0 -363.0) (float-vector 948.0 296.0 -363.0) (float-vector 931.0 347.0 -363.0)))
         (instance face :init :vertices (list (float-vector 912.0 286.0 362.0) (float-vector 912.0 346.0 362.0) (float-vector 931.0 347.0 362.0) (float-vector 948.0 296.0 362.0)))
         (instance face :init :vertices (list (float-vector 912.0 346.0 -363.0) (float-vector 912.0 346.0 362.0) (float-vector 912.0 286.0 362.0) (float-vector 912.0 286.0 -363.0)))
         (instance face :init :vertices (list (float-vector 931.0 347.0 -363.0) (float-vector 931.0 347.0 362.0) (float-vector 912.0 346.0 362.0) (float-vector 912.0 346.0 -363.0)))
         (instance face :init :vertices (list (float-vector 948.0 296.0 -363.0) (float-vector 948.0 296.0 362.0) (float-vector 931.0 347.0 362.0) (float-vector 931.0 347.0 -363.0)))
         (instance face :init :vertices (list (float-vector 912.0 286.0 -363.0) (float-vector 912.0 286.0 362.0) (float-vector 948.0 296.0 362.0) (float-vector 948.0 296.0 -363.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 608.0 254.0 -328.0) (float-vector 608.0 194.0 -328.0) (float-vector 644.0 204.0 -328.0) (float-vector 627.0 255.0 -328.0)))
         (instance face :init :vertices (list (float-vector 608.0 194.0 328.0) (float-vector 608.0 254.0 328.0) (float-vector 627.0 255.0 328.0) (float-vector 644.0 204.0 328.0)))
         (instance face :init :vertices (list (float-vector 608.0 254.0 -328.0) (float-vector 608.0 254.0 328.0) (float-vector 608.0 194.0 328.0) (float-vector 608.0 194.0 -328.0)))
         (instance face :init :vertices (list (float-vector 627.0 255.0 -328.0) (float-vector 627.0 255.0 328.0) (float-vector 608.0 254.0 328.0) (float-vector 608.0 254.0 -328.0)))
         (instance face :init :vertices (list (float-vector 644.0 204.0 -328.0) (float-vector 644.0 204.0 328.0) (float-vector 627.0 255.0 328.0) (float-vector 627.0 255.0 -328.0)))
         (instance face :init :vertices (list (float-vector 608.0 194.0 -328.0) (float-vector 608.0 194.0 328.0) (float-vector 644.0 204.0 328.0) (float-vector 644.0 204.0 -328.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 304.0 162.0 -294.0) (float-vector 304.0 102.0 -294.0) (float-vector 340.0 112.0 -294.0) (float-vector 323.0 163.0 -294.0)))
         (instance face :init :vertices (list (float-vector 304.0 102.0 293.0) (float-vector 304.0 162.0 293.0) (float-vector 323.0 163.0 293.0) (float-vector 340.0 112.0 293.0)))
         (instance face :init :vertices (list (float-vector 304.0 162.0 -294.0) (float-vector 304.0 162.0 293.0) (float-vector 304.0 102.0 293.0) (float-vector 304.0 102.0 -294.0)))
         (instance face :init :vertices (list (float-vector 323.0 163.0 -294.0) (float-vector 323.0 163.0 293.0) (float-vector 304.0 162.0 293.0) (float-vector 304.0 162.0 -294.0)))
         (instance face :init :vertices (list (float-vector 340.0 112.0 -294.0) (float-vector 340.0 112.0 293.0) (float-vector 323.0 163.0 293.0) (float-vector 323.0 163.0 -294.0)))
         (instance face :init :vertices (list (float-vector 304.0 102.0 -294.0) (float-vector 304.0 102.0 293.0) (float-vector 340.0 112.0 293.0) (float-vector 340.0 112.0 -294.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.0 70.0 -259.0) (float-vector 0.0 10.0 -259.0) (float-vector 36.0 20.0 -259.0) (float-vector 19.0 71.0 -259.0)))
         (instance face :init :vertices (list (float-vector 0.0 10.0 259.0) (float-vector 0.0 70.0 259.0) (float-vector 19.0 71.0 259.0) (float-vector 36.0 20.0 259.0)))
         (instance face :init :vertices (list (float-vector 0.0 70.0 -259.0) (float-vector 0.0 70.0 259.0) (float-vector 0.0 10.0 259.0) (float-vector 0.0 10.0 -259.0)))
         (instance face :init :vertices (list (float-vector 19.0 71.0 -259.0) (float-vector 19.0 71.0 259.0) (float-vector 0.0 70.0 259.0) (float-vector 0.0 70.0 -259.0)))
         (instance face :init :vertices (list (float-vector 36.0 20.0 -259.0) (float-vector 36.0 20.0 259.0) (float-vector 19.0 71.0 259.0) (float-vector 19.0 71.0 -259.0)))
         (instance face :init :vertices (list (float-vector 0.0 10.0 -259.0) (float-vector 0.0 10.0 259.0) (float-vector 36.0 20.0 259.0) (float-vector 36.0 20.0 -259.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 40.0 259.0) (float-vector -10.0 40.0 259.0) (float-vector -10.0 -40.0 259.0) (float-vector 10.0 -40.0 259.0)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -259.0) (float-vector 10.0 40.0 -259.0) (float-vector 10.0 -40.0 -259.0) (float-vector -10.0 -40.0 -259.0)))
         (instance face :init :vertices (list (float-vector 10.0 40.0 259.0) (float-vector 10.0 40.0 -259.0) (float-vector -10.0 40.0 -259.0) (float-vector -10.0 40.0 259.0)))
         (instance face :init :vertices (list (float-vector 10.0 -40.0 259.0) (float-vector 10.0 -40.0 -259.0) (float-vector 10.0 40.0 -259.0) (float-vector 10.0 40.0 259.0)))
         (instance face :init :vertices (list (float-vector -10.0 -40.0 259.0) (float-vector -10.0 -40.0 -259.0) (float-vector 10.0 -40.0 -259.0) (float-vector 10.0 -40.0 259.0)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 259.0) (float-vector -10.0 40.0 -259.0) (float-vector -10.0 -40.0 -259.0) (float-vector -10.0 -40.0 259.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color (list))
     (send (elt bc 1) :set-color (list))
     (send (elt bc 2) :set-color (list))
     (send (elt bc 3) :set-color (list))
     (send (elt bc 4) :set-color (list))
     (send (elt bc 5) :set-color (list))
     (send (elt bc 6) :set-color (list))
     (send (elt bc 7) :set-color (list))
     (send (elt bc 8) :set-color (list))
     (send (elt bc 9) :set-color (list))
     (send (elt bc 10) :set-color (list))
     (send (elt bc 11) :set-color (list))
     (send (elt bc 12) :set-color (list))
     (send (elt bc 13) :set-color (list))
     (send (elt bc 14) :set-color (list))
     (send (elt bc 15) :set-color (list))
     (send (elt bc 16) :set-color (list))
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset129988120 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))
  (:cameras (&rest args)
   (forward-message-to-all (list) args))

  (:handle () (list ))
  (:attention () (list ))
  (:button () (list ))
  )

(defun picaladder (&rest args) (instance* picaladder-object :init args))
;; (format *error-output* "(instance picaladder-object :init) for generating model~%")
