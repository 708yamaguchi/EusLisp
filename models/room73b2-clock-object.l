;;
;;
;; this file is automatically generated from euslisp+euslib
;;
;;
(defclass room73b2-clock-object
  :super cascaded-link
  :slots (sensors))
(defmethod room73b2-clock-object
  (:init
   (&rest args &key (name "room73b2-clock") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3
         joint0 joint1 joint2 joint3
        
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :bodyset178051368
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 20.0 -31.0583 34.0889) (float-vector 20.0 0.0 30.0) (float-vector 20.0 31.0583 34.0889) (float-vector 20.0 60.0 46.0769) (float-vector 20.0 84.8528 65.1472) (float-vector 20.0 103.923 90.0) (float-vector 20.0 115.911 118.942) (float-vector 20.0 120.0 150.0) (float-vector 20.0 115.911 181.058) (float-vector 20.0 103.923 210.0) (float-vector 20.0 84.8528 234.853) (float-vector 20.0 60.0 253.923) (float-vector 19.9999 31.0583 265.911) (float-vector 19.9999 0.0 270.0) (float-vector 19.9999 -31.0581 265.911) (float-vector 20.0 -60.0 253.923) (float-vector 20.0 -84.8528 234.853) (float-vector 20.0 -103.923 210.0) (float-vector 20.0 -115.911 181.058) (float-vector 20.0 -120.0 150.0) (float-vector 20.0 -115.911 118.942) (float-vector 20.0 -103.923 90.0) (float-vector 20.0 -84.853 65.1472) (float-vector 20.0 -60.0 46.0771)))
         (instance face :init :vertices (list (float-vector 5.00005 0.0 30.0) (float-vector 5.00005 -31.0583 34.0889) (float-vector 5.00004 -60.0 46.0769) (float-vector 5.00004 -84.853 65.1472) (float-vector 5.00002 -103.923 90.0) (float-vector 5.00001 -115.911 118.942) (float-vector 5.0 -120.0 150.0) (float-vector 4.99999 -115.911 181.058) (float-vector 4.99998 -103.923 210.0) (float-vector 4.99996 -84.8528 234.853) (float-vector 4.99996 -60.0 253.923) (float-vector 4.99995 -31.0581 265.911) (float-vector 4.99995 0.0 270.0) (float-vector 4.99995 31.0583 265.911) (float-vector 4.99996 60.0 253.923) (float-vector 4.99996 84.8528 234.853) (float-vector 4.99998 103.923 210.0) (float-vector 4.99999 115.911 181.058) (float-vector 5.0 120.0 150.0) (float-vector 5.00001 115.911 118.942) (float-vector 5.00002 103.923 90.0) (float-vector 5.00004 84.8528 65.1472) (float-vector 5.00004 60.0 46.0769) (float-vector 5.00005 31.0583 34.0889)))
         (instance face :init :vertices (list (float-vector 20.0 -31.0583 34.0889) (float-vector 5.00005 -31.0583 34.0889) (float-vector 5.00005 0.0 30.0) (float-vector 20.0 0.0 30.0)))
         (instance face :init :vertices (list (float-vector 20.0 -60.0 46.0771) (float-vector 5.00004 -60.0 46.0769) (float-vector 5.00005 -31.0583 34.0889) (float-vector 20.0 -31.0583 34.0889)))
         (instance face :init :vertices (list (float-vector 20.0 -84.853 65.1472) (float-vector 5.00004 -84.853 65.1472) (float-vector 5.00004 -60.0 46.0769) (float-vector 20.0 -60.0 46.0771)))
         (instance face :init :vertices (list (float-vector 20.0 -103.923 90.0) (float-vector 5.00002 -103.923 90.0) (float-vector 5.00004 -84.853 65.1472) (float-vector 20.0 -84.853 65.1472)))
         (instance face :init :vertices (list (float-vector 20.0 -115.911 118.942) (float-vector 5.00001 -115.911 118.942) (float-vector 5.00002 -103.923 90.0) (float-vector 20.0 -103.923 90.0)))
         (instance face :init :vertices (list (float-vector 20.0 -120.0 150.0) (float-vector 5.0 -120.0 150.0) (float-vector 5.00001 -115.911 118.942) (float-vector 20.0 -115.911 118.942)))
         (instance face :init :vertices (list (float-vector 20.0 -115.911 181.058) (float-vector 4.99999 -115.911 181.058) (float-vector 5.0 -120.0 150.0) (float-vector 20.0 -120.0 150.0)))
         (instance face :init :vertices (list (float-vector 20.0 -103.923 210.0) (float-vector 4.99998 -103.923 210.0) (float-vector 4.99999 -115.911 181.058) (float-vector 20.0 -115.911 181.058)))
         (instance face :init :vertices (list (float-vector 20.0 -84.8528 234.853) (float-vector 4.99996 -84.8528 234.853) (float-vector 4.99998 -103.923 210.0) (float-vector 20.0 -103.923 210.0)))
         (instance face :init :vertices (list (float-vector 20.0 -60.0 253.923) (float-vector 4.99996 -60.0 253.923) (float-vector 4.99996 -84.8528 234.853) (float-vector 20.0 -84.8528 234.853)))
         (instance face :init :vertices (list (float-vector 19.9999 -31.0581 265.911) (float-vector 4.99995 -31.0581 265.911) (float-vector 4.99996 -60.0 253.923) (float-vector 20.0 -60.0 253.923)))
         (instance face :init :vertices (list (float-vector 19.9999 0.0 270.0) (float-vector 4.99995 0.0 270.0) (float-vector 4.99995 -31.0581 265.911) (float-vector 19.9999 -31.0581 265.911)))
         (instance face :init :vertices (list (float-vector 19.9999 31.0583 265.911) (float-vector 4.99995 31.0583 265.911) (float-vector 4.99995 0.0 270.0) (float-vector 19.9999 0.0 270.0)))
         (instance face :init :vertices (list (float-vector 20.0 60.0 253.923) (float-vector 4.99996 60.0 253.923) (float-vector 4.99995 31.0583 265.911) (float-vector 19.9999 31.0583 265.911)))
         (instance face :init :vertices (list (float-vector 20.0 84.8528 234.853) (float-vector 4.99996 84.8528 234.853) (float-vector 4.99996 60.0 253.923) (float-vector 20.0 60.0 253.923)))
         (instance face :init :vertices (list (float-vector 20.0 103.923 210.0) (float-vector 4.99998 103.923 210.0) (float-vector 4.99996 84.8528 234.853) (float-vector 20.0 84.8528 234.853)))
         (instance face :init :vertices (list (float-vector 20.0 115.911 181.058) (float-vector 4.99999 115.911 181.058) (float-vector 4.99998 103.923 210.0) (float-vector 20.0 103.923 210.0)))
         (instance face :init :vertices (list (float-vector 20.0 120.0 150.0) (float-vector 5.0 120.0 150.0) (float-vector 4.99999 115.911 181.058) (float-vector 20.0 115.911 181.058)))
         (instance face :init :vertices (list (float-vector 20.0 115.911 118.942) (float-vector 5.00001 115.911 118.942) (float-vector 5.0 120.0 150.0) (float-vector 20.0 120.0 150.0)))
         (instance face :init :vertices (list (float-vector 20.0 103.923 90.0) (float-vector 5.00002 103.923 90.0) (float-vector 5.00001 115.911 118.942) (float-vector 20.0 115.911 118.942)))
         (instance face :init :vertices (list (float-vector 20.0 84.8528 65.1472) (float-vector 5.00004 84.8528 65.1472) (float-vector 5.00002 103.923 90.0) (float-vector 20.0 103.923 90.0)))
         (instance face :init :vertices (list (float-vector 20.0 60.0 46.0769) (float-vector 5.00004 60.0 46.0769) (float-vector 5.00004 84.8528 65.1472) (float-vector 20.0 84.8528 65.1472)))
         (instance face :init :vertices (list (float-vector 20.0 31.0583 34.0889) (float-vector 5.00005 31.0583 34.0889) (float-vector 5.00004 60.0 46.0769) (float-vector 20.0 60.0 46.0769)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 30.0) (float-vector 5.00005 0.0 30.0) (float-vector 5.00005 31.0583 34.0889) (float-vector 20.0 31.0583 34.0889)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 5.00006 0.0 0.0) (float-vector 5.00006 38.8228 5.11108) (float-vector 20.0001 38.8228 5.11108) (float-vector 20.0001 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 5.00006 75.0 20.0962) (float-vector 20.0001 75.0 20.0962) (float-vector 20.0001 38.8228 5.11108) (float-vector 5.00006 38.8228 5.11108)))
         (instance face :init :vertices (list (float-vector 5.00005 106.066 43.9341) (float-vector 20.0 106.066 43.9341) (float-vector 20.0001 75.0 20.0962) (float-vector 5.00006 75.0 20.0962)))
         (instance face :init :vertices (list (float-vector 5.00003 129.904 75.0) (float-vector 20.0 129.904 75.0) (float-vector 20.0 106.066 43.9341) (float-vector 5.00005 106.066 43.9341)))
         (instance face :init :vertices (list (float-vector 5.00002 144.889 111.177) (float-vector 20.0 144.889 111.177) (float-vector 20.0 129.904 75.0) (float-vector 5.00003 129.904 75.0)))
         (instance face :init :vertices (list (float-vector 5.0 150.0 150.0) (float-vector 20.0 150.0 150.0) (float-vector 20.0 144.889 111.177) (float-vector 5.00002 144.889 111.177)))
         (instance face :init :vertices (list (float-vector 4.99998 144.889 188.823) (float-vector 20.0 144.889 188.823) (float-vector 20.0 150.0 150.0) (float-vector 5.0 150.0 150.0)))
         (instance face :init :vertices (list (float-vector 4.99997 129.904 225.0) (float-vector 20.0 129.904 225.0) (float-vector 20.0 144.889 188.823) (float-vector 4.99998 144.889 188.823)))
         (instance face :init :vertices (list (float-vector 4.99995 106.066 256.066) (float-vector 20.0 106.066 256.066) (float-vector 20.0 129.904 225.0) (float-vector 4.99997 129.904 225.0)))
         (instance face :init :vertices (list (float-vector 4.99994 75.0 279.904) (float-vector 19.9999 75.0 279.904) (float-vector 20.0 106.066 256.066) (float-vector 4.99995 106.066 256.066)))
         (instance face :init :vertices (list (float-vector 4.99994 38.823 294.889) (float-vector 19.9999 38.823 294.889) (float-vector 19.9999 75.0 279.904) (float-vector 4.99994 75.0 279.904)))
         (instance face :init :vertices (list (float-vector 4.99994 0.0 300.0) (float-vector 19.9999 0.0 300.0) (float-vector 19.9999 38.823 294.889) (float-vector 4.99994 38.823 294.889)))
         (instance face :init :vertices (list (float-vector 4.99994 -38.8228 294.889) (float-vector 19.9999 -38.8228 294.889) (float-vector 19.9999 0.0 300.0) (float-vector 4.99994 0.0 300.0)))
         (instance face :init :vertices (list (float-vector 4.99994 -75.0 279.904) (float-vector 19.9999 -75.0 279.904) (float-vector 19.9999 -38.8228 294.889) (float-vector 4.99994 -38.8228 294.889)))
         (instance face :init :vertices (list (float-vector 4.99995 -106.066 256.066) (float-vector 20.0 -106.066 256.066) (float-vector 19.9999 -75.0 279.904) (float-vector 4.99994 -75.0 279.904)))
         (instance face :init :vertices (list (float-vector 4.99997 -129.904 225.0) (float-vector 20.0 -129.904 225.0) (float-vector 20.0 -106.066 256.066) (float-vector 4.99995 -106.066 256.066)))
         (instance face :init :vertices (list (float-vector 4.99998 -144.889 188.823) (float-vector 20.0 -144.889 188.823) (float-vector 20.0 -129.904 225.0) (float-vector 4.99997 -129.904 225.0)))
         (instance face :init :vertices (list (float-vector 5.0 -150.0 150.0) (float-vector 20.0 -150.0 150.0) (float-vector 20.0 -144.889 188.823) (float-vector 4.99998 -144.889 188.823)))
         (instance face :init :vertices (list (float-vector 5.00002 -144.889 111.177) (float-vector 20.0 -144.889 111.177) (float-vector 20.0 -150.0 150.0) (float-vector 5.0 -150.0 150.0)))
         (instance face :init :vertices (list (float-vector 5.00003 -129.904 75.0002) (float-vector 20.0 -129.904 75.0002) (float-vector 20.0 -144.889 111.177) (float-vector 5.00002 -144.889 111.177)))
         (instance face :init :vertices (list (float-vector 5.00005 -106.066 43.9341) (float-vector 20.0 -106.066 43.9341) (float-vector 20.0 -129.904 75.0002) (float-vector 5.00003 -129.904 75.0002)))
         (instance face :init :vertices (list (float-vector 5.00006 -75.0002 20.0962) (float-vector 20.0001 -75.0002 20.0962) (float-vector 20.0 -106.066 43.9341) (float-vector 5.00005 -106.066 43.9341)))
         (instance face :init :vertices (list (float-vector 5.00006 -38.823 5.11108) (float-vector 20.0001 -38.823 5.11108) (float-vector 20.0001 -75.0002 20.0962) (float-vector 5.00006 -75.0002 20.0962)))
         (instance face :init :vertices (list (float-vector 20.0001 0.0 0.0) (float-vector 20.0001 38.8228 5.11108) (float-vector 20.0001 75.0 20.0962) (float-vector 20.0 106.066 43.9341) (float-vector 20.0 129.904 75.0) (float-vector 20.0 144.889 111.177) (float-vector 20.0 150.0 150.0) (float-vector 20.0 144.889 188.823) (float-vector 20.0 129.904 225.0) (float-vector 20.0 106.066 256.066) (float-vector 19.9999 75.0 279.904) (float-vector 19.9999 38.823 294.889) (float-vector 19.9999 0.0 300.0) (float-vector 19.9999 -38.8228 294.889) (float-vector 19.9999 -75.0 279.904) (float-vector 20.0 -106.066 256.066) (float-vector 20.0 -129.904 225.0) (float-vector 20.0 -144.889 188.823) (float-vector 20.0 -150.0 150.0) (float-vector 20.0 -144.889 111.177) (float-vector 20.0 -129.904 75.0002) (float-vector 20.0 -106.066 43.9341) (float-vector 20.0001 -75.0002 20.0962) (float-vector 20.0001 -38.823 5.11108))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 20.0 -31.0583 34.0889) (float-vector 20.0 -60.0 46.0771) (float-vector 20.0 -84.853 65.1472) (float-vector 20.0 -103.923 90.0) (float-vector 20.0 -115.911 118.942) (float-vector 20.0 -120.0 150.0) (float-vector 20.0 -115.911 181.058) (float-vector 20.0 -103.923 210.0) (float-vector 20.0 -84.8528 234.853) (float-vector 20.0 -60.0 253.923) (float-vector 19.9999 -31.0581 265.911) (float-vector 19.9999 0.0 270.0) (float-vector 19.9999 31.0583 265.911) (float-vector 20.0 60.0 253.923) (float-vector 20.0 84.8528 234.853) (float-vector 20.0 103.923 210.0) (float-vector 20.0 115.911 181.058) (float-vector 20.0 120.0 150.0) (float-vector 20.0 115.911 118.942) (float-vector 20.0 103.923 90.0) (float-vector 20.0 84.8528 65.1472) (float-vector 20.0 60.0 46.0769) (float-vector 20.0 31.0583 34.0889) (float-vector 20.0 0.0 30.0)))
))
         (instance face :init :vertices (list (float-vector 5.00006 -38.823 5.11108) (float-vector 5.00006 -75.0002 20.0962) (float-vector 5.00005 -106.066 43.9341) (float-vector 5.00003 -129.904 75.0002) (float-vector 5.00002 -144.889 111.177) (float-vector 5.0 -150.0 150.0) (float-vector 4.99998 -144.889 188.823) (float-vector 4.99997 -129.904 225.0) (float-vector 4.99995 -106.066 256.066) (float-vector 4.99994 -75.0 279.904) (float-vector 4.99994 -38.8228 294.889) (float-vector 4.99994 0.0 300.0) (float-vector 4.99994 38.823 294.889) (float-vector 4.99994 75.0 279.904) (float-vector 4.99995 106.066 256.066) (float-vector 4.99997 129.904 225.0) (float-vector 4.99998 144.889 188.823) (float-vector 5.0 150.0 150.0) (float-vector 5.00002 144.889 111.177) (float-vector 5.00003 129.904 75.0) (float-vector 5.00005 106.066 43.9341) (float-vector 5.00006 75.0 20.0962) (float-vector 5.00006 38.8228 5.11108) (float-vector 5.00006 0.0 0.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.00005 -31.0583 34.0889) (float-vector 5.00005 0.0 30.0) (float-vector 5.00005 31.0583 34.0889) (float-vector 5.00004 60.0 46.0769) (float-vector 5.00004 84.8528 65.1472) (float-vector 5.00002 103.923 90.0) (float-vector 5.00001 115.911 118.942) (float-vector 5.0 120.0 150.0) (float-vector 4.99999 115.911 181.058) (float-vector 4.99998 103.923 210.0) (float-vector 4.99996 84.8528 234.853) (float-vector 4.99996 60.0 253.923) (float-vector 4.99995 31.0583 265.911) (float-vector 4.99995 0.0 270.0) (float-vector 4.99995 -31.0581 265.911) (float-vector 4.99996 -60.0 253.923) (float-vector 4.99996 -84.8528 234.853) (float-vector 4.99998 -103.923 210.0) (float-vector 4.99999 -115.911 181.058) (float-vector 5.0 -120.0 150.0) (float-vector 5.00001 -115.911 118.942) (float-vector 5.00002 -103.923 90.0) (float-vector 5.00004 -84.853 65.1472) (float-vector 5.00004 -60.0 46.0769)))
))
         (instance face :init :vertices (list (float-vector 5.00006 0.0 0.0) (float-vector 20.0001 0.0 0.0) (float-vector 20.0001 -38.823 5.11108) (float-vector 5.00006 -38.823 5.11108)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 30.0) (float-vector 20.0 31.0583 34.0889) (float-vector 5.00005 31.0583 34.0889) (float-vector 5.00005 0.0 30.0)))
         (instance face :init :vertices (list (float-vector 5.00004 60.0 46.0769) (float-vector 5.00005 31.0583 34.0889) (float-vector 20.0 31.0583 34.0889) (float-vector 20.0 60.0 46.0769)))
         (instance face :init :vertices (list (float-vector 5.00004 84.8528 65.1472) (float-vector 5.00004 60.0 46.0769) (float-vector 20.0 60.0 46.0769) (float-vector 20.0 84.8528 65.1472)))
         (instance face :init :vertices (list (float-vector 5.00002 103.923 90.0) (float-vector 5.00004 84.8528 65.1472) (float-vector 20.0 84.8528 65.1472) (float-vector 20.0 103.923 90.0)))
         (instance face :init :vertices (list (float-vector 5.00001 115.911 118.942) (float-vector 5.00002 103.923 90.0) (float-vector 20.0 103.923 90.0) (float-vector 20.0 115.911 118.942)))
         (instance face :init :vertices (list (float-vector 5.0 120.0 150.0) (float-vector 5.00001 115.911 118.942) (float-vector 20.0 115.911 118.942) (float-vector 20.0 120.0 150.0)))
         (instance face :init :vertices (list (float-vector 4.99999 115.911 181.058) (float-vector 5.0 120.0 150.0) (float-vector 20.0 120.0 150.0) (float-vector 20.0 115.911 181.058)))
         (instance face :init :vertices (list (float-vector 4.99998 103.923 210.0) (float-vector 4.99999 115.911 181.058) (float-vector 20.0 115.911 181.058) (float-vector 20.0 103.923 210.0)))
         (instance face :init :vertices (list (float-vector 4.99996 84.8528 234.853) (float-vector 4.99998 103.923 210.0) (float-vector 20.0 103.923 210.0) (float-vector 20.0 84.8528 234.853)))
         (instance face :init :vertices (list (float-vector 4.99996 60.0 253.923) (float-vector 4.99996 84.8528 234.853) (float-vector 20.0 84.8528 234.853) (float-vector 20.0 60.0 253.923)))
         (instance face :init :vertices (list (float-vector 4.99995 31.0583 265.911) (float-vector 4.99996 60.0 253.923) (float-vector 20.0 60.0 253.923) (float-vector 19.9999 31.0583 265.911)))
         (instance face :init :vertices (list (float-vector 4.99995 0.0 270.0) (float-vector 4.99995 31.0583 265.911) (float-vector 19.9999 31.0583 265.911) (float-vector 19.9999 0.0 270.0)))
         (instance face :init :vertices (list (float-vector 4.99995 -31.0581 265.911) (float-vector 4.99995 0.0 270.0) (float-vector 19.9999 0.0 270.0) (float-vector 19.9999 -31.0581 265.911)))
         (instance face :init :vertices (list (float-vector 4.99996 -60.0 253.923) (float-vector 4.99995 -31.0581 265.911) (float-vector 19.9999 -31.0581 265.911) (float-vector 20.0 -60.0 253.923)))
         (instance face :init :vertices (list (float-vector 4.99996 -84.8528 234.853) (float-vector 4.99996 -60.0 253.923) (float-vector 20.0 -60.0 253.923) (float-vector 20.0 -84.8528 234.853)))
         (instance face :init :vertices (list (float-vector 4.99998 -103.923 210.0) (float-vector 4.99996 -84.8528 234.853) (float-vector 20.0 -84.8528 234.853) (float-vector 20.0 -103.923 210.0)))
         (instance face :init :vertices (list (float-vector 4.99999 -115.911 181.058) (float-vector 4.99998 -103.923 210.0) (float-vector 20.0 -103.923 210.0) (float-vector 20.0 -115.911 181.058)))
         (instance face :init :vertices (list (float-vector 5.0 -120.0 150.0) (float-vector 4.99999 -115.911 181.058) (float-vector 20.0 -115.911 181.058) (float-vector 20.0 -120.0 150.0)))
         (instance face :init :vertices (list (float-vector 5.00001 -115.911 118.942) (float-vector 5.0 -120.0 150.0) (float-vector 20.0 -120.0 150.0) (float-vector 20.0 -115.911 118.942)))
         (instance face :init :vertices (list (float-vector 5.00002 -103.923 90.0) (float-vector 5.00001 -115.911 118.942) (float-vector 20.0 -115.911 118.942) (float-vector 20.0 -103.923 90.0)))
         (instance face :init :vertices (list (float-vector 5.00004 -84.853 65.1472) (float-vector 5.00002 -103.923 90.0) (float-vector 20.0 -103.923 90.0) (float-vector 20.0 -84.853 65.1472)))
         (instance face :init :vertices (list (float-vector 5.00004 -60.0 46.0769) (float-vector 5.00004 -84.853 65.1472) (float-vector 20.0 -84.853 65.1472) (float-vector 20.0 -60.0 46.0771)))
         (instance face :init :vertices (list (float-vector 5.00005 -31.0583 34.0889) (float-vector 5.00004 -60.0 46.0769) (float-vector 20.0 -60.0 46.0771) (float-vector 20.0 -31.0583 34.0889)))
         (instance face :init :vertices (list (float-vector 20.0 0.0 30.0) (float-vector 5.00005 0.0 30.0) (float-vector 5.00005 -31.0583 34.0889) (float-vector 20.0 -31.0583 34.0889)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 5.00006 -38.823 5.11108) (float-vector 5.00006 0.0 0.0) (float-vector 5.00006 38.8228 5.11108) (float-vector 5.00006 75.0 20.0962) (float-vector 5.00005 106.066 43.9341) (float-vector 5.00003 129.904 75.0) (float-vector 5.00002 144.889 111.177) (float-vector 5.0 150.0 150.0) (float-vector 4.99998 144.889 188.823) (float-vector 4.99997 129.904 225.0) (float-vector 4.99995 106.066 256.066) (float-vector 4.99994 75.0 279.904) (float-vector 4.99994 38.823 294.889) (float-vector 4.99994 0.0 300.0) (float-vector 4.99994 -38.8228 294.889) (float-vector 4.99994 -75.0 279.904) (float-vector 4.99995 -106.066 256.066) (float-vector 4.99997 -129.904 225.0) (float-vector 4.99998 -144.889 188.823) (float-vector 5.0 -150.0 150.0) (float-vector 5.00002 -144.889 111.177) (float-vector 5.00003 -129.904 75.0002) (float-vector 5.00005 -106.066 43.9341) (float-vector 5.00006 -75.0002 20.0962)))
         (instance face :init :vertices (list (float-vector -19.9999 0.0 0.0) (float-vector -19.9999 -38.823 5.11108) (float-vector -19.9999 -75.0002 20.0962) (float-vector -20.0 -106.066 43.9341) (float-vector -20.0 -129.904 75.0002) (float-vector -20.0 -144.889 111.177) (float-vector -20.0 -150.0 150.0) (float-vector -20.0 -144.889 188.823) (float-vector -20.0 -129.904 225.0) (float-vector -20.0 -106.066 256.066) (float-vector -20.0001 -75.0 279.904) (float-vector -20.0001 -38.8228 294.889) (float-vector -20.0001 0.0 300.0) (float-vector -20.0001 38.823 294.889) (float-vector -20.0001 75.0 279.904) (float-vector -20.0 106.066 256.066) (float-vector -20.0 129.904 225.0) (float-vector -20.0 144.889 188.823) (float-vector -20.0 150.0 150.0) (float-vector -20.0 144.889 111.177) (float-vector -20.0 129.904 75.0) (float-vector -20.0 106.066 43.9341) (float-vector -19.9999 75.0 20.0962) (float-vector -19.9999 38.8228 5.11108)))
         (instance face :init :vertices (list (float-vector 5.00006 -38.823 5.11108) (float-vector -19.9999 -38.823 5.11108) (float-vector -19.9999 0.0 0.0) (float-vector 5.00006 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 5.00006 -75.0002 20.0962) (float-vector -19.9999 -75.0002 20.0962) (float-vector -19.9999 -38.823 5.11108) (float-vector 5.00006 -38.823 5.11108)))
         (instance face :init :vertices (list (float-vector 5.00005 -106.066 43.9341) (float-vector -20.0 -106.066 43.9341) (float-vector -19.9999 -75.0002 20.0962) (float-vector 5.00006 -75.0002 20.0962)))
         (instance face :init :vertices (list (float-vector 5.00003 -129.904 75.0002) (float-vector -20.0 -129.904 75.0002) (float-vector -20.0 -106.066 43.9341) (float-vector 5.00005 -106.066 43.9341)))
         (instance face :init :vertices (list (float-vector 5.00002 -144.889 111.177) (float-vector -20.0 -144.889 111.177) (float-vector -20.0 -129.904 75.0002) (float-vector 5.00003 -129.904 75.0002)))
         (instance face :init :vertices (list (float-vector 5.0 -150.0 150.0) (float-vector -20.0 -150.0 150.0) (float-vector -20.0 -144.889 111.177) (float-vector 5.00002 -144.889 111.177)))
         (instance face :init :vertices (list (float-vector 4.99998 -144.889 188.823) (float-vector -20.0 -144.889 188.823) (float-vector -20.0 -150.0 150.0) (float-vector 5.0 -150.0 150.0)))
         (instance face :init :vertices (list (float-vector 4.99997 -129.904 225.0) (float-vector -20.0 -129.904 225.0) (float-vector -20.0 -144.889 188.823) (float-vector 4.99998 -144.889 188.823)))
         (instance face :init :vertices (list (float-vector 4.99995 -106.066 256.066) (float-vector -20.0 -106.066 256.066) (float-vector -20.0 -129.904 225.0) (float-vector 4.99997 -129.904 225.0)))
         (instance face :init :vertices (list (float-vector 4.99994 -75.0 279.904) (float-vector -20.0001 -75.0 279.904) (float-vector -20.0 -106.066 256.066) (float-vector 4.99995 -106.066 256.066)))
         (instance face :init :vertices (list (float-vector 4.99994 -38.8228 294.889) (float-vector -20.0001 -38.8228 294.889) (float-vector -20.0001 -75.0 279.904) (float-vector 4.99994 -75.0 279.904)))
         (instance face :init :vertices (list (float-vector 4.99994 0.0 300.0) (float-vector -20.0001 0.0 300.0) (float-vector -20.0001 -38.8228 294.889) (float-vector 4.99994 -38.8228 294.889)))
         (instance face :init :vertices (list (float-vector 4.99994 38.823 294.889) (float-vector -20.0001 38.823 294.889) (float-vector -20.0001 0.0 300.0) (float-vector 4.99994 0.0 300.0)))
         (instance face :init :vertices (list (float-vector 4.99994 75.0 279.904) (float-vector -20.0001 75.0 279.904) (float-vector -20.0001 38.823 294.889) (float-vector 4.99994 38.823 294.889)))
         (instance face :init :vertices (list (float-vector 4.99995 106.066 256.066) (float-vector -20.0 106.066 256.066) (float-vector -20.0001 75.0 279.904) (float-vector 4.99994 75.0 279.904)))
         (instance face :init :vertices (list (float-vector 4.99997 129.904 225.0) (float-vector -20.0 129.904 225.0) (float-vector -20.0 106.066 256.066) (float-vector 4.99995 106.066 256.066)))
         (instance face :init :vertices (list (float-vector 4.99998 144.889 188.823) (float-vector -20.0 144.889 188.823) (float-vector -20.0 129.904 225.0) (float-vector 4.99997 129.904 225.0)))
         (instance face :init :vertices (list (float-vector 5.0 150.0 150.0) (float-vector -20.0 150.0 150.0) (float-vector -20.0 144.889 188.823) (float-vector 4.99998 144.889 188.823)))
         (instance face :init :vertices (list (float-vector 5.00002 144.889 111.177) (float-vector -20.0 144.889 111.177) (float-vector -20.0 150.0 150.0) (float-vector 5.0 150.0 150.0)))
         (instance face :init :vertices (list (float-vector 5.00003 129.904 75.0) (float-vector -20.0 129.904 75.0) (float-vector -20.0 144.889 111.177) (float-vector 5.00002 144.889 111.177)))
         (instance face :init :vertices (list (float-vector 5.00005 106.066 43.9341) (float-vector -20.0 106.066 43.9341) (float-vector -20.0 129.904 75.0) (float-vector 5.00003 129.904 75.0)))
         (instance face :init :vertices (list (float-vector 5.00006 75.0 20.0962) (float-vector -19.9999 75.0 20.0962) (float-vector -20.0 106.066 43.9341) (float-vector 5.00005 106.066 43.9341)))
         (instance face :init :vertices (list (float-vector 5.00006 38.8228 5.11108) (float-vector -19.9999 38.8228 5.11108) (float-vector -19.9999 75.0 20.0962) (float-vector 5.00006 75.0 20.0962)))
         (instance face :init :vertices (list (float-vector 5.00006 0.0 0.0) (float-vector -19.9999 0.0 0.0) (float-vector -19.9999 38.8228 5.11108) (float-vector 5.00006 38.8228 5.11108)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (gl::transparent (elt bc 0) 0.1)
     (send (elt bc 1) :set-color :whitesmoke)
     (send (elt bc 2) :set-color :white)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset178051368 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :bodyset178050708
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 3.50012 60.0002) (float-vector -0.5 3.50012 60.0002) (float-vector -0.5 -3.5 60.0) (float-vector 0.5 -3.5 60.0)))
         (instance face :init :vertices (list (float-vector -0.5 3.50012 0.0) (float-vector 0.5 3.50012 0.0) (float-vector 0.5 -3.5 0.0) (float-vector -0.5 -3.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.5 3.50012 60.0002) (float-vector 0.5 3.50012 0.0) (float-vector -0.5 3.50012 0.0) (float-vector -0.5 3.50012 60.0002)))
         (instance face :init :vertices (list (float-vector 0.5 -3.5 60.0) (float-vector 0.5 -3.5 0.0) (float-vector 0.5 3.50012 0.0) (float-vector 0.5 3.50012 60.0002)))
         (instance face :init :vertices (list (float-vector -0.5 -3.5 60.0) (float-vector -0.5 -3.5 0.0) (float-vector 0.5 -3.5 0.0) (float-vector 0.5 -3.5 60.0)))
         (instance face :init :vertices (list (float-vector -0.5 3.50012 60.0002) (float-vector -0.5 3.50012 0.0) (float-vector -0.5 -3.5 0.0) (float-vector -0.5 -3.5 60.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.500004 -5.25 -9.09326) (float-vector 0.500004 0.0 -10.5) (float-vector 0.500004 5.25012 -9.09326) (float-vector 0.500002 9.09326 -5.25) (float-vector 0.5 10.5 0.0) (float-vector 0.499998 9.09326 5.25) (float-vector 0.499996 5.25 9.09326) (float-vector 0.499996 0.0 10.5) (float-vector 0.499996 -5.25 9.09326) (float-vector 0.499998 -9.09326 5.25) (float-vector 0.5 -10.5 0.0) (float-vector 0.500002 -9.09326 -5.25)))
         (instance face :init :vertices (list (float-vector -0.499996 0.0 -10.5) (float-vector -0.499996 -5.25 -9.09326) (float-vector -0.499998 -9.09326 -5.25) (float-vector -0.5 -10.5 0.0) (float-vector -0.500002 -9.09326 5.25) (float-vector -0.500004 -5.25 9.09326) (float-vector -0.500004 0.0 10.5) (float-vector -0.500004 5.25 9.09326) (float-vector -0.500002 9.09326 5.25) (float-vector -0.5 10.5 0.0) (float-vector -0.499998 9.09326 -5.25) (float-vector -0.499996 5.25012 -9.09326)))
         (instance face :init :vertices (list (float-vector 0.500004 -5.25 -9.09326) (float-vector -0.499996 -5.25 -9.09326) (float-vector -0.499996 0.0 -10.5) (float-vector 0.500004 0.0 -10.5)))
         (instance face :init :vertices (list (float-vector 0.500002 -9.09326 -5.25) (float-vector -0.499998 -9.09326 -5.25) (float-vector -0.499996 -5.25 -9.09326) (float-vector 0.500004 -5.25 -9.09326)))
         (instance face :init :vertices (list (float-vector 0.5 -10.5 0.0) (float-vector -0.5 -10.5 0.0) (float-vector -0.499998 -9.09326 -5.25) (float-vector 0.500002 -9.09326 -5.25)))
         (instance face :init :vertices (list (float-vector 0.499998 -9.09326 5.25) (float-vector -0.500002 -9.09326 5.25) (float-vector -0.5 -10.5 0.0) (float-vector 0.5 -10.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.499996 -5.25 9.09326) (float-vector -0.500004 -5.25 9.09326) (float-vector -0.500002 -9.09326 5.25) (float-vector 0.499998 -9.09326 5.25)))
         (instance face :init :vertices (list (float-vector 0.499996 0.0 10.5) (float-vector -0.500004 0.0 10.5) (float-vector -0.500004 -5.25 9.09326) (float-vector 0.499996 -5.25 9.09326)))
         (instance face :init :vertices (list (float-vector 0.499996 5.25 9.09326) (float-vector -0.500004 5.25 9.09326) (float-vector -0.500004 0.0 10.5) (float-vector 0.499996 0.0 10.5)))
         (instance face :init :vertices (list (float-vector 0.499998 9.09326 5.25) (float-vector -0.500002 9.09326 5.25) (float-vector -0.500004 5.25 9.09326) (float-vector 0.499996 5.25 9.09326)))
         (instance face :init :vertices (list (float-vector 0.5 10.5 0.0) (float-vector -0.5 10.5 0.0) (float-vector -0.500002 9.09326 5.25) (float-vector 0.499998 9.09326 5.25)))
         (instance face :init :vertices (list (float-vector 0.500002 9.09326 -5.25) (float-vector -0.499998 9.09326 -5.25) (float-vector -0.5 10.5 0.0) (float-vector 0.5 10.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.500004 5.25012 -9.09326) (float-vector -0.499996 5.25012 -9.09326) (float-vector -0.499998 9.09326 -5.25) (float-vector 0.500002 9.09326 -5.25)))
         (instance face :init :vertices (list (float-vector 0.500004 0.0 -10.5) (float-vector -0.499996 0.0 -10.5) (float-vector -0.499996 5.25012 -9.09326) (float-vector 0.500004 5.25012 -9.09326)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :black)
     (send (elt bc 1) :set-color :black)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset178050708 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :bodyset178330488
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.499998 1.75 95.9998) (float-vector -0.5 1.75 95.9998) (float-vector -0.5 -1.75 96.0) (float-vector 0.499998 -1.75 96.0)))
         (instance face :init :vertices (list (float-vector -0.5 1.75 0.0) (float-vector 0.499998 1.75 0.0) (float-vector 0.499998 -1.75 0.0) (float-vector -0.5 -1.75 0.0)))
         (instance face :init :vertices (list (float-vector 0.499998 1.75 95.9998) (float-vector 0.499998 1.75 0.0) (float-vector -0.5 1.75 0.0) (float-vector -0.5 1.75 95.9998)))
         (instance face :init :vertices (list (float-vector 0.499998 -1.75 96.0) (float-vector 0.499998 -1.75 0.0) (float-vector 0.499998 1.75 0.0) (float-vector 0.499998 1.75 95.9998)))
         (instance face :init :vertices (list (float-vector -0.5 -1.75 96.0) (float-vector -0.5 -1.75 0.0) (float-vector 0.499998 -1.75 0.0) (float-vector 0.499998 -1.75 96.0)))
         (instance face :init :vertices (list (float-vector -0.5 1.75 95.9998) (float-vector -0.5 1.75 0.0) (float-vector -0.5 -1.75 0.0) (float-vector -0.5 -1.75 96.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.500002 -5.25 -9.09326) (float-vector 0.500002 0.0 -10.4998) (float-vector 0.500002 5.25 -9.09302) (float-vector 0.500002 9.09351 -5.25) (float-vector 0.499998 10.5 0.0) (float-vector 0.499994 9.09326 5.25) (float-vector 0.499994 5.25 9.09351) (float-vector 0.499994 0.0 10.5) (float-vector 0.499994 -5.24976 9.09326) (float-vector 0.499994 -9.09326 5.25) (float-vector 0.499998 -10.5 0.0) (float-vector 0.500002 -9.09302 -5.24976)))
         (instance face :init :vertices (list (float-vector -0.499996 0.0 -10.4998) (float-vector -0.499996 -5.25 -9.09326) (float-vector -0.499998 -9.09302 -5.24976) (float-vector -0.5 -10.5 0.0) (float-vector -0.500002 -9.09326 5.25) (float-vector -0.500004 -5.24976 9.09326) (float-vector -0.500004 0.0 10.5) (float-vector -0.500004 5.25 9.09351) (float-vector -0.500002 9.09326 5.25) (float-vector -0.5 10.5 0.0) (float-vector -0.499998 9.09351 -5.25) (float-vector -0.499996 5.25 -9.09302)))
         (instance face :init :vertices (list (float-vector 0.500002 -5.25 -9.09326) (float-vector -0.499996 -5.25 -9.09326) (float-vector -0.499996 0.0 -10.4998) (float-vector 0.500002 0.0 -10.4998)))
         (instance face :init :vertices (list (float-vector 0.500002 -9.09302 -5.24976) (float-vector -0.499998 -9.09302 -5.24976) (float-vector -0.499996 -5.25 -9.09326) (float-vector 0.500002 -5.25 -9.09326)))
         (instance face :init :vertices (list (float-vector 0.499998 -10.5 0.0) (float-vector -0.5 -10.5 0.0) (float-vector -0.499998 -9.09302 -5.24976) (float-vector 0.500002 -9.09302 -5.24976)))
         (instance face :init :vertices (list (float-vector 0.499994 -9.09326 5.25) (float-vector -0.500002 -9.09326 5.25) (float-vector -0.5 -10.5 0.0) (float-vector 0.499998 -10.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.499994 -5.24976 9.09326) (float-vector -0.500004 -5.24976 9.09326) (float-vector -0.500002 -9.09326 5.25) (float-vector 0.499994 -9.09326 5.25)))
         (instance face :init :vertices (list (float-vector 0.499994 0.0 10.5) (float-vector -0.500004 0.0 10.5) (float-vector -0.500004 -5.24976 9.09326) (float-vector 0.499994 -5.24976 9.09326)))
         (instance face :init :vertices (list (float-vector 0.499994 5.25 9.09351) (float-vector -0.500004 5.25 9.09351) (float-vector -0.500004 0.0 10.5) (float-vector 0.499994 0.0 10.5)))
         (instance face :init :vertices (list (float-vector 0.499994 9.09326 5.25) (float-vector -0.500002 9.09326 5.25) (float-vector -0.500004 5.25 9.09351) (float-vector 0.499994 5.25 9.09351)))
         (instance face :init :vertices (list (float-vector 0.499998 10.5 0.0) (float-vector -0.5 10.5 0.0) (float-vector -0.500002 9.09326 5.25) (float-vector 0.499994 9.09326 5.25)))
         (instance face :init :vertices (list (float-vector 0.500002 9.09351 -5.25) (float-vector -0.499998 9.09351 -5.25) (float-vector -0.5 10.5 0.0) (float-vector 0.499998 10.5 0.0)))
         (instance face :init :vertices (list (float-vector 0.500002 5.25 -9.09302) (float-vector -0.499996 5.25 -9.09302) (float-vector -0.499998 9.09351 -5.25) (float-vector 0.500002 9.09351 -5.25)))
         (instance face :init :vertices (list (float-vector 0.500002 0.0 -10.4998) (float-vector -0.499996 0.0 -10.4998) (float-vector -0.499996 5.25 -9.09302) (float-vector 0.500002 5.25 -9.09302)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :black)
     (send (elt bc 1) :set-color :black)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset178330488 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :bodyset178349924
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 0.875 102.0) (float-vector -0.5 0.875 102.0) (float-vector -0.5 -0.875 102.0) (float-vector 0.5 -0.875 102.0)))
         (instance face :init :vertices (list (float-vector -0.5 0.875 -3.051758e-05) (float-vector 0.5 0.875 -3.051758e-05) (float-vector 0.5 -0.875 -0.000122) (float-vector -0.5 -0.875 -0.000122)))
         (instance face :init :vertices (list (float-vector 0.5 0.875 102.0) (float-vector 0.5 0.875 -3.051758e-05) (float-vector -0.5 0.875 -3.051758e-05) (float-vector -0.5 0.875 102.0)))
         (instance face :init :vertices (list (float-vector 0.5 -0.875 102.0) (float-vector 0.5 -0.875 -0.000122) (float-vector 0.5 0.875 -3.051758e-05) (float-vector 0.5 0.875 102.0)))
         (instance face :init :vertices (list (float-vector -0.5 -0.875 102.0) (float-vector -0.5 -0.875 -0.000122) (float-vector 0.5 -0.875 -0.000122) (float-vector 0.5 -0.875 102.0)))
         (instance face :init :vertices (list (float-vector -0.5 0.875 102.0) (float-vector -0.5 0.875 -3.051758e-05) (float-vector -0.5 -0.875 -0.000122) (float-vector -0.5 -0.875 102.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.500004 -5.25 -9.0932) (float-vector 0.500004 0.0 -10.5) (float-vector 0.500004 5.25 -9.09326) (float-vector 0.5 9.09326 -5.25003) (float-vector 0.5 10.5 -3.051758e-05) (float-vector 0.499996 9.09326 5.24997) (float-vector 0.499996 5.25 9.09323) (float-vector 0.499996 0.0 10.5) (float-vector 0.499996 -5.25 9.09326) (float-vector 0.5 -9.09326 5.25006) (float-vector 0.5 -10.5 6.103516e-05) (float-vector 0.500004 -9.09326 -5.24994)))
         (instance face :init :vertices (list (float-vector -0.499996 0.0 -10.5) (float-vector -0.499996 -5.25 -9.0932) (float-vector -0.499996 -9.09326 -5.24994) (float-vector -0.5 -10.5 6.103516e-05) (float-vector -0.5 -9.09326 5.25006) (float-vector -0.500004 -5.25 9.09326) (float-vector -0.500004 0.0 10.5) (float-vector -0.500004 5.25 9.09323) (float-vector -0.500004 9.09326 5.24997) (float-vector -0.5 10.5 -3.051758e-05) (float-vector -0.5 9.09326 -5.25003) (float-vector -0.499996 5.25 -9.09326)))
         (instance face :init :vertices (list (float-vector 0.500004 -5.25 -9.0932) (float-vector -0.499996 -5.25 -9.0932) (float-vector -0.499996 0.0 -10.5) (float-vector 0.500004 0.0 -10.5)))
         (instance face :init :vertices (list (float-vector 0.500004 -9.09326 -5.24994) (float-vector -0.499996 -9.09326 -5.24994) (float-vector -0.499996 -5.25 -9.0932) (float-vector 0.500004 -5.25 -9.0932)))
         (instance face :init :vertices (list (float-vector 0.5 -10.5 6.103516e-05) (float-vector -0.5 -10.5 6.103516e-05) (float-vector -0.499996 -9.09326 -5.24994) (float-vector 0.500004 -9.09326 -5.24994)))
         (instance face :init :vertices (list (float-vector 0.5 -9.09326 5.25006) (float-vector -0.5 -9.09326 5.25006) (float-vector -0.5 -10.5 6.103516e-05) (float-vector 0.5 -10.5 6.103516e-05)))
         (instance face :init :vertices (list (float-vector 0.499996 -5.25 9.09326) (float-vector -0.500004 -5.25 9.09326) (float-vector -0.5 -9.09326 5.25006) (float-vector 0.5 -9.09326 5.25006)))
         (instance face :init :vertices (list (float-vector 0.499996 0.0 10.5) (float-vector -0.500004 0.0 10.5) (float-vector -0.500004 -5.25 9.09326) (float-vector 0.499996 -5.25 9.09326)))
         (instance face :init :vertices (list (float-vector 0.499996 5.25 9.09323) (float-vector -0.500004 5.25 9.09323) (float-vector -0.500004 0.0 10.5) (float-vector 0.499996 0.0 10.5)))
         (instance face :init :vertices (list (float-vector 0.499996 9.09326 5.24997) (float-vector -0.500004 9.09326 5.24997) (float-vector -0.500004 5.25 9.09323) (float-vector 0.499996 5.25 9.09323)))
         (instance face :init :vertices (list (float-vector 0.5 10.5 -3.051758e-05) (float-vector -0.5 10.5 -3.051758e-05) (float-vector -0.500004 9.09326 5.24997) (float-vector 0.499996 9.09326 5.24997)))
         (instance face :init :vertices (list (float-vector 0.5 9.09326 -5.25003) (float-vector -0.5 9.09326 -5.25003) (float-vector -0.5 10.5 -3.051758e-05) (float-vector 0.5 10.5 -3.051758e-05)))
         (instance face :init :vertices (list (float-vector 0.500004 5.25 -9.09326) (float-vector -0.499996 5.25 -9.09326) (float-vector -0.5 9.09326 -5.25003) (float-vector 0.5 9.09326 -5.25003)))
         (instance face :init :vertices (list (float-vector 0.500004 0.0 -10.5) (float-vector -0.499996 0.0 -10.5) (float-vector -0.499996 5.25 -9.09326) (float-vector 0.500004 5.25 -9.09326)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :black)
     (send (elt bc 1) :set-color :black)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset178349924 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink3 :newcoords (make-coords :pos (float-vector 8.0 0.0 150.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector 7.0 0.0 150.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink2)
     (send blink1 :newcoords (make-coords :pos (float-vector 6.0 0.0 150.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :hour-joint
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :hour-joint :axis :-x
			     :min -360.0 :max  360.0))

     ;; definition of :minute-joint
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink1 :child-link blink2 :name :minute-joint :axis :-x
			     :min -360.0 :max  360.0))

     ;; definition of :second-joint
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink3 :name :second-joint :axis :-x
			     :min -360.0 :max  360.0))

     (setq links (list blink0 blink1 blink2 blink3))
     (setq joint-list (list joint0 joint1 joint2))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)
     self))
  )

(defun room73b2-clock (&rest args) (instance* room73b2-clock-object :init args))
;; (format *error-output* "(instance room73b2-clock-object :init) for generating model~%")
