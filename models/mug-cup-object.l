;;
;;
;; this file is automatically generated from euslisp+euslib version EusLisp 8.26(r472M 630 46425) for Linux64 created on k-okada-t410s(Tue Mar 8 13:24:11 JST 2011)
;;
;;
(defclass mug-cup-object
  :super cascaded-link
  :slots (sensors))
(defmethod mug-cup-object
  (:init
   (&rest args &key (name "mug-cup") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
         joint0
        
         handle0
         attention0
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :bodyset203262536
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 40.0 0.0 0.0) (float-vector 36.9552 -15.3073 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 36.9552 -15.3073 0.0) (float-vector 28.2843 -28.2843 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 28.2843 -28.2843 0.0) (float-vector 15.3073 -36.9552 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 15.3073 -36.9552 0.0) (float-vector -3.626190e-13 -40.0 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -3.626190e-13 -40.0 0.0) (float-vector -15.3073 -36.9552 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -15.3073 -36.9552 0.0) (float-vector -28.2843 -28.2843 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -28.2843 -28.2843 0.0) (float-vector -36.9552 -15.3073 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -36.9552 -15.3073 0.0) (float-vector -40.0 2.180612e-13 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -40.0 2.180612e-13 0.0) (float-vector -36.9552 15.3073 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -36.9552 15.3073 0.0) (float-vector -28.2843 28.2843 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -28.2843 28.2843 0.0) (float-vector -15.3073 36.9552 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -15.3073 36.9552 0.0) (float-vector 3.797635e-14 40.0 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 3.797635e-14 40.0 0.0) (float-vector 15.3073 36.9552 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 15.3073 36.9552 0.0) (float-vector 28.2843 28.2843 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 28.2843 28.2843 0.0) (float-vector 36.9552 15.3073 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 36.9552 15.3073 0.0) (float-vector 40.0 0.0 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 36.9552 -15.3073 95.0) (float-vector 36.9552 -15.3073 0.0) (float-vector 40.0 0.0 0.0) (float-vector 40.0 0.0 95.0)))
         (instance face :init :vertices (list (float-vector 28.2843 -28.2843 95.0) (float-vector 28.2843 -28.2843 0.0) (float-vector 36.9552 -15.3073 0.0) (float-vector 36.9552 -15.3073 95.0)))
         (instance face :init :vertices (list (float-vector 15.3073 -36.9552 95.0) (float-vector 15.3073 -36.9552 0.0) (float-vector 28.2843 -28.2843 0.0) (float-vector 28.2843 -28.2843 95.0)))
         (instance face :init :vertices (list (float-vector -3.626190e-13 -40.0 95.0) (float-vector -3.626190e-13 -40.0 0.0) (float-vector 15.3073 -36.9552 0.0) (float-vector 15.3073 -36.9552 95.0)))
         (instance face :init :vertices (list (float-vector -15.3073 -36.9552 95.0) (float-vector -15.3073 -36.9552 0.0) (float-vector -3.626190e-13 -40.0 0.0) (float-vector -3.626190e-13 -40.0 95.0)))
         (instance face :init :vertices (list (float-vector -28.2843 -28.2843 95.0) (float-vector -28.2843 -28.2843 0.0) (float-vector -15.3073 -36.9552 0.0) (float-vector -15.3073 -36.9552 95.0)))
         (instance face :init :vertices (list (float-vector -36.9552 -15.3073 95.0) (float-vector -36.9552 -15.3073 0.0) (float-vector -28.2843 -28.2843 0.0) (float-vector -28.2843 -28.2843 95.0)))
         (instance face :init :vertices (list (float-vector -40.0 2.180612e-13 95.0) (float-vector -40.0 2.180612e-13 0.0) (float-vector -36.9552 -15.3073 0.0) (float-vector -36.9552 -15.3073 95.0)))
         (instance face :init :vertices (list (float-vector -36.9552 15.3073 95.0) (float-vector -36.9552 15.3073 0.0) (float-vector -40.0 2.180612e-13 0.0) (float-vector -40.0 2.180612e-13 95.0)))
         (instance face :init :vertices (list (float-vector -28.2843 28.2843 95.0) (float-vector -28.2843 28.2843 0.0) (float-vector -36.9552 15.3073 0.0) (float-vector -36.9552 15.3073 95.0)))
         (instance face :init :vertices (list (float-vector -15.3073 36.9552 95.0) (float-vector -15.3073 36.9552 0.0) (float-vector -28.2843 28.2843 0.0) (float-vector -28.2843 28.2843 95.0)))
         (instance face :init :vertices (list (float-vector 3.797635e-14 40.0 95.0) (float-vector 3.797635e-14 40.0 0.0) (float-vector -15.3073 36.9552 0.0) (float-vector -15.3073 36.9552 95.0)))
         (instance face :init :vertices (list (float-vector 15.3073 36.9552 95.0) (float-vector 15.3073 36.9552 0.0) (float-vector 3.797635e-14 40.0 0.0) (float-vector 3.797635e-14 40.0 95.0)))
         (instance face :init :vertices (list (float-vector 28.2843 28.2843 95.0) (float-vector 28.2843 28.2843 0.0) (float-vector 15.3073 36.9552 0.0) (float-vector 15.3073 36.9552 95.0)))
         (instance face :init :vertices (list (float-vector 36.9552 15.3073 95.0) (float-vector 36.9552 15.3073 0.0) (float-vector 28.2843 28.2843 0.0) (float-vector 28.2843 28.2843 95.0)))
         (instance face :init :vertices (list (float-vector 40.0 0.0 95.0) (float-vector 40.0 0.0 0.0) (float-vector 36.9552 15.3073 0.0) (float-vector 36.9552 15.3073 95.0)))
         (instance face :init :vertices (list (float-vector 35.1074 -14.542 95.0) (float-vector 36.9552 -15.3073 95.0) (float-vector 40.0 0.0 95.0) (float-vector 38.0 0.0 95.0)))
         (instance face :init :vertices (list (float-vector 26.8701 -26.8701 95.0) (float-vector 28.2843 -28.2843 95.0) (float-vector 36.9552 -15.3073 95.0) (float-vector 35.1074 -14.542 95.0)))
         (instance face :init :vertices (list (float-vector 14.542 -35.1074 95.0) (float-vector 15.3073 -36.9552 95.0) (float-vector 28.2843 -28.2843 95.0) (float-vector 26.8701 -26.8701 95.0)))
         (instance face :init :vertices (list (float-vector -3.444881e-13 -38.0 95.0) (float-vector -3.626190e-13 -40.0 95.0) (float-vector 15.3073 -36.9552 95.0) (float-vector 14.542 -35.1074 95.0)))
         (instance face :init :vertices (list (float-vector -14.542 -35.1074 95.0) (float-vector -15.3073 -36.9552 95.0) (float-vector -3.626190e-13 -40.0 95.0) (float-vector -3.444881e-13 -38.0 95.0)))
         (instance face :init :vertices (list (float-vector -26.8701 -26.8701 95.0) (float-vector -28.2843 -28.2843 95.0) (float-vector -15.3073 -36.9552 95.0) (float-vector -14.542 -35.1074 95.0)))
         (instance face :init :vertices (list (float-vector -35.1074 -14.542 95.0) (float-vector -36.9552 -15.3073 95.0) (float-vector -28.2843 -28.2843 95.0) (float-vector -26.8701 -26.8701 95.0)))
         (instance face :init :vertices (list (float-vector -38.0 2.071582e-13 95.0) (float-vector -40.0 2.180612e-13 95.0) (float-vector -36.9552 -15.3073 95.0) (float-vector -35.1074 -14.542 95.0)))
         (instance face :init :vertices (list (float-vector -35.1074 14.542 95.0) (float-vector -36.9552 15.3073 95.0) (float-vector -40.0 2.180612e-13 95.0) (float-vector -38.0 2.071582e-13 95.0)))
         (instance face :init :vertices (list (float-vector -26.8701 26.8701 95.0) (float-vector -28.2843 28.2843 95.0) (float-vector -36.9552 15.3073 95.0) (float-vector -35.1074 14.542 95.0)))
         (instance face :init :vertices (list (float-vector -14.542 35.1074 95.0) (float-vector -15.3073 36.9552 95.0) (float-vector -28.2843 28.2843 95.0) (float-vector -26.8701 26.8701 95.0)))
         (instance face :init :vertices (list (float-vector 3.607753e-14 38.0 95.0) (float-vector 3.797635e-14 40.0 95.0) (float-vector -15.3073 36.9552 95.0) (float-vector -14.542 35.1074 95.0)))
         (instance face :init :vertices (list (float-vector 14.542 35.1074 95.0) (float-vector 15.3073 36.9552 95.0) (float-vector 3.797635e-14 40.0 95.0) (float-vector 3.607753e-14 38.0 95.0)))
         (instance face :init :vertices (list (float-vector 26.8701 26.8701 95.0) (float-vector 28.2843 28.2843 95.0) (float-vector 15.3073 36.9552 95.0) (float-vector 14.542 35.1074 95.0)))
         (instance face :init :vertices (list (float-vector 35.1074 14.542 95.0) (float-vector 36.9552 15.3073 95.0) (float-vector 28.2843 28.2843 95.0) (float-vector 26.8701 26.8701 95.0)))
         (instance face :init :vertices (list (float-vector 38.0 0.0 95.0) (float-vector 40.0 0.0 95.0) (float-vector 36.9552 15.3073 95.0) (float-vector 35.1074 14.542 95.0)))
         (instance face :init :vertices (list (float-vector 35.1074 -14.542 0.0) (float-vector 35.1074 -14.542 95.0) (float-vector 38.0 0.0 95.0) (float-vector 38.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 26.8701 -26.8701 0.0) (float-vector 26.8701 -26.8701 95.0) (float-vector 35.1074 -14.542 95.0) (float-vector 35.1074 -14.542 0.0)))
         (instance face :init :vertices (list (float-vector 14.542 -35.1074 0.0) (float-vector 14.542 -35.1074 95.0) (float-vector 26.8701 -26.8701 95.0) (float-vector 26.8701 -26.8701 0.0)))
         (instance face :init :vertices (list (float-vector -3.444881e-13 -38.0 0.0) (float-vector -3.444881e-13 -38.0 95.0) (float-vector 14.542 -35.1074 95.0) (float-vector 14.542 -35.1074 0.0)))
         (instance face :init :vertices (list (float-vector -14.542 -35.1074 0.0) (float-vector -14.542 -35.1074 95.0) (float-vector -3.444881e-13 -38.0 95.0) (float-vector -3.444881e-13 -38.0 0.0)))
         (instance face :init :vertices (list (float-vector -26.8701 -26.8701 0.0) (float-vector -26.8701 -26.8701 95.0) (float-vector -14.542 -35.1074 95.0) (float-vector -14.542 -35.1074 0.0)))
         (instance face :init :vertices (list (float-vector -35.1074 -14.542 0.0) (float-vector -35.1074 -14.542 95.0) (float-vector -26.8701 -26.8701 95.0) (float-vector -26.8701 -26.8701 0.0)))
         (instance face :init :vertices (list (float-vector -38.0 2.071582e-13 0.0) (float-vector -38.0 2.071582e-13 95.0) (float-vector -35.1074 -14.542 95.0) (float-vector -35.1074 -14.542 0.0)))
         (instance face :init :vertices (list (float-vector -35.1074 14.542 0.0) (float-vector -35.1074 14.542 95.0) (float-vector -38.0 2.071582e-13 95.0) (float-vector -38.0 2.071582e-13 0.0)))
         (instance face :init :vertices (list (float-vector -26.8701 26.8701 0.0) (float-vector -26.8701 26.8701 95.0) (float-vector -35.1074 14.542 95.0) (float-vector -35.1074 14.542 0.0)))
         (instance face :init :vertices (list (float-vector -14.542 35.1074 0.0) (float-vector -14.542 35.1074 95.0) (float-vector -26.8701 26.8701 95.0) (float-vector -26.8701 26.8701 0.0)))
         (instance face :init :vertices (list (float-vector 3.607753e-14 38.0 0.0) (float-vector 3.607753e-14 38.0 95.0) (float-vector -14.542 35.1074 95.0) (float-vector -14.542 35.1074 0.0)))
         (instance face :init :vertices (list (float-vector 14.542 35.1074 0.0) (float-vector 14.542 35.1074 95.0) (float-vector 3.607753e-14 38.0 95.0) (float-vector 3.607753e-14 38.0 0.0)))
         (instance face :init :vertices (list (float-vector 26.8701 26.8701 0.0) (float-vector 26.8701 26.8701 95.0) (float-vector 14.542 35.1074 95.0) (float-vector 14.542 35.1074 0.0)))
         (instance face :init :vertices (list (float-vector 35.1074 14.542 0.0) (float-vector 35.1074 14.542 95.0) (float-vector 26.8701 26.8701 95.0) (float-vector 26.8701 26.8701 0.0)))
         (instance face :init :vertices (list (float-vector 38.0 0.0 0.0) (float-vector 38.0 0.0 95.0) (float-vector 35.1074 14.542 95.0) (float-vector 35.1074 14.542 0.0)))
         (instance face :init :vertices (list (float-vector 35.1074 -14.542 0.0) (float-vector 38.0 0.0 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 38.0 0.0 0.0) (float-vector 35.1074 14.542 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 35.1074 14.542 0.0) (float-vector 26.8701 26.8701 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 26.8701 26.8701 0.0) (float-vector 14.542 35.1074 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 14.542 35.1074 0.0) (float-vector 3.607753e-14 38.0 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 3.607753e-14 38.0 0.0) (float-vector -14.542 35.1074 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -14.542 35.1074 0.0) (float-vector -26.8701 26.8701 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -26.8701 26.8701 0.0) (float-vector -35.1074 14.542 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -35.1074 14.542 0.0) (float-vector -38.0 2.071582e-13 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -38.0 2.071582e-13 0.0) (float-vector -35.1074 -14.542 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -35.1074 -14.542 0.0) (float-vector -26.8701 -26.8701 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -26.8701 -26.8701 0.0) (float-vector -14.542 -35.1074 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -14.542 -35.1074 0.0) (float-vector -3.444881e-13 -38.0 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector -3.444881e-13 -38.0 0.0) (float-vector 14.542 -35.1074 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 14.542 -35.1074 0.0) (float-vector 26.8701 -26.8701 0.0) (float-vector 0.0 0.0 2.0)))
         (instance face :init :vertices (list (float-vector 26.8701 -26.8701 0.0) (float-vector 35.1074 -14.542 0.0) (float-vector 0.0 0.0 2.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 5.0 70.0 77.0) (float-vector 5.0 70.0 17.0) (float-vector 5.0 40.0 17.0) (float-vector 5.0 40.0 12.0) (float-vector 5.0 75.0 12.0) (float-vector 5.0 75.0 82.0) (float-vector 5.0 40.0 82.0) (float-vector 5.0 40.0 77.0)))
         (instance face :init :vertices (list (float-vector 6.661338e-15 70.0 17.0) (float-vector -6.661338e-15 70.0 77.0) (float-vector -6.661338e-15 40.0 77.0) (float-vector -7.771561e-15 40.0 82.0) (float-vector -7.771561e-15 75.0 82.0) (float-vector 7.771561e-15 75.0 12.0) (float-vector 7.771561e-15 40.0 12.0) (float-vector 6.661338e-15 40.0 17.0)))
         (instance face :init :vertices (list (float-vector 5.0 70.0 77.0) (float-vector -6.661338e-15 70.0 77.0) (float-vector 6.661338e-15 70.0 17.0) (float-vector 5.0 70.0 17.0)))
         (instance face :init :vertices (list (float-vector 5.0 40.0 77.0) (float-vector -6.661338e-15 40.0 77.0) (float-vector -6.661338e-15 70.0 77.0) (float-vector 5.0 70.0 77.0)))
         (instance face :init :vertices (list (float-vector 5.0 40.0 82.0) (float-vector -7.771561e-15 40.0 82.0) (float-vector -6.661338e-15 40.0 77.0) (float-vector 5.0 40.0 77.0)))
         (instance face :init :vertices (list (float-vector 5.0 75.0 82.0) (float-vector -7.771561e-15 75.0 82.0) (float-vector -7.771561e-15 40.0 82.0) (float-vector 5.0 40.0 82.0)))
         (instance face :init :vertices (list (float-vector 5.0 75.0 12.0) (float-vector 7.771561e-15 75.0 12.0) (float-vector -7.771561e-15 75.0 82.0) (float-vector 5.0 75.0 82.0)))
         (instance face :init :vertices (list (float-vector 5.0 40.0 12.0) (float-vector 7.771561e-15 40.0 12.0) (float-vector 7.771561e-15 75.0 12.0) (float-vector 5.0 75.0 12.0)))
         (instance face :init :vertices (list (float-vector 5.0 40.0 17.0) (float-vector 6.661338e-15 40.0 17.0) (float-vector 7.771561e-15 40.0 12.0) (float-vector 5.0 40.0 12.0)))
         (instance face :init :vertices (list (float-vector 5.0 70.0 17.0) (float-vector 6.661338e-15 70.0 17.0) (float-vector 6.661338e-15 40.0 17.0) (float-vector 5.0 40.0 17.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset203262536 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 0.0 60.0 47.0) :rot #2f((2.220446e-16 1.0 0.0) (-1.0 2.220446e-16 0.0) (0.0 0.0 1.0)) :name "handle0"))
     (send self :assoc handle0)

     ;; definition of :attention
     (setq attention0 (make-cascoords :pos (float-vector 0.0 0.0 145.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "attention0"))
     (send self :assoc attention0)

     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))
  (:handle () (list  handle0))
  (:handle-handle0 () handle0)
  (:attention () (list  attention0))
  (:attention-attention0 () attention0)
  (:button () (list ))
  )

(defun mug-cup (&rest args) (instance* mug-cup-object :init args))
;; (format *error-output* "(instance mug-cup-object :init) for generating model~%")
