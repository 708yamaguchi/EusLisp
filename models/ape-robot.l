;;
;;
;; this file is automatically generated from euslisp+euslib
;;
;;
(defclass ape-robot
  :super robot-model
  :slots (sensors))
(defmethod ape-robot
  (:init
   (&rest args &key (name "ape") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10
        
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -7.5 -90.0) (float-vector 10.0 -7.5 -60.0) (float-vector 10.0 -62.5 -60.0) (float-vector 10.0 -62.5 -90.0) (float-vector 10.0 -61.5 -90.0) (float-vector 10.0 -61.5 -61.0) (float-vector 10.0 -8.5 -61.0) (float-vector 10.0 -8.5 -90.0)))
         (instance face :init :vertices (list (float-vector -9.99998 -7.5 -60.0) (float-vector -9.99997 -62.5 -60.0) (float-vector 10.0 -62.5 -60.0) (float-vector 10.0 -7.5 -60.0)))
         (instance face :init :vertices (list (float-vector -9.99998 -7.5 -90.0) (float-vector -9.99998 -8.5 -90.0) (float-vector -9.99998 -8.5 -61.0) (float-vector -9.99997 -61.5 -61.0) (float-vector -9.99998 -61.5 -90.0) (float-vector -9.99998 -62.5 -90.0) (float-vector -9.99997 -62.5 -60.0) (float-vector -9.99998 -7.5 -60.0)))
         (instance face :init :vertices (list (float-vector -7.07105 -62.5 -97.071) (float-vector -9.99998 -62.5 -90.0) (float-vector -9.99998 -61.5 -90.0) (float-vector -7.07105 -61.5 -97.071)))
         (instance face :init :vertices (list (float-vector -7.07106 -7.5 -97.071) (float-vector -7.07106 -8.5 -97.071) (float-vector -9.99998 -8.5 -90.0) (float-vector -9.99998 -7.5 -90.0)))
         (instance face :init :vertices (list (float-vector 1.414113e-05 -62.5 -100.0) (float-vector -7.07105 -62.5 -97.071) (float-vector -7.07105 -61.5 -97.071) (float-vector 1.404749e-05 -61.5 -100.0)))
         (instance face :init :vertices (list (float-vector 8.990770e-06 -7.5 -100.0) (float-vector 9.084415e-06 -8.5 -100.0) (float-vector -7.07106 -8.5 -97.071) (float-vector -7.07106 -7.5 -97.071)))
         (instance face :init :vertices (list (float-vector 7.07108 -62.5 -97.0711) (float-vector 1.414113e-05 -62.5 -100.0) (float-vector 1.404749e-05 -61.5 -100.0) (float-vector 7.07108 -61.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 7.07108 -7.5 -97.0711) (float-vector 7.07108 -8.5 -97.0711) (float-vector 9.084415e-06 -8.5 -100.0) (float-vector 8.990770e-06 -7.5 -100.0)))
         (instance face :init :vertices (list (float-vector 10.0 -62.5 -90.0) (float-vector 10.0 -62.5 -60.0) (float-vector -9.99997 -62.5 -60.0) (float-vector -9.99998 -62.5 -90.0) (float-vector -7.07105 -62.5 -97.071) (float-vector 1.414113e-05 -62.5 -100.0) (float-vector 7.07108 -62.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 7.07108 -7.5 -97.0711) (float-vector 8.990770e-06 -7.5 -100.0) (float-vector -7.07106 -7.5 -97.071) (float-vector -9.99998 -7.5 -90.0) (float-vector -9.99998 -7.5 -60.0) (float-vector 10.0 -7.5 -60.0) (float-vector 10.0 -7.5 -90.0)))
         (instance face :init :vertices (list (float-vector 7.07108 -62.5 -97.0711) (float-vector 7.07108 -61.5 -97.0711) (float-vector 10.0 -61.5 -90.0) (float-vector 10.0 -62.5 -90.0)))
         (instance face :init :vertices (list (float-vector 10.0 -7.5 -90.0) (float-vector 10.0 -8.5 -90.0) (float-vector 7.07108 -8.5 -97.0711) (float-vector 7.07108 -7.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 10.0 -61.5 -61.0) (float-vector 10.0 -61.5 -90.0) (float-vector 7.07108 -61.5 -97.0711) (float-vector 1.404749e-05 -61.5 -100.0) (float-vector -7.07105 -61.5 -97.071) (float-vector -9.99998 -61.5 -90.0) (float-vector -9.99997 -61.5 -61.0)))
         (instance face :init :vertices (list (float-vector 10.0 -8.5 -61.0) (float-vector 10.0 -61.5 -61.0) (float-vector -9.99997 -61.5 -61.0) (float-vector -9.99998 -8.5 -61.0)))
         (instance face :init :vertices (list (float-vector -9.99998 -8.5 -61.0) (float-vector -9.99998 -8.5 -90.0) (float-vector -7.07106 -8.5 -97.071) (float-vector 9.084415e-06 -8.5 -100.0) (float-vector 7.07108 -8.5 -97.0711) (float-vector 10.0 -8.5 -90.0) (float-vector 10.0 -8.5 -61.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 -136.15 -0.5) (float-vector 35.0 -93.85 -0.5) (float-vector -9.99995 -93.85 -0.5) (float-vector -9.99995 -136.15 -0.5)))
         (instance face :init :vertices (list (float-vector -9.99995 -93.85 -0.5) (float-vector -9.99995 -93.85 -23.5) (float-vector -9.99995 -136.15 -23.5) (float-vector -9.99995 -136.15 -0.5)))
         (instance face :init :vertices (list (float-vector -9.99995 -93.85 -23.5) (float-vector 35.0 -93.85 -23.5) (float-vector 35.0 -136.15 -23.5) (float-vector -9.99995 -136.15 -23.5)))
         (instance face :init :vertices (list (float-vector 35.0 -136.15 -23.5) (float-vector 35.0 -136.15 -0.5) (float-vector -9.99995 -136.15 -0.5) (float-vector -9.99995 -136.15 -23.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 28.2501 -136.15 -2.90674) (float-vector 32.0933 -136.15 -6.75003) (float-vector 33.5 -136.15 -12.0) (float-vector 32.0933 -136.15 -17.25) (float-vector 28.25 -136.15 -21.0933) (float-vector 23.0 -136.15 -22.5) (float-vector 17.75 -136.15 -21.0933) (float-vector 13.9068 -136.15 -17.25) (float-vector 12.5 -136.15 -12.0) (float-vector 13.9068 -136.15 -6.75) (float-vector 17.75 -136.15 -2.90674) (float-vector 23.0 -136.15 -1.5)))
))
         (instance face :init :vertices (list (float-vector 35.0 -93.85 -23.5) (float-vector 35.0 -93.85 -0.5) (float-vector 35.0 -136.15 -0.5) (float-vector 35.0 -136.15 -23.5)))
         (instance face :init :vertices (list (float-vector 35.0 -93.85 -0.5) (float-vector 35.0 -93.85 -23.5) (float-vector -9.99995 -93.85 -23.5) (float-vector -9.99995 -93.85 -0.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 32.0933 -93.85 -6.75) (float-vector 28.2501 -93.85 -2.90674) (float-vector 23.0001 -93.85 -1.5) (float-vector 17.7501 -93.85 -2.90674) (float-vector 13.9068 -93.85 -6.75) (float-vector 12.5001 -93.85 -12.0) (float-vector 13.9068 -93.85 -17.25) (float-vector 17.75 -93.85 -21.0933) (float-vector 23.0 -93.85 -22.5) (float-vector 28.25 -93.85 -21.0933) (float-vector 32.0933 -93.85 -17.25) (float-vector 33.5 -93.85 -12.0)))
))
         (instance face :init :vertices (list (float-vector 23.0 -138.15 -1.5) (float-vector 23.0 -136.15 -1.5) (float-vector 17.75 -136.15 -2.90674) (float-vector 17.75 -138.15 -2.90674)))
         (instance face :init :vertices (list (float-vector 23.0001 -93.85 -1.5) (float-vector 23.0001 -91.85 -1.5) (float-vector 17.7501 -91.85 -2.90671) (float-vector 17.7501 -93.85 -2.90674)))
         (instance face :init :vertices (list (float-vector 13.9068 -136.15 -6.75) (float-vector 13.9068 -138.15 -6.75) (float-vector 17.75 -138.15 -2.90674) (float-vector 17.75 -136.15 -2.90674)))
         (instance face :init :vertices (list (float-vector 17.7501 -91.85 -2.90671) (float-vector 13.9068 -91.85 -6.75) (float-vector 13.9068 -93.85 -6.75) (float-vector 17.7501 -93.85 -2.90674)))
         (instance face :init :vertices (list (float-vector 12.5 -136.15 -12.0) (float-vector 12.5 -138.15 -12.0) (float-vector 13.9068 -138.15 -6.75) (float-vector 13.9068 -136.15 -6.75)))
         (instance face :init :vertices (list (float-vector 13.9068 -91.85 -6.75) (float-vector 12.5001 -91.85 -12.0) (float-vector 12.5001 -93.85 -12.0) (float-vector 13.9068 -93.85 -6.75)))
         (instance face :init :vertices (list (float-vector 13.9068 -136.15 -17.25) (float-vector 13.9068 -138.15 -17.25) (float-vector 12.5 -138.15 -12.0) (float-vector 12.5 -136.15 -12.0)))
         (instance face :init :vertices (list (float-vector 12.5001 -91.85 -12.0) (float-vector 13.9068 -91.85 -17.25) (float-vector 13.9068 -93.85 -17.25) (float-vector 12.5001 -93.85 -12.0)))
         (instance face :init :vertices (list (float-vector 17.75 -136.15 -21.0933) (float-vector 17.75 -138.15 -21.0933) (float-vector 13.9068 -138.15 -17.25) (float-vector 13.9068 -136.15 -17.25)))
         (instance face :init :vertices (list (float-vector 13.9068 -91.85 -17.25) (float-vector 17.75 -91.85 -21.0933) (float-vector 17.75 -93.85 -21.0933) (float-vector 13.9068 -93.85 -17.25)))
         (instance face :init :vertices (list (float-vector 23.0 -136.15 -22.5) (float-vector 23.0 -138.15 -22.5) (float-vector 17.75 -138.15 -21.0933) (float-vector 17.75 -136.15 -21.0933)))
         (instance face :init :vertices (list (float-vector 17.75 -91.85 -21.0933) (float-vector 23.0 -91.85 -22.5) (float-vector 23.0 -93.85 -22.5) (float-vector 17.75 -93.85 -21.0933)))
         (instance face :init :vertices (list (float-vector 28.25 -136.15 -21.0933) (float-vector 28.25 -138.15 -21.0933) (float-vector 23.0 -138.15 -22.5) (float-vector 23.0 -136.15 -22.5)))
         (instance face :init :vertices (list (float-vector 23.0 -91.85 -22.5) (float-vector 28.25 -91.85 -21.0933) (float-vector 28.25 -93.85 -21.0933) (float-vector 23.0 -93.85 -22.5)))
         (instance face :init :vertices (list (float-vector 32.0933 -136.15 -17.25) (float-vector 32.0933 -138.15 -17.25) (float-vector 28.25 -138.15 -21.0933) (float-vector 28.25 -136.15 -21.0933)))
         (instance face :init :vertices (list (float-vector 28.25 -91.85 -21.0933) (float-vector 32.0933 -91.85 -17.25) (float-vector 32.0933 -93.85 -17.25) (float-vector 28.25 -93.85 -21.0933)))
         (instance face :init :vertices (list (float-vector 33.5 -136.15 -12.0) (float-vector 33.5 -138.15 -12.0) (float-vector 32.0933 -138.15 -17.25) (float-vector 32.0933 -136.15 -17.25)))
         (instance face :init :vertices (list (float-vector 32.0933 -91.85 -17.25) (float-vector 33.5 -91.85 -12.0) (float-vector 33.5 -93.85 -12.0) (float-vector 32.0933 -93.85 -17.25)))
         (instance face :init :vertices (list (float-vector 32.0933 -136.15 -6.75003) (float-vector 32.0933 -138.15 -6.75003) (float-vector 33.5 -138.15 -12.0) (float-vector 33.5 -136.15 -12.0)))
         (instance face :init :vertices (list (float-vector 33.5 -91.85 -12.0) (float-vector 32.0933 -91.85 -6.75) (float-vector 32.0933 -93.85 -6.75) (float-vector 33.5 -93.85 -12.0)))
         (instance face :init :vertices (list (float-vector 28.2501 -136.15 -2.90674) (float-vector 28.2501 -138.15 -2.90674) (float-vector 32.0933 -138.15 -6.75003) (float-vector 32.0933 -136.15 -6.75003)))
         (instance face :init :vertices (list (float-vector 32.0933 -91.85 -6.75) (float-vector 28.2501 -91.85 -2.90674) (float-vector 28.2501 -93.85 -2.90674) (float-vector 32.0933 -93.85 -6.75)))
         (instance face :init :vertices (list (float-vector 28.2501 -138.15 -2.90674) (float-vector 23.0 -138.15 -1.5) (float-vector 17.75 -138.15 -2.90674) (float-vector 13.9068 -138.15 -6.75) (float-vector 12.5 -138.15 -12.0) (float-vector 13.9068 -138.15 -17.25) (float-vector 17.75 -138.15 -21.0933) (float-vector 23.0 -138.15 -22.5) (float-vector 28.25 -138.15 -21.0933) (float-vector 32.0933 -138.15 -17.25) (float-vector 33.5 -138.15 -12.0) (float-vector 32.0933 -138.15 -6.75003)))
         (instance face :init :vertices (list (float-vector 23.0 -138.15 -1.5) (float-vector 28.2501 -138.15 -2.90674) (float-vector 28.2501 -136.15 -2.90674) (float-vector 23.0 -136.15 -1.5)))
         (instance face :init :vertices (list (float-vector 28.2501 -91.85 -2.90674) (float-vector 23.0001 -91.85 -1.5) (float-vector 23.0001 -93.85 -1.5) (float-vector 28.2501 -93.85 -2.90674)))
         (instance face :init :vertices (list (float-vector 23.0001 -91.85 -1.5) (float-vector 28.2501 -91.85 -2.90674) (float-vector 32.0933 -91.85 -6.75) (float-vector 33.5 -91.85 -12.0) (float-vector 32.0933 -91.85 -17.25) (float-vector 28.25 -91.85 -21.0933) (float-vector 23.0 -91.85 -22.5) (float-vector 17.75 -91.85 -21.0933) (float-vector 13.9068 -91.85 -17.25) (float-vector 12.5001 -91.85 -12.0) (float-vector 13.9068 -91.85 -6.75) (float-vector 17.7501 -91.85 -2.90671)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 9.99998 62.5 -90.0) (float-vector 9.99999 62.5 -60.0) (float-vector 10.0 7.5 -60.0) (float-vector 9.99998 7.5 -90.0) (float-vector 9.99998 8.5 -90.0) (float-vector 10.0 8.5 -61.0) (float-vector 9.99999 61.5 -61.0) (float-vector 9.99998 61.5 -90.0)))
         (instance face :init :vertices (list (float-vector -10.0 62.5 -60.0) (float-vector -10.0 7.5 -60.0) (float-vector 10.0 7.5 -60.0) (float-vector 9.99999 62.5 -60.0)))
         (instance face :init :vertices (list (float-vector -10.0 62.5 -90.0) (float-vector -10.0 61.5 -90.0) (float-vector -10.0 61.5 -61.0) (float-vector -10.0 8.5 -61.0) (float-vector -10.0 8.5 -90.0) (float-vector -10.0 7.5 -90.0) (float-vector -10.0 7.5 -60.0) (float-vector -10.0 62.5 -60.0)))
         (instance face :init :vertices (list (float-vector -7.07108 7.5 -97.071) (float-vector -10.0 7.5 -90.0) (float-vector -10.0 8.5 -90.0) (float-vector -7.07108 8.5 -97.071)))
         (instance face :init :vertices (list (float-vector -7.07109 62.5 -97.071) (float-vector -7.07109 61.5 -97.071) (float-vector -10.0 61.5 -90.0) (float-vector -10.0 62.5 -90.0)))
         (instance face :init :vertices (list (float-vector -1.554728e-05 7.5 -100.0) (float-vector -7.07108 7.5 -97.071) (float-vector -7.07108 8.5 -97.071) (float-vector -1.564092e-05 8.5 -100.0)))
         (instance face :init :vertices (list (float-vector -2.069764e-05 62.5 -100.0) (float-vector -2.060400e-05 61.5 -100.0) (float-vector -7.07109 61.5 -97.071) (float-vector -7.07109 62.5 -97.071)))
         (instance face :init :vertices (list (float-vector 7.07105 7.5 -97.0711) (float-vector -1.554728e-05 7.5 -100.0) (float-vector -1.564092e-05 8.5 -100.0) (float-vector 7.07105 8.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 7.07105 62.5 -97.0711) (float-vector 7.07105 61.5 -97.0711) (float-vector -2.060400e-05 61.5 -100.0) (float-vector -2.069764e-05 62.5 -100.0)))
         (instance face :init :vertices (list (float-vector 9.99998 7.5 -90.0) (float-vector 10.0 7.5 -60.0) (float-vector -10.0 7.5 -60.0) (float-vector -10.0 7.5 -90.0) (float-vector -7.07108 7.5 -97.071) (float-vector -1.554728e-05 7.5 -100.0) (float-vector 7.07105 7.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 7.07105 62.5 -97.0711) (float-vector -2.069764e-05 62.5 -100.0) (float-vector -7.07109 62.5 -97.071) (float-vector -10.0 62.5 -90.0) (float-vector -10.0 62.5 -60.0) (float-vector 9.99999 62.5 -60.0) (float-vector 9.99998 62.5 -90.0)))
         (instance face :init :vertices (list (float-vector 7.07105 7.5 -97.0711) (float-vector 7.07105 8.5 -97.0711) (float-vector 9.99998 8.5 -90.0) (float-vector 9.99998 7.5 -90.0)))
         (instance face :init :vertices (list (float-vector 9.99998 62.5 -90.0) (float-vector 9.99998 61.5 -90.0) (float-vector 7.07105 61.5 -97.0711) (float-vector 7.07105 62.5 -97.0711)))
         (instance face :init :vertices (list (float-vector 10.0 8.5 -61.0) (float-vector 9.99998 8.5 -90.0) (float-vector 7.07105 8.5 -97.0711) (float-vector -1.564092e-05 8.5 -100.0) (float-vector -7.07108 8.5 -97.071) (float-vector -10.0 8.5 -90.0) (float-vector -10.0 8.5 -61.0)))
         (instance face :init :vertices (list (float-vector 9.99999 61.5 -61.0) (float-vector 10.0 8.5 -61.0) (float-vector -10.0 8.5 -61.0) (float-vector -10.0 61.5 -61.0)))
         (instance face :init :vertices (list (float-vector -10.0 61.5 -61.0) (float-vector -10.0 61.5 -90.0) (float-vector -7.07109 61.5 -97.071) (float-vector -2.060400e-05 61.5 -100.0) (float-vector 7.07105 61.5 -97.0711) (float-vector 9.99998 61.5 -90.0) (float-vector 9.99999 61.5 -61.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 34.9999 93.85 -0.5) (float-vector 35.0 136.15 -0.5) (float-vector -10.0 136.15 -0.5) (float-vector -10.0001 93.85 -0.5)))
         (instance face :init :vertices (list (float-vector -10.0 136.15 -0.5) (float-vector -10.0 136.15 -23.5) (float-vector -10.0001 93.85 -23.5) (float-vector -10.0001 93.85 -0.5)))
         (instance face :init :vertices (list (float-vector -10.0 136.15 -23.5) (float-vector 35.0 136.15 -23.5) (float-vector 34.9999 93.85 -23.5) (float-vector -10.0001 93.85 -23.5)))
         (instance face :init :vertices (list (float-vector 34.9999 93.85 -23.5) (float-vector 34.9999 93.85 -0.5) (float-vector -10.0001 93.85 -0.5) (float-vector -10.0001 93.85 -23.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 28.25 93.85 -2.90674) (float-vector 32.0932 93.85 -6.75003) (float-vector 33.4999 93.85 -12.0) (float-vector 32.0932 93.85 -17.25) (float-vector 28.2499 93.85 -21.0933) (float-vector 22.9999 93.85 -22.5) (float-vector 17.7499 93.85 -21.0933) (float-vector 13.9067 93.85 -17.25) (float-vector 12.4999 93.85 -12.0) (float-vector 13.9067 93.85 -6.75) (float-vector 17.7499 93.85 -2.90674) (float-vector 22.9999 93.85 -1.5)))
))
         (instance face :init :vertices (list (float-vector 35.0 136.15 -23.5) (float-vector 35.0 136.15 -0.5) (float-vector 34.9999 93.85 -0.5) (float-vector 34.9999 93.85 -23.5)))
         (instance face :init :vertices (list (float-vector 35.0 136.15 -0.5) (float-vector 35.0 136.15 -23.5) (float-vector -10.0 136.15 -23.5) (float-vector -10.0 136.15 -0.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 32.0932 136.15 -6.75) (float-vector 28.25 136.15 -2.90674) (float-vector 23.0 136.15 -1.5) (float-vector 17.75 136.15 -2.90674) (float-vector 13.9067 136.15 -6.75) (float-vector 12.5 136.15 -12.0) (float-vector 13.9067 136.15 -17.25) (float-vector 17.7499 136.15 -21.0933) (float-vector 22.9999 136.15 -22.5) (float-vector 28.2499 136.15 -21.0933) (float-vector 32.0932 136.15 -17.25) (float-vector 33.5 136.15 -12.0)))
))
         (instance face :init :vertices (list (float-vector 22.9999 91.85 -1.5) (float-vector 22.9999 93.85 -1.5) (float-vector 17.7499 93.85 -2.90674) (float-vector 17.7499 91.85 -2.90674)))
         (instance face :init :vertices (list (float-vector 23.0 136.15 -1.5) (float-vector 23.0 138.15 -1.5) (float-vector 17.75 138.15 -2.90671) (float-vector 17.75 136.15 -2.90674)))
         (instance face :init :vertices (list (float-vector 13.9067 93.85 -6.75) (float-vector 13.9067 91.85 -6.75) (float-vector 17.7499 91.85 -2.90674) (float-vector 17.7499 93.85 -2.90674)))
         (instance face :init :vertices (list (float-vector 17.75 138.15 -2.90671) (float-vector 13.9067 138.15 -6.75) (float-vector 13.9067 136.15 -6.75) (float-vector 17.75 136.15 -2.90674)))
         (instance face :init :vertices (list (float-vector 12.4999 93.85 -12.0) (float-vector 12.4999 91.85 -12.0) (float-vector 13.9067 91.85 -6.75) (float-vector 13.9067 93.85 -6.75)))
         (instance face :init :vertices (list (float-vector 13.9067 138.15 -6.75) (float-vector 12.5 138.15 -12.0) (float-vector 12.5 136.15 -12.0) (float-vector 13.9067 136.15 -6.75)))
         (instance face :init :vertices (list (float-vector 13.9067 93.85 -17.25) (float-vector 13.9067 91.85 -17.25) (float-vector 12.4999 91.85 -12.0) (float-vector 12.4999 93.85 -12.0)))
         (instance face :init :vertices (list (float-vector 12.5 138.15 -12.0) (float-vector 13.9067 138.15 -17.25) (float-vector 13.9067 136.15 -17.25) (float-vector 12.5 136.15 -12.0)))
         (instance face :init :vertices (list (float-vector 17.7499 93.85 -21.0933) (float-vector 17.7499 91.85 -21.0933) (float-vector 13.9067 91.85 -17.25) (float-vector 13.9067 93.85 -17.25)))
         (instance face :init :vertices (list (float-vector 13.9067 138.15 -17.25) (float-vector 17.7499 138.15 -21.0933) (float-vector 17.7499 136.15 -21.0933) (float-vector 13.9067 136.15 -17.25)))
         (instance face :init :vertices (list (float-vector 22.9999 93.85 -22.5) (float-vector 22.9999 91.85 -22.5) (float-vector 17.7499 91.85 -21.0933) (float-vector 17.7499 93.85 -21.0933)))
         (instance face :init :vertices (list (float-vector 17.7499 138.15 -21.0933) (float-vector 22.9999 138.15 -22.5) (float-vector 22.9999 136.15 -22.5) (float-vector 17.7499 136.15 -21.0933)))
         (instance face :init :vertices (list (float-vector 28.2499 93.85 -21.0933) (float-vector 28.2499 91.85 -21.0933) (float-vector 22.9999 91.85 -22.5) (float-vector 22.9999 93.85 -22.5)))
         (instance face :init :vertices (list (float-vector 22.9999 138.15 -22.5) (float-vector 28.2499 138.15 -21.0933) (float-vector 28.2499 136.15 -21.0933) (float-vector 22.9999 136.15 -22.5)))
         (instance face :init :vertices (list (float-vector 32.0932 93.85 -17.25) (float-vector 32.0932 91.85 -17.25) (float-vector 28.2499 91.85 -21.0933) (float-vector 28.2499 93.85 -21.0933)))
         (instance face :init :vertices (list (float-vector 28.2499 138.15 -21.0933) (float-vector 32.0932 138.15 -17.25) (float-vector 32.0932 136.15 -17.25) (float-vector 28.2499 136.15 -21.0933)))
         (instance face :init :vertices (list (float-vector 33.4999 93.85 -12.0) (float-vector 33.4999 91.85 -12.0) (float-vector 32.0932 91.85 -17.25) (float-vector 32.0932 93.85 -17.25)))
         (instance face :init :vertices (list (float-vector 32.0932 138.15 -17.25) (float-vector 33.5 138.15 -12.0) (float-vector 33.5 136.15 -12.0) (float-vector 32.0932 136.15 -17.25)))
         (instance face :init :vertices (list (float-vector 32.0932 93.85 -6.75003) (float-vector 32.0932 91.85 -6.75003) (float-vector 33.4999 91.85 -12.0) (float-vector 33.4999 93.85 -12.0)))
         (instance face :init :vertices (list (float-vector 33.5 138.15 -12.0) (float-vector 32.0932 138.15 -6.75) (float-vector 32.0932 136.15 -6.75) (float-vector 33.5 136.15 -12.0)))
         (instance face :init :vertices (list (float-vector 28.25 93.85 -2.90674) (float-vector 28.25 91.85 -2.90674) (float-vector 32.0932 91.85 -6.75003) (float-vector 32.0932 93.85 -6.75003)))
         (instance face :init :vertices (list (float-vector 32.0932 138.15 -6.75) (float-vector 28.25 138.15 -2.90674) (float-vector 28.25 136.15 -2.90674) (float-vector 32.0932 136.15 -6.75)))
         (instance face :init :vertices (list (float-vector 28.25 91.85 -2.90674) (float-vector 22.9999 91.85 -1.5) (float-vector 17.7499 91.85 -2.90674) (float-vector 13.9067 91.85 -6.75) (float-vector 12.4999 91.85 -12.0) (float-vector 13.9067 91.85 -17.25) (float-vector 17.7499 91.85 -21.0933) (float-vector 22.9999 91.85 -22.5) (float-vector 28.2499 91.85 -21.0933) (float-vector 32.0932 91.85 -17.25) (float-vector 33.4999 91.85 -12.0) (float-vector 32.0932 91.85 -6.75003)))
         (instance face :init :vertices (list (float-vector 22.9999 91.85 -1.5) (float-vector 28.25 91.85 -2.90674) (float-vector 28.25 93.85 -2.90674) (float-vector 22.9999 93.85 -1.5)))
         (instance face :init :vertices (list (float-vector 28.25 138.15 -2.90674) (float-vector 23.0 138.15 -1.5) (float-vector 23.0 136.15 -1.5) (float-vector 28.25 136.15 -2.90674)))
         (instance face :init :vertices (list (float-vector 23.0 138.15 -1.5) (float-vector 28.25 138.15 -2.90674) (float-vector 32.0932 138.15 -6.75) (float-vector 33.5 138.15 -12.0) (float-vector 32.0932 138.15 -17.25) (float-vector 28.2499 138.15 -21.0933) (float-vector 22.9999 138.15 -22.5) (float-vector 17.7499 138.15 -21.0933) (float-vector 13.9067 138.15 -17.25) (float-vector 12.5 138.15 -12.0) (float-vector 13.9067 138.15 -6.75) (float-vector 17.75 138.15 -2.90671)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.0 -115.0 0.0) (float-vector -15.0 115.0 0.0) (float-vector -15.0 115.0 -2.0) (float-vector -15.0 65.0 -2.0) (float-vector -15.0 65.0 -60.0) (float-vector -15.0 -65.0 -60.0) (float-vector -15.0 -65.0 -2.0) (float-vector -15.0 -115.0 -2.0)))
         (instance face :init :vertices (list (float-vector 15.0 115.0 0.0) (float-vector 15.0 -115.0 0.0) (float-vector 15.0 -115.0 -2.0) (float-vector 15.0 -65.0 -2.0) (float-vector 15.0 -65.0 -60.0) (float-vector 15.0 65.0 -60.0) (float-vector 15.0 65.0 -2.0) (float-vector 15.0 115.0 -2.0)))
         (instance face :init :vertices (list (float-vector -15.0 -115.0 0.0) (float-vector 15.0 -115.0 0.0) (float-vector 15.0 115.0 0.0) (float-vector -15.0 115.0 0.0)))
         (instance face :init :vertices (list (float-vector -15.0 -115.0 -2.0) (float-vector 15.0 -115.0 -2.0) (float-vector 15.0 -115.0 0.0) (float-vector -15.0 -115.0 0.0)))
         (instance face :init :vertices (list (float-vector -15.0 -65.0 -2.0) (float-vector 15.0 -65.0 -2.0) (float-vector 15.0 -115.0 -2.0) (float-vector -15.0 -115.0 -2.0)))
         (instance face :init :vertices (list (float-vector -15.0 -65.0 -60.0) (float-vector 15.0 -65.0 -60.0) (float-vector 15.0 -65.0 -2.0) (float-vector -15.0 -65.0 -2.0)))
         (instance face :init :vertices (list (float-vector -15.0 65.0 -60.0) (float-vector 15.0 65.0 -60.0) (float-vector 15.0 -65.0 -60.0) (float-vector -15.0 -65.0 -60.0)))
         (instance face :init :vertices (list (float-vector -15.0 65.0 -2.0) (float-vector 15.0 65.0 -2.0) (float-vector 15.0 65.0 -60.0) (float-vector -15.0 65.0 -60.0)))
         (instance face :init :vertices (list (float-vector -15.0 115.0 -2.0) (float-vector 15.0 115.0 -2.0) (float-vector 15.0 65.0 -2.0) (float-vector -15.0 65.0 -2.0)))
         (instance face :init :vertices (list (float-vector -15.0 115.0 0.0) (float-vector 15.0 115.0 0.0) (float-vector 15.0 115.0 -2.0) (float-vector -15.0 115.0 -2.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 44.0 -13.0 23.5) (float-vector 44.0 -11.2583 30.0) (float-vector 38.0 -11.2583 30.0) (float-vector 38.0 -13.0 23.5)))
         (instance face :init :vertices (list (float-vector 44.0 -13.0 23.5) (float-vector 44.0 -11.2583 17.0) (float-vector 44.0 -6.49998 12.2417) (float-vector 44.0 1.313578e-05 10.5) (float-vector 44.0 6.50001 12.2417) (float-vector 44.0 11.2583 17.0) (float-vector 44.0 13.0 23.5) (float-vector 44.0 11.2584 30.0) (float-vector 44.0 6.50003 34.7583) (float-vector 44.0 2.930719e-05 36.5) (float-vector 44.0 -6.49997 34.7584) (float-vector 44.0 -11.2583 30.0)))
         (instance face :init :vertices (list (float-vector 44.0 -6.49997 34.7584) (float-vector 38.0 -6.49997 34.7584) (float-vector 38.0 -11.2583 30.0) (float-vector 44.0 -11.2583 30.0)))
         (instance face :init :vertices (list (float-vector 44.0 2.930719e-05 36.5) (float-vector 38.0 2.698260e-05 36.5) (float-vector 38.0 -6.49997 34.7584) (float-vector 44.0 -6.49997 34.7584)))
         (instance face :init :vertices (list (float-vector 44.0 6.50003 34.7583) (float-vector 38.0 6.50002 34.7583) (float-vector 38.0 2.698260e-05 36.5) (float-vector 44.0 2.930719e-05 36.5)))
         (instance face :init :vertices (list (float-vector 44.0 11.2584 30.0) (float-vector 38.0 11.2584 30.0) (float-vector 38.0 6.50002 34.7583) (float-vector 44.0 6.50003 34.7583)))
         (instance face :init :vertices (list (float-vector 44.0 13.0 23.5) (float-vector 38.0 13.0 23.5) (float-vector 38.0 11.2584 30.0) (float-vector 44.0 11.2584 30.0)))
         (instance face :init :vertices (list (float-vector 44.0 11.2583 17.0) (float-vector 38.0 11.2583 17.0) (float-vector 38.0 13.0 23.5) (float-vector 44.0 13.0 23.5)))
         (instance face :init :vertices (list (float-vector 44.0 6.50001 12.2417) (float-vector 38.0 6.50001 12.2417) (float-vector 38.0 11.2583 17.0) (float-vector 44.0 11.2583 17.0)))
         (instance face :init :vertices (list (float-vector 44.0 1.313578e-05 10.5) (float-vector 38.0 1.081119e-05 10.5) (float-vector 38.0 6.50001 12.2417) (float-vector 44.0 6.50001 12.2417)))
         (instance face :init :vertices (list (float-vector 44.0 -6.49998 12.2417) (float-vector 38.0 -6.49999 12.2417) (float-vector 38.0 1.081119e-05 10.5) (float-vector 44.0 1.313578e-05 10.5)))
         (instance face :init :vertices (list (float-vector 44.0 -11.2583 17.0) (float-vector 38.0 -11.2583 17.0) (float-vector 38.0 -6.49999 12.2417) (float-vector 44.0 -6.49998 12.2417)))
         (instance face :init :vertices (list (float-vector 38.0 -13.0 23.5) (float-vector 38.0 -11.2583 17.0) (float-vector 44.0 -11.2583 17.0) (float-vector 44.0 -13.0 23.5)))
         (instance face :init :vertices (list (float-vector -20.0 19.0 43.5) (float-vector -20.0 19.0 1.5) (float-vector -20.0 -19.0 1.5) (float-vector -20.0 -19.0 43.5)))
         (instance face :init :vertices (list (float-vector -20.0 19.0 43.5) (float-vector 38.0 19.0 43.5) (float-vector 38.0 19.0 1.5) (float-vector -20.0 19.0 1.5)))
         (instance face :init :vertices (list (float-vector 38.0 19.0 43.5) (float-vector 38.0 -19.0 43.5) (float-vector 38.0 -19.0 1.5) (float-vector 38.0 19.0 1.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 38.0 -11.2583 17.0) (float-vector 38.0 -13.0 23.5) (float-vector 38.0 -11.2583 30.0) (float-vector 38.0 -6.49997 34.7584) (float-vector 38.0 2.698260e-05 36.5) (float-vector 38.0 6.50002 34.7583) (float-vector 38.0 11.2584 30.0) (float-vector 38.0 13.0 23.5) (float-vector 38.0 11.2583 17.0) (float-vector 38.0 6.50001 12.2417) (float-vector 38.0 1.081119e-05 10.5) (float-vector 38.0 -6.49999 12.2417)))
))
         (instance face :init :vertices (list (float-vector 38.0 -19.0 1.5) (float-vector -20.0 -19.0 1.5) (float-vector -20.0 19.0 1.5) (float-vector 38.0 19.0 1.5)))
         (instance face :init :vertices (list (float-vector 38.0 -19.0 43.5) (float-vector -20.0 -19.0 43.5) (float-vector -20.0 -19.0 1.5) (float-vector 38.0 -19.0 1.5)))
         (instance face :init :vertices (list (float-vector -20.0 -19.0 43.5) (float-vector 38.0 -19.0 43.5) (float-vector 38.0 19.0 43.5) (float-vector -20.0 19.0 43.5)))
         (instance face :init :vertices (list (float-vector -60.0 -20.5 48.5) (float-vector 60.0 -20.5 48.5) (float-vector 60.0 -20.5 -0.5) (float-vector -20.0 -20.5 -0.5) (float-vector -20.0 -20.5 24.5) (float-vector -60.0 -20.5 24.5)))
         (instance face :init :vertices (list (float-vector 60.0 20.5 48.5) (float-vector 60.0 -20.5 48.5) (float-vector -60.0 -20.5 48.5) (float-vector -60.0 20.5 48.5)))
         (instance face :init :vertices (list (float-vector 60.0 20.5 -0.5) (float-vector 60.0 20.5 48.5) (float-vector -60.0 20.5 48.5) (float-vector -60.0 20.5 24.5) (float-vector -20.0 20.5 24.5) (float-vector -20.0 20.5 -0.5)))
         (instance face :init :vertices (list (float-vector -20.0 -21.5 -0.5) (float-vector -20.0 -21.5 24.5) (float-vector -20.0 -20.5 24.5) (float-vector -20.0 -20.5 -0.5)))
         (instance face :init :vertices (list (float-vector -20.0 21.5 24.5) (float-vector -20.0 21.5 -0.5) (float-vector -20.0 20.5 -0.5) (float-vector -20.0 20.5 24.5)))
         (instance face :init :vertices (list (float-vector -60.0 -21.5 24.5) (float-vector -20.0 -21.5 24.5) (float-vector -20.0 -21.5 -0.5) (float-vector 60.0 -21.5 -0.5) (float-vector 60.0 -21.5 49.5) (float-vector -60.0 -21.5 49.5)))
         (instance face :init :vertices (list (float-vector 60.0 21.5 -0.5) (float-vector -20.0 21.5 -0.5) (float-vector -20.0 21.5 24.5) (float-vector -60.0 21.5 24.5) (float-vector -60.0 21.5 49.5) (float-vector 60.0 21.5 49.5)))
         (instance face :init :vertices (list (float-vector 60.0 -20.5 -0.5) (float-vector 60.0 -21.5 -0.5) (float-vector -20.0 -21.5 -0.5) (float-vector -20.0 -20.5 -0.5)))
         (instance face :init :vertices (list (float-vector 60.0 21.5 -0.5) (float-vector 60.0 20.5 -0.5) (float-vector -20.0 20.5 -0.5) (float-vector -20.0 21.5 -0.5)))
         (instance face :init :vertices (list (float-vector 60.0 21.5 49.5) (float-vector 60.0 -21.5 49.5) (float-vector 60.0 -21.5 -0.5) (float-vector 60.0 -20.5 -0.5) (float-vector 60.0 -20.5 48.5) (float-vector 60.0 20.5 48.5) (float-vector 60.0 20.5 -0.5) (float-vector 60.0 21.5 -0.5)))
         (instance face :init :vertices (list (float-vector -60.0 21.5 49.5) (float-vector -60.0 -21.5 49.5) (float-vector 60.0 -21.5 49.5) (float-vector 60.0 21.5 49.5)))
         (instance face :init :vertices (list (float-vector -60.0 20.5 24.5) (float-vector -60.0 21.5 24.5) (float-vector -20.0 21.5 24.5) (float-vector -20.0 20.5 24.5)))
         (instance face :init :vertices (list (float-vector -60.0 -20.5 24.5) (float-vector -60.0 -21.5 24.5) (float-vector -60.0 -21.5 49.5) (float-vector -60.0 21.5 49.5) (float-vector -60.0 21.5 24.5) (float-vector -60.0 20.5 24.5) (float-vector -60.0 20.5 48.5) (float-vector -60.0 -20.5 48.5)))
         (instance face :init :vertices (list (float-vector -60.0 -21.5 24.5) (float-vector -60.0 -20.5 24.5) (float-vector -20.0 -20.5 24.5) (float-vector -20.0 -21.5 24.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (send (elt bc 2) :set-color :gray90)
     (send (elt bc 3) :set-color :gray40)
     (send (elt bc 4) :set-color :gray90)
     (send (elt bc 5) :set-color :gray90)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 363.731 :centroid (float-vector 4.57766 -8.043797e-06 -24.6787) :inertia-tensor #2f((2.201620e+06 0.860328 -21110.5) (0.860328 1.817535e+05 -0.029699) (-21110.5 -0.029699 2.125065e+06))))

     ;; definition of :rleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 5.24999 -9.09326 21.15) (float-vector -1.015257e-05 -10.5 21.15) (float-vector -5.25001 -9.09326 21.15) (float-vector -9.09327 -5.24998 21.15) (float-vector -10.5 1.525879e-05 21.15) (float-vector -9.09326 5.25002 21.15) (float-vector -5.24999 9.09328 21.15) (float-vector 3.353663e-06 10.5 21.15) (float-vector 5.25 9.09328 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.24999 -9.09328 -21.15) (float-vector 9.09326 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09326 -21.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector -5.25 9.09328 -21.15) (float-vector -9.09326 5.25 -21.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -1.015257e-05 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09328 21.15) (float-vector 5.25 9.09328 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 5.25 9.09326 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 3.353663e-06 10.5 21.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector 5.25 9.09328 23.15) (float-vector 5.25 9.09328 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector 5.25 9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector -5.24999 9.09328 21.15) (float-vector -5.25 9.09328 23.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector 3.353663e-06 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 3.353663e-06 10.5 -23.15) (float-vector -5.25 9.09328 -23.15) (float-vector -5.25 9.09328 -21.15) (float-vector 3.353663e-06 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25002 21.15) (float-vector -9.09327 5.25002 23.15) (float-vector -5.25 9.09328 23.15) (float-vector -5.24999 9.09328 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09328 -23.15) (float-vector -9.09326 5.25 -23.15) (float-vector -9.09326 5.25 -21.15) (float-vector -5.25 9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 1.525879e-05 21.15) (float-vector -10.5 1.525879e-05 23.15) (float-vector -9.09327 5.25002 23.15) (float-vector -9.09326 5.25002 21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09326 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.24998 21.15) (float-vector -9.09327 -5.24998 23.15) (float-vector -10.5 1.525879e-05 23.15) (float-vector -10.5 1.525879e-05 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 0.0 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 21.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -9.09327 -5.24998 23.15) (float-vector -9.09327 -5.24998 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.015257e-05 -10.5 21.15) (float-vector -1.015257e-05 -10.5 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -5.25001 -9.09326 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 -23.15) (float-vector -1.015257e-05 -10.5 -23.15) (float-vector -1.015257e-05 -10.5 -21.15) (float-vector -5.25001 -9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09326 21.15) (float-vector 5.24999 -9.09326 23.15) (float-vector -1.015257e-05 -10.5 23.15) (float-vector -1.015257e-05 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.015257e-05 -10.5 -23.15) (float-vector 5.24999 -9.09328 -23.15) (float-vector 5.24999 -9.09328 -21.15) (float-vector -1.015257e-05 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 9.09326 -5.25 23.15) (float-vector 5.24999 -9.09326 23.15) (float-vector 5.24999 -9.09326 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09328 -23.15) (float-vector 9.09326 -5.25 -23.15) (float-vector 9.09326 -5.25 -21.15) (float-vector 5.24999 -9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09328 23.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector -5.25 9.09328 23.15) (float-vector -9.09327 5.25002 23.15) (float-vector -10.5 1.525879e-05 23.15) (float-vector -9.09327 -5.24998 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -1.015257e-05 -10.5 23.15) (float-vector 5.24999 -9.09326 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09326 -5.25 23.15) (float-vector 9.09326 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09326 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09326 -5.25 -23.15) (float-vector 5.24999 -9.09328 -23.15) (float-vector -1.015257e-05 -10.5 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -9.09326 5.25 -23.15) (float-vector -5.25 9.09328 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -11.5 86.0 21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 41.0 -21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 41.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector 11.5 41.0 21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 41.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 86.0 21.15) (float-vector 11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 86.0 21.15) (float-vector -11.5 86.0 21.15) (float-vector -11.5 41.0 21.15) (float-vector 11.5 41.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -9.09326 79.25 21.15) (float-vector -5.24998 83.0933 21.15) (float-vector 1.674482e-05 84.5 21.15) (float-vector 5.25001 83.0933 21.15) (float-vector 9.09327 79.25 21.15) (float-vector 10.5 74.0 21.15) (float-vector 9.09326 68.75 21.15) (float-vector 5.24999 64.9067 21.15) (float-vector -9.945914e-06 63.5 21.15) (float-vector -5.25001 64.9067 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -10.5 74.0 21.15)))
))
         (instance face :init :vertices (list (float-vector 11.5 86.0 -21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 86.0 21.15) (float-vector 11.5 86.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 86.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector -11.5 41.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -5.24998 83.0933 -21.15) (float-vector -9.09326 79.25 -21.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09327 68.75 -21.15) (float-vector -5.25001 64.9067 -21.15) (float-vector -9.945914e-06 63.5 -21.15) (float-vector 5.24999 64.9067 -21.15) (float-vector 9.09326 68.75 -21.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09327 79.25 -21.15) (float-vector 5.25001 83.0933 -21.15) (float-vector 1.674482e-05 84.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -10.5 74.0 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -9.09327 68.75 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -21.15) (float-vector -10.5 74.0 -23.15) (float-vector -9.09327 68.75 -23.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 64.9067 21.15) (float-vector -5.25001 64.9067 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -9.09327 68.75 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 68.75 -23.15) (float-vector -5.25001 64.9067 -23.15) (float-vector -5.25001 64.9067 -21.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -9.945914e-06 63.5 21.15) (float-vector -9.945899e-06 63.5 23.15) (float-vector -5.25001 64.9067 23.15) (float-vector -5.25001 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 64.9067 -23.15) (float-vector -9.945899e-06 63.5 -23.15) (float-vector -9.945914e-06 63.5 -21.15) (float-vector -5.25001 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 64.9067 21.15) (float-vector 5.24999 64.9067 23.15) (float-vector -9.945899e-06 63.5 23.15) (float-vector -9.945914e-06 63.5 21.15)))
         (instance face :init :vertices (list (float-vector -9.945899e-06 63.5 -23.15) (float-vector 5.24999 64.9067 -23.15) (float-vector 5.24999 64.9067 -21.15) (float-vector -9.945914e-06 63.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 68.75 21.15) (float-vector 9.09326 68.75 23.15) (float-vector 5.24999 64.9067 23.15) (float-vector 5.24999 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 64.9067 -23.15) (float-vector 9.09326 68.75 -23.15) (float-vector 9.09326 68.75 -21.15) (float-vector 5.24999 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 21.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09326 68.75 23.15) (float-vector 9.09326 68.75 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 68.75 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09326 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 21.15) (float-vector 9.09327 79.25 23.15) (float-vector 10.5 74.0 23.15) (float-vector 10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 9.09327 79.25 -21.15) (float-vector 10.5 74.0 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25001 83.0933 21.15) (float-vector 5.25001 83.0933 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 9.09327 79.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 -23.15) (float-vector 5.25001 83.0933 -23.15) (float-vector 5.25001 83.0933 -21.15) (float-vector 9.09327 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector 1.674482e-05 84.5 21.15) (float-vector 1.674482e-05 84.5 23.15) (float-vector 5.25001 83.0933 23.15) (float-vector 5.25001 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector 5.25001 83.0933 -23.15) (float-vector 1.674482e-05 84.5 -23.15) (float-vector 1.674482e-05 84.5 -21.15) (float-vector 5.25001 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -5.24998 83.0933 21.15) (float-vector -5.24998 83.0933 23.15) (float-vector 1.674482e-05 84.5 23.15) (float-vector 1.674482e-05 84.5 21.15)))
         (instance face :init :vertices (list (float-vector 1.674482e-05 84.5 -23.15) (float-vector -5.24998 83.0933 -23.15) (float-vector -5.24998 83.0933 -21.15) (float-vector 1.674482e-05 84.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 79.25 21.15) (float-vector -9.09326 79.25 23.15) (float-vector -5.24998 83.0933 23.15) (float-vector -5.24998 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector -5.24998 83.0933 -23.15) (float-vector -9.09326 79.25 -23.15) (float-vector -9.09326 79.25 -21.15) (float-vector -5.24998 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 79.25 23.15) (float-vector -10.5 74.0 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -5.25001 64.9067 23.15) (float-vector -9.945899e-06 63.5 23.15) (float-vector 5.24999 64.9067 23.15) (float-vector 9.09326 68.75 23.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 5.25001 83.0933 23.15) (float-vector 1.674482e-05 84.5 23.15) (float-vector -5.24998 83.0933 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -9.09326 79.25 23.15) (float-vector -9.09326 79.25 21.15) (float-vector -10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 79.25 -23.15) (float-vector -10.5 74.0 -23.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09326 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -23.15) (float-vector -9.09326 79.25 -23.15) (float-vector -5.24998 83.0933 -23.15) (float-vector 1.674482e-05 84.5 -23.15) (float-vector 5.25001 83.0933 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 9.09326 68.75 -23.15) (float-vector 5.24999 64.9067 -23.15) (float-vector -9.945899e-06 63.5 -23.15) (float-vector -5.25001 64.9067 -23.15) (float-vector -9.09327 68.75 -23.15)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-crotch-p :weight 130 :centroid (float-vector -3.774983e-06 37.0 5.861477e-07) :inertia-tensor #2f((1.347484e+05 0.006697 7.388297e-11) (0.006697 25114.8 -4.634785e-09) (7.388296e-11 -4.634785e-09 1.210953e+05))))

     ;; definition of :rleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 29.0 26.5) (float-vector 10.0 29.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -27.5) (float-vector -10.0 30.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 7.629395e-06 -27.5) (float-vector -10.0 7.629395e-06 -26.5) (float-vector -10.0 29.0 -26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 -27.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -10.0 7.629395e-06 -26.5) (float-vector -10.0 7.629395e-06 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -9.99999 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector 0.0 -9.99999 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -27.5) (float-vector 0.0 -10.0 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector -7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 0.0 -9.99999 27.5) (float-vector 0.0 -9.99999 26.5) (float-vector 7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 0.0 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector 0.0 -9.99999 27.5) (float-vector 7.07107 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 0.0 -10.0 -27.5) (float-vector -7.07107 -7.07107 -27.5) (float-vector -10.0 7.629395e-06 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 27.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07107 26.5) (float-vector 0.0 -9.99999 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 29.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 -26.5) (float-vector 10.0 29.0 26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 29.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 29.0 -26.5) (float-vector -10.0 7.629395e-06 -26.5) (float-vector -7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 29.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 75.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 75.0 27.5) (float-vector -10.0 75.0 26.5) (float-vector -10.0 31.0 26.5) (float-vector -10.0 31.0 -26.5) (float-vector -10.0 75.0 -26.5)))
         (instance face :init :vertices (list (float-vector 9.99997 30.0 -27.5) (float-vector 9.99997 30.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 75.0 -27.5) (float-vector 10.0 75.0 -26.5) (float-vector 9.99997 31.0 -26.5) (float-vector 9.99997 31.0 26.5) (float-vector 10.0 75.0 26.5) (float-vector 10.0 75.0 27.5) (float-vector 9.99997 30.0 27.5) (float-vector 9.99997 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 82.071 27.5) (float-vector 10.0 75.0 27.5) (float-vector 10.0 75.0 26.5) (float-vector 7.07107 82.071 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 82.071 -27.5) (float-vector 7.07107 82.071 -26.5) (float-vector 10.0 75.0 -26.5) (float-vector 10.0 75.0 -27.5)))
         (instance face :init :vertices (list (float-vector 6.278337e-06 85.0 27.5) (float-vector 7.07107 82.071 27.5) (float-vector 7.07107 82.071 26.5) (float-vector 6.278337e-06 85.0 26.5)))
         (instance face :init :vertices (list (float-vector 6.278337e-06 85.0 -27.5) (float-vector 6.278337e-06 85.0 -26.5) (float-vector 7.07107 82.071 -26.5) (float-vector 7.07107 82.071 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 82.0711 27.5) (float-vector 6.278337e-06 85.0 27.5) (float-vector 6.278337e-06 85.0 26.5) (float-vector -7.07106 82.0711 26.5)))
         (instance face :init :vertices (list (float-vector -7.07106 82.0711 -27.5) (float-vector -7.07106 82.0711 -26.5) (float-vector 6.278337e-06 85.0 -26.5) (float-vector 6.278337e-06 85.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 75.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector 9.99997 30.0 27.5) (float-vector 10.0 75.0 27.5) (float-vector 7.07107 82.071 27.5) (float-vector 6.278337e-06 85.0 27.5) (float-vector -7.07106 82.0711 27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 82.0711 -27.5) (float-vector 6.278337e-06 85.0 -27.5) (float-vector 7.07107 82.071 -27.5) (float-vector 10.0 75.0 -27.5) (float-vector 9.99997 30.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector -10.0 75.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 82.0711 27.5) (float-vector -7.07106 82.0711 26.5) (float-vector -10.0 75.0 26.5) (float-vector -10.0 75.0 27.5)))
         (instance face :init :vertices (list (float-vector -10.0 75.0 -27.5) (float-vector -10.0 75.0 -26.5) (float-vector -7.07106 82.0711 -26.5) (float-vector -7.07106 82.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 26.5) (float-vector -10.0 75.0 26.5) (float-vector -7.07106 82.0711 26.5) (float-vector 6.278337e-06 85.0 26.5) (float-vector 7.07107 82.071 26.5) (float-vector 10.0 75.0 26.5) (float-vector 9.99997 31.0 26.5)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 -26.5) (float-vector -10.0 31.0 26.5) (float-vector 9.99997 31.0 26.5) (float-vector 9.99997 31.0 -26.5)))
         (instance face :init :vertices (list (float-vector 9.99997 31.0 -26.5) (float-vector 10.0 75.0 -26.5) (float-vector 7.07107 82.071 -26.5) (float-vector 6.278337e-06 85.0 -26.5) (float-vector -7.07106 82.0711 -26.5) (float-vector -10.0 75.0 -26.5) (float-vector -10.0 31.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-knee-p :weight 15.3514 :centroid (float-vector -7.821051e-06 34.7031 -2.385046e-05) :inertia-tensor #2f((15413.0 0.001015 3.832785e-10) (0.001015 8870.76 0.000937) (3.832785e-10 0.000937 7565.68))))

     ;; definition of :rleg-ankle-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09326 -5.25001 21.15) (float-vector 5.24999 -9.09327 21.15) (float-vector -1.015255e-05 -10.5 21.15) (float-vector -5.25001 -9.09326 21.15) (float-vector -9.09327 -5.24999 21.15) (float-vector -10.5 7.629395e-06 21.15) (float-vector -9.09326 5.25001 21.15) (float-vector -5.25 9.09327 21.15) (float-vector 3.353693e-06 10.5 21.15) (float-vector 5.25 9.09327 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.24999 -9.09327 -21.15) (float-vector 9.09326 -5.25001 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09327 -21.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector -5.25 9.09327 -21.15) (float-vector -9.09327 5.25001 -21.15) (float-vector -10.5 7.629395e-06 -21.15) (float-vector -9.09327 -5.24999 -21.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -1.015255e-05 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 1.907349e-06 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 21.15) (float-vector 5.25 9.09327 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 5.25 9.09327 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 3.353693e-06 10.5 21.15) (float-vector 3.353693e-06 10.5 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector 5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 21.15) (float-vector -5.25 9.09327 23.15) (float-vector 3.353693e-06 10.5 23.15) (float-vector 3.353693e-06 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 3.353663e-06 10.5 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector -5.25 9.09327 -21.15) (float-vector 3.353663e-06 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25001 21.15) (float-vector -9.09326 5.25001 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 -23.15) (float-vector -9.09326 5.25001 -23.15) (float-vector -9.09327 5.25001 -21.15) (float-vector -5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 7.629395e-06 21.15) (float-vector -10.5 7.629395e-06 23.15) (float-vector -9.09326 5.25001 23.15) (float-vector -9.09326 5.25001 21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25001 -23.15) (float-vector -10.5 7.629395e-06 -23.15) (float-vector -10.5 7.629395e-06 -21.15) (float-vector -9.09327 5.25001 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.24999 21.15) (float-vector -9.09327 -5.24999 23.15) (float-vector -10.5 7.629395e-06 23.15) (float-vector -10.5 7.629395e-06 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 7.629395e-06 -23.15) (float-vector -9.09327 -5.24999 -23.15) (float-vector -9.09327 -5.24999 -21.15) (float-vector -10.5 7.629395e-06 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 21.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -9.09327 -5.24999 23.15) (float-vector -9.09327 -5.24999 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.24999 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -9.09327 -5.24999 -21.15)))
         (instance face :init :vertices (list (float-vector -1.015255e-05 -10.5 21.15) (float-vector -1.015255e-05 -10.5 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -5.25001 -9.09326 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 -23.15) (float-vector -1.015255e-05 -10.5 -23.15) (float-vector -1.015255e-05 -10.5 -21.15) (float-vector -5.25001 -9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09327 21.15) (float-vector 5.24999 -9.09327 23.15) (float-vector -1.015255e-05 -10.5 23.15) (float-vector -1.015255e-05 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.015255e-05 -10.5 -23.15) (float-vector 5.24999 -9.09327 -23.15) (float-vector 5.24999 -9.09327 -21.15) (float-vector -1.015255e-05 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25001 21.15) (float-vector 9.09326 -5.25001 23.15) (float-vector 5.24999 -9.09327 23.15) (float-vector 5.24999 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09327 -23.15) (float-vector 9.09326 -5.25001 -23.15) (float-vector 9.09326 -5.25001 -21.15) (float-vector 5.24999 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25001 23.15) (float-vector 10.5 1.907349e-06 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 3.353693e-06 10.5 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -9.09326 5.25001 23.15) (float-vector -10.5 7.629395e-06 23.15) (float-vector -9.09327 -5.24999 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -1.015255e-05 -10.5 23.15) (float-vector 5.24999 -9.09327 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 1.907349e-06 23.15) (float-vector 9.09326 -5.25001 23.15) (float-vector 9.09326 -5.25001 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25001 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09326 -5.25001 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09326 -5.25001 -23.15) (float-vector 5.24999 -9.09327 -23.15) (float-vector -1.015255e-05 -10.5 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -9.09327 -5.24999 -23.15) (float-vector -10.5 7.629395e-06 -23.15) (float-vector -9.09326 5.25001 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -20.0 25.0) (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -25.0 -25.0) (float-vector 75.0 -25.0 -25.0) (float-vector 75.0 -25.0 25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 -25.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -25.0 25.0) (float-vector 75.0 -25.0 -25.0) (float-vector 75.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 25.0) (float-vector -20.0 -25.0 25.0) (float-vector 75.0 -25.0 25.0) (float-vector 75.0 -20.0 25.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 -20.0 -25.0) (float-vector 30.0 -20.0 25.0) (float-vector 30.0 10.0 15.0) (float-vector 30.0 10.0 -15.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 10.0 -15.0) (float-vector 75.0 10.0 15.0)))
         (instance face :init :vertices (list (float-vector 30.0 -20.0 -25.0) (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 -20.0 25.0) (float-vector 30.0 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 30.0 10.0 -15.0) (float-vector 75.0 10.0 -15.0) (float-vector 75.0 -20.0 -25.0) (float-vector 30.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 30.0 10.0 15.0) (float-vector 75.0 10.0 15.0) (float-vector 75.0 10.0 -15.0) (float-vector 30.0 10.0 -15.0)))
         (instance face :init :vertices (list (float-vector 30.0 -20.0 25.0) (float-vector 75.0 -20.0 25.0) (float-vector 75.0 10.0 15.0) (float-vector 30.0 10.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :lightgoldenrod)
     (send (elt bc 2) :set-color :yellow)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rleg-ankle-p :weight 230.0 :centroid (float-vector 35.4891 -3.01619 -1.562614e-05) :inertia-tensor #2f((86400.8 35331.8 0.049857) (35331.8 2.115441e+05 -0.013576) (0.049857 -0.013576 2.098109e+05))))

     ;; definition of :rarm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 0.0 27.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 39.0 26.5) (float-vector 10.0 39.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -27.5) (float-vector -10.0 40.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 1.525879e-05 -27.5) (float-vector -10.0 1.525879e-05 -26.5) (float-vector -10.0 39.0 -26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07104 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07104 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07108 -27.5) (float-vector -7.07107 -7.07108 -26.5) (float-vector -10.0 1.525879e-05 -26.5) (float-vector -10.0 1.525879e-05 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07107 -7.07104 27.5) (float-vector -7.07107 -7.07104 26.5) (float-vector 0.0 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -27.5) (float-vector 0.0 -10.0 -26.5) (float-vector -7.07107 -7.07108 -26.5) (float-vector -7.07107 -7.07108 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 0.0 -10.0 26.5) (float-vector 7.07107 -7.07108 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07104 -27.5) (float-vector 7.07107 -7.07104 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 0.0 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07104 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07107 -7.07108 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07104 -27.5) (float-vector 0.0 -10.0 -27.5) (float-vector -7.07107 -7.07108 -27.5) (float-vector -10.0 1.525879e-05 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 27.5) (float-vector 7.07107 -7.07108 26.5) (float-vector 10.0 0.0 26.5) (float-vector 10.0 0.0 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07104 -26.5) (float-vector 7.07107 -7.07104 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 26.5) (float-vector 10.0 0.0 26.5) (float-vector 7.07107 -7.07108 26.5) (float-vector 0.0 -10.0 26.5) (float-vector -7.07107 -7.07104 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 39.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 -26.5) (float-vector 10.0 39.0 26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 39.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 39.0 -26.5) (float-vector -10.0 1.525879e-05 -26.5) (float-vector -7.07107 -7.07108 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 7.07107 -7.07104 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 39.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 80.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 80.0 27.5) (float-vector -10.0 80.0 26.5) (float-vector -10.0 41.0 26.5) (float-vector -10.0 41.0 -26.5) (float-vector -10.0 80.0 -26.5)))
         (instance face :init :vertices (list (float-vector 9.99997 40.0 -27.5) (float-vector 9.99997 40.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 -27.5) (float-vector 10.0 80.0 -26.5) (float-vector 9.99998 41.0 -26.5) (float-vector 9.99997 41.0 26.5) (float-vector 10.0 80.0 26.5) (float-vector 10.0 80.0 27.5) (float-vector 9.99997 40.0 27.5) (float-vector 9.99997 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07108 87.0711 27.5) (float-vector 10.0 80.0 27.5) (float-vector 10.0 80.0 26.5) (float-vector 7.07108 87.0711 26.5)))
         (instance face :init :vertices (list (float-vector 7.07108 87.071 -27.5) (float-vector 7.07107 87.071 -26.5) (float-vector 10.0 80.0 -26.5) (float-vector 10.0 80.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 90.0 27.5) (float-vector 7.07108 87.0711 27.5) (float-vector 7.07108 87.0711 26.5) (float-vector 7.629395e-06 90.0 26.5)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 90.0 -27.5) (float-vector 7.629395e-06 90.0 -26.5) (float-vector 7.07107 87.071 -26.5) (float-vector 7.07108 87.071 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 27.5) (float-vector 7.629395e-06 90.0 27.5) (float-vector 7.629395e-06 90.0 26.5) (float-vector -7.07106 87.0711 26.5)))
         (instance face :init :vertices (list (float-vector -7.07106 87.0711 -27.5) (float-vector -7.07106 87.0711 -26.5) (float-vector 7.629395e-06 90.0 -26.5) (float-vector 7.629395e-06 90.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector 9.99997 40.0 27.5) (float-vector 10.0 80.0 27.5) (float-vector 7.07108 87.0711 27.5) (float-vector 7.629395e-06 90.0 27.5) (float-vector -7.07107 87.0711 27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 87.0711 -27.5) (float-vector 7.629395e-06 90.0 -27.5) (float-vector 7.07108 87.071 -27.5) (float-vector 10.0 80.0 -27.5) (float-vector 9.99997 40.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector -10.0 80.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 27.5) (float-vector -7.07106 87.0711 26.5) (float-vector -10.0 80.0 26.5) (float-vector -10.0 80.0 27.5)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 -27.5) (float-vector -10.0 80.0 -26.5) (float-vector -7.07106 87.0711 -26.5) (float-vector -7.07106 87.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 41.0 26.5) (float-vector -10.0 80.0 26.5) (float-vector -7.07106 87.0711 26.5) (float-vector 7.629395e-06 90.0 26.5) (float-vector 7.07108 87.0711 26.5) (float-vector 10.0 80.0 26.5) (float-vector 9.99997 41.0 26.5)))
         (instance face :init :vertices (list (float-vector -10.0 41.0 -26.5) (float-vector -10.0 41.0 26.5) (float-vector 9.99997 41.0 26.5) (float-vector 9.99998 41.0 -26.5)))
         (instance face :init :vertices (list (float-vector 9.99998 41.0 -26.5) (float-vector 10.0 80.0 -26.5) (float-vector 7.07107 87.071 -26.5) (float-vector 7.629395e-06 90.0 -26.5) (float-vector -7.07106 87.0711 -26.5) (float-vector -10.0 80.0 -26.5) (float-vector -10.0 41.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-shoulder-p :weight 15.8914 :centroid (float-vector -9.359974e-06 40.0 2.053614e-05) :inertia-tensor #2f((16776.9 0.001786 0.000123) (0.001786 9282.45 0.000156) (0.000123 0.000156 8553.89))))

     ;; definition of :rarm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 5.24999 -9.09328 21.15) (float-vector -9.536743e-06 -10.5 21.15) (float-vector -5.25001 -9.09326 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 0.0 21.15) (float-vector -9.09327 5.25 21.15) (float-vector -5.25 9.09328 21.15) (float-vector 3.814697e-06 10.5 21.15) (float-vector 5.25 9.09326 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.24999 -9.09328 -21.15) (float-vector 9.09326 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09326 -21.15) (float-vector 3.814697e-06 10.5 -21.15) (float-vector -5.25 9.09328 -21.15) (float-vector -9.09327 5.25 -21.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -1.144409e-05 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.24998 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 21.15) (float-vector 5.25 9.09326 23.15) (float-vector 9.09327 5.24998 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 5.25 9.09326 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 3.814697e-06 10.5 21.15) (float-vector 3.814697e-06 10.5 23.15) (float-vector 5.25 9.09326 23.15) (float-vector 5.25 9.09326 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 -23.15) (float-vector 3.814697e-06 10.5 -23.15) (float-vector 3.814697e-06 10.5 -21.15) (float-vector 5.25 9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09328 21.15) (float-vector -5.25 9.09328 23.15) (float-vector 3.814697e-06 10.5 23.15) (float-vector 3.814697e-06 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 3.814697e-06 10.5 -23.15) (float-vector -5.25 9.09326 -23.15) (float-vector -5.25 9.09328 -21.15) (float-vector 3.814697e-06 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25 21.15) (float-vector -9.09327 5.25 23.15) (float-vector -5.25 9.09328 23.15) (float-vector -5.25 9.09328 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09326 -23.15) (float-vector -9.09327 5.25002 -23.15) (float-vector -9.09327 5.25 -21.15) (float-vector -5.25 9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 21.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25002 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 -5.24998 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 0.0 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 21.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.24998 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.536743e-06 -10.5 21.15) (float-vector -1.144409e-05 -10.5 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -5.25001 -9.09326 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 -23.15) (float-vector -9.536743e-06 -10.5 -23.15) (float-vector -1.144409e-05 -10.5 -21.15) (float-vector -5.25001 -9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09328 21.15) (float-vector 5.24999 -9.09328 23.15) (float-vector -1.144409e-05 -10.5 23.15) (float-vector -9.536743e-06 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -9.536743e-06 -10.5 -23.15) (float-vector 5.24999 -9.09328 -23.15) (float-vector 5.24999 -9.09328 -21.15) (float-vector -1.144409e-05 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 9.09326 -5.25002 23.15) (float-vector 5.24999 -9.09328 23.15) (float-vector 5.24999 -9.09328 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09328 -23.15) (float-vector 9.09326 -5.25 -23.15) (float-vector 9.09326 -5.25 -21.15) (float-vector 5.24999 -9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25002 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.24998 23.15) (float-vector 5.25 9.09326 23.15) (float-vector 3.814697e-06 10.5 23.15) (float-vector -5.25 9.09328 23.15) (float-vector -9.09327 5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -1.144409e-05 -10.5 23.15) (float-vector 5.24999 -9.09328 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09326 -5.25002 23.15) (float-vector 9.09326 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09326 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09326 -5.25 -23.15) (float-vector 5.24999 -9.09328 -23.15) (float-vector -9.536743e-06 -10.5 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -9.09327 -5.24998 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 5.25002 -23.15) (float-vector -5.25 9.09326 -23.15) (float-vector 3.814697e-06 10.5 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 33.0 -15.0) (float-vector -9.99999 33.0 -15.0) (float-vector -9.99995 103.0 -15.0) (float-vector 4.768372e-05 113.0 -15.0) (float-vector 10.0 103.0 -15.0)))
         (instance face :init :vertices (list (float-vector -9.99998 33.0 15.0) (float-vector 10.0 33.0 15.0) (float-vector 10.0 103.0 15.0) (float-vector 4.577637e-05 113.0 15.0) (float-vector -9.99996 103.0 15.0)))
         (instance face :init :vertices (list (float-vector 10.0 33.0 -15.0) (float-vector 10.0 33.0 15.0) (float-vector -9.99998 33.0 15.0) (float-vector -9.99999 33.0 -15.0)))
         (instance face :init :vertices (list (float-vector 10.0 103.0 -15.0) (float-vector 10.0 103.0 15.0) (float-vector 10.0 33.0 15.0) (float-vector 10.0 33.0 -15.0)))
         (instance face :init :vertices (list (float-vector 4.768372e-05 113.0 -15.0) (float-vector 4.577637e-05 113.0 15.0) (float-vector 10.0 103.0 15.0) (float-vector 10.0 103.0 -15.0)))
         (instance face :init :vertices (list (float-vector -9.99995 103.0 -15.0) (float-vector -9.99996 103.0 15.0) (float-vector 4.577637e-05 113.0 15.0) (float-vector 4.768372e-05 113.0 -15.0)))
         (instance face :init :vertices (list (float-vector -9.99999 33.0 -15.0) (float-vector -9.99998 33.0 15.0) (float-vector -9.99996 103.0 15.0) (float-vector -9.99995 103.0 -15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray90)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rarm-elbow-p :weight 105 :centroid (float-vector 9.771291e-06 33.1876 3.379446e-07) :inertia-tensor #2f((1.354594e+05 -0.047332 4.051270e-10) (-0.047332 16890.7 0.000963) (4.051269e-10 0.000963 1.269662e+05))))

     ;; definition of :lleg-crotch-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 5.24999 -9.09328 21.15) (float-vector -1.015257e-05 -10.5 21.15) (float-vector -5.25001 -9.09326 21.15) (float-vector -9.09327 -5.25 21.15) (float-vector -10.5 0.0 21.15) (float-vector -9.09326 5.25 21.15) (float-vector -5.25 9.09328 21.15) (float-vector 3.353663e-06 10.5 21.15) (float-vector 5.25 9.09326 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.24999 -9.09328 -21.15) (float-vector 9.09326 -5.25002 -21.15) (float-vector 10.5 -1.525879e-05 -21.15) (float-vector 9.09327 5.24998 -21.15) (float-vector 5.25 9.09326 -21.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector -5.25 9.09326 -21.15) (float-vector -9.09326 5.25 -21.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -5.25001 -9.09328 -21.15) (float-vector -1.015257e-05 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 -1.525879e-05 -21.15) (float-vector 10.5 -1.525879e-05 -23.15) (float-vector 9.09327 5.24998 -23.15) (float-vector 9.09327 5.24998 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 21.15) (float-vector 5.25 9.09326 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.24998 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 5.25 9.09326 -21.15) (float-vector 9.09327 5.24998 -21.15)))
         (instance face :init :vertices (list (float-vector 3.353663e-06 10.5 21.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector 5.25 9.09326 23.15) (float-vector 5.25 9.09326 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector 5.25 9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09328 21.15) (float-vector -5.25 9.09328 23.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector 3.353663e-06 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 3.353663e-06 10.5 -23.15) (float-vector -5.25 9.09326 -23.15) (float-vector -5.25 9.09326 -21.15) (float-vector 3.353663e-06 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25 21.15) (float-vector -9.09326 5.25 23.15) (float-vector -5.25 9.09328 23.15) (float-vector -5.25 9.09328 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09326 -23.15) (float-vector -9.09326 5.25 -23.15) (float-vector -9.09326 5.25 -21.15) (float-vector -5.25 9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 21.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09326 5.25 23.15) (float-vector -9.09326 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -10.5 0.0 -21.15) (float-vector -9.09326 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 21.15) (float-vector -9.09327 -5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -9.09327 -5.25 -21.15) (float-vector -10.5 0.0 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 21.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -9.09327 -5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.25 -23.15) (float-vector -5.25001 -9.09328 -23.15) (float-vector -5.25001 -9.09328 -21.15) (float-vector -9.09327 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -1.015257e-05 -10.5 21.15) (float-vector -1.015257e-05 -10.5 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -5.25001 -9.09326 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09328 -23.15) (float-vector -1.015257e-05 -10.5 -23.15) (float-vector -1.015257e-05 -10.5 -21.15) (float-vector -5.25001 -9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09328 21.15) (float-vector 5.24999 -9.09328 23.15) (float-vector -1.015257e-05 -10.5 23.15) (float-vector -1.015257e-05 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.015257e-05 -10.5 -23.15) (float-vector 5.24999 -9.09328 -23.15) (float-vector 5.24999 -9.09328 -21.15) (float-vector -1.015257e-05 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 9.09326 -5.25 23.15) (float-vector 5.24999 -9.09328 23.15) (float-vector 5.24999 -9.09328 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09328 -23.15) (float-vector 9.09326 -5.25002 -23.15) (float-vector 9.09326 -5.25002 -21.15) (float-vector 5.24999 -9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09326 23.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector -5.25 9.09328 23.15) (float-vector -9.09326 5.25 23.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 -5.25 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -1.015257e-05 -10.5 23.15) (float-vector 5.24999 -9.09328 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09326 -5.25 23.15) (float-vector 9.09326 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25002 -23.15) (float-vector 10.5 -1.525879e-05 -23.15) (float-vector 10.5 -1.525879e-05 -21.15) (float-vector 9.09326 -5.25002 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 -1.525879e-05 -23.15) (float-vector 9.09326 -5.25002 -23.15) (float-vector 5.24999 -9.09328 -23.15) (float-vector -1.015257e-05 -10.5 -23.15) (float-vector -5.25001 -9.09328 -23.15) (float-vector -9.09327 -5.25 -23.15) (float-vector -10.5 0.0 -23.15) (float-vector -9.09326 5.25 -23.15) (float-vector -5.25 9.09326 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 5.25 9.09326 -23.15) (float-vector 9.09327 5.24998 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -11.5 86.0 21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 41.0 -21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 41.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector 11.5 41.0 21.15) (float-vector -11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 41.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 86.0 21.15) (float-vector 11.5 41.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 86.0 21.15) (float-vector -11.5 86.0 21.15) (float-vector -11.5 41.0 21.15) (float-vector 11.5 41.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -9.09326 79.25 21.15) (float-vector -5.24998 83.0933 21.15) (float-vector 1.674482e-05 84.5 21.15) (float-vector 5.25001 83.0933 21.15) (float-vector 9.09327 79.25 21.15) (float-vector 10.5 74.0 21.15) (float-vector 9.09326 68.75 21.15) (float-vector 5.24999 64.9067 21.15) (float-vector -9.945914e-06 63.5 21.15) (float-vector -5.25001 64.9067 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -10.5 74.0 21.15)))
))
         (instance face :init :vertices (list (float-vector 11.5 86.0 -21.15) (float-vector -11.5 86.0 -21.15) (float-vector -11.5 86.0 21.15) (float-vector 11.5 86.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 86.0 -21.15) (float-vector 11.5 86.0 -21.15) (float-vector 11.5 41.0 -21.15) (float-vector -11.5 41.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -5.24998 83.0933 -21.15) (float-vector -9.09326 79.25 -21.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09327 68.75 -21.15) (float-vector -5.25001 64.9067 -21.15) (float-vector -9.945914e-06 63.5 -21.15) (float-vector 5.24999 64.9067 -21.15) (float-vector 9.09326 68.75 -21.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09327 79.25 -21.15) (float-vector 5.25001 83.0932 -21.15) (float-vector 1.674482e-05 84.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -10.5 74.0 21.15) (float-vector -9.09327 68.75 21.15) (float-vector -9.09327 68.75 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -21.15) (float-vector -10.5 74.0 -23.15) (float-vector -9.09327 68.75 -23.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 64.9067 21.15) (float-vector -5.25001 64.9067 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -9.09327 68.75 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 68.75 -23.15) (float-vector -5.25001 64.9067 -23.15) (float-vector -5.25001 64.9067 -21.15) (float-vector -9.09327 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector -9.945914e-06 63.5 21.15) (float-vector -9.945914e-06 63.5 23.15) (float-vector -5.25001 64.9067 23.15) (float-vector -5.25001 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 64.9067 -23.15) (float-vector -9.945914e-06 63.5 -23.15) (float-vector -9.945914e-06 63.5 -21.15) (float-vector -5.25001 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 64.9067 21.15) (float-vector 5.24999 64.9067 23.15) (float-vector -9.945914e-06 63.5 23.15) (float-vector -9.945914e-06 63.5 21.15)))
         (instance face :init :vertices (list (float-vector -9.945914e-06 63.5 -23.15) (float-vector 5.24999 64.9067 -23.15) (float-vector 5.24999 64.9067 -21.15) (float-vector -9.945914e-06 63.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 68.75 21.15) (float-vector 9.09326 68.75 23.15) (float-vector 5.24999 64.9067 23.15) (float-vector 5.24999 64.9067 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 64.9067 -23.15) (float-vector 9.09326 68.75 -23.15) (float-vector 9.09326 68.75 -21.15) (float-vector 5.24999 64.9067 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 21.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09326 68.75 23.15) (float-vector 9.09326 68.75 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 68.75 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 10.5 74.0 -21.15) (float-vector 9.09326 68.75 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 21.15) (float-vector 9.09327 79.25 23.15) (float-vector 10.5 74.0 23.15) (float-vector 10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector 10.5 74.0 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 9.09327 79.25 -21.15) (float-vector 10.5 74.0 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25001 83.0933 21.15) (float-vector 5.25001 83.0933 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 9.09327 79.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 79.25 -23.15) (float-vector 5.25001 83.0932 -23.15) (float-vector 5.25001 83.0932 -21.15) (float-vector 9.09327 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector 1.674482e-05 84.5 21.15) (float-vector 1.674482e-05 84.5 23.15) (float-vector 5.25001 83.0933 23.15) (float-vector 5.25001 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector 5.25001 83.0932 -23.15) (float-vector 1.674482e-05 84.5 -23.15) (float-vector 1.674482e-05 84.5 -21.15) (float-vector 5.25001 83.0932 -21.15)))
         (instance face :init :vertices (list (float-vector -5.24998 83.0933 21.15) (float-vector -5.24998 83.0933 23.15) (float-vector 1.674482e-05 84.5 23.15) (float-vector 1.674482e-05 84.5 21.15)))
         (instance face :init :vertices (list (float-vector 1.674482e-05 84.5 -23.15) (float-vector -5.24998 83.0933 -23.15) (float-vector -5.24998 83.0933 -21.15) (float-vector 1.674482e-05 84.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 79.25 21.15) (float-vector -9.09326 79.25 23.15) (float-vector -5.24998 83.0933 23.15) (float-vector -5.24998 83.0933 21.15)))
         (instance face :init :vertices (list (float-vector -5.24998 83.0933 -23.15) (float-vector -9.09326 79.25 -23.15) (float-vector -9.09326 79.25 -21.15) (float-vector -5.24998 83.0933 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 79.25 23.15) (float-vector -10.5 74.0 23.15) (float-vector -9.09327 68.75 23.15) (float-vector -5.25001 64.9067 23.15) (float-vector -9.945914e-06 63.5 23.15) (float-vector 5.24999 64.9067 23.15) (float-vector 9.09326 68.75 23.15) (float-vector 10.5 74.0 23.15) (float-vector 9.09327 79.25 23.15) (float-vector 5.25001 83.0933 23.15) (float-vector 1.674482e-05 84.5 23.15) (float-vector -5.24998 83.0933 23.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 23.15) (float-vector -9.09326 79.25 23.15) (float-vector -9.09326 79.25 21.15) (float-vector -10.5 74.0 21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 79.25 -23.15) (float-vector -10.5 74.0 -23.15) (float-vector -10.5 74.0 -21.15) (float-vector -9.09326 79.25 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 74.0 -23.15) (float-vector -9.09326 79.25 -23.15) (float-vector -5.24998 83.0933 -23.15) (float-vector 1.674482e-05 84.5 -23.15) (float-vector 5.25001 83.0932 -23.15) (float-vector 9.09327 79.25 -23.15) (float-vector 10.5 74.0 -23.15) (float-vector 9.09326 68.75 -23.15) (float-vector 5.24999 64.9067 -23.15) (float-vector -9.945914e-06 63.5 -23.15) (float-vector -5.25001 64.9067 -23.15) (float-vector -9.09327 68.75 -23.15)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-crotch-p :weight 130 :centroid (float-vector -3.774983e-06 37.0 5.861477e-07) :inertia-tensor #2f((1.347484e+05 0.006697 7.388297e-11) (0.006697 25114.8 -4.634785e-09) (7.388296e-11 -4.634785e-09 1.210953e+05))))

     ;; definition of :lleg-knee-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 -7.629395e-06 27.5) (float-vector 10.0 -7.629395e-06 26.5) (float-vector 10.0 29.0 26.5) (float-vector 10.0 29.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -27.5) (float-vector -10.0 30.0 27.5) (float-vector 10.0 30.0 27.5) (float-vector 10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 29.0 -26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07107 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07108 -27.5) (float-vector -7.07107 -7.07108 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector -7.07107 -7.07107 26.5) (float-vector 0.0 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -27.5) (float-vector 0.0 -10.0 -26.5) (float-vector -7.07107 -7.07108 -26.5) (float-vector -7.07107 -7.07108 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 0.0 -10.0 26.5) (float-vector 7.07107 -7.07108 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 0.0 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 -7.629395e-06 27.5) (float-vector 10.0 30.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07107 -7.07108 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07107 -27.5) (float-vector 0.0 -10.0 -27.5) (float-vector -7.07107 -7.07108 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector 10.0 30.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07108 27.5) (float-vector 7.07107 -7.07108 26.5) (float-vector 10.0 -7.629395e-06 26.5) (float-vector 10.0 -7.629395e-06 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 7.07107 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 26.5) (float-vector 10.0 -7.629395e-06 26.5) (float-vector 7.07107 -7.07108 26.5) (float-vector 0.0 -10.0 26.5) (float-vector -7.07107 -7.07107 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 29.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 29.0 -26.5) (float-vector 10.0 29.0 26.5) (float-vector -10.0 29.0 26.5) (float-vector -10.0 29.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 29.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07108 -26.5) (float-vector 0.0 -10.0 -26.5) (float-vector 7.07107 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 29.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 75.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 75.0 27.5) (float-vector -10.0 75.0 26.5) (float-vector -10.0 31.0 26.5) (float-vector -10.0 31.0 -26.5) (float-vector -10.0 75.0 -26.5)))
         (instance face :init :vertices (list (float-vector 9.99997 30.0 -27.5) (float-vector 9.99997 30.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector -10.0 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 75.0 -27.5) (float-vector 10.0 75.0 -26.5) (float-vector 9.99997 31.0 -26.5) (float-vector 9.99997 31.0 26.5) (float-vector 10.0 75.0 26.5) (float-vector 10.0 75.0 27.5) (float-vector 9.99997 30.0 27.5) (float-vector 9.99997 30.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 82.071 27.5) (float-vector 10.0 75.0 27.5) (float-vector 10.0 75.0 26.5) (float-vector 7.07107 82.071 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 82.071 -27.5) (float-vector 7.07107 82.071 -26.5) (float-vector 10.0 75.0 -26.5) (float-vector 10.0 75.0 -27.5)))
         (instance face :init :vertices (list (float-vector 6.278337e-06 85.0 27.5) (float-vector 7.07107 82.071 27.5) (float-vector 7.07107 82.071 26.5) (float-vector 6.278337e-06 85.0 26.5)))
         (instance face :init :vertices (list (float-vector 6.278337e-06 85.0 -27.5) (float-vector 6.278337e-06 85.0 -26.5) (float-vector 7.07107 82.071 -26.5) (float-vector 7.07107 82.071 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 82.071 27.5) (float-vector 6.278337e-06 85.0 27.5) (float-vector 6.278337e-06 85.0 26.5) (float-vector -7.07106 82.071 26.5)))
         (instance face :init :vertices (list (float-vector -7.07106 82.0711 -27.5) (float-vector -7.07106 82.0711 -26.5) (float-vector 6.278337e-06 85.0 -26.5) (float-vector 6.278337e-06 85.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 75.0 27.5) (float-vector -10.0 30.0 27.5) (float-vector 9.99997 30.0 27.5) (float-vector 10.0 75.0 27.5) (float-vector 7.07107 82.071 27.5) (float-vector 6.278337e-06 85.0 27.5) (float-vector -7.07106 82.071 27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 82.0711 -27.5) (float-vector 6.278337e-06 85.0 -27.5) (float-vector 7.07107 82.071 -27.5) (float-vector 10.0 75.0 -27.5) (float-vector 9.99997 30.0 -27.5) (float-vector -10.0 30.0 -27.5) (float-vector -10.0 75.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 82.071 27.5) (float-vector -7.07106 82.071 26.5) (float-vector -10.0 75.0 26.5) (float-vector -10.0 75.0 27.5)))
         (instance face :init :vertices (list (float-vector -10.0 75.0 -27.5) (float-vector -10.0 75.0 -26.5) (float-vector -7.07106 82.0711 -26.5) (float-vector -7.07106 82.0711 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 26.5) (float-vector -10.0 75.0 26.5) (float-vector -7.07106 82.071 26.5) (float-vector 6.278337e-06 85.0 26.5) (float-vector 7.07107 82.071 26.5) (float-vector 10.0 75.0 26.5) (float-vector 9.99997 31.0 26.5)))
         (instance face :init :vertices (list (float-vector -10.0 31.0 -26.5) (float-vector -10.0 31.0 26.5) (float-vector 9.99997 31.0 26.5) (float-vector 9.99997 31.0 -26.5)))
         (instance face :init :vertices (list (float-vector 9.99997 31.0 -26.5) (float-vector 10.0 75.0 -26.5) (float-vector 7.07107 82.071 -26.5) (float-vector 6.278337e-06 85.0 -26.5) (float-vector -7.07106 82.0711 -26.5) (float-vector -10.0 75.0 -26.5) (float-vector -10.0 31.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-knee-p :weight 15.3514 :centroid (float-vector -7.821051e-06 34.7031 -2.385046e-05) :inertia-tensor #2f((15413.0 0.001015 3.832785e-10) (0.001015 8870.76 0.000937) (3.832785e-10 0.000937 7565.68))))

     ;; definition of :lleg-ankle-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09326 -5.25001 21.15) (float-vector 5.24999 -9.09327 21.15) (float-vector -1.015255e-05 -10.5 21.15) (float-vector -5.25001 -9.09326 21.15) (float-vector -9.09327 -5.24999 21.15) (float-vector -10.5 5.722046e-06 21.15) (float-vector -9.09326 5.25 21.15) (float-vector -5.25 9.09327 21.15) (float-vector 3.353693e-06 10.5 21.15) (float-vector 5.25 9.09327 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 -1.907349e-06 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.24999 -9.09327 -21.15) (float-vector 9.09326 -5.25001 -21.15) (float-vector 10.5 -1.907349e-06 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09327 -21.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector -5.25 9.09327 -21.15) (float-vector -9.09327 5.25 -21.15) (float-vector -10.5 5.722046e-06 -21.15) (float-vector -9.09327 -5.24999 -21.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -1.015255e-05 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 -1.907349e-06 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 -1.907349e-06 -21.15) (float-vector 10.5 -1.907349e-06 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 21.15) (float-vector 5.25 9.09327 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 5.25 9.09327 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 3.353693e-06 10.5 21.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09327 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 3.353663e-06 10.5 -21.15) (float-vector 5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 21.15) (float-vector -5.25 9.09327 23.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector 3.353693e-06 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 3.353663e-06 10.5 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector -5.25 9.09327 -21.15) (float-vector 3.353663e-06 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25 21.15) (float-vector -9.09326 5.25 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -5.25 9.09327 21.15)))
         (instance face :init :vertices (list (float-vector -5.25 9.09327 -23.15) (float-vector -9.09326 5.25001 -23.15) (float-vector -9.09327 5.25 -21.15) (float-vector -5.25 9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 5.722046e-06 21.15) (float-vector -10.5 5.722046e-06 23.15) (float-vector -9.09326 5.25 23.15) (float-vector -9.09326 5.25 21.15)))
         (instance face :init :vertices (list (float-vector -9.09326 5.25001 -23.15) (float-vector -10.5 5.722046e-06 -23.15) (float-vector -10.5 5.722046e-06 -21.15) (float-vector -9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.24999 21.15) (float-vector -9.09327 -5.24999 23.15) (float-vector -10.5 5.722046e-06 23.15) (float-vector -10.5 5.722046e-06 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 5.722046e-06 -23.15) (float-vector -9.09327 -5.24999 -23.15) (float-vector -9.09327 -5.24999 -21.15) (float-vector -10.5 5.722046e-06 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 21.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -9.09327 -5.24999 23.15) (float-vector -9.09327 -5.24999 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.24999 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -9.09327 -5.24999 -21.15)))
         (instance face :init :vertices (list (float-vector -1.015255e-05 -10.5 21.15) (float-vector -1.015255e-05 -10.5 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -5.25001 -9.09326 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 -23.15) (float-vector -1.015255e-05 -10.5 -23.15) (float-vector -1.015255e-05 -10.5 -21.15) (float-vector -5.25001 -9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09327 21.15) (float-vector 5.24999 -9.09327 23.15) (float-vector -1.015255e-05 -10.5 23.15) (float-vector -1.015255e-05 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -1.015255e-05 -10.5 -23.15) (float-vector 5.24999 -9.09327 -23.15) (float-vector 5.24999 -9.09327 -21.15) (float-vector -1.015255e-05 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25001 21.15) (float-vector 9.09326 -5.25001 23.15) (float-vector 5.24999 -9.09327 23.15) (float-vector 5.24999 -9.09327 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09327 -23.15) (float-vector 9.09326 -5.25001 -23.15) (float-vector 9.09326 -5.25001 -21.15) (float-vector 5.24999 -9.09327 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25001 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09327 23.15) (float-vector 3.353663e-06 10.5 23.15) (float-vector -5.25 9.09327 23.15) (float-vector -9.09326 5.25 23.15) (float-vector -10.5 5.722046e-06 23.15) (float-vector -9.09327 -5.24999 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -1.015255e-05 -10.5 23.15) (float-vector 5.24999 -9.09327 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09326 -5.25001 23.15) (float-vector 9.09326 -5.25001 21.15) (float-vector 10.5 -1.907349e-06 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25001 -23.15) (float-vector 10.5 -1.907349e-06 -23.15) (float-vector 10.5 -1.907349e-06 -21.15) (float-vector 9.09326 -5.25001 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 -1.907349e-06 -23.15) (float-vector 9.09326 -5.25001 -23.15) (float-vector 5.24999 -9.09327 -23.15) (float-vector -1.015255e-05 -10.5 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -9.09327 -5.24999 -23.15) (float-vector -10.5 5.722046e-06 -23.15) (float-vector -9.09326 5.25001 -23.15) (float-vector -5.25 9.09327 -23.15) (float-vector 3.353663e-06 10.5 -23.15) (float-vector 5.25 9.09327 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -20.0 25.0) (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -25.0 -25.0) (float-vector 75.0 -25.0 -25.0) (float-vector 75.0 -25.0 25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -25.0 25.0) (float-vector -20.0 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 -25.0 -25.0) (float-vector -20.0 -25.0 -25.0) (float-vector -20.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -25.0 25.0) (float-vector 75.0 -25.0 -25.0) (float-vector 75.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -20.0 -20.0 25.0) (float-vector -20.0 -25.0 25.0) (float-vector 75.0 -25.0 25.0) (float-vector 75.0 -20.0 25.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.0 -20.0 -25.0) (float-vector 30.0 -20.0 25.0) (float-vector 30.0 10.0 15.0) (float-vector 30.0 9.99999 -15.0)))
         (instance face :init :vertices (list (float-vector 75.0 -20.0 25.0) (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 10.0 -15.0) (float-vector 75.0 9.99999 15.0)))
         (instance face :init :vertices (list (float-vector 30.0 -20.0 -25.0) (float-vector 75.0 -20.0 -25.0) (float-vector 75.0 -20.0 25.0) (float-vector 30.0 -20.0 25.0)))
         (instance face :init :vertices (list (float-vector 30.0 9.99999 -15.0) (float-vector 75.0 10.0 -15.0) (float-vector 75.0 -20.0 -25.0) (float-vector 30.0 -20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 30.0 10.0 15.0) (float-vector 75.0 9.99999 15.0) (float-vector 75.0 10.0 -15.0) (float-vector 30.0 9.99999 -15.0)))
         (instance face :init :vertices (list (float-vector 30.0 -20.0 25.0) (float-vector 75.0 -20.0 25.0) (float-vector 75.0 9.99999 15.0) (float-vector 30.0 10.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :lightgoldenrod)
     (send (elt bc 2) :set-color :yellow)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lleg-ankle-p :weight 230.0 :centroid (float-vector 35.4891 -3.01619 -1.562614e-05) :inertia-tensor #2f((86400.8 35331.8 0.049857) (35331.8 2.115441e+05 -0.013576) (0.049857 -0.013576 2.098109e+05))))

     ;; definition of :larm-shoulder-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 -1.525879e-05 27.5) (float-vector 10.0 -1.525879e-05 26.5) (float-vector 10.0 39.0 26.5) (float-vector 10.0 39.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 40.0 -27.5) (float-vector -10.0 40.0 27.5) (float-vector 10.0 40.0 27.5) (float-vector 10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 39.0 -26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07106 27.5) (float-vector -10.0 0.0 27.5) (float-vector -10.0 0.0 26.5) (float-vector -7.07107 -7.07106 26.5)))
         (instance face :init :vertices (list (float-vector -7.07107 -7.07106 -27.5) (float-vector -7.07107 -7.07106 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07107 -7.07106 27.5) (float-vector -7.07107 -7.07106 26.5) (float-vector 0.0 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -9.99998 -27.5) (float-vector 0.0 -9.99998 -26.5) (float-vector -7.07107 -7.07106 -26.5) (float-vector -7.07107 -7.07106 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07109 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 0.0 -10.0 26.5) (float-vector 7.07107 -7.07109 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07106 -27.5) (float-vector 7.07107 -7.07106 -26.5) (float-vector 0.0 -9.99998 -26.5) (float-vector 0.0 -9.99998 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 -1.525879e-05 27.5) (float-vector 10.0 40.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 0.0 27.5) (float-vector -7.07107 -7.07106 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07107 -7.07109 27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07106 -27.5) (float-vector 0.0 -9.99998 -27.5) (float-vector -7.07107 -7.07106 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector 10.0 40.0 -27.5) (float-vector 10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07107 -7.07109 27.5) (float-vector 7.07107 -7.07109 26.5) (float-vector 10.0 -1.525879e-05 26.5) (float-vector 10.0 -1.525879e-05 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 0.0 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07107 -7.07106 -26.5) (float-vector 7.07107 -7.07106 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 26.5) (float-vector 10.0 -1.525879e-05 26.5) (float-vector 7.07107 -7.07109 26.5) (float-vector 0.0 -10.0 26.5) (float-vector -7.07107 -7.07106 26.5) (float-vector -10.0 0.0 26.5) (float-vector -10.0 39.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 39.0 -26.5) (float-vector 10.0 39.0 26.5) (float-vector -10.0 39.0 26.5) (float-vector -10.0 39.0 -26.5)))
         (instance face :init :vertices (list (float-vector -10.0 39.0 -26.5) (float-vector -10.0 0.0 -26.5) (float-vector -7.07107 -7.07106 -26.5) (float-vector 0.0 -9.99998 -26.5) (float-vector 7.07107 -7.07106 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 39.0 -26.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.0 80.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 80.0 27.5) (float-vector -10.0 80.0 26.5) (float-vector -10.0 41.0 26.5) (float-vector -10.0 41.0 -26.5) (float-vector -10.0 80.0 -26.5)))
         (instance face :init :vertices (list (float-vector 9.99997 40.0 -27.5) (float-vector 9.99997 40.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector -10.0 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 -27.5) (float-vector 10.0 80.0 -26.5) (float-vector 9.99997 41.0 -26.5) (float-vector 9.99997 41.0 26.5) (float-vector 10.0 80.0 26.5) (float-vector 10.0 80.0 27.5) (float-vector 9.99997 40.0 27.5) (float-vector 9.99997 40.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07108 87.071 27.5) (float-vector 10.0 80.0 27.5) (float-vector 10.0 80.0 26.5) (float-vector 7.07108 87.071 26.5)))
         (instance face :init :vertices (list (float-vector 7.07107 87.071 -27.5) (float-vector 7.07107 87.071 -26.5) (float-vector 10.0 80.0 -26.5) (float-vector 10.0 80.0 -27.5)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 90.0 27.5) (float-vector 7.07108 87.071 27.5) (float-vector 7.07108 87.071 26.5) (float-vector 7.629395e-06 90.0 26.5)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 90.0 -27.5) (float-vector 7.629395e-06 90.0 -26.5) (float-vector 7.07107 87.071 -26.5) (float-vector 7.07107 87.071 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 27.5) (float-vector 7.629395e-06 90.0 27.5) (float-vector 7.629395e-06 90.0 26.5) (float-vector -7.07107 87.0711 26.5)))
         (instance face :init :vertices (list (float-vector -7.07106 87.071 -27.5) (float-vector -7.07106 87.071 -26.5) (float-vector 7.629395e-06 90.0 -26.5) (float-vector 7.629395e-06 90.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 27.5) (float-vector -10.0 40.0 27.5) (float-vector 9.99997 40.0 27.5) (float-vector 10.0 80.0 27.5) (float-vector 7.07108 87.071 27.5) (float-vector 7.629395e-06 90.0 27.5) (float-vector -7.07107 87.0711 27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 87.071 -27.5) (float-vector 7.629395e-06 90.0 -27.5) (float-vector 7.07107 87.071 -27.5) (float-vector 10.0 80.0 -27.5) (float-vector 9.99997 40.0 -27.5) (float-vector -10.0 40.0 -27.5) (float-vector -10.0 80.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07107 87.0711 27.5) (float-vector -7.07107 87.0711 26.5) (float-vector -10.0 80.0 26.5) (float-vector -10.0 80.0 27.5)))
         (instance face :init :vertices (list (float-vector -10.0 80.0 -27.5) (float-vector -10.0 80.0 -26.5) (float-vector -7.07106 87.071 -26.5) (float-vector -7.07106 87.071 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 41.0 26.5) (float-vector -10.0 80.0 26.5) (float-vector -7.07107 87.0711 26.5) (float-vector 7.629395e-06 90.0 26.5) (float-vector 7.07108 87.071 26.5) (float-vector 10.0 80.0 26.5) (float-vector 9.99997 41.0 26.5)))
         (instance face :init :vertices (list (float-vector -10.0 41.0 -26.5) (float-vector -10.0 41.0 26.5) (float-vector 9.99997 41.0 26.5) (float-vector 9.99997 41.0 -26.5)))
         (instance face :init :vertices (list (float-vector 9.99997 41.0 -26.5) (float-vector 10.0 80.0 -26.5) (float-vector 7.07107 87.071 -26.5) (float-vector 7.629395e-06 90.0 -26.5) (float-vector -7.07106 87.071 -26.5) (float-vector -10.0 80.0 -26.5) (float-vector -10.0 41.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-shoulder-p :weight 15.8914 :centroid (float-vector -9.359974e-06 40.0 2.053614e-05) :inertia-tensor #2f((16776.9 0.001786 0.000123) (0.001786 9282.45 0.000156) (0.000123 0.000156 8553.89))))

     ;; definition of :larm-elbow-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 11.5 -12.0 21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 33.0 -21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 33.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector -11.5 33.0 21.15) (float-vector 11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 33.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 -12.0 21.15) (float-vector -11.5 33.0 21.15)))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 21.15) (float-vector 11.5 -12.0 21.15) (float-vector 11.5 33.0 21.15) (float-vector -11.5 33.0 21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 5.24999 -9.09328 21.15) (float-vector -9.536743e-06 -10.5 21.15) (float-vector -5.25001 -9.09326 21.15) (float-vector -9.09327 -5.24998 21.15) (float-vector -10.5 0.0 21.15) (float-vector -9.09327 5.25002 21.15) (float-vector -5.24999 9.09328 21.15) (float-vector 3.814697e-06 10.5 21.15) (float-vector 5.25 9.09326 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 10.5 0.0 21.15)))
))
         (instance face :init :vertices (list (float-vector -11.5 -12.0 -21.15) (float-vector 11.5 -12.0 -21.15) (float-vector 11.5 -12.0 21.15) (float-vector -11.5 -12.0 21.15)))
         (instance face :init :vertices (list (float-vector 11.5 -12.0 -21.15) (float-vector -11.5 -12.0 -21.15) (float-vector -11.5 33.0 -21.15) (float-vector 11.5 33.0 -21.15))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 5.24999 -9.09326 -21.15) (float-vector 9.09326 -5.25 -21.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09327 5.25 -21.15) (float-vector 5.25 9.09328 -21.15) (float-vector 3.814697e-06 10.5 -21.15) (float-vector -5.25 9.09328 -21.15) (float-vector -9.09327 5.25002 -21.15) (float-vector -10.5 1.525879e-05 -21.15) (float-vector -9.09327 -5.24998 -21.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -9.536743e-06 -10.5 -21.15)))
))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 10.5 0.0 21.15) (float-vector 9.09327 5.25 21.15) (float-vector 9.09327 5.25 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -21.15) (float-vector 10.5 0.0 -23.15) (float-vector 9.09327 5.25 -23.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09326 21.15) (float-vector 5.25 9.09326 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 9.09327 5.25 21.15)))
         (instance face :init :vertices (list (float-vector 9.09327 5.25 -23.15) (float-vector 5.25 9.09328 -23.15) (float-vector 5.25 9.09328 -21.15) (float-vector 9.09327 5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 3.814697e-06 10.5 21.15) (float-vector 3.814697e-06 10.5 23.15) (float-vector 5.25 9.09326 23.15) (float-vector 5.25 9.09326 21.15)))
         (instance face :init :vertices (list (float-vector 5.25 9.09328 -23.15) (float-vector 3.814697e-06 10.5 -23.15) (float-vector 3.814697e-06 10.5 -21.15) (float-vector 5.25 9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector -5.24999 9.09328 21.15) (float-vector -5.25 9.09328 23.15) (float-vector 3.814697e-06 10.5 23.15) (float-vector 3.814697e-06 10.5 21.15)))
         (instance face :init :vertices (list (float-vector 3.814697e-06 10.5 -23.15) (float-vector -5.24999 9.09326 -23.15) (float-vector -5.25 9.09328 -21.15) (float-vector 3.814697e-06 10.5 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25002 21.15) (float-vector -9.09327 5.25002 23.15) (float-vector -5.25 9.09328 23.15) (float-vector -5.24999 9.09328 21.15)))
         (instance face :init :vertices (list (float-vector -5.24999 9.09326 -23.15) (float-vector -9.09327 5.25002 -23.15) (float-vector -9.09327 5.25002 -21.15) (float-vector -5.25 9.09328 -21.15)))
         (instance face :init :vertices (list (float-vector -10.5 0.0 21.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 5.25002 23.15) (float-vector -9.09327 5.25002 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 5.25002 -23.15) (float-vector -10.5 1.525879e-05 -23.15) (float-vector -10.5 1.525879e-05 -21.15) (float-vector -9.09327 5.25002 -21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.24998 21.15) (float-vector -9.09327 -5.24998 23.15) (float-vector -10.5 0.0 23.15) (float-vector -10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector -10.5 1.525879e-05 -23.15) (float-vector -9.09327 -5.24998 -23.15) (float-vector -9.09327 -5.24998 -21.15) (float-vector -10.5 1.525879e-05 -21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 21.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -9.09327 -5.24998 23.15) (float-vector -9.09327 -5.24998 21.15)))
         (instance face :init :vertices (list (float-vector -9.09327 -5.24998 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -5.25001 -9.09326 -21.15) (float-vector -9.09327 -5.24998 -21.15)))
         (instance face :init :vertices (list (float-vector -9.536743e-06 -10.5 21.15) (float-vector -9.536743e-06 -10.5 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -5.25001 -9.09326 21.15)))
         (instance face :init :vertices (list (float-vector -5.25001 -9.09326 -23.15) (float-vector -9.536743e-06 -10.5 -23.15) (float-vector -9.536743e-06 -10.5 -21.15) (float-vector -5.25001 -9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09328 21.15) (float-vector 5.24999 -9.09328 23.15) (float-vector -9.536743e-06 -10.5 23.15) (float-vector -9.536743e-06 -10.5 21.15)))
         (instance face :init :vertices (list (float-vector -9.536743e-06 -10.5 -23.15) (float-vector 5.24999 -9.09326 -23.15) (float-vector 5.24999 -9.09326 -21.15) (float-vector -9.536743e-06 -10.5 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 21.15) (float-vector 9.09326 -5.25 23.15) (float-vector 5.24999 -9.09328 23.15) (float-vector 5.24999 -9.09328 21.15)))
         (instance face :init :vertices (list (float-vector 5.24999 -9.09326 -23.15) (float-vector 9.09326 -5.25 -23.15) (float-vector 9.09326 -5.25 -21.15) (float-vector 5.24999 -9.09326 -21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 23.15) (float-vector 10.5 0.0 23.15) (float-vector 9.09327 5.25 23.15) (float-vector 5.25 9.09326 23.15) (float-vector 3.814697e-06 10.5 23.15) (float-vector -5.25 9.09328 23.15) (float-vector -9.09327 5.25002 23.15) (float-vector -10.5 0.0 23.15) (float-vector -9.09327 -5.24998 23.15) (float-vector -5.25001 -9.09326 23.15) (float-vector -9.536743e-06 -10.5 23.15) (float-vector 5.24999 -9.09328 23.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 23.15) (float-vector 9.09326 -5.25 23.15) (float-vector 9.09326 -5.25 21.15) (float-vector 10.5 0.0 21.15)))
         (instance face :init :vertices (list (float-vector 9.09326 -5.25 -23.15) (float-vector 10.5 0.0 -23.15) (float-vector 10.5 0.0 -21.15) (float-vector 9.09326 -5.25 -21.15)))
         (instance face :init :vertices (list (float-vector 10.5 0.0 -23.15) (float-vector 9.09326 -5.25 -23.15) (float-vector 5.24999 -9.09326 -23.15) (float-vector -9.536743e-06 -10.5 -23.15) (float-vector -5.25001 -9.09326 -23.15) (float-vector -9.09327 -5.24998 -23.15) (float-vector -10.5 1.525879e-05 -23.15) (float-vector -9.09327 5.25002 -23.15) (float-vector -5.24999 9.09326 -23.15) (float-vector 3.814697e-06 10.5 -23.15) (float-vector 5.25 9.09328 -23.15) (float-vector 9.09327 5.25 -23.15)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 33.0 -15.0) (float-vector -9.99999 33.0 -15.0) (float-vector -9.99995 103.0 -15.0) (float-vector 4.768372e-05 113.0 -15.0) (float-vector 10.0 103.0 -15.0)))
         (instance face :init :vertices (list (float-vector -9.99998 33.0 15.0) (float-vector 10.0 33.0 15.0) (float-vector 10.0 103.0 15.0) (float-vector 4.768372e-05 113.0 15.0) (float-vector -9.99996 103.0 15.0)))
         (instance face :init :vertices (list (float-vector 10.0 33.0 -15.0) (float-vector 10.0 33.0 15.0) (float-vector -9.99998 33.0 15.0) (float-vector -9.99999 33.0 -15.0)))
         (instance face :init :vertices (list (float-vector 10.0 103.0 -15.0) (float-vector 10.0 103.0 15.0) (float-vector 10.0 33.0 15.0) (float-vector 10.0 33.0 -15.0)))
         (instance face :init :vertices (list (float-vector 4.768372e-05 113.0 -15.0) (float-vector 4.768372e-05 113.0 15.0) (float-vector 10.0 103.0 15.0) (float-vector 10.0 103.0 -15.0)))
         (instance face :init :vertices (list (float-vector -9.99995 103.0 -15.0) (float-vector -9.99996 103.0 15.0) (float-vector 4.768372e-05 113.0 15.0) (float-vector 4.768372e-05 113.0 -15.0)))
         (instance face :init :vertices (list (float-vector -9.99999 33.0 -15.0) (float-vector -9.99998 33.0 15.0) (float-vector -9.99996 103.0 15.0) (float-vector -9.99995 103.0 -15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray90)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :larm-elbow-p :weight 105 :centroid (float-vector 9.771291e-06 33.1876 3.379446e-07) :inertia-tensor #2f((1.354594e+05 -0.047332 4.051270e-10) (-0.047332 16890.7 0.000963) (4.051269e-10 0.000963 1.269662e+05))))

     ;; definition of assoc
     (send blink6 :newcoords (make-coords :pos (float-vector 0.0 75.0 3.814697e-06) :rot #2f((-1.0 -7.152560e-07 -2.713120e-13) (7.152560e-07 -1.0 3.348904e-14) (-2.713120e-13 3.348885e-14 1.0))))
     (send blink10 :assoc blink6)
     (send blink10 :newcoords (make-coords :pos (float-vector 1.455192e-11 74.0 0.0) :rot #2f((1.0 1.430512e-06 2.009723e-14) (-1.430512e-06 1.0 6.697864e-14) (-2.009713e-14 -6.697866e-14 1.0))))
     (send blink9 :assoc blink10)
     (send blink8 :newcoords (make-coords :pos (float-vector 1.907349e-06 80.0 0.0) :rot #2f((1.0 1.460314e-06 -2.980193e-08) (-1.460314e-06 1.0 -6.840574e-14) (2.980193e-08 1.119259e-13 1.0))))
     (send blink7 :assoc blink8)
     (send blink3 :newcoords (make-coords :pos (float-vector 0.0 75.0 3.814697e-06) :rot #2f((-1.0 -7.152560e-07 -2.713120e-13) (7.152560e-07 -1.0 3.348904e-14) (-2.713120e-13 3.348885e-14 1.0))))
     (send blink2 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector 0.0 74.0 0.0) :rot #2f((1.0 1.430512e-06 2.009723e-14) (-1.430512e-06 1.0 6.697864e-14) (-2.009713e-14 -6.697866e-14 1.0))))
     (send blink1 :assoc blink2)
     (send blink5 :newcoords (make-coords :pos (float-vector 1.907349e-06 80.0 0.0) :rot #2f((1.0 1.460314e-06 -2.980193e-08) (-1.460314e-06 1.0 -6.840574e-14) (2.980193e-08 1.119259e-13 1.0))))
     (send blink4 :assoc blink5)
     (send blink4 :newcoords (make-coords :pos (float-vector 22.9999 115.0 -12.0) :rot #2f((-1.0 -4.172326e-07 -1.149734e-07) (1.149733e-07 4.214685e-07 -1.0) (4.172327e-07 -1.0 -4.214685e-07))))
     (send blink0 :assoc blink4)
     (send blink1 :newcoords (make-coords :pos (float-vector -1.484420e-05 35.0 -90.0) :rot #2f((-1.0 -1.043081e-06 9.364294e-08) (-9.364287e-08 -8.429375e-08 -1.0) (1.043081e-06 -1.0 8.429365e-08))))
     (send blink0 :assoc blink1)
     (send blink7 :newcoords (make-coords :pos (float-vector 23.0 -115.0 -12.0) :rot #2f((-1.0 -4.172326e-07 -1.149734e-07) (1.149733e-07 4.214685e-07 -1.0) (4.172327e-07 -1.0 -4.214685e-07))))
     (send blink0 :assoc blink7)
     (send blink9 :newcoords (make-coords :pos (float-vector 1.484420e-05 -35.0 -90.0) :rot #2f((-1.0 -1.043081e-06 9.364294e-08) (-9.364287e-08 -8.429375e-08 -1.0) (1.043081e-06 -1.0 8.429365e-08))))
     (send blink0 :assoc blink9)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of larm-end-coords
     (setq larm-end-coords
       (make-cascoords
	:coords (send (send blink5 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 4.959106e-05 113.0 0.0) :rot #2f((1.192093e-07 -1.0 -4.768372e-07) (3.576279e-07 4.768372e-07 -1.0) (1.0 1.192092e-07 3.576279e-07))))))
     (send blink5 :assoc larm-end-coords)

     ;; definition of lleg-end-coords
     (setq lleg-end-coords
       (make-cascoords
	:coords (send (send blink3 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -20.0 -25.0 7.629395e-06) :rot #2f((2.682209e-07 1.0 -4.470348e-07) (2.980232e-08 4.470348e-07 1.0) (1.0 -2.682209e-07 -2.980229e-08))))))
     (send blink3 :assoc lleg-end-coords)

     ;; definition of rarm-end-coords
     (setq rarm-end-coords
       (make-cascoords
	:coords (send (send blink8 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 4.959106e-05 113.0 0.0) :rot #2f((1.192093e-07 -1.0 -4.768372e-07) (3.576279e-07 4.768372e-07 -1.0) (1.0 1.192092e-07 3.576279e-07))))))
     (send blink8 :assoc rarm-end-coords)

     ;; definition of rleg-end-coords
     (setq rleg-end-coords
       (make-cascoords
	:coords (send (send blink6 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -20.0 -25.0 7.629395e-06) :rot #2f((2.682209e-07 1.0 -4.470348e-07) (2.980232e-08 4.470348e-07 1.0) (1.0 -2.682209e-07 -2.980229e-08))))))
     (send blink6 :assoc rleg-end-coords)

     ;; definition of joint

     ;; definition of :shoulder-p
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink4 :name :larm-shoulder-p :axis :-z
			     :min -135.0 :max   45.0))

     ;; definition of :elbow-p
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink4 :child-link blink5 :name :larm-elbow-p :axis :-z
			     :min -135.0 :max   45.0))

     ;; definition of :crotch-p
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :lleg-crotch-p :axis :-z
			     :min -135.0 :max   45.0))

     ;; definition of :knee-p
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink1 :child-link blink2 :name :lleg-knee-p :axis :-z
			     :min  -45.0 :max  135.0))

     ;; definition of :ankle-p
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink3 :name :lleg-ankle-p :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :shoulder-p
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink7 :name :rarm-shoulder-p :axis :-z
			     :min -135.0 :max   45.0))

     ;; definition of :elbow-p
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink7 :child-link blink8 :name :rarm-elbow-p :axis :-z
			     :min -135.0 :max   45.0))

     ;; definition of :crotch-p
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink9 :name :rleg-crotch-p :axis :-z
			     :min -135.0 :max   45.0))

     ;; definition of :knee-p
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink9 :child-link blink10 :name :rleg-knee-p :axis :-z
			     :min  -45.0 :max  135.0))

     ;; definition of :ankle-p
     (setq joint5 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink6 :name :rleg-ankle-p :axis :-z
			     :min  -90.0 :max   90.0))

     (setq larm-root-link blink4)
     (setq larm (list blink4 blink5))
     (setq lleg-root-link blink1)
     (setq lleg (list blink1 blink2 blink3))
     (setq rarm-root-link blink7)
     (setq rarm (list blink7 blink8))
     (setq rleg-root-link blink9)
     (setq rleg (list blink9 blink10 blink6))
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9))
     ;; definition of collision-avoidance-links
     (setq collision-avoidance-links
       (list
        ))

     (setq sensors (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)
     self))
  )

(defun ape (&rest args) (instance* ape-robot :init args))
;; (format *error-output* "(instance ape-robot :init) for generating model~%")
