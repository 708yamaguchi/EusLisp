;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room610-wall193-object
  :super cascaded-link
  :slots (sensors
         ))
(defmethod room610-wall193-object
  (:init
   (&rest args &key (name "room610-wall193") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :room610-wall193-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 4580.0 150.0 1375.0) (float-vector -4580.0 150.0 1375.0) (float-vector -4580.0 -150.0 1375.0) (float-vector 4580.0 -150.0 1375.0)))
         (instance face :init :vertices (list (float-vector -4580.0 150.0 -1375.0) (float-vector 4580.0 150.0 -1375.0) (float-vector 4580.0 -150.0 -1375.0) (float-vector -4580.0 -150.0 -1375.0)))
         (instance face :init :vertices (list (float-vector 4580.0 150.0 1375.0) (float-vector 4580.0 150.0 -1375.0) (float-vector -4580.0 150.0 -1375.0) (float-vector -4580.0 150.0 1375.0)))
         (instance face :init :vertices (list (float-vector 4580.0 -150.0 1375.0) (float-vector 4580.0 -150.0 -1375.0) (float-vector 4580.0 150.0 -1375.0) (float-vector 4580.0 150.0 1375.0)))
         (instance face :init :vertices (list (float-vector -4580.0 -150.0 1375.0) (float-vector -4580.0 -150.0 -1375.0) (float-vector 4580.0 -150.0 -1375.0) (float-vector 4580.0 -150.0 1375.0)))
         (instance face :init :vertices (list (float-vector -4580.0 150.0 1375.0) (float-vector -4580.0 150.0 -1375.0) (float-vector -4580.0 -150.0 -1375.0) (float-vector -4580.0 -150.0 1375.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray70)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room610-wall193-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))
  (:cameras (&rest args)
   (forward-message-to-all (list) args))

  (:handle () (list ))
  (:attention () (list ))
  (:button () (list ))
  )

(defun room610-wall193 (&rest args) (instance* room610-wall193-object :init args))
;; (format *error-output* "(instance room610-wall193-object :init) for generating model~%")
