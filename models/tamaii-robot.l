;;
;;
;; this file is automatically generated from euslisp+euslib
;;
;;
(defclass tamaii-robot
  :super robot-model
  :slots (sensors))
(defmethod tamaii-robot
  (:init
   (&rest args &key (name "tamaii") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink17 blink18 blink19 blink20
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16 joint17 joint18 joint19 joint20
        
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -114.0 -99.4 24.9) (float-vector -114.0 -99.4 -24.9) (float-vector -55.0 -99.4 -24.9) (float-vector -55.0 -99.4 24.9)))
         (instance face :init :vertices (list (float-vector -55.0 -99.4 -24.9) (float-vector -55.0 -70.6 -24.9) (float-vector -55.0 -70.6 24.9) (float-vector -55.0 -99.4 24.9)))
         (instance face :init :vertices (list (float-vector -55.0 -70.6 -24.9) (float-vector -114.0 -70.6 -24.9) (float-vector -114.0 -70.6 24.9) (float-vector -55.0 -70.6 24.9)))
         (instance face :init :vertices (list (float-vector -114.0 -70.6 24.9) (float-vector -114.0 -99.4 24.9) (float-vector -55.0 -99.4 24.9) (float-vector -55.0 -70.6 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -106.7 -96.6048 24.9) (float-vector -111.605 -91.7 24.9) (float-vector -113.4 -85.0 24.9) (float-vector -111.605 -78.3 24.9) (float-vector -106.7 -73.3953 24.9) (float-vector -99.9999 -71.6 24.9) (float-vector -93.3 -73.3953 24.9) (float-vector -88.3952 -78.3 24.9) (float-vector -86.5999 -85.0 24.9) (float-vector -88.3952 -91.7 24.9) (float-vector -93.3 -96.6048 24.9) (float-vector -99.9999 -98.4 24.9)))
))
         (instance face :init :vertices (list (float-vector -114.0 -70.6 -24.9) (float-vector -114.0 -99.4 -24.9) (float-vector -114.0 -99.4 24.9) (float-vector -114.0 -70.6 24.9)))
         (instance face :init :vertices (list (float-vector -114.0 -99.4 -24.9) (float-vector -114.0 -70.6 -24.9) (float-vector -55.0 -70.6 -24.9) (float-vector -55.0 -99.4 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -111.605 -91.7 -24.9) (float-vector -106.7 -96.6048 -24.9) (float-vector -99.9999 -98.4 -24.9) (float-vector -93.3 -96.6048 -24.9) (float-vector -88.3952 -91.7 -24.9) (float-vector -86.5999 -85.0 -24.9) (float-vector -88.3952 -78.3 -24.9) (float-vector -93.3 -73.3953 -24.9) (float-vector -99.9999 -71.6 -24.9) (float-vector -106.7 -73.3953 -24.9) (float-vector -111.605 -78.3 -24.9) (float-vector -113.4 -85.0 -24.9)))
))
         (instance face :init :vertices (list (float-vector -99.9999 -98.4 26.9) (float-vector -99.9999 -98.4 24.9) (float-vector -93.3 -96.6048 24.9) (float-vector -93.3 -96.6048 26.9)))
         (instance face :init :vertices (list (float-vector -99.9999 -98.4 -24.9) (float-vector -99.9999 -98.4 -26.9) (float-vector -93.3 -96.6048 -26.9) (float-vector -93.3 -96.6048 -24.9)))
         (instance face :init :vertices (list (float-vector -88.3952 -91.7 24.9) (float-vector -88.3952 -91.7 26.9) (float-vector -93.3 -96.6048 26.9) (float-vector -93.3 -96.6048 24.9)))
         (instance face :init :vertices (list (float-vector -93.3 -96.6048 -26.9) (float-vector -88.3952 -91.7 -26.9) (float-vector -88.3952 -91.7 -24.9) (float-vector -93.3 -96.6048 -24.9)))
         (instance face :init :vertices (list (float-vector -86.5999 -85.0 24.9) (float-vector -86.5999 -85.0 26.9) (float-vector -88.3952 -91.7 26.9) (float-vector -88.3952 -91.7 24.9)))
         (instance face :init :vertices (list (float-vector -88.3952 -91.7 -26.9) (float-vector -86.5999 -85.0 -26.9) (float-vector -86.5999 -85.0 -24.9) (float-vector -88.3952 -91.7 -24.9)))
         (instance face :init :vertices (list (float-vector -88.3952 -78.3 24.9) (float-vector -88.3952 -78.3 26.9) (float-vector -86.5999 -85.0 26.9) (float-vector -86.5999 -85.0 24.9)))
         (instance face :init :vertices (list (float-vector -86.5999 -85.0 -26.9) (float-vector -88.3952 -78.3 -26.9) (float-vector -88.3952 -78.3 -24.9) (float-vector -86.5999 -85.0 -24.9)))
         (instance face :init :vertices (list (float-vector -93.3 -73.3953 24.9) (float-vector -93.3 -73.3953 26.9) (float-vector -88.3952 -78.3 26.9) (float-vector -88.3952 -78.3 24.9)))
         (instance face :init :vertices (list (float-vector -88.3952 -78.3 -26.9) (float-vector -93.3 -73.3953 -26.9) (float-vector -93.3 -73.3953 -24.9) (float-vector -88.3952 -78.3 -24.9)))
         (instance face :init :vertices (list (float-vector -99.9999 -71.6 24.9) (float-vector -99.9999 -71.6 26.9) (float-vector -93.3 -73.3953 26.9) (float-vector -93.3 -73.3953 24.9)))
         (instance face :init :vertices (list (float-vector -93.3 -73.3953 -26.9) (float-vector -99.9999 -71.6 -26.9) (float-vector -99.9999 -71.6 -24.9) (float-vector -93.3 -73.3953 -24.9)))
         (instance face :init :vertices (list (float-vector -106.7 -73.3953 24.9) (float-vector -106.7 -73.3953 26.9) (float-vector -99.9999 -71.6 26.9) (float-vector -99.9999 -71.6 24.9)))
         (instance face :init :vertices (list (float-vector -99.9999 -71.6 -26.9) (float-vector -106.7 -73.3953 -26.9) (float-vector -106.7 -73.3953 -24.9) (float-vector -99.9999 -71.6 -24.9)))
         (instance face :init :vertices (list (float-vector -111.605 -78.3 24.9) (float-vector -111.605 -78.3 26.9) (float-vector -106.7 -73.3953 26.9) (float-vector -106.7 -73.3953 24.9)))
         (instance face :init :vertices (list (float-vector -106.7 -73.3953 -26.9) (float-vector -111.605 -78.3 -26.9) (float-vector -111.605 -78.3 -24.9) (float-vector -106.7 -73.3953 -24.9)))
         (instance face :init :vertices (list (float-vector -113.4 -85.0 24.9) (float-vector -113.4 -85.0 26.9) (float-vector -111.605 -78.3 26.9) (float-vector -111.605 -78.3 24.9)))
         (instance face :init :vertices (list (float-vector -111.605 -78.3 -26.9) (float-vector -113.4 -85.0 -26.9) (float-vector -113.4 -85.0 -24.9) (float-vector -111.605 -78.3 -24.9)))
         (instance face :init :vertices (list (float-vector -111.605 -91.7 24.9) (float-vector -111.605 -91.7 26.9) (float-vector -113.4 -85.0 26.9) (float-vector -113.4 -85.0 24.9)))
         (instance face :init :vertices (list (float-vector -113.4 -85.0 -26.9) (float-vector -111.605 -91.7 -26.9) (float-vector -111.605 -91.7 -24.9) (float-vector -113.4 -85.0 -24.9)))
         (instance face :init :vertices (list (float-vector -106.7 -96.6048 24.9) (float-vector -106.7 -96.6048 26.9) (float-vector -111.605 -91.7 26.9) (float-vector -111.605 -91.7 24.9)))
         (instance face :init :vertices (list (float-vector -111.605 -91.7 -26.9) (float-vector -106.7 -96.6048 -26.9) (float-vector -106.7 -96.6048 -24.9) (float-vector -111.605 -91.7 -24.9)))
         (instance face :init :vertices (list (float-vector -106.7 -96.6048 26.9) (float-vector -99.9999 -98.4 26.9) (float-vector -93.3 -96.6048 26.9) (float-vector -88.3952 -91.7 26.9) (float-vector -86.5999 -85.0 26.9) (float-vector -88.3952 -78.3 26.9) (float-vector -93.3 -73.3953 26.9) (float-vector -99.9999 -71.6 26.9) (float-vector -106.7 -73.3953 26.9) (float-vector -111.605 -78.3 26.9) (float-vector -113.4 -85.0 26.9) (float-vector -111.605 -91.7 26.9)))
         (instance face :init :vertices (list (float-vector -99.9999 -98.4 26.9) (float-vector -106.7 -96.6048 26.9) (float-vector -106.7 -96.6048 24.9) (float-vector -99.9999 -98.4 24.9)))
         (instance face :init :vertices (list (float-vector -106.7 -96.6048 -26.9) (float-vector -99.9999 -98.4 -26.9) (float-vector -99.9999 -98.4 -24.9) (float-vector -106.7 -96.6048 -24.9)))
         (instance face :init :vertices (list (float-vector -99.9999 -98.4 -26.9) (float-vector -106.7 -96.6048 -26.9) (float-vector -111.605 -91.7 -26.9) (float-vector -113.4 -85.0 -26.9) (float-vector -111.605 -78.3 -26.9) (float-vector -106.7 -73.3953 -26.9) (float-vector -99.9999 -71.6 -26.9) (float-vector -93.3 -73.3953 -26.9) (float-vector -88.3952 -78.3 -26.9) (float-vector -86.5999 -85.0 -26.9) (float-vector -88.3952 -91.7 -26.9) (float-vector -93.3 -96.6048 -26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 119.0 -70.5999 24.9) (float-vector 119.0 -70.5999 -24.9) (float-vector 60.0 -70.5999 -24.9) (float-vector 60.0 -70.5999 24.9)))
         (instance face :init :vertices (list (float-vector 60.0 -70.5999 -24.9) (float-vector 60.0 -99.3999 -24.9) (float-vector 60.0 -99.3999 24.9) (float-vector 60.0 -70.5999 24.9)))
         (instance face :init :vertices (list (float-vector 60.0 -99.3999 -24.9) (float-vector 119.0 -99.3999 -24.9) (float-vector 119.0 -99.3999 24.9) (float-vector 60.0 -99.3999 24.9)))
         (instance face :init :vertices (list (float-vector 119.0 -99.3999 24.9) (float-vector 119.0 -70.5999 24.9) (float-vector 60.0 -70.5999 24.9) (float-vector 60.0 -99.3999 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 111.7 -73.3952 24.9) (float-vector 116.605 -78.3 24.9) (float-vector 118.4 -85.0 24.9) (float-vector 116.605 -91.7 24.9) (float-vector 111.7 -96.6047 24.9) (float-vector 105.0 -98.3999 24.9) (float-vector 98.3 -96.6047 24.9) (float-vector 93.3953 -91.6999 24.9) (float-vector 91.6 -84.9999 24.9) (float-vector 93.3953 -78.2999 24.9) (float-vector 98.3 -73.3952 24.9) (float-vector 105.0 -71.5999 24.9)))
))
         (instance face :init :vertices (list (float-vector 119.0 -99.3999 -24.9) (float-vector 119.0 -70.5999 -24.9) (float-vector 119.0 -70.5999 24.9) (float-vector 119.0 -99.3999 24.9)))
         (instance face :init :vertices (list (float-vector 119.0 -70.5999 -24.9) (float-vector 119.0 -99.3999 -24.9) (float-vector 60.0 -99.3999 -24.9) (float-vector 60.0 -70.5999 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 116.605 -78.3 -24.9) (float-vector 111.7 -73.3952 -24.9) (float-vector 105.0 -71.5999 -24.9) (float-vector 98.3 -73.3952 -24.9) (float-vector 93.3953 -78.2999 -24.9) (float-vector 91.6 -84.9999 -24.9) (float-vector 93.3953 -91.6999 -24.9) (float-vector 98.3 -96.6047 -24.9) (float-vector 105.0 -98.3999 -24.9) (float-vector 111.7 -96.6047 -24.9) (float-vector 116.605 -91.7 -24.9) (float-vector 118.4 -85.0 -24.9)))
))
         (instance face :init :vertices (list (float-vector 105.0 -71.5999 26.9) (float-vector 105.0 -71.5999 24.9) (float-vector 98.3 -73.3952 24.9) (float-vector 98.3 -73.3952 26.9)))
         (instance face :init :vertices (list (float-vector 105.0 -71.5999 -24.9) (float-vector 105.0 -71.5999 -26.9) (float-vector 98.3 -73.3952 -26.9) (float-vector 98.3 -73.3952 -24.9)))
         (instance face :init :vertices (list (float-vector 93.3953 -78.2999 24.9) (float-vector 93.3953 -78.2999 26.9) (float-vector 98.3 -73.3952 26.9) (float-vector 98.3 -73.3952 24.9)))
         (instance face :init :vertices (list (float-vector 98.3 -73.3952 -26.9) (float-vector 93.3953 -78.2999 -26.9) (float-vector 93.3953 -78.2999 -24.9) (float-vector 98.3 -73.3952 -24.9)))
         (instance face :init :vertices (list (float-vector 91.6 -84.9999 24.9) (float-vector 91.6 -84.9999 26.9) (float-vector 93.3953 -78.2999 26.9) (float-vector 93.3953 -78.2999 24.9)))
         (instance face :init :vertices (list (float-vector 93.3953 -78.2999 -26.9) (float-vector 91.6 -84.9999 -26.9) (float-vector 91.6 -84.9999 -24.9) (float-vector 93.3953 -78.2999 -24.9)))
         (instance face :init :vertices (list (float-vector 93.3953 -91.6999 24.9) (float-vector 93.3953 -91.6999 26.9) (float-vector 91.6 -84.9999 26.9) (float-vector 91.6 -84.9999 24.9)))
         (instance face :init :vertices (list (float-vector 91.6 -84.9999 -26.9) (float-vector 93.3953 -91.6999 -26.9) (float-vector 93.3953 -91.6999 -24.9) (float-vector 91.6 -84.9999 -24.9)))
         (instance face :init :vertices (list (float-vector 98.3 -96.6047 24.9) (float-vector 98.3 -96.6047 26.9) (float-vector 93.3953 -91.6999 26.9) (float-vector 93.3953 -91.6999 24.9)))
         (instance face :init :vertices (list (float-vector 93.3953 -91.6999 -26.9) (float-vector 98.3 -96.6047 -26.9) (float-vector 98.3 -96.6047 -24.9) (float-vector 93.3953 -91.6999 -24.9)))
         (instance face :init :vertices (list (float-vector 105.0 -98.3999 24.9) (float-vector 105.0 -98.3999 26.9) (float-vector 98.3 -96.6047 26.9) (float-vector 98.3 -96.6047 24.9)))
         (instance face :init :vertices (list (float-vector 98.3 -96.6047 -26.9) (float-vector 105.0 -98.3999 -26.9) (float-vector 105.0 -98.3999 -24.9) (float-vector 98.3 -96.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 111.7 -96.6047 24.9) (float-vector 111.7 -96.6047 26.9) (float-vector 105.0 -98.3999 26.9) (float-vector 105.0 -98.3999 24.9)))
         (instance face :init :vertices (list (float-vector 105.0 -98.3999 -26.9) (float-vector 111.7 -96.6047 -26.9) (float-vector 111.7 -96.6047 -24.9) (float-vector 105.0 -98.3999 -24.9)))
         (instance face :init :vertices (list (float-vector 116.605 -91.7 24.9) (float-vector 116.605 -91.7 26.9) (float-vector 111.7 -96.6047 26.9) (float-vector 111.7 -96.6047 24.9)))
         (instance face :init :vertices (list (float-vector 111.7 -96.6047 -26.9) (float-vector 116.605 -91.7 -26.9) (float-vector 116.605 -91.7 -24.9) (float-vector 111.7 -96.6047 -24.9)))
         (instance face :init :vertices (list (float-vector 118.4 -85.0 24.9) (float-vector 118.4 -85.0 26.9) (float-vector 116.605 -91.7 26.9) (float-vector 116.605 -91.7 24.9)))
         (instance face :init :vertices (list (float-vector 116.605 -91.7 -26.9) (float-vector 118.4 -85.0 -26.9) (float-vector 118.4 -85.0 -24.9) (float-vector 116.605 -91.7 -24.9)))
         (instance face :init :vertices (list (float-vector 116.605 -78.3 24.9) (float-vector 116.605 -78.3 26.9) (float-vector 118.4 -85.0 26.9) (float-vector 118.4 -85.0 24.9)))
         (instance face :init :vertices (list (float-vector 118.4 -85.0 -26.9) (float-vector 116.605 -78.3 -26.9) (float-vector 116.605 -78.3 -24.9) (float-vector 118.4 -85.0 -24.9)))
         (instance face :init :vertices (list (float-vector 111.7 -73.3952 24.9) (float-vector 111.7 -73.3952 26.9) (float-vector 116.605 -78.3 26.9) (float-vector 116.605 -78.3 24.9)))
         (instance face :init :vertices (list (float-vector 116.605 -78.3 -26.9) (float-vector 111.7 -73.3952 -26.9) (float-vector 111.7 -73.3952 -24.9) (float-vector 116.605 -78.3 -24.9)))
         (instance face :init :vertices (list (float-vector 111.7 -73.3952 26.9) (float-vector 105.0 -71.5999 26.9) (float-vector 98.3 -73.3952 26.9) (float-vector 93.3953 -78.2999 26.9) (float-vector 91.6 -84.9999 26.9) (float-vector 93.3953 -91.6999 26.9) (float-vector 98.3 -96.6047 26.9) (float-vector 105.0 -98.3999 26.9) (float-vector 111.7 -96.6047 26.9) (float-vector 116.605 -91.7 26.9) (float-vector 118.4 -85.0 26.9) (float-vector 116.605 -78.3 26.9)))
         (instance face :init :vertices (list (float-vector 105.0 -71.5999 26.9) (float-vector 111.7 -73.3952 26.9) (float-vector 111.7 -73.3952 24.9) (float-vector 105.0 -71.5999 24.9)))
         (instance face :init :vertices (list (float-vector 111.7 -73.3952 -26.9) (float-vector 105.0 -71.5999 -26.9) (float-vector 105.0 -71.5999 -24.9) (float-vector 111.7 -73.3952 -24.9)))
         (instance face :init :vertices (list (float-vector 105.0 -71.5999 -26.9) (float-vector 111.7 -73.3952 -26.9) (float-vector 116.605 -78.3 -26.9) (float-vector 118.4 -85.0 -26.9) (float-vector 116.605 -91.7 -26.9) (float-vector 111.7 -96.6047 -26.9) (float-vector 105.0 -98.3999 -26.9) (float-vector 98.3 -96.6047 -26.9) (float-vector 93.3953 -91.6999 -26.9) (float-vector 91.6 -84.9999 -26.9) (float-vector 93.3953 -78.2999 -26.9) (float-vector 98.3 -73.3952 -26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -114.0 99.3999 -24.9) (float-vector -114.0 99.4 24.9) (float-vector -55.0 99.4 24.9) (float-vector -55.0 99.3999 -24.9)))
         (instance face :init :vertices (list (float-vector -55.0 99.4 24.9) (float-vector -55.0 70.6 24.9) (float-vector -55.0 70.5999 -24.9) (float-vector -55.0 99.3999 -24.9)))
         (instance face :init :vertices (list (float-vector -55.0 70.6 24.9) (float-vector -114.0 70.5999 24.9) (float-vector -114.0 70.5999 -24.9) (float-vector -55.0 70.5999 -24.9)))
         (instance face :init :vertices (list (float-vector -114.0 70.5999 -24.9) (float-vector -114.0 99.3999 -24.9) (float-vector -55.0 99.3999 -24.9) (float-vector -55.0 70.5999 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -106.7 96.6046 -24.9) (float-vector -111.605 91.6999 -24.9) (float-vector -113.4 84.9999 -24.9) (float-vector -111.605 78.2999 -24.9) (float-vector -106.7 73.3952 -24.9) (float-vector -100.0 71.5999 -24.9) (float-vector -93.3 73.3952 -24.9) (float-vector -88.3953 78.2999 -24.9) (float-vector -86.6 84.9999 -24.9) (float-vector -88.3953 91.6999 -24.9) (float-vector -93.3 96.6047 -24.9) (float-vector -100.0 98.3999 -24.9)))
))
         (instance face :init :vertices (list (float-vector -114.0 70.5999 24.9) (float-vector -114.0 99.4 24.9) (float-vector -114.0 99.3999 -24.9) (float-vector -114.0 70.5999 -24.9)))
         (instance face :init :vertices (list (float-vector -114.0 99.4 24.9) (float-vector -114.0 70.5999 24.9) (float-vector -55.0 70.6 24.9) (float-vector -55.0 99.4 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -111.605 91.7 24.9) (float-vector -106.7 96.6047 24.9) (float-vector -100.0 98.4 24.9) (float-vector -93.3 96.6047 24.9) (float-vector -88.3953 91.7 24.9) (float-vector -86.6 85.0 24.9) (float-vector -88.3953 78.3 24.9) (float-vector -93.3 73.3952 24.9) (float-vector -100.0 71.6 24.9) (float-vector -106.7 73.3952 24.9) (float-vector -111.605 78.3 24.9) (float-vector -113.4 84.9999 24.9)))
))
         (instance face :init :vertices (list (float-vector -100.0 98.3999 -26.9) (float-vector -100.0 98.3999 -24.9) (float-vector -93.3 96.6047 -24.9) (float-vector -93.3 96.6047 -26.9)))
         (instance face :init :vertices (list (float-vector -100.0 98.4 24.9) (float-vector -100.0 98.4 26.9) (float-vector -93.3 96.6047 26.9) (float-vector -93.3 96.6047 24.9)))
         (instance face :init :vertices (list (float-vector -88.3953 91.6999 -24.9) (float-vector -88.3953 91.6999 -26.9) (float-vector -93.3 96.6047 -26.9) (float-vector -93.3 96.6047 -24.9)))
         (instance face :init :vertices (list (float-vector -93.3 96.6047 26.9) (float-vector -88.3953 91.7 26.9) (float-vector -88.3953 91.7 24.9) (float-vector -93.3 96.6047 24.9)))
         (instance face :init :vertices (list (float-vector -86.6 84.9999 -24.9) (float-vector -86.6 84.9999 -26.9) (float-vector -88.3953 91.6999 -26.9) (float-vector -88.3953 91.6999 -24.9)))
         (instance face :init :vertices (list (float-vector -88.3953 91.7 26.9) (float-vector -86.6 85.0 26.9) (float-vector -86.6 85.0 24.9) (float-vector -88.3953 91.7 24.9)))
         (instance face :init :vertices (list (float-vector -88.3953 78.2999 -24.9) (float-vector -88.3953 78.2999 -26.9) (float-vector -86.6 84.9999 -26.9) (float-vector -86.6 84.9999 -24.9)))
         (instance face :init :vertices (list (float-vector -86.6 85.0 26.9) (float-vector -88.3953 78.3 26.9) (float-vector -88.3953 78.3 24.9) (float-vector -86.6 85.0 24.9)))
         (instance face :init :vertices (list (float-vector -93.3 73.3952 -24.9) (float-vector -93.3 73.3952 -26.9) (float-vector -88.3953 78.2999 -26.9) (float-vector -88.3953 78.2999 -24.9)))
         (instance face :init :vertices (list (float-vector -88.3953 78.3 26.9) (float-vector -93.3 73.3952 26.9) (float-vector -93.3 73.3952 24.9) (float-vector -88.3953 78.3 24.9)))
         (instance face :init :vertices (list (float-vector -100.0 71.5999 -24.9) (float-vector -100.0 71.5999 -26.9) (float-vector -93.3 73.3952 -26.9) (float-vector -93.3 73.3952 -24.9)))
         (instance face :init :vertices (list (float-vector -93.3 73.3952 26.9) (float-vector -100.0 71.6 26.9) (float-vector -100.0 71.6 24.9) (float-vector -93.3 73.3952 24.9)))
         (instance face :init :vertices (list (float-vector -106.7 73.3952 -24.9) (float-vector -106.7 73.3952 -26.9) (float-vector -100.0 71.5999 -26.9) (float-vector -100.0 71.5999 -24.9)))
         (instance face :init :vertices (list (float-vector -100.0 71.6 26.9) (float-vector -106.7 73.3952 26.9) (float-vector -106.7 73.3952 24.9) (float-vector -100.0 71.6 24.9)))
         (instance face :init :vertices (list (float-vector -111.605 78.2999 -24.9) (float-vector -111.605 78.2999 -26.9) (float-vector -106.7 73.3952 -26.9) (float-vector -106.7 73.3952 -24.9)))
         (instance face :init :vertices (list (float-vector -106.7 73.3952 26.9) (float-vector -111.605 78.3 26.9) (float-vector -111.605 78.3 24.9) (float-vector -106.7 73.3952 24.9)))
         (instance face :init :vertices (list (float-vector -113.4 84.9999 -24.9) (float-vector -113.4 84.9999 -26.9) (float-vector -111.605 78.2999 -26.9) (float-vector -111.605 78.2999 -24.9)))
         (instance face :init :vertices (list (float-vector -111.605 78.3 26.9) (float-vector -113.4 84.9999 26.9) (float-vector -113.4 84.9999 24.9) (float-vector -111.605 78.3 24.9)))
         (instance face :init :vertices (list (float-vector -111.605 91.6999 -24.9) (float-vector -111.605 91.6999 -26.9) (float-vector -113.4 84.9999 -26.9) (float-vector -113.4 84.9999 -24.9)))
         (instance face :init :vertices (list (float-vector -113.4 84.9999 26.9) (float-vector -111.605 91.7 26.9) (float-vector -111.605 91.7 24.9) (float-vector -113.4 84.9999 24.9)))
         (instance face :init :vertices (list (float-vector -106.7 96.6046 -24.9) (float-vector -106.7 96.6046 -26.9) (float-vector -111.605 91.6999 -26.9) (float-vector -111.605 91.6999 -24.9)))
         (instance face :init :vertices (list (float-vector -111.605 91.7 26.9) (float-vector -106.7 96.6047 26.9) (float-vector -106.7 96.6047 24.9) (float-vector -111.605 91.7 24.9)))
         (instance face :init :vertices (list (float-vector -106.7 96.6046 -26.9) (float-vector -100.0 98.3999 -26.9) (float-vector -93.3 96.6047 -26.9) (float-vector -88.3953 91.6999 -26.9) (float-vector -86.6 84.9999 -26.9) (float-vector -88.3953 78.2999 -26.9) (float-vector -93.3 73.3952 -26.9) (float-vector -100.0 71.5999 -26.9) (float-vector -106.7 73.3952 -26.9) (float-vector -111.605 78.2999 -26.9) (float-vector -113.4 84.9999 -26.9) (float-vector -111.605 91.6999 -26.9)))
         (instance face :init :vertices (list (float-vector -100.0 98.3999 -26.9) (float-vector -106.7 96.6046 -26.9) (float-vector -106.7 96.6046 -24.9) (float-vector -100.0 98.3999 -24.9)))
         (instance face :init :vertices (list (float-vector -106.7 96.6047 26.9) (float-vector -100.0 98.4 26.9) (float-vector -100.0 98.4 24.9) (float-vector -106.7 96.6047 24.9)))
         (instance face :init :vertices (list (float-vector -100.0 98.4 26.9) (float-vector -106.7 96.6047 26.9) (float-vector -111.605 91.7 26.9) (float-vector -113.4 84.9999 26.9) (float-vector -111.605 78.3 26.9) (float-vector -106.7 73.3952 26.9) (float-vector -100.0 71.6 26.9) (float-vector -93.3 73.3952 26.9) (float-vector -88.3953 78.3 26.9) (float-vector -86.6 85.0 26.9) (float-vector -88.3953 91.7 26.9) (float-vector -93.3 96.6047 26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 119.0 70.6 -24.9) (float-vector 119.0 70.6 24.9) (float-vector 60.0 70.6 24.9) (float-vector 60.0 70.6001 -24.9)))
         (instance face :init :vertices (list (float-vector 60.0 70.6 24.9) (float-vector 60.0 99.4 24.9) (float-vector 60.0 99.4001 -24.9) (float-vector 60.0 70.6001 -24.9)))
         (instance face :init :vertices (list (float-vector 60.0 99.4 24.9) (float-vector 119.0 99.4 24.9) (float-vector 119.0 99.4001 -24.9) (float-vector 60.0 99.4001 -24.9)))
         (instance face :init :vertices (list (float-vector 119.0 99.4001 -24.9) (float-vector 119.0 70.6 -24.9) (float-vector 60.0 70.6001 -24.9) (float-vector 60.0 99.4001 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 111.7 73.3953 -24.9) (float-vector 116.605 78.3 -24.9) (float-vector 118.4 85.0001 -24.9) (float-vector 116.605 91.7 -24.9) (float-vector 111.7 96.6048 -24.9) (float-vector 105.0 98.4001 -24.9) (float-vector 98.3 96.6048 -24.9) (float-vector 93.3952 91.7 -24.9) (float-vector 91.5999 85.0001 -24.9) (float-vector 93.3952 78.3 -24.9) (float-vector 98.3 73.3953 -24.9) (float-vector 105.0 71.6001 -24.9)))
))
         (instance face :init :vertices (list (float-vector 119.0 99.4 24.9) (float-vector 119.0 70.6 24.9) (float-vector 119.0 70.6 -24.9) (float-vector 119.0 99.4001 -24.9)))
         (instance face :init :vertices (list (float-vector 119.0 70.6 24.9) (float-vector 119.0 99.4 24.9) (float-vector 60.0 99.4 24.9) (float-vector 60.0 70.6 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 116.605 78.3 24.9) (float-vector 111.7 73.3953 24.9) (float-vector 105.0 71.6 24.9) (float-vector 98.3 73.3953 24.9) (float-vector 93.3952 78.3 24.9) (float-vector 91.5999 85.0 24.9) (float-vector 93.3952 91.7 24.9) (float-vector 98.3 96.6048 24.9) (float-vector 105.0 98.4 24.9) (float-vector 111.7 96.6048 24.9) (float-vector 116.605 91.7 24.9) (float-vector 118.4 85.0 24.9)))
))
         (instance face :init :vertices (list (float-vector 105.0 71.6001 -26.9) (float-vector 105.0 71.6001 -24.9) (float-vector 98.3 73.3953 -24.9) (float-vector 98.3 73.3953 -26.9)))
         (instance face :init :vertices (list (float-vector 105.0 71.6 24.9) (float-vector 105.0 71.6 26.9) (float-vector 98.3 73.3953 26.9) (float-vector 98.3 73.3953 24.9)))
         (instance face :init :vertices (list (float-vector 93.3952 78.3 -24.9) (float-vector 93.3952 78.3 -26.9) (float-vector 98.3 73.3953 -26.9) (float-vector 98.3 73.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 98.3 73.3953 26.9) (float-vector 93.3952 78.3 26.9) (float-vector 93.3952 78.3 24.9) (float-vector 98.3 73.3953 24.9)))
         (instance face :init :vertices (list (float-vector 91.5999 85.0001 -24.9) (float-vector 91.5999 85.0001 -26.9) (float-vector 93.3952 78.3 -26.9) (float-vector 93.3952 78.3 -24.9)))
         (instance face :init :vertices (list (float-vector 93.3952 78.3 26.9) (float-vector 91.5999 85.0 26.9) (float-vector 91.5999 85.0 24.9) (float-vector 93.3952 78.3 24.9)))
         (instance face :init :vertices (list (float-vector 93.3952 91.7 -24.9) (float-vector 93.3952 91.7 -26.9) (float-vector 91.5999 85.0001 -26.9) (float-vector 91.5999 85.0001 -24.9)))
         (instance face :init :vertices (list (float-vector 91.5999 85.0 26.9) (float-vector 93.3952 91.7 26.9) (float-vector 93.3952 91.7 24.9) (float-vector 91.5999 85.0 24.9)))
         (instance face :init :vertices (list (float-vector 98.3 96.6048 -24.9) (float-vector 98.3 96.6048 -26.9) (float-vector 93.3952 91.7 -26.9) (float-vector 93.3952 91.7 -24.9)))
         (instance face :init :vertices (list (float-vector 93.3952 91.7 26.9) (float-vector 98.3 96.6048 26.9) (float-vector 98.3 96.6048 24.9) (float-vector 93.3952 91.7 24.9)))
         (instance face :init :vertices (list (float-vector 105.0 98.4001 -24.9) (float-vector 105.0 98.4001 -26.9) (float-vector 98.3 96.6048 -26.9) (float-vector 98.3 96.6048 -24.9)))
         (instance face :init :vertices (list (float-vector 98.3 96.6048 26.9) (float-vector 105.0 98.4 26.9) (float-vector 105.0 98.4 24.9) (float-vector 98.3 96.6048 24.9)))
         (instance face :init :vertices (list (float-vector 111.7 96.6048 -24.9) (float-vector 111.7 96.6048 -26.9) (float-vector 105.0 98.4001 -26.9) (float-vector 105.0 98.4001 -24.9)))
         (instance face :init :vertices (list (float-vector 105.0 98.4 26.9) (float-vector 111.7 96.6048 26.9) (float-vector 111.7 96.6048 24.9) (float-vector 105.0 98.4 24.9)))
         (instance face :init :vertices (list (float-vector 116.605 91.7 -24.9) (float-vector 116.605 91.7 -26.9) (float-vector 111.7 96.6048 -26.9) (float-vector 111.7 96.6048 -24.9)))
         (instance face :init :vertices (list (float-vector 111.7 96.6048 26.9) (float-vector 116.605 91.7 26.9) (float-vector 116.605 91.7 24.9) (float-vector 111.7 96.6048 24.9)))
         (instance face :init :vertices (list (float-vector 118.4 85.0001 -24.9) (float-vector 118.4 85.0001 -26.9) (float-vector 116.605 91.7 -26.9) (float-vector 116.605 91.7 -24.9)))
         (instance face :init :vertices (list (float-vector 116.605 91.7 26.9) (float-vector 118.4 85.0 26.9) (float-vector 118.4 85.0 24.9) (float-vector 116.605 91.7 24.9)))
         (instance face :init :vertices (list (float-vector 116.605 78.3 -24.9) (float-vector 116.605 78.3 -26.9) (float-vector 118.4 85.0001 -26.9) (float-vector 118.4 85.0001 -24.9)))
         (instance face :init :vertices (list (float-vector 118.4 85.0 26.9) (float-vector 116.605 78.3 26.9) (float-vector 116.605 78.3 24.9) (float-vector 118.4 85.0 24.9)))
         (instance face :init :vertices (list (float-vector 111.7 73.3953 -24.9) (float-vector 111.7 73.3953 -26.9) (float-vector 116.605 78.3 -26.9) (float-vector 116.605 78.3 -24.9)))
         (instance face :init :vertices (list (float-vector 116.605 78.3 26.9) (float-vector 111.7 73.3953 26.9) (float-vector 111.7 73.3953 24.9) (float-vector 116.605 78.3 24.9)))
         (instance face :init :vertices (list (float-vector 111.7 73.3953 -26.9) (float-vector 105.0 71.6001 -26.9) (float-vector 98.3 73.3953 -26.9) (float-vector 93.3952 78.3 -26.9) (float-vector 91.5999 85.0001 -26.9) (float-vector 93.3952 91.7 -26.9) (float-vector 98.3 96.6048 -26.9) (float-vector 105.0 98.4001 -26.9) (float-vector 111.7 96.6048 -26.9) (float-vector 116.605 91.7 -26.9) (float-vector 118.4 85.0001 -26.9) (float-vector 116.605 78.3 -26.9)))
         (instance face :init :vertices (list (float-vector 105.0 71.6001 -26.9) (float-vector 111.7 73.3953 -26.9) (float-vector 111.7 73.3953 -24.9) (float-vector 105.0 71.6001 -24.9)))
         (instance face :init :vertices (list (float-vector 111.7 73.3953 26.9) (float-vector 105.0 71.6 26.9) (float-vector 105.0 71.6 24.9) (float-vector 111.7 73.3953 24.9)))
         (instance face :init :vertices (list (float-vector 105.0 71.6 26.9) (float-vector 111.7 73.3953 26.9) (float-vector 116.605 78.3 26.9) (float-vector 118.4 85.0 26.9) (float-vector 116.605 91.7 26.9) (float-vector 111.7 96.6048 26.9) (float-vector 105.0 98.4 26.9) (float-vector 98.3 96.6048 26.9) (float-vector 93.3952 91.7 26.9) (float-vector 91.5999 85.0 26.9) (float-vector 93.3952 78.3 26.9) (float-vector 98.3 73.3953 26.9)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 74.0 14.4 94.9) (float-vector 74.0 14.4 45.1) (float-vector 15.0 14.4 45.1) (float-vector 15.0 14.4 94.9)))
         (instance face :init :vertices (list (float-vector 15.0 14.4 45.1) (float-vector 15.0 -14.4 45.1) (float-vector 15.0 -14.4 94.9) (float-vector 15.0 14.4 94.9)))
         (instance face :init :vertices (list (float-vector 15.0 -14.4 45.1) (float-vector 74.0 -14.4 45.1) (float-vector 74.0 -14.4 94.9) (float-vector 15.0 -14.4 94.9)))
         (instance face :init :vertices (list (float-vector 74.0 -14.4 94.9) (float-vector 74.0 14.4 94.9) (float-vector 15.0 14.4 94.9) (float-vector 15.0 -14.4 94.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 66.7 11.6048 94.9) (float-vector 71.6047 6.70001 94.9) (float-vector 73.4 8.833718e-06 94.9) (float-vector 71.6047 -6.69999 94.9) (float-vector 66.7 -11.6047 94.9) (float-vector 60.0 -13.4 94.9) (float-vector 53.3 -11.6047 94.9) (float-vector 48.3952 -6.69996 94.9) (float-vector 46.6 3.437202e-05 94.9) (float-vector 48.3953 6.70003 94.9) (float-vector 53.3 11.6048 94.9) (float-vector 60.0 13.4 94.9)))
))
         (instance face :init :vertices (list (float-vector 74.0 -14.4 45.1) (float-vector 74.0 14.4 45.1) (float-vector 74.0 14.4 94.9) (float-vector 74.0 -14.4 94.9)))
         (instance face :init :vertices (list (float-vector 74.0 14.4 45.1) (float-vector 74.0 -14.4 45.1) (float-vector 15.0 -14.4 45.1) (float-vector 15.0 14.4 45.1))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 71.6047 6.70001 45.1) (float-vector 66.7 11.6048 45.1) (float-vector 60.0 13.4 45.1) (float-vector 53.3 11.6048 45.1) (float-vector 48.3953 6.70003 45.1) (float-vector 46.6 3.437202e-05 45.1) (float-vector 48.3952 -6.69996 45.1) (float-vector 53.3 -11.6047 45.1) (float-vector 60.0 -13.4 45.1) (float-vector 66.7 -11.6047 45.1) (float-vector 71.6047 -6.69999 45.1) (float-vector 73.4 8.833718e-06 45.1)))
))
         (instance face :init :vertices (list (float-vector 60.0 13.4 96.9) (float-vector 60.0 13.4 94.9) (float-vector 53.3 11.6048 94.9) (float-vector 53.3 11.6048 96.9)))
         (instance face :init :vertices (list (float-vector 60.0 13.4 45.1) (float-vector 60.0 13.4 43.1) (float-vector 53.3 11.6048 43.1) (float-vector 53.3 11.6048 45.1)))
         (instance face :init :vertices (list (float-vector 48.3953 6.70003 94.9) (float-vector 48.3953 6.70003 96.9) (float-vector 53.3 11.6048 96.9) (float-vector 53.3 11.6048 94.9)))
         (instance face :init :vertices (list (float-vector 53.3 11.6048 43.1) (float-vector 48.3953 6.70003 43.1) (float-vector 48.3953 6.70003 45.1) (float-vector 53.3 11.6048 45.1)))
         (instance face :init :vertices (list (float-vector 46.6 3.437202e-05 94.9) (float-vector 46.6 3.437202e-05 96.9) (float-vector 48.3953 6.70003 96.9) (float-vector 48.3953 6.70003 94.9)))
         (instance face :init :vertices (list (float-vector 48.3953 6.70003 43.1) (float-vector 46.6 3.437202e-05 43.1) (float-vector 46.6 3.437202e-05 45.1) (float-vector 48.3953 6.70003 45.1)))
         (instance face :init :vertices (list (float-vector 48.3952 -6.69996 94.9) (float-vector 48.3952 -6.69996 96.9) (float-vector 46.6 3.437202e-05 96.9) (float-vector 46.6 3.437202e-05 94.9)))
         (instance face :init :vertices (list (float-vector 46.6 3.437202e-05 43.1) (float-vector 48.3952 -6.69996 43.1) (float-vector 48.3952 -6.69996 45.1) (float-vector 46.6 3.437202e-05 45.1)))
         (instance face :init :vertices (list (float-vector 53.3 -11.6047 94.9) (float-vector 53.3 -11.6047 96.9) (float-vector 48.3952 -6.69996 96.9) (float-vector 48.3952 -6.69996 94.9)))
         (instance face :init :vertices (list (float-vector 48.3952 -6.69996 43.1) (float-vector 53.3 -11.6047 43.1) (float-vector 53.3 -11.6047 45.1) (float-vector 48.3952 -6.69996 45.1)))
         (instance face :init :vertices (list (float-vector 60.0 -13.4 94.9) (float-vector 60.0 -13.4 96.9) (float-vector 53.3 -11.6047 96.9) (float-vector 53.3 -11.6047 94.9)))
         (instance face :init :vertices (list (float-vector 53.3 -11.6047 43.1) (float-vector 60.0 -13.4 43.1) (float-vector 60.0 -13.4 45.1) (float-vector 53.3 -11.6047 45.1)))
         (instance face :init :vertices (list (float-vector 66.7 -11.6047 94.9) (float-vector 66.7 -11.6047 96.9) (float-vector 60.0 -13.4 96.9) (float-vector 60.0 -13.4 94.9)))
         (instance face :init :vertices (list (float-vector 60.0 -13.4 43.1) (float-vector 66.7 -11.6047 43.1) (float-vector 66.7 -11.6047 45.1) (float-vector 60.0 -13.4 45.1)))
         (instance face :init :vertices (list (float-vector 71.6047 -6.69999 94.9) (float-vector 71.6047 -6.69999 96.9) (float-vector 66.7 -11.6047 96.9) (float-vector 66.7 -11.6047 94.9)))
         (instance face :init :vertices (list (float-vector 66.7 -11.6047 43.1) (float-vector 71.6047 -6.69999 43.1) (float-vector 71.6047 -6.69999 45.1) (float-vector 66.7 -11.6047 45.1)))
         (instance face :init :vertices (list (float-vector 73.4 8.833718e-06 94.9) (float-vector 73.4 8.833718e-06 96.9) (float-vector 71.6047 -6.69999 96.9) (float-vector 71.6047 -6.69999 94.9)))
         (instance face :init :vertices (list (float-vector 71.6047 -6.69999 43.1) (float-vector 73.4 8.833718e-06 43.1) (float-vector 73.4 8.833718e-06 45.1) (float-vector 71.6047 -6.69999 45.1)))
         (instance face :init :vertices (list (float-vector 71.6047 6.70001 94.9) (float-vector 71.6047 6.70001 96.9) (float-vector 73.4 8.833718e-06 96.9) (float-vector 73.4 8.833718e-06 94.9)))
         (instance face :init :vertices (list (float-vector 73.4 8.833718e-06 43.1) (float-vector 71.6047 6.70001 43.1) (float-vector 71.6047 6.70001 45.1) (float-vector 73.4 8.833718e-06 45.1)))
         (instance face :init :vertices (list (float-vector 66.7 11.6048 94.9) (float-vector 66.7 11.6048 96.9) (float-vector 71.6047 6.70001 96.9) (float-vector 71.6047 6.70001 94.9)))
         (instance face :init :vertices (list (float-vector 71.6047 6.70001 43.1) (float-vector 66.7 11.6048 43.1) (float-vector 66.7 11.6048 45.1) (float-vector 71.6047 6.70001 45.1)))
         (instance face :init :vertices (list (float-vector 66.7 11.6048 96.9) (float-vector 60.0 13.4 96.9) (float-vector 53.3 11.6048 96.9) (float-vector 48.3953 6.70003 96.9) (float-vector 46.6 3.437202e-05 96.9) (float-vector 48.3952 -6.69996 96.9) (float-vector 53.3 -11.6047 96.9) (float-vector 60.0 -13.4 96.9) (float-vector 66.7 -11.6047 96.9) (float-vector 71.6047 -6.69999 96.9) (float-vector 73.4 8.833718e-06 96.9) (float-vector 71.6047 6.70001 96.9)))
         (instance face :init :vertices (list (float-vector 60.0 13.4 96.9) (float-vector 66.7 11.6048 96.9) (float-vector 66.7 11.6048 94.9) (float-vector 60.0 13.4 94.9)))
         (instance face :init :vertices (list (float-vector 66.7 11.6048 43.1) (float-vector 60.0 13.4 43.1) (float-vector 60.0 13.4 45.1) (float-vector 66.7 11.6048 45.1)))
         (instance face :init :vertices (list (float-vector 60.0 13.4 43.1) (float-vector 66.7 11.6048 43.1) (float-vector 71.6047 6.70001 43.1) (float-vector 73.4 8.833718e-06 43.1) (float-vector 71.6047 -6.69999 43.1) (float-vector 66.7 -11.6047 43.1) (float-vector 60.0 -13.4 43.1) (float-vector 53.3 -11.6047 43.1) (float-vector 48.3952 -6.69996 43.1) (float-vector 46.6 3.437202e-05 43.1) (float-vector 48.3953 6.70003 43.1) (float-vector 53.3 11.6048 43.1)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 129.5 -58.4999 28.5) (float-vector 129.5 58.5 28.5) (float-vector -129.5 58.4999 28.5) (float-vector -129.5 -58.5 28.5)))
         (instance face :init :vertices (list (float-vector 129.5 58.5 -28.5) (float-vector 129.5 -58.4999 -28.5) (float-vector -129.5 -58.5 -28.5) (float-vector -129.5 58.4999 -28.5)))
         (instance face :init :vertices (list (float-vector 129.5 -58.4999 28.5) (float-vector 129.5 -58.4999 -28.5) (float-vector 129.5 58.5 -28.5) (float-vector 129.5 58.5 28.5)))
         (instance face :init :vertices (list (float-vector -129.5 -58.5 28.5) (float-vector -129.5 -58.5 -28.5) (float-vector 129.5 -58.4999 -28.5) (float-vector 129.5 -58.4999 28.5)))
         (instance face :init :vertices (list (float-vector -129.5 58.4999 28.5) (float-vector -129.5 58.4999 -28.5) (float-vector -129.5 -58.5 -28.5) (float-vector -129.5 -58.5 28.5)))
         (instance face :init :vertices (list (float-vector 129.5 58.5 28.5) (float-vector 129.5 58.5 -28.5) (float-vector -129.5 58.4999 -28.5) (float-vector -129.5 58.4999 28.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (send (elt bc 2) :set-color :gray40)
     (send (elt bc 3) :set-color :gray40)
     (send (elt bc 4) :set-color :gray40)
     (send (elt bc 5) :set-color :gray90)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 635 :centroid (float-vector 9.24833 1.308939e-05 11.7953) :inertia-tensor #2f((3.661888e+06 -0.433825 -2.560092e+05) (-0.433825 4.111439e+06 -0.143706) (-2.560092e+05 -0.143706 6.708110e+06))))

     ;; definition of :rbleg-crotch
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 7.629395e-06 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 -15.0 -32.5) (float-vector 7.629395e-06 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 7.629395e-06 -15.0 32.5) (float-vector 7.629395e-06 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 7.629395e-06 -15.0 -31.5) (float-vector 7.629395e-06 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 7.629395e-06 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 7.629395e-06 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 7.629395e-06 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 7.629395e-06 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -34.8999 114.0 -44.4) (float-vector 14.9001 114.0 -44.4) (float-vector 14.9 55.0 -44.4) (float-vector -34.9 55.0 -44.4)))
         (instance face :init :vertices (list (float-vector 14.9 55.0 -44.4) (float-vector 14.9 55.0 -15.6) (float-vector -34.8999 55.0 -15.6) (float-vector -34.9 55.0 -44.4)))
         (instance face :init :vertices (list (float-vector 14.9 55.0 -15.6) (float-vector 14.9001 114.0 -15.6) (float-vector -34.8999 114.0 -15.6) (float-vector -34.8999 55.0 -15.6)))
         (instance face :init :vertices (list (float-vector -34.8999 114.0 -15.6) (float-vector -34.8999 114.0 -44.4) (float-vector -34.9 55.0 -44.4) (float-vector -34.8999 55.0 -15.6))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -34.8999 106.7 -41.6047) (float-vector -34.8999 111.605 -36.7) (float-vector -34.8999 113.4 -30.0) (float-vector -34.8999 111.605 -23.3) (float-vector -34.8999 106.7 -18.3952) (float-vector -34.8999 100.0 -16.6) (float-vector -34.8999 93.3 -18.3953) (float-vector -34.8999 88.3953 -23.3) (float-vector -34.8999 86.6 -30.0) (float-vector -34.8999 88.3953 -36.7) (float-vector -34.8999 93.3 -41.6047) (float-vector -34.8999 100.0 -43.4)))
))
         (instance face :init :vertices (list (float-vector 14.9001 114.0 -15.6) (float-vector 14.9001 114.0 -44.4) (float-vector -34.8999 114.0 -44.4) (float-vector -34.8999 114.0 -15.6)))
         (instance face :init :vertices (list (float-vector 14.9001 114.0 -44.4) (float-vector 14.9001 114.0 -15.6) (float-vector 14.9 55.0 -15.6) (float-vector 14.9 55.0 -44.4))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 14.9001 111.605 -36.7) (float-vector 14.9001 106.7 -41.6047) (float-vector 14.9001 100.0 -43.4) (float-vector 14.9001 93.3 -41.6048) (float-vector 14.9 88.3952 -36.7) (float-vector 14.9 86.6 -30.0) (float-vector 14.9 88.3952 -23.3) (float-vector 14.9001 93.3 -18.3953) (float-vector 14.9001 100.0 -16.6) (float-vector 14.9001 106.7 -18.3953) (float-vector 14.9001 111.605 -23.3) (float-vector 14.9001 113.4 -30.0)))
))
         (instance face :init :vertices (list (float-vector -36.8999 100.0 -43.4) (float-vector -34.8999 100.0 -43.4) (float-vector -34.8999 93.3 -41.6047) (float-vector -36.8999 93.3 -41.6047)))
         (instance face :init :vertices (list (float-vector 14.9001 100.0 -43.4) (float-vector 16.9 100.0 -43.4) (float-vector 16.9001 93.3 -41.6048) (float-vector 14.9001 93.3 -41.6048)))
         (instance face :init :vertices (list (float-vector -34.8999 88.3953 -36.7) (float-vector -36.8999 88.3953 -36.7) (float-vector -36.8999 93.3 -41.6047) (float-vector -34.8999 93.3 -41.6047)))
         (instance face :init :vertices (list (float-vector 16.9001 93.3 -41.6048) (float-vector 16.9 88.3952 -36.7) (float-vector 14.9 88.3952 -36.7) (float-vector 14.9001 93.3 -41.6048)))
         (instance face :init :vertices (list (float-vector -34.8999 86.6 -30.0) (float-vector -36.8999 86.6 -30.0) (float-vector -36.8999 88.3953 -36.7) (float-vector -34.8999 88.3953 -36.7)))
         (instance face :init :vertices (list (float-vector 16.9 88.3952 -36.7) (float-vector 16.9 86.6 -30.0) (float-vector 14.9 86.6 -30.0) (float-vector 14.9 88.3952 -36.7)))
         (instance face :init :vertices (list (float-vector -34.8999 88.3953 -23.3) (float-vector -36.8999 88.3953 -23.3) (float-vector -36.8999 86.6 -30.0) (float-vector -34.8999 86.6 -30.0)))
         (instance face :init :vertices (list (float-vector 16.9 86.6 -30.0) (float-vector 16.9 88.3952 -23.3) (float-vector 14.9 88.3952 -23.3) (float-vector 14.9 86.6 -30.0)))
         (instance face :init :vertices (list (float-vector -34.8999 93.3 -18.3953) (float-vector -36.8999 93.3 -18.3953) (float-vector -36.8999 88.3953 -23.3) (float-vector -34.8999 88.3953 -23.3)))
         (instance face :init :vertices (list (float-vector 16.9 88.3952 -23.3) (float-vector 16.9001 93.3 -18.3953) (float-vector 14.9001 93.3 -18.3953) (float-vector 14.9 88.3952 -23.3)))
         (instance face :init :vertices (list (float-vector -34.8999 100.0 -16.6) (float-vector -36.8999 100.0 -16.6) (float-vector -36.8999 93.3 -18.3953) (float-vector -34.8999 93.3 -18.3953)))
         (instance face :init :vertices (list (float-vector 16.9001 93.3 -18.3953) (float-vector 16.9001 100.0 -16.6) (float-vector 14.9001 100.0 -16.6) (float-vector 14.9001 93.3 -18.3953)))
         (instance face :init :vertices (list (float-vector -34.8999 106.7 -18.3952) (float-vector -36.8999 106.7 -18.3952) (float-vector -36.8999 100.0 -16.6) (float-vector -34.8999 100.0 -16.6)))
         (instance face :init :vertices (list (float-vector 16.9001 100.0 -16.6) (float-vector 16.9001 106.7 -18.3953) (float-vector 14.9001 106.7 -18.3953) (float-vector 14.9001 100.0 -16.6)))
         (instance face :init :vertices (list (float-vector -34.8999 111.605 -23.3) (float-vector -36.8999 111.605 -23.3) (float-vector -36.8999 106.7 -18.3952) (float-vector -34.8999 106.7 -18.3952)))
         (instance face :init :vertices (list (float-vector 16.9001 106.7 -18.3953) (float-vector 16.9001 111.605 -23.3) (float-vector 14.9001 111.605 -23.3) (float-vector 14.9001 106.7 -18.3953)))
         (instance face :init :vertices (list (float-vector -34.8999 113.4 -30.0) (float-vector -36.8999 113.4 -30.0) (float-vector -36.8999 111.605 -23.3) (float-vector -34.8999 111.605 -23.3)))
         (instance face :init :vertices (list (float-vector 16.9001 111.605 -23.3) (float-vector 16.9001 113.4 -30.0) (float-vector 14.9001 113.4 -30.0) (float-vector 14.9001 111.605 -23.3)))
         (instance face :init :vertices (list (float-vector -34.8999 111.605 -36.7) (float-vector -36.8999 111.605 -36.7) (float-vector -36.8999 113.4 -30.0) (float-vector -34.8999 113.4 -30.0)))
         (instance face :init :vertices (list (float-vector 16.9001 113.4 -30.0) (float-vector 16.9001 111.605 -36.7) (float-vector 14.9001 111.605 -36.7) (float-vector 14.9001 113.4 -30.0)))
         (instance face :init :vertices (list (float-vector -34.8999 106.7 -41.6047) (float-vector -36.8999 106.7 -41.6047) (float-vector -36.8999 111.605 -36.7) (float-vector -34.8999 111.605 -36.7)))
         (instance face :init :vertices (list (float-vector 16.9001 111.605 -36.7) (float-vector 16.9001 106.7 -41.6047) (float-vector 14.9001 106.7 -41.6047) (float-vector 14.9001 111.605 -36.7)))
         (instance face :init :vertices (list (float-vector -36.8999 106.7 -41.6047) (float-vector -36.8999 100.0 -43.4) (float-vector -36.8999 93.3 -41.6047) (float-vector -36.8999 88.3953 -36.7) (float-vector -36.8999 86.6 -30.0) (float-vector -36.8999 88.3953 -23.3) (float-vector -36.8999 93.3 -18.3953) (float-vector -36.8999 100.0 -16.6) (float-vector -36.8999 106.7 -18.3952) (float-vector -36.8999 111.605 -23.3) (float-vector -36.8999 113.4 -30.0) (float-vector -36.8999 111.605 -36.7)))
         (instance face :init :vertices (list (float-vector -36.8999 100.0 -43.4) (float-vector -36.8999 106.7 -41.6047) (float-vector -34.8999 106.7 -41.6047) (float-vector -34.8999 100.0 -43.4)))
         (instance face :init :vertices (list (float-vector 16.9001 106.7 -41.6047) (float-vector 16.9 100.0 -43.4) (float-vector 14.9001 100.0 -43.4) (float-vector 14.9001 106.7 -41.6047)))
         (instance face :init :vertices (list (float-vector 16.9 100.0 -43.4) (float-vector 16.9001 106.7 -41.6047) (float-vector 16.9001 111.605 -36.7) (float-vector 16.9001 113.4 -30.0) (float-vector 16.9001 111.605 -23.3) (float-vector 16.9001 106.7 -18.3953) (float-vector 16.9001 100.0 -16.6) (float-vector 16.9001 93.3 -18.3953) (float-vector 16.9 88.3952 -23.3) (float-vector 16.9 86.6 -30.0) (float-vector 16.9 88.3952 -36.7) (float-vector 16.9001 93.3 -41.6048)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink14 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rbleg-crotch :weight 120.301 :centroid (float-vector -8.89429 78.166 -26.683) :inertia-tensor #2f((1.072085e+05 7189.05 -3549.15) (7189.05 52421.2 21567.3) (-3549.15 21567.3 1.033759e+05))))

     ;; definition of :rbleg-knee
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 5.602837e-06 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 -6.020069e-06 32.5) (float-vector 15.0 -6.556511e-06 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 6.139278e-06 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 6.020069e-06 -32.5) (float-vector -15.0 6.616116e-06 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 -6.139278e-06 31.5) (float-vector -15.0 -5.543232e-06 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 -5.543232e-06 32.5) (float-vector -15.0 -6.139278e-06 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 6.616116e-06 -31.5) (float-vector -15.0 6.020069e-06 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 -6.020069e-06 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 -5.543232e-06 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 6.020069e-06 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 5.602837e-06 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 -6.556511e-06 31.5) (float-vector 15.0 -6.020069e-06 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 5.602837e-06 -32.5) (float-vector 15.0 6.139278e-06 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 -6.556511e-06 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 -6.139278e-06 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 6.616116e-06 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 6.139278e-06 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.3999 114.0 24.9) (float-vector -14.3999 114.0 -24.9) (float-vector -14.4 55.0 -24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 55.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector 14.4 55.0 24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 55.0 -24.9) (float-vector 14.4001 114.0 -24.9) (float-vector 14.4001 114.0 24.9) (float-vector 14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4001 114.0 24.9) (float-vector -14.3999 114.0 24.9) (float-vector -14.4 55.0 24.9) (float-vector 14.4 55.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -11.6046 106.7 24.9) (float-vector -6.69991 111.605 24.9) (float-vector 9.155273e-05 113.4 24.9) (float-vector 6.70009 111.605 24.9) (float-vector 11.6048 106.7 24.9) (float-vector 13.4001 100.0 24.9) (float-vector 11.6048 93.3 24.9) (float-vector 6.70006 88.3953 24.9) (float-vector 6.103516e-05 86.6 24.9) (float-vector -6.69994 88.3953 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -13.3999 100.0 24.9)))
))
         (instance face :init :vertices (list (float-vector 14.4001 114.0 -24.9) (float-vector -14.3999 114.0 -24.9) (float-vector -14.3999 114.0 24.9) (float-vector 14.4001 114.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.3999 114.0 -24.9) (float-vector 14.4001 114.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector -14.4 55.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -6.69991 111.605 -24.9) (float-vector -11.6046 106.7 -24.9) (float-vector -13.3999 100.0 -24.9) (float-vector -11.6047 93.3 -24.9) (float-vector -6.69994 88.3953 -24.9) (float-vector 6.103516e-05 86.6 -24.9) (float-vector 6.70006 88.3953 -24.9) (float-vector 11.6048 93.3 -24.9) (float-vector 13.4001 100.0 -24.9) (float-vector 11.6048 106.7 -24.9) (float-vector 6.70009 111.605 -24.9) (float-vector 9.155273e-05 113.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 26.9) (float-vector -13.3999 100.0 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -11.6047 93.3 26.9)))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 -24.9) (float-vector -13.3999 100.0 -26.9) (float-vector -11.6047 93.3 -26.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector -6.69994 88.3953 24.9) (float-vector -6.69994 88.3953 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -11.6047 93.3 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 93.3 -26.9) (float-vector -6.69994 88.3953 -26.9) (float-vector -6.69994 88.3953 -24.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 6.103516e-05 86.6 24.9) (float-vector 6.103516e-05 86.6 26.9) (float-vector -6.69994 88.3953 26.9) (float-vector -6.69994 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector -6.69994 88.3953 -26.9) (float-vector 6.103516e-05 86.6 -26.9) (float-vector 6.103516e-05 86.6 -24.9) (float-vector -6.69994 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 6.70006 88.3953 24.9) (float-vector 6.70006 88.3953 26.9) (float-vector 6.103516e-05 86.6 26.9) (float-vector 6.103516e-05 86.6 24.9)))
         (instance face :init :vertices (list (float-vector 6.103516e-05 86.6 -26.9) (float-vector 6.70006 88.3952 -26.9) (float-vector 6.70006 88.3953 -24.9) (float-vector 6.103516e-05 86.6 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 93.3 24.9) (float-vector 11.6048 93.3 26.9) (float-vector 6.70006 88.3953 26.9) (float-vector 6.70006 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector 6.70006 88.3952 -26.9) (float-vector 11.6048 93.3 -26.9) (float-vector 11.6048 93.3 -24.9) (float-vector 6.70006 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4001 100.0 24.9) (float-vector 13.4001 100.0 26.9) (float-vector 11.6048 93.3 26.9) (float-vector 11.6048 93.3 24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 93.3 -26.9) (float-vector 13.4001 100.0 -26.9) (float-vector 13.4001 100.0 -24.9) (float-vector 11.6048 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 106.7 24.9) (float-vector 11.6048 106.7 26.9) (float-vector 13.4001 100.0 26.9) (float-vector 13.4001 100.0 24.9)))
         (instance face :init :vertices (list (float-vector 13.4001 100.0 -26.9) (float-vector 11.6048 106.7 -26.9) (float-vector 11.6048 106.7 -24.9) (float-vector 13.4001 100.0 -24.9)))
         (instance face :init :vertices (list (float-vector 6.70009 111.605 24.9) (float-vector 6.70009 111.605 26.9) (float-vector 11.6048 106.7 26.9) (float-vector 11.6048 106.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 106.7 -26.9) (float-vector 6.70009 111.605 -26.9) (float-vector 6.70009 111.605 -24.9) (float-vector 11.6048 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector 9.155273e-05 113.4 24.9) (float-vector 9.155273e-05 113.4 26.9) (float-vector 6.70009 111.605 26.9) (float-vector 6.70009 111.605 24.9)))
         (instance face :init :vertices (list (float-vector 6.70009 111.605 -26.9) (float-vector 9.155273e-05 113.4 -26.9) (float-vector 9.155273e-05 113.4 -24.9) (float-vector 6.70009 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -6.69991 111.605 24.9) (float-vector -6.69991 111.605 26.9) (float-vector 9.155273e-05 113.4 26.9) (float-vector 9.155273e-05 113.4 24.9)))
         (instance face :init :vertices (list (float-vector 9.155273e-05 113.4 -26.9) (float-vector -6.69991 111.605 -26.9) (float-vector -6.69991 111.605 -24.9) (float-vector 9.155273e-05 113.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6046 106.7 24.9) (float-vector -11.6046 106.7 26.9) (float-vector -6.69991 111.605 26.9) (float-vector -6.69991 111.605 24.9)))
         (instance face :init :vertices (list (float-vector -6.69991 111.605 -26.9) (float-vector -11.6046 106.7 -26.9) (float-vector -11.6046 106.7 -24.9) (float-vector -6.69991 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6046 106.7 26.9) (float-vector -13.3999 100.0 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -6.69994 88.3953 26.9) (float-vector 6.103516e-05 86.6 26.9) (float-vector 6.70006 88.3953 26.9) (float-vector 11.6048 93.3 26.9) (float-vector 13.4001 100.0 26.9) (float-vector 11.6048 106.7 26.9) (float-vector 6.70009 111.605 26.9) (float-vector 9.155273e-05 113.4 26.9) (float-vector -6.69991 111.605 26.9)))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 26.9) (float-vector -11.6046 106.7 26.9) (float-vector -11.6046 106.7 24.9) (float-vector -13.3999 100.0 24.9)))
         (instance face :init :vertices (list (float-vector -11.6046 106.7 -26.9) (float-vector -13.3999 100.0 -26.9) (float-vector -13.3999 100.0 -24.9) (float-vector -11.6046 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 -26.9) (float-vector -11.6046 106.7 -26.9) (float-vector -6.69991 111.605 -26.9) (float-vector 9.155273e-05 113.4 -26.9) (float-vector 6.70009 111.605 -26.9) (float-vector 11.6048 106.7 -26.9) (float-vector 13.4001 100.0 -26.9) (float-vector 11.6048 93.3 -26.9) (float-vector 6.70006 88.3952 -26.9) (float-vector 6.103516e-05 86.6 -26.9) (float-vector -6.69994 88.3953 -26.9) (float-vector -11.6047 93.3 -26.9)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink13 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rbleg-knee :weight 120.301 :centroid (float-vector 7.438660e-05 78.1659 -1.907349e-05) :inertia-tensor #2f((1.112788e+05 -0.053939 6.495615e-08) (-0.053939 40590.6 -3.492460e-07) (6.495614e-08 -3.492460e-07 87475.1))))

     ;; definition of :rbleg-ankle
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 69.0 31.5) (float-vector 15.0 69.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 70.0 -32.5) (float-vector -15.0 70.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 69.0 -31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 7.629395e-06 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 7.629395e-06 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector -1.525879e-05 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -1.525879e-05 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector -1.525879e-05 -15.0 32.5) (float-vector -1.525879e-05 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -1.525879e-05 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 70.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector -1.525879e-05 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 7.629395e-06 31.5) (float-vector -15.0 69.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 -31.5) (float-vector 15.0 69.0 31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 69.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 69.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 69.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5001) (float-vector 35.0 136.0 -4.577637e-05) (float-vector 30.3109 136.0 17.5) (float-vector 17.5 136.0 30.3108) (float-vector 1.525879e-05 136.0 35.0) (float-vector -17.5 136.0 30.3109) (float-vector -30.3109 136.0 17.5) (float-vector -35.0 136.0 -3.051758e-05) (float-vector -30.3109 136.0 -17.5) (float-vector -17.5 136.0 -30.3109) (float-vector -3.051758e-05 136.0 -35.0) (float-vector 17.5 136.0 -30.311)))
         (instance face :init :vertices (list (float-vector 35.0 140.0 -4.577637e-05) (float-vector 30.3109 140.0 -17.5001) (float-vector 17.5 140.0 -30.311) (float-vector -1.525879e-05 140.0 -35.0) (float-vector -17.5 140.0 -30.3109) (float-vector -30.3109 140.0 -17.5) (float-vector -35.0 140.0 -2.288818e-05) (float-vector -30.3109 140.0 17.5) (float-vector -17.5 140.0 30.3108) (float-vector 3.051758e-05 140.0 35.0) (float-vector 17.5 140.0 30.3108) (float-vector 30.3109 140.0 17.5)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5001) (float-vector 30.3109 140.0 -17.5001) (float-vector 35.0 140.0 -4.577637e-05) (float-vector 35.0 136.0 -4.577637e-05)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 -30.311) (float-vector 17.5 140.0 -30.311) (float-vector 30.3109 140.0 -17.5001) (float-vector 30.3109 136.0 -17.5001)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 136.0 -35.0) (float-vector -1.525879e-05 140.0 -35.0) (float-vector 17.5 140.0 -30.311) (float-vector 17.5 136.0 -30.311)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 -30.3109) (float-vector -17.5 140.0 -30.3109) (float-vector -1.525879e-05 140.0 -35.0) (float-vector -3.051758e-05 136.0 -35.0)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 -17.5) (float-vector -30.3109 140.0 -17.5) (float-vector -17.5 140.0 -30.3109) (float-vector -17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector -35.0 136.0 -3.051758e-05) (float-vector -35.0 140.0 -2.288818e-05) (float-vector -30.3109 140.0 -17.5) (float-vector -30.3109 136.0 -17.5)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 17.5) (float-vector -30.3109 140.0 17.5) (float-vector -35.0 140.0 -2.288818e-05) (float-vector -35.0 136.0 -3.051758e-05)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 30.3109) (float-vector -17.5 140.0 30.3108) (float-vector -30.3109 140.0 17.5) (float-vector -30.3109 136.0 17.5)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 136.0 35.0) (float-vector 3.051758e-05 140.0 35.0) (float-vector -17.5 140.0 30.3108) (float-vector -17.5 136.0 30.3109)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 30.3108) (float-vector 17.5 140.0 30.3108) (float-vector 3.051758e-05 140.0 35.0) (float-vector 1.525879e-05 136.0 35.0)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 17.5) (float-vector 30.3109 140.0 17.5) (float-vector 17.5 140.0 30.3108) (float-vector 17.5 136.0 30.3108)))
         (instance face :init :vertices (list (float-vector 35.0 136.0 -4.577637e-05) (float-vector 35.0 140.0 -4.577637e-05) (float-vector 30.3109 140.0 17.5) (float-vector 30.3109 136.0 17.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink12 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rbleg-ankle :weight 68.1613 :centroid (float-vector 0.000107 112.103 -6.771088e-05) :inertia-tensor #2f((1.217474e+05 -0.135852 1.290022e-07) (-0.135852 16422.7 0.087668) (1.290022e-07 0.087668 1.080489e+05))))

     ;; definition of :rfleg-crotch
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 -7.629395e-06 -32.5) (float-vector -15.0 -7.629395e-06 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 -7.629395e-06 31.5) (float-vector -15.0 -7.629395e-06 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 -7.629395e-06 32.5) (float-vector -15.0 -7.629395e-06 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 -7.629395e-06 -31.5) (float-vector -15.0 -7.629395e-06 -32.5)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 7.629395e-06 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 -15.0 -32.5) (float-vector 7.629395e-06 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 7.629395e-06 -15.0 32.5) (float-vector 7.629395e-06 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 7.629395e-06 -15.0 -31.5) (float-vector 7.629395e-06 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 -7.629395e-06 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 7.629395e-06 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 7.629395e-06 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 -7.629395e-06 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 7.629395e-06 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 -7.629395e-06 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 -7.629395e-06 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 7.629395e-06 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.8999 114.0 -44.4) (float-vector 34.9001 114.0 -44.4) (float-vector 34.9 55.0 -44.4) (float-vector -14.9 55.0 -44.4)))
         (instance face :init :vertices (list (float-vector 34.9 55.0 -44.4) (float-vector 34.9 55.0 -15.6) (float-vector -14.8999 55.0 -15.6) (float-vector -14.9 55.0 -44.4)))
         (instance face :init :vertices (list (float-vector 34.9 55.0 -15.6) (float-vector 34.9001 114.0 -15.6) (float-vector -14.8999 114.0 -15.6) (float-vector -14.8999 55.0 -15.6)))
         (instance face :init :vertices (list (float-vector -14.8999 114.0 -15.6) (float-vector -14.8999 114.0 -44.4) (float-vector -14.9 55.0 -44.4) (float-vector -14.8999 55.0 -15.6))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -14.8999 106.7 -41.6047) (float-vector -14.8999 111.605 -36.7) (float-vector -14.8999 113.4 -30.0) (float-vector -14.8999 111.605 -23.3) (float-vector -14.8999 106.7 -18.3952) (float-vector -14.8999 100.0 -16.6) (float-vector -14.8999 93.3 -18.3953) (float-vector -14.8999 88.3953 -23.3) (float-vector -14.8999 86.6 -30.0) (float-vector -14.8999 88.3953 -36.7) (float-vector -14.8999 93.3 -41.6047) (float-vector -14.8999 100.0 -43.4)))
))
         (instance face :init :vertices (list (float-vector 34.9001 114.0 -15.6) (float-vector 34.9001 114.0 -44.4) (float-vector -14.8999 114.0 -44.4) (float-vector -14.8999 114.0 -15.6)))
         (instance face :init :vertices (list (float-vector 34.9001 114.0 -44.4) (float-vector 34.9001 114.0 -15.6) (float-vector 34.9 55.0 -15.6) (float-vector 34.9 55.0 -44.4))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 34.9001 111.605 -36.7) (float-vector 34.9001 106.7 -41.6047) (float-vector 34.9001 100.0 -43.4) (float-vector 34.9 93.3 -41.6048) (float-vector 34.9001 88.3952 -36.7) (float-vector 34.9001 86.6 -30.0) (float-vector 34.9001 88.3952 -23.3) (float-vector 34.9001 93.3 -18.3953) (float-vector 34.9001 99.9999 -16.6) (float-vector 34.9001 106.7 -18.3953) (float-vector 34.9001 111.605 -23.3) (float-vector 34.9001 113.4 -30.0)))
))
         (instance face :init :vertices (list (float-vector -16.8999 100.0 -43.4) (float-vector -14.8999 100.0 -43.4) (float-vector -14.8999 93.3 -41.6047) (float-vector -16.8999 93.3 -41.6047)))
         (instance face :init :vertices (list (float-vector 34.9001 100.0 -43.4) (float-vector 36.9001 100.0 -43.4) (float-vector 36.9 93.3 -41.6048) (float-vector 34.9 93.3 -41.6048)))
         (instance face :init :vertices (list (float-vector -14.8999 88.3953 -36.7) (float-vector -16.8999 88.3953 -36.7) (float-vector -16.8999 93.3 -41.6047) (float-vector -14.8999 93.3 -41.6047)))
         (instance face :init :vertices (list (float-vector 36.9 93.3 -41.6048) (float-vector 36.9001 88.3952 -36.7) (float-vector 34.9001 88.3952 -36.7) (float-vector 34.9 93.3 -41.6048)))
         (instance face :init :vertices (list (float-vector -14.8999 86.6 -30.0) (float-vector -16.8999 86.6 -30.0) (float-vector -16.8999 88.3953 -36.7) (float-vector -14.8999 88.3953 -36.7)))
         (instance face :init :vertices (list (float-vector 36.9001 88.3952 -36.7) (float-vector 36.9001 86.5999 -30.0) (float-vector 34.9001 86.6 -30.0) (float-vector 34.9001 88.3952 -36.7)))
         (instance face :init :vertices (list (float-vector -14.8999 88.3953 -23.3) (float-vector -16.8999 88.3953 -23.3) (float-vector -16.8999 86.6 -30.0) (float-vector -14.8999 86.6 -30.0)))
         (instance face :init :vertices (list (float-vector 36.9001 86.5999 -30.0) (float-vector 36.9001 88.3952 -23.3) (float-vector 34.9001 88.3952 -23.3) (float-vector 34.9001 86.6 -30.0)))
         (instance face :init :vertices (list (float-vector -14.8999 93.3 -18.3953) (float-vector -16.8999 93.3 -18.3953) (float-vector -16.8999 88.3953 -23.3) (float-vector -14.8999 88.3953 -23.3)))
         (instance face :init :vertices (list (float-vector 36.9001 88.3952 -23.3) (float-vector 36.9001 93.3 -18.3953) (float-vector 34.9001 93.3 -18.3953) (float-vector 34.9001 88.3952 -23.3)))
         (instance face :init :vertices (list (float-vector -14.8999 100.0 -16.6) (float-vector -16.8999 100.0 -16.6) (float-vector -16.8999 93.3 -18.3953) (float-vector -14.8999 93.3 -18.3953)))
         (instance face :init :vertices (list (float-vector 36.9001 93.3 -18.3953) (float-vector 36.9001 99.9999 -16.6) (float-vector 34.9001 99.9999 -16.6) (float-vector 34.9001 93.3 -18.3953)))
         (instance face :init :vertices (list (float-vector -14.8999 106.7 -18.3952) (float-vector -16.8999 106.7 -18.3952) (float-vector -16.8999 100.0 -16.6) (float-vector -14.8999 100.0 -16.6)))
         (instance face :init :vertices (list (float-vector 36.9001 99.9999 -16.6) (float-vector 36.9001 106.7 -18.3953) (float-vector 34.9001 106.7 -18.3953) (float-vector 34.9001 99.9999 -16.6)))
         (instance face :init :vertices (list (float-vector -14.8999 111.605 -23.3) (float-vector -16.8999 111.605 -23.3) (float-vector -16.8999 106.7 -18.3952) (float-vector -14.8999 106.7 -18.3952)))
         (instance face :init :vertices (list (float-vector 36.9001 106.7 -18.3953) (float-vector 36.9001 111.605 -23.3) (float-vector 34.9001 111.605 -23.3) (float-vector 34.9001 106.7 -18.3953)))
         (instance face :init :vertices (list (float-vector -14.8999 113.4 -30.0) (float-vector -16.8999 113.4 -30.0) (float-vector -16.8999 111.605 -23.3) (float-vector -14.8999 111.605 -23.3)))
         (instance face :init :vertices (list (float-vector 36.9001 111.605 -23.3) (float-vector 36.9001 113.4 -30.0) (float-vector 34.9001 113.4 -30.0) (float-vector 34.9001 111.605 -23.3)))
         (instance face :init :vertices (list (float-vector -14.8999 111.605 -36.7) (float-vector -16.8999 111.605 -36.7) (float-vector -16.8999 113.4 -30.0) (float-vector -14.8999 113.4 -30.0)))
         (instance face :init :vertices (list (float-vector 36.9001 113.4 -30.0) (float-vector 36.9001 111.605 -36.7) (float-vector 34.9001 111.605 -36.7) (float-vector 34.9001 113.4 -30.0)))
         (instance face :init :vertices (list (float-vector -14.8999 106.7 -41.6047) (float-vector -16.8999 106.7 -41.6047) (float-vector -16.8999 111.605 -36.7) (float-vector -14.8999 111.605 -36.7)))
         (instance face :init :vertices (list (float-vector 36.9001 111.605 -36.7) (float-vector 36.9001 106.7 -41.6047) (float-vector 34.9001 106.7 -41.6047) (float-vector 34.9001 111.605 -36.7)))
         (instance face :init :vertices (list (float-vector -16.8999 106.7 -41.6047) (float-vector -16.8999 100.0 -43.4) (float-vector -16.8999 93.3 -41.6047) (float-vector -16.8999 88.3953 -36.7) (float-vector -16.8999 86.6 -30.0) (float-vector -16.8999 88.3953 -23.3) (float-vector -16.8999 93.3 -18.3953) (float-vector -16.8999 100.0 -16.6) (float-vector -16.8999 106.7 -18.3952) (float-vector -16.8999 111.605 -23.3) (float-vector -16.8999 113.4 -30.0) (float-vector -16.8999 111.605 -36.7)))
         (instance face :init :vertices (list (float-vector -16.8999 100.0 -43.4) (float-vector -16.8999 106.7 -41.6047) (float-vector -14.8999 106.7 -41.6047) (float-vector -14.8999 100.0 -43.4)))
         (instance face :init :vertices (list (float-vector 36.9001 106.7 -41.6047) (float-vector 36.9001 100.0 -43.4) (float-vector 34.9001 100.0 -43.4) (float-vector 34.9001 106.7 -41.6047)))
         (instance face :init :vertices (list (float-vector 36.9001 100.0 -43.4) (float-vector 36.9001 106.7 -41.6047) (float-vector 36.9001 111.605 -36.7) (float-vector 36.9001 113.4 -30.0) (float-vector 36.9001 111.605 -23.3) (float-vector 36.9001 106.7 -18.3953) (float-vector 36.9001 99.9999 -16.6) (float-vector 36.9001 93.3 -18.3953) (float-vector 36.9001 88.3952 -23.3) (float-vector 36.9001 86.5999 -30.0) (float-vector 36.9001 88.3952 -36.7) (float-vector 36.9 93.3 -41.6048)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink11 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rfleg-crotch :weight 120.301 :centroid (float-vector 8.89438 78.166 -26.683) :inertia-tensor #2f((1.072085e+05 -7189.14 3549.19) (-7189.14 52421.2 21567.3) (3549.19 21567.3 1.033759e+05))))

     ;; definition of :rfleg-knee
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 -3.218651e-06 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 3.397465e-06 32.5) (float-vector 15.0 3.695488e-06 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 -3.516674e-06 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 -3.457069e-06 -32.5) (float-vector -15.0 -3.695488e-06 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 3.516674e-06 31.5) (float-vector -15.0 3.218651e-06 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 3.218651e-06 32.5) (float-vector -15.0 3.516674e-06 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 -3.695488e-06 -31.5) (float-vector -15.0 -3.457069e-06 -32.5)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 1.525879e-05 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 3.397465e-06 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 3.218651e-06 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 1.525879e-05 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 -3.457069e-06 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 -3.218651e-06 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 3.695488e-06 31.5) (float-vector 15.0 3.397465e-06 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 -3.218651e-06 -32.5) (float-vector 15.0 -3.516674e-06 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 3.695488e-06 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 3.516674e-06 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 -3.695488e-06 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 -3.516674e-06 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.3999 114.0 24.9) (float-vector -14.3999 114.0 -24.9) (float-vector -14.3999 55.0 -24.9) (float-vector -14.3999 55.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.3999 55.0 -24.9) (float-vector 14.4001 55.0 -24.9) (float-vector 14.4 55.0 24.9) (float-vector -14.3999 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4001 55.0 -24.9) (float-vector 14.4001 114.0 -24.9) (float-vector 14.4001 114.0 24.9) (float-vector 14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4001 114.0 24.9) (float-vector -14.3999 114.0 24.9) (float-vector -14.3999 55.0 24.9) (float-vector 14.4 55.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -6.69991 111.605 24.9) (float-vector 9.155273e-05 113.4 24.9) (float-vector 6.70009 111.605 24.9) (float-vector 11.6048 106.7 24.9) (float-vector 13.4001 100.0 24.9) (float-vector 11.6048 93.3 24.9) (float-vector 6.70006 88.3953 24.9) (float-vector 6.103516e-05 86.6 24.9) (float-vector -6.69994 88.3953 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -13.3999 100.0 24.9)))
))
         (instance face :init :vertices (list (float-vector 14.4001 114.0 -24.9) (float-vector -14.3999 114.0 -24.9) (float-vector -14.3999 114.0 24.9) (float-vector 14.4001 114.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.3999 114.0 -24.9) (float-vector 14.4001 114.0 -24.9) (float-vector 14.4001 55.0 -24.9) (float-vector -14.3999 55.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -6.69992 111.605 -24.9) (float-vector -11.6047 106.7 -24.9) (float-vector -13.3999 100.0 -24.9) (float-vector -11.6047 93.3 -24.9) (float-vector -6.69994 88.3953 -24.9) (float-vector 6.103516e-05 86.6 -24.9) (float-vector 6.70006 88.3953 -24.9) (float-vector 11.6048 93.3 -24.9) (float-vector 13.4001 100.0 -24.9) (float-vector 11.6048 106.7 -24.9) (float-vector 6.70009 111.605 -24.9) (float-vector 9.155273e-05 113.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 26.9) (float-vector -13.3999 100.0 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -11.6047 93.3 26.9)))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 -24.9) (float-vector -13.3999 100.0 -26.9) (float-vector -11.6047 93.3 -26.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector -6.69994 88.3953 24.9) (float-vector -6.69994 88.3953 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -11.6047 93.3 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 93.3 -26.9) (float-vector -6.69995 88.3953 -26.9) (float-vector -6.69994 88.3953 -24.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 6.103516e-05 86.6 24.9) (float-vector 6.103516e-05 86.6 26.9) (float-vector -6.69994 88.3953 26.9) (float-vector -6.69994 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector -6.69995 88.3953 -26.9) (float-vector 6.103516e-05 86.6 -26.9) (float-vector 6.103516e-05 86.6 -24.9) (float-vector -6.69994 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 6.70006 88.3953 24.9) (float-vector 6.70006 88.3952 26.9) (float-vector 6.103516e-05 86.6 26.9) (float-vector 6.103516e-05 86.6 24.9)))
         (instance face :init :vertices (list (float-vector 6.103516e-05 86.6 -26.9) (float-vector 6.70006 88.3953 -26.9) (float-vector 6.70006 88.3953 -24.9) (float-vector 6.103516e-05 86.6 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 93.3 24.9) (float-vector 11.6048 93.3 26.9) (float-vector 6.70006 88.3952 26.9) (float-vector 6.70006 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector 6.70006 88.3953 -26.9) (float-vector 11.6048 93.3 -26.9) (float-vector 11.6048 93.3 -24.9) (float-vector 6.70006 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4001 100.0 24.9) (float-vector 13.4001 100.0 26.9) (float-vector 11.6048 93.3 26.9) (float-vector 11.6048 93.3 24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 93.3 -26.9) (float-vector 13.4001 100.0 -26.9) (float-vector 13.4001 100.0 -24.9) (float-vector 11.6048 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 106.7 24.9) (float-vector 11.6048 106.7 26.9) (float-vector 13.4001 100.0 26.9) (float-vector 13.4001 100.0 24.9)))
         (instance face :init :vertices (list (float-vector 13.4001 100.0 -26.9) (float-vector 11.6048 106.7 -26.9) (float-vector 11.6048 106.7 -24.9) (float-vector 13.4001 100.0 -24.9)))
         (instance face :init :vertices (list (float-vector 6.70009 111.605 24.9) (float-vector 6.70009 111.605 26.9) (float-vector 11.6048 106.7 26.9) (float-vector 11.6048 106.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 106.7 -26.9) (float-vector 6.70009 111.605 -26.9) (float-vector 6.70009 111.605 -24.9) (float-vector 11.6048 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector 9.155273e-05 113.4 24.9) (float-vector 9.155273e-05 113.4 26.9) (float-vector 6.70009 111.605 26.9) (float-vector 6.70009 111.605 24.9)))
         (instance face :init :vertices (list (float-vector 6.70009 111.605 -26.9) (float-vector 9.155273e-05 113.4 -26.9) (float-vector 9.155273e-05 113.4 -24.9) (float-vector 6.70009 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -6.69991 111.605 24.9) (float-vector -6.69991 111.605 26.9) (float-vector 9.155273e-05 113.4 26.9) (float-vector 9.155273e-05 113.4 24.9)))
         (instance face :init :vertices (list (float-vector 9.155273e-05 113.4 -26.9) (float-vector -6.69992 111.605 -26.9) (float-vector -6.69992 111.605 -24.9) (float-vector 9.155273e-05 113.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -11.6046 106.7 26.9) (float-vector -6.69991 111.605 26.9) (float-vector -6.69991 111.605 24.9)))
         (instance face :init :vertices (list (float-vector -6.69992 111.605 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -11.6047 106.7 -24.9) (float-vector -6.69992 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6046 106.7 26.9) (float-vector -13.3999 100.0 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -6.69994 88.3953 26.9) (float-vector 6.103516e-05 86.6 26.9) (float-vector 6.70006 88.3952 26.9) (float-vector 11.6048 93.3 26.9) (float-vector 13.4001 100.0 26.9) (float-vector 11.6048 106.7 26.9) (float-vector 6.70009 111.605 26.9) (float-vector 9.155273e-05 113.4 26.9) (float-vector -6.69991 111.605 26.9)))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 26.9) (float-vector -11.6046 106.7 26.9) (float-vector -11.6047 106.7 24.9) (float-vector -13.3999 100.0 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 -26.9) (float-vector -13.3999 100.0 -26.9) (float-vector -13.3999 100.0 -24.9) (float-vector -11.6047 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -6.69992 111.605 -26.9) (float-vector 9.155273e-05 113.4 -26.9) (float-vector 6.70009 111.605 -26.9) (float-vector 11.6048 106.7 -26.9) (float-vector 13.4001 100.0 -26.9) (float-vector 11.6048 93.3 -26.9) (float-vector 6.70006 88.3953 -26.9) (float-vector 6.103516e-05 86.6 -26.9) (float-vector -6.69995 88.3953 -26.9) (float-vector -11.6047 93.3 -26.9)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rfleg-knee :weight 120.301 :centroid (float-vector 5.149841e-05 78.166 2.384186e-05) :inertia-tensor #2f((1.112788e+05 -0.055977 -0.001316) (-0.055977 40590.6 -0.001637) (-0.001316 -0.001637 87475.1))))

     ;; definition of :rfleg-ankle
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 69.0 31.5) (float-vector 15.0 69.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 70.0 -32.5) (float-vector -15.0 70.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 69.0 -31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 -15.0 -32.5) (float-vector 1.525879e-05 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 1.525879e-05 -15.0 -31.5) (float-vector 1.525879e-05 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 1.525879e-05 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 70.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 69.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 -31.5) (float-vector 15.0 69.0 31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 69.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 69.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 1.525879e-05 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 69.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5001) (float-vector 35.0 136.0 -4.577637e-05) (float-vector 30.3109 136.0 17.5) (float-vector 17.5 136.0 30.3108) (float-vector 1.525879e-05 136.0 34.9999) (float-vector -17.5 136.0 30.3109) (float-vector -30.3109 136.0 17.5) (float-vector -35.0 136.0 -2.288818e-05) (float-vector -30.3109 136.0 -17.5) (float-vector -17.5 136.0 -30.3109) (float-vector -3.051758e-05 136.0 -35.0) (float-vector 17.5 136.0 -30.311)))
         (instance face :init :vertices (list (float-vector 35.0 140.0 -3.814697e-05) (float-vector 30.3109 140.0 -17.5001) (float-vector 17.5 140.0 -30.311) (float-vector -1.525879e-05 140.0 -35.0) (float-vector -17.5 140.0 -30.3109) (float-vector -30.3109 140.0 -17.5) (float-vector -35.0 140.0 -3.051758e-05) (float-vector -30.3109 140.0 17.5) (float-vector -17.5 140.0 30.3109) (float-vector 3.051758e-05 140.0 34.9999) (float-vector 17.5 140.0 30.3108) (float-vector 30.3109 140.0 17.4999)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5001) (float-vector 30.3109 140.0 -17.5001) (float-vector 35.0 140.0 -3.814697e-05) (float-vector 35.0 136.0 -4.577637e-05)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 -30.311) (float-vector 17.5 140.0 -30.311) (float-vector 30.3109 140.0 -17.5001) (float-vector 30.3109 136.0 -17.5001)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 136.0 -35.0) (float-vector -1.525879e-05 140.0 -35.0) (float-vector 17.5 140.0 -30.311) (float-vector 17.5 136.0 -30.311)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 -30.3109) (float-vector -17.5 140.0 -30.3109) (float-vector -1.525879e-05 140.0 -35.0) (float-vector -3.051758e-05 136.0 -35.0)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 -17.5) (float-vector -30.3109 140.0 -17.5) (float-vector -17.5 140.0 -30.3109) (float-vector -17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector -35.0 136.0 -2.288818e-05) (float-vector -35.0 140.0 -3.051758e-05) (float-vector -30.3109 140.0 -17.5) (float-vector -30.3109 136.0 -17.5)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 17.5) (float-vector -30.3109 140.0 17.5) (float-vector -35.0 140.0 -3.051758e-05) (float-vector -35.0 136.0 -2.288818e-05)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 30.3109) (float-vector -17.5 140.0 30.3109) (float-vector -30.3109 140.0 17.5) (float-vector -30.3109 136.0 17.5)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 136.0 34.9999) (float-vector 3.051758e-05 140.0 34.9999) (float-vector -17.5 140.0 30.3109) (float-vector -17.5 136.0 30.3109)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 30.3108) (float-vector 17.5 140.0 30.3108) (float-vector 3.051758e-05 140.0 34.9999) (float-vector 1.525879e-05 136.0 34.9999)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 17.5) (float-vector 30.3109 140.0 17.4999) (float-vector 17.5 140.0 30.3108) (float-vector 17.5 136.0 30.3108)))
         (instance face :init :vertices (list (float-vector 35.0 136.0 -4.577637e-05) (float-vector 35.0 140.0 -3.814697e-05) (float-vector 30.3109 140.0 17.4999) (float-vector 30.3109 136.0 17.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rfleg-ankle :weight 68.1613 :centroid (float-vector -8.010864e-05 112.105 -5.149841e-05) :inertia-tensor #2f((1.217544e+05 0.106165 -7.528706e-08) (0.106165 16422.7 0.065445) (-7.528706e-08 0.065445 1.080559e+05))))

     ;; definition of :lbleg-crotch
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 -7.629395e-06 32.5) (float-vector 15.0 -7.629395e-06 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 -7.629395e-06 31.5) (float-vector -15.0 -7.629395e-06 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 -7.629395e-06 32.5) (float-vector -15.0 -7.629395e-06 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 -7.629395e-06 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 -7.629395e-06 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 -7.629395e-06 31.5) (float-vector 15.0 -7.629395e-06 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 -7.629395e-06 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 -7.629395e-06 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 14.9001 114.0 44.4) (float-vector -34.8999 114.0 44.4) (float-vector -34.9 55.0 44.4) (float-vector 14.9 55.0 44.4)))
         (instance face :init :vertices (list (float-vector -34.9 55.0 44.4) (float-vector -34.8999 55.0 15.6) (float-vector 14.9 55.0 15.6) (float-vector 14.9 55.0 44.4)))
         (instance face :init :vertices (list (float-vector -34.8999 55.0 15.6) (float-vector -34.8999 114.0 15.6) (float-vector 14.9001 114.0 15.6) (float-vector 14.9 55.0 15.6)))
         (instance face :init :vertices (list (float-vector 14.9001 114.0 15.6) (float-vector 14.9001 114.0 44.4) (float-vector 14.9 55.0 44.4) (float-vector 14.9 55.0 15.6))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 14.9001 106.7 41.6047) (float-vector 14.9001 111.605 36.7) (float-vector 14.9001 113.4 30.0) (float-vector 14.9001 111.605 23.3) (float-vector 14.9001 106.7 18.3953) (float-vector 14.9001 100.0 16.6) (float-vector 14.9001 93.3 18.3953) (float-vector 14.9 88.3952 23.3) (float-vector 14.9 86.6 30.0) (float-vector 14.9 88.3952 36.7) (float-vector 14.9 93.3 41.6047) (float-vector 14.9 100.0 43.4)))
))
         (instance face :init :vertices (list (float-vector -34.8999 114.0 15.6) (float-vector -34.8999 114.0 44.4) (float-vector 14.9001 114.0 44.4) (float-vector 14.9001 114.0 15.6)))
         (instance face :init :vertices (list (float-vector -34.8999 114.0 44.4) (float-vector -34.8999 114.0 15.6) (float-vector -34.8999 55.0 15.6) (float-vector -34.9 55.0 44.4))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -34.8999 111.605 36.7) (float-vector -34.8999 106.7 41.6047) (float-vector -34.8999 100.0 43.4) (float-vector -34.8999 93.3 41.6047) (float-vector -34.8999 88.3953 36.7) (float-vector -34.8999 86.6 30.0) (float-vector -34.8999 88.3953 23.3) (float-vector -34.8999 93.3 18.3952) (float-vector -34.8999 100.0 16.6) (float-vector -34.8999 106.7 18.3952) (float-vector -34.8999 111.605 23.3) (float-vector -34.8999 113.4 30.0)))
))
         (instance face :init :vertices (list (float-vector 16.9 100.0 43.4) (float-vector 14.9 100.0 43.4) (float-vector 14.9 93.3 41.6047) (float-vector 16.9 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector -34.8999 100.0 43.4) (float-vector -36.8999 100.0 43.4) (float-vector -36.8999 93.3 41.6047) (float-vector -34.8999 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector 14.9 88.3952 36.7) (float-vector 16.9 88.3952 36.7) (float-vector 16.9 93.3 41.6047) (float-vector 14.9 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector -36.8999 93.3 41.6047) (float-vector -36.8999 88.3953 36.7) (float-vector -34.8999 88.3953 36.7) (float-vector -34.8999 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector 14.9 86.6 30.0) (float-vector 16.9 86.6 30.0) (float-vector 16.9 88.3952 36.7) (float-vector 14.9 88.3952 36.7)))
         (instance face :init :vertices (list (float-vector -36.8999 88.3953 36.7) (float-vector -36.8999 86.6 30.0) (float-vector -34.8999 86.6 30.0) (float-vector -34.8999 88.3953 36.7)))
         (instance face :init :vertices (list (float-vector 14.9 88.3952 23.3) (float-vector 16.9 88.3952 23.3) (float-vector 16.9 86.6 30.0) (float-vector 14.9 86.6 30.0)))
         (instance face :init :vertices (list (float-vector -36.8999 86.6 30.0) (float-vector -36.8999 88.3953 23.3) (float-vector -34.8999 88.3953 23.3) (float-vector -34.8999 86.6 30.0)))
         (instance face :init :vertices (list (float-vector 14.9001 93.3 18.3953) (float-vector 16.9001 93.3 18.3953) (float-vector 16.9 88.3952 23.3) (float-vector 14.9 88.3952 23.3)))
         (instance face :init :vertices (list (float-vector -36.8999 88.3953 23.3) (float-vector -36.8999 93.3 18.3952) (float-vector -34.8999 93.3 18.3952) (float-vector -34.8999 88.3953 23.3)))
         (instance face :init :vertices (list (float-vector 14.9001 100.0 16.6) (float-vector 16.9001 100.0 16.6) (float-vector 16.9001 93.3 18.3953) (float-vector 14.9001 93.3 18.3953)))
         (instance face :init :vertices (list (float-vector -36.8999 93.3 18.3952) (float-vector -36.8999 100.0 16.6) (float-vector -34.8999 100.0 16.6) (float-vector -34.8999 93.3 18.3952)))
         (instance face :init :vertices (list (float-vector 14.9001 106.7 18.3953) (float-vector 16.9001 106.7 18.3953) (float-vector 16.9001 100.0 16.6) (float-vector 14.9001 100.0 16.6)))
         (instance face :init :vertices (list (float-vector -36.8999 100.0 16.6) (float-vector -36.8999 106.7 18.3952) (float-vector -34.8999 106.7 18.3952) (float-vector -34.8999 100.0 16.6)))
         (instance face :init :vertices (list (float-vector 14.9001 111.605 23.3) (float-vector 16.9001 111.605 23.3) (float-vector 16.9001 106.7 18.3953) (float-vector 14.9001 106.7 18.3953)))
         (instance face :init :vertices (list (float-vector -36.8999 106.7 18.3952) (float-vector -36.8999 111.605 23.3) (float-vector -34.8999 111.605 23.3) (float-vector -34.8999 106.7 18.3952)))
         (instance face :init :vertices (list (float-vector 14.9001 113.4 30.0) (float-vector 16.9001 113.4 30.0) (float-vector 16.9001 111.605 23.3) (float-vector 14.9001 111.605 23.3)))
         (instance face :init :vertices (list (float-vector -36.8999 111.605 23.3) (float-vector -36.8999 113.4 30.0) (float-vector -34.8999 113.4 30.0) (float-vector -34.8999 111.605 23.3)))
         (instance face :init :vertices (list (float-vector 14.9001 111.605 36.7) (float-vector 16.9001 111.605 36.7) (float-vector 16.9001 113.4 30.0) (float-vector 14.9001 113.4 30.0)))
         (instance face :init :vertices (list (float-vector -36.8999 113.4 30.0) (float-vector -36.8999 111.605 36.7) (float-vector -34.8999 111.605 36.7) (float-vector -34.8999 113.4 30.0)))
         (instance face :init :vertices (list (float-vector 14.9001 106.7 41.6047) (float-vector 16.9001 106.7 41.6047) (float-vector 16.9001 111.605 36.7) (float-vector 14.9001 111.605 36.7)))
         (instance face :init :vertices (list (float-vector -36.8999 111.605 36.7) (float-vector -36.8999 106.7 41.6047) (float-vector -34.8999 106.7 41.6047) (float-vector -34.8999 111.605 36.7)))
         (instance face :init :vertices (list (float-vector 16.9001 106.7 41.6047) (float-vector 16.9 100.0 43.4) (float-vector 16.9 93.3 41.6047) (float-vector 16.9 88.3952 36.7) (float-vector 16.9 86.6 30.0) (float-vector 16.9 88.3952 23.3) (float-vector 16.9001 93.3 18.3953) (float-vector 16.9001 100.0 16.6) (float-vector 16.9001 106.7 18.3953) (float-vector 16.9001 111.605 23.3) (float-vector 16.9001 113.4 30.0) (float-vector 16.9001 111.605 36.7)))
         (instance face :init :vertices (list (float-vector 16.9 100.0 43.4) (float-vector 16.9001 106.7 41.6047) (float-vector 14.9001 106.7 41.6047) (float-vector 14.9 100.0 43.4)))
         (instance face :init :vertices (list (float-vector -36.8999 106.7 41.6047) (float-vector -36.8999 100.0 43.4) (float-vector -34.8999 100.0 43.4) (float-vector -34.8999 106.7 41.6047)))
         (instance face :init :vertices (list (float-vector -36.8999 100.0 43.4) (float-vector -36.8999 106.7 41.6047) (float-vector -36.8999 111.605 36.7) (float-vector -36.8999 113.4 30.0) (float-vector -36.8999 111.605 23.3) (float-vector -36.8999 106.7 18.3952) (float-vector -36.8999 100.0 16.6) (float-vector -36.8999 93.3 18.3952) (float-vector -36.8999 88.3953 23.3) (float-vector -36.8999 86.6 30.0) (float-vector -36.8999 88.3953 36.7) (float-vector -36.8999 93.3 41.6047)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lbleg-crotch :weight 120.301 :centroid (float-vector -8.89428 78.166 26.683) :inertia-tensor #2f((1.072085e+05 7189.05 3549.15) (7189.05 52421.2 -21567.3) (3549.15 -21567.3 1.033759e+05))))

     ;; definition of :lbleg-knee
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 -1.013279e-06 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 -1.847744e-06 32.5) (float-vector 15.0 -1.907349e-06 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 5.662441e-06 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 1.907349e-06 -32.5) (float-vector -15.0 1.966953e-06 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 -5.602837e-06 31.5) (float-vector -15.0 1.013279e-06 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 1.013279e-06 32.5) (float-vector -15.0 -5.602837e-06 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 1.966953e-06 -31.5) (float-vector -15.0 1.907349e-06 -32.5)))
         (instance face :init :vertices (list (float-vector -1.525879e-05 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -1.525879e-05 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector -1.525879e-05 -15.0 32.5) (float-vector -1.525879e-05 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 -1.847744e-06 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 1.013279e-06 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -1.525879e-05 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 1.907349e-06 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 -1.013279e-06 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 -1.907349e-06 31.5) (float-vector 15.0 -1.847744e-06 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 -1.013279e-06 -32.5) (float-vector 15.0 5.662441e-06 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 -1.907349e-06 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector -1.525879e-05 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 -5.602837e-06 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 1.966953e-06 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 5.662441e-06 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.3999 114.0 24.9) (float-vector -14.3999 114.0 -24.9) (float-vector -14.4 55.0 -24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 55.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector 14.4 55.0 24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 55.0 -24.9) (float-vector 14.4001 114.0 -24.9) (float-vector 14.4001 114.0 24.9) (float-vector 14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4001 114.0 24.9) (float-vector -14.3999 114.0 24.9) (float-vector -14.4 55.0 24.9) (float-vector 14.4 55.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -6.69994 111.605 24.9) (float-vector 7.629395e-05 113.4 24.9) (float-vector 6.70006 111.605 24.9) (float-vector 11.6048 106.7 24.9) (float-vector 13.4 100.0 24.9) (float-vector 11.6048 93.3 24.9) (float-vector 6.70004 88.3953 24.9) (float-vector 4.577637e-05 86.6 24.9) (float-vector -6.69997 88.3953 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -13.3999 100.0 24.9)))
))
         (instance face :init :vertices (list (float-vector 14.4001 114.0 -24.9) (float-vector -14.3999 114.0 -24.9) (float-vector -14.3999 114.0 24.9) (float-vector 14.4001 114.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.3999 114.0 -24.9) (float-vector 14.4001 114.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector -14.4 55.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -6.69994 111.605 -24.9) (float-vector -11.6047 106.7 -24.9) (float-vector -13.3999 100.0 -24.9) (float-vector -11.6047 93.3 -24.9) (float-vector -6.69997 88.3953 -24.9) (float-vector 4.577637e-05 86.6 -24.9) (float-vector 6.70004 88.3953 -24.9) (float-vector 11.6048 93.3 -24.9) (float-vector 13.4 100.0 -24.9) (float-vector 11.6048 106.7 -24.9) (float-vector 6.70006 111.605 -24.9) (float-vector 7.629395e-05 113.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 26.9) (float-vector -13.3999 100.0 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -11.6047 93.3 26.9)))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 -24.9) (float-vector -13.3999 100.0 -26.9) (float-vector -11.6047 93.3 -26.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector -6.69997 88.3953 24.9) (float-vector -6.69997 88.3953 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -11.6047 93.3 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 93.3 -26.9) (float-vector -6.69997 88.3953 -26.9) (float-vector -6.69997 88.3953 -24.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 4.577637e-05 86.6 24.9) (float-vector 4.577637e-05 86.6 26.9) (float-vector -6.69997 88.3953 26.9) (float-vector -6.69997 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector -6.69997 88.3953 -26.9) (float-vector 4.577637e-05 86.6 -26.9) (float-vector 4.577637e-05 86.6 -24.9) (float-vector -6.69997 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 6.70004 88.3953 24.9) (float-vector 6.70003 88.3952 26.9) (float-vector 4.577637e-05 86.6 26.9) (float-vector 4.577637e-05 86.6 24.9)))
         (instance face :init :vertices (list (float-vector 4.577637e-05 86.6 -26.9) (float-vector 6.70004 88.3953 -26.9) (float-vector 6.70004 88.3953 -24.9) (float-vector 4.577637e-05 86.6 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 93.3 24.9) (float-vector 11.6048 93.3 26.9) (float-vector 6.70003 88.3952 26.9) (float-vector 6.70004 88.3953 24.9)))
         (instance face :init :vertices (list (float-vector 6.70004 88.3953 -26.9) (float-vector 11.6048 93.3 -26.9) (float-vector 11.6048 93.3 -24.9) (float-vector 6.70004 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4 100.0 24.9) (float-vector 13.4 100.0 26.9) (float-vector 11.6048 93.3 26.9) (float-vector 11.6048 93.3 24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 93.3 -26.9) (float-vector 13.4 100.0 -26.9) (float-vector 13.4 100.0 -24.9) (float-vector 11.6048 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 106.7 24.9) (float-vector 11.6048 106.7 26.9) (float-vector 13.4 100.0 26.9) (float-vector 13.4 100.0 24.9)))
         (instance face :init :vertices (list (float-vector 13.4 100.0 -26.9) (float-vector 11.6048 106.7 -26.9) (float-vector 11.6048 106.7 -24.9) (float-vector 13.4 100.0 -24.9)))
         (instance face :init :vertices (list (float-vector 6.70006 111.605 24.9) (float-vector 6.70007 111.605 26.9) (float-vector 11.6048 106.7 26.9) (float-vector 11.6048 106.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 106.7 -26.9) (float-vector 6.70006 111.605 -26.9) (float-vector 6.70006 111.605 -24.9) (float-vector 11.6048 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector 7.629395e-05 113.4 24.9) (float-vector 7.629395e-05 113.4 26.9) (float-vector 6.70007 111.605 26.9) (float-vector 6.70006 111.605 24.9)))
         (instance face :init :vertices (list (float-vector 6.70006 111.605 -26.9) (float-vector 7.629395e-05 113.4 -26.9) (float-vector 7.629395e-05 113.4 -24.9) (float-vector 6.70006 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -6.69994 111.605 24.9) (float-vector -6.69994 111.605 26.9) (float-vector 7.629395e-05 113.4 26.9) (float-vector 7.629395e-05 113.4 24.9)))
         (instance face :init :vertices (list (float-vector 7.629395e-05 113.4 -26.9) (float-vector -6.69994 111.605 -26.9) (float-vector -6.69994 111.605 -24.9) (float-vector 7.629395e-05 113.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -11.6047 106.7 26.9) (float-vector -6.69994 111.605 26.9) (float-vector -6.69994 111.605 24.9)))
         (instance face :init :vertices (list (float-vector -6.69994 111.605 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -11.6047 106.7 -24.9) (float-vector -6.69994 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 26.9) (float-vector -13.3999 100.0 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -6.69997 88.3953 26.9) (float-vector 4.577637e-05 86.6 26.9) (float-vector 6.70003 88.3952 26.9) (float-vector 11.6048 93.3 26.9) (float-vector 13.4 100.0 26.9) (float-vector 11.6048 106.7 26.9) (float-vector 6.70007 111.605 26.9) (float-vector 7.629395e-05 113.4 26.9) (float-vector -6.69994 111.605 26.9)))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 26.9) (float-vector -11.6047 106.7 26.9) (float-vector -11.6047 106.7 24.9) (float-vector -13.3999 100.0 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 -26.9) (float-vector -13.3999 100.0 -26.9) (float-vector -13.3999 100.0 -24.9) (float-vector -11.6047 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -6.69994 111.605 -26.9) (float-vector 7.629395e-05 113.4 -26.9) (float-vector 6.70006 111.605 -26.9) (float-vector 11.6048 106.7 -26.9) (float-vector 13.4 100.0 -26.9) (float-vector 11.6048 93.3 -26.9) (float-vector 6.70004 88.3953 -26.9) (float-vector 4.577637e-05 86.6 -26.9) (float-vector -6.69997 88.3953 -26.9) (float-vector -11.6047 93.3 -26.9)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lbleg-knee :weight 120.301 :centroid (float-vector 9.918213e-05 78.1659 1.811981e-05) :inertia-tensor #2f((1.112788e+05 -0.054605 0.000439) (-0.054605 40590.6 0.00042) (0.000439 0.00042 87475.0))))

     ;; definition of :lbleg-ankle
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 69.0 31.5) (float-vector 15.0 69.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 70.0 -32.5) (float-vector -15.0 70.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 -7.629395e-06 -32.5) (float-vector -15.0 -7.629395e-06 -31.5) (float-vector -15.0 69.0 -31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 -7.629395e-06 -31.5) (float-vector -15.0 -7.629395e-06 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 -7.629395e-06 -32.5) (float-vector -15.0 70.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 69.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 -31.5) (float-vector 15.0 69.0 31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 69.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 69.0 -31.5) (float-vector -15.0 -7.629395e-06 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 69.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5001) (float-vector 35.0 136.0 -4.577637e-05) (float-vector 30.3109 136.0 17.4999) (float-vector 17.5 136.0 30.3108) (float-vector 3.051758e-05 136.0 35.0) (float-vector -17.5 136.0 30.3109) (float-vector -30.3109 136.0 17.5) (float-vector -35.0 136.0 -2.288818e-05) (float-vector -30.3109 136.0 -17.5) (float-vector -17.5 136.0 -30.3109) (float-vector -3.051758e-05 136.0 -35.0) (float-vector 17.5 136.0 -30.311)))
         (instance face :init :vertices (list (float-vector 35.0 140.0 -5.340576e-05) (float-vector 30.3109 140.0 -17.5001) (float-vector 17.5 140.0 -30.311) (float-vector -3.051758e-05 140.0 -35.0) (float-vector -17.5 140.0 -30.3109) (float-vector -30.3109 140.0 -17.5) (float-vector -35.0 140.0 -2.288818e-05) (float-vector -30.3109 140.0 17.5) (float-vector -17.5 140.0 30.3109) (float-vector 1.525879e-05 140.0 35.0) (float-vector 17.5 140.0 30.3108) (float-vector 30.3109 140.0 17.5)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5001) (float-vector 30.3109 140.0 -17.5001) (float-vector 35.0 140.0 -5.340576e-05) (float-vector 35.0 136.0 -4.577637e-05)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 -30.311) (float-vector 17.5 140.0 -30.311) (float-vector 30.3109 140.0 -17.5001) (float-vector 30.3109 136.0 -17.5001)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 136.0 -35.0) (float-vector -3.051758e-05 140.0 -35.0) (float-vector 17.5 140.0 -30.311) (float-vector 17.5 136.0 -30.311)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 -30.3109) (float-vector -17.5 140.0 -30.3109) (float-vector -3.051758e-05 140.0 -35.0) (float-vector -3.051758e-05 136.0 -35.0)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 -17.5) (float-vector -30.3109 140.0 -17.5) (float-vector -17.5 140.0 -30.3109) (float-vector -17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector -35.0 136.0 -2.288818e-05) (float-vector -35.0 140.0 -2.288818e-05) (float-vector -30.3109 140.0 -17.5) (float-vector -30.3109 136.0 -17.5)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 17.5) (float-vector -30.3109 140.0 17.5) (float-vector -35.0 140.0 -2.288818e-05) (float-vector -35.0 136.0 -2.288818e-05)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 30.3109) (float-vector -17.5 140.0 30.3109) (float-vector -30.3109 140.0 17.5) (float-vector -30.3109 136.0 17.5)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 136.0 35.0) (float-vector 1.525879e-05 140.0 35.0) (float-vector -17.5 140.0 30.3109) (float-vector -17.5 136.0 30.3109)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 30.3108) (float-vector 17.5 140.0 30.3108) (float-vector 1.525879e-05 140.0 35.0) (float-vector 3.051758e-05 136.0 35.0)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 17.4999) (float-vector 30.3109 140.0 17.5) (float-vector 17.5 140.0 30.3108) (float-vector 17.5 136.0 30.3108)))
         (instance face :init :vertices (list (float-vector 35.0 136.0 -4.577637e-05) (float-vector 35.0 140.0 -5.340576e-05) (float-vector 30.3109 140.0 17.5) (float-vector 30.3109 136.0 17.4999)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lbleg-ankle :weight 68.1613 :centroid (float-vector 4.196167e-05 112.105 -2.098083e-05) :inertia-tensor #2f((1.217541e+05 -0.051114 1.427649e-08) (-0.051114 16422.7 0.025931) (1.427649e-08 0.025931 1.080556e+05))))

     ;; definition of :lfleg-crotch
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 7.629395e-06 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 7.629395e-06 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 7.629395e-06 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 34.9001 114.0 44.4) (float-vector -14.8999 114.0 44.4) (float-vector -14.9 55.0 44.4) (float-vector 34.9 55.0 44.4)))
         (instance face :init :vertices (list (float-vector -14.9 55.0 44.4) (float-vector -14.9 55.0 15.6) (float-vector 34.9 55.0 15.6) (float-vector 34.9 55.0 44.4)))
         (instance face :init :vertices (list (float-vector -14.9 55.0 15.6) (float-vector -14.8999 114.0 15.6) (float-vector 34.9001 114.0 15.6) (float-vector 34.9 55.0 15.6)))
         (instance face :init :vertices (list (float-vector 34.9001 114.0 15.6) (float-vector 34.9001 114.0 44.4) (float-vector 34.9 55.0 44.4) (float-vector 34.9 55.0 15.6))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 34.9001 106.7 41.6048) (float-vector 34.9001 111.605 36.7) (float-vector 34.9001 113.4 30.0) (float-vector 34.9001 111.605 23.3) (float-vector 34.9001 106.7 18.3953) (float-vector 34.9001 100.0 16.6) (float-vector 34.9001 93.3 18.3953) (float-vector 34.9 88.3952 23.3) (float-vector 34.9 86.6 30.0) (float-vector 34.9 88.3952 36.7) (float-vector 34.9 93.3 41.6048) (float-vector 34.9 100.0 43.4)))
))
         (instance face :init :vertices (list (float-vector -14.8999 114.0 15.6) (float-vector -14.8999 114.0 44.4) (float-vector 34.9001 114.0 44.4) (float-vector 34.9001 114.0 15.6)))
         (instance face :init :vertices (list (float-vector -14.8999 114.0 44.4) (float-vector -14.8999 114.0 15.6) (float-vector -14.9 55.0 15.6) (float-vector -14.9 55.0 44.4))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -14.8999 111.605 36.7) (float-vector -14.8999 106.7 41.6047) (float-vector -14.8999 100.0 43.4) (float-vector -14.8999 93.3 41.6047) (float-vector -14.8999 88.3953 36.7) (float-vector -14.8999 86.6 30.0) (float-vector -14.8999 88.3953 23.3) (float-vector -14.8999 93.3 18.3953) (float-vector -14.8999 100.0 16.6) (float-vector -14.8999 106.7 18.3953) (float-vector -14.8999 111.605 23.3) (float-vector -14.8999 113.4 30.0)))
))
         (instance face :init :vertices (list (float-vector 36.9 100.0 43.4) (float-vector 34.9 100.0 43.4) (float-vector 34.9 93.3 41.6048) (float-vector 36.9 93.3 41.6048)))
         (instance face :init :vertices (list (float-vector -14.8999 100.0 43.4) (float-vector -16.8999 100.0 43.4) (float-vector -16.8999 93.3 41.6047) (float-vector -14.8999 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector 34.9 88.3952 36.7) (float-vector 36.9 88.3952 36.7) (float-vector 36.9 93.3 41.6048) (float-vector 34.9 93.3 41.6048)))
         (instance face :init :vertices (list (float-vector -16.8999 93.3 41.6047) (float-vector -16.8999 88.3953 36.7) (float-vector -14.8999 88.3953 36.7) (float-vector -14.8999 93.3 41.6047)))
         (instance face :init :vertices (list (float-vector 34.9 86.6 30.0) (float-vector 36.9 86.6 30.0) (float-vector 36.9 88.3952 36.7) (float-vector 34.9 88.3952 36.7)))
         (instance face :init :vertices (list (float-vector -16.8999 88.3953 36.7) (float-vector -16.8999 86.6 30.0) (float-vector -14.8999 86.6 30.0) (float-vector -14.8999 88.3953 36.7)))
         (instance face :init :vertices (list (float-vector 34.9 88.3952 23.3) (float-vector 36.9 88.3952 23.3) (float-vector 36.9 86.6 30.0) (float-vector 34.9 86.6 30.0)))
         (instance face :init :vertices (list (float-vector -16.8999 86.6 30.0) (float-vector -16.8999 88.3953 23.3) (float-vector -14.8999 88.3953 23.3) (float-vector -14.8999 86.6 30.0)))
         (instance face :init :vertices (list (float-vector 34.9001 93.3 18.3953) (float-vector 36.9001 93.3 18.3953) (float-vector 36.9 88.3952 23.3) (float-vector 34.9 88.3952 23.3)))
         (instance face :init :vertices (list (float-vector -16.8999 88.3953 23.3) (float-vector -16.8999 93.3 18.3953) (float-vector -14.8999 93.3 18.3953) (float-vector -14.8999 88.3953 23.3)))
         (instance face :init :vertices (list (float-vector 34.9001 100.0 16.6) (float-vector 36.9001 100.0 16.6) (float-vector 36.9001 93.3 18.3953) (float-vector 34.9001 93.3 18.3953)))
         (instance face :init :vertices (list (float-vector -16.8999 93.3 18.3953) (float-vector -16.8999 100.0 16.6) (float-vector -14.8999 100.0 16.6) (float-vector -14.8999 93.3 18.3953)))
         (instance face :init :vertices (list (float-vector 34.9001 106.7 18.3953) (float-vector 36.9001 106.7 18.3953) (float-vector 36.9001 100.0 16.6) (float-vector 34.9001 100.0 16.6)))
         (instance face :init :vertices (list (float-vector -16.8999 100.0 16.6) (float-vector -16.8999 106.7 18.3953) (float-vector -14.8999 106.7 18.3953) (float-vector -14.8999 100.0 16.6)))
         (instance face :init :vertices (list (float-vector 34.9001 111.605 23.3) (float-vector 36.9001 111.605 23.3) (float-vector 36.9001 106.7 18.3953) (float-vector 34.9001 106.7 18.3953)))
         (instance face :init :vertices (list (float-vector -16.8999 106.7 18.3953) (float-vector -16.8999 111.605 23.3) (float-vector -14.8999 111.605 23.3) (float-vector -14.8999 106.7 18.3953)))
         (instance face :init :vertices (list (float-vector 34.9001 113.4 30.0) (float-vector 36.9001 113.4 30.0) (float-vector 36.9001 111.605 23.3) (float-vector 34.9001 111.605 23.3)))
         (instance face :init :vertices (list (float-vector -16.8999 111.605 23.3) (float-vector -16.8999 113.4 30.0) (float-vector -14.8999 113.4 30.0) (float-vector -14.8999 111.605 23.3)))
         (instance face :init :vertices (list (float-vector 34.9001 111.605 36.7) (float-vector 36.9001 111.605 36.7) (float-vector 36.9001 113.4 30.0) (float-vector 34.9001 113.4 30.0)))
         (instance face :init :vertices (list (float-vector -16.8999 113.4 30.0) (float-vector -16.8999 111.605 36.7) (float-vector -14.8999 111.605 36.7) (float-vector -14.8999 113.4 30.0)))
         (instance face :init :vertices (list (float-vector 34.9001 106.7 41.6048) (float-vector 36.9001 106.7 41.6048) (float-vector 36.9001 111.605 36.7) (float-vector 34.9001 111.605 36.7)))
         (instance face :init :vertices (list (float-vector -16.8999 111.605 36.7) (float-vector -16.8999 106.7 41.6047) (float-vector -14.8999 106.7 41.6047) (float-vector -14.8999 111.605 36.7)))
         (instance face :init :vertices (list (float-vector 36.9001 106.7 41.6048) (float-vector 36.9 100.0 43.4) (float-vector 36.9 93.3 41.6048) (float-vector 36.9 88.3952 36.7) (float-vector 36.9 86.6 30.0) (float-vector 36.9 88.3952 23.3) (float-vector 36.9001 93.3 18.3953) (float-vector 36.9001 100.0 16.6) (float-vector 36.9001 106.7 18.3953) (float-vector 36.9001 111.605 23.3) (float-vector 36.9001 113.4 30.0) (float-vector 36.9001 111.605 36.7)))
         (instance face :init :vertices (list (float-vector 36.9 100.0 43.4) (float-vector 36.9001 106.7 41.6048) (float-vector 34.9001 106.7 41.6048) (float-vector 34.9 100.0 43.4)))
         (instance face :init :vertices (list (float-vector -16.8999 106.7 41.6047) (float-vector -16.8999 100.0 43.4) (float-vector -14.8999 100.0 43.4) (float-vector -14.8999 106.7 41.6047)))
         (instance face :init :vertices (list (float-vector -16.8999 100.0 43.4) (float-vector -16.8999 106.7 41.6047) (float-vector -16.8999 111.605 36.7) (float-vector -16.8999 113.4 30.0) (float-vector -16.8999 111.605 23.3) (float-vector -16.8999 106.7 18.3953) (float-vector -16.8999 100.0 16.6) (float-vector -16.8999 93.3 18.3953) (float-vector -16.8999 88.3953 23.3) (float-vector -16.8999 86.6 30.0) (float-vector -16.8999 88.3953 36.7) (float-vector -16.8999 93.3 41.6047)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lfleg-crotch :weight 120.301 :centroid (float-vector 8.89438 78.166 26.683) :inertia-tensor #2f((1.072085e+05 -7189.14 -3549.2) (-7189.14 52421.2 -21567.3) (-3549.2 -21567.3 1.033759e+05))))

     ;; definition of :lfleg-knee
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 -6.556511e-07 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 1.966953e-06 32.5) (float-vector 15.0 1.966953e-06 31.5) (float-vector 15.0 39.0 31.5) (float-vector 15.0 39.0 -31.5) (float-vector 15.0 -6.556511e-07 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -32.5) (float-vector -15.0 40.0 32.5) (float-vector 15.0 40.0 32.5) (float-vector 15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 -1.907349e-06 -32.5) (float-vector -15.0 -1.966953e-06 -31.5) (float-vector -15.0 39.0 -31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 7.152557e-07 31.5) (float-vector -15.0 6.556511e-07 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 40.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 6.556511e-07 32.5) (float-vector -15.0 7.152557e-07 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 -1.966953e-06 -31.5) (float-vector -15.0 -1.907349e-06 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 1.966953e-06 32.5) (float-vector 15.0 40.0 32.5) (float-vector -15.0 40.0 32.5) (float-vector -15.0 6.556511e-07 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 -1.907349e-06 -32.5) (float-vector -15.0 40.0 -32.5) (float-vector 15.0 40.0 -32.5) (float-vector 15.0 -6.556511e-07 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 1.966953e-06 31.5) (float-vector 15.0 1.966953e-06 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 -6.556511e-07 -32.5) (float-vector 15.0 -6.556511e-07 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 31.5) (float-vector 15.0 1.966953e-06 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 7.152557e-07 31.5) (float-vector -15.0 39.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 39.0 -31.5) (float-vector 15.0 39.0 31.5) (float-vector -15.0 39.0 31.5) (float-vector -15.0 39.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 39.0 -31.5) (float-vector -15.0 -1.966953e-06 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 -6.556511e-07 -31.5) (float-vector 15.0 39.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -14.3999 114.0 24.9) (float-vector -14.3999 114.0 -24.9) (float-vector -14.4 55.0 -24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.4 55.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector 14.4 55.0 24.9) (float-vector -14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4 55.0 -24.9) (float-vector 14.4001 114.0 -24.9) (float-vector 14.4001 114.0 24.9) (float-vector 14.4 55.0 24.9)))
         (instance face :init :vertices (list (float-vector 14.4001 114.0 24.9) (float-vector -14.3999 114.0 24.9) (float-vector -14.4 55.0 24.9) (float-vector 14.4 55.0 24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -6.69992 111.605 24.9) (float-vector 7.629395e-05 113.4 24.9) (float-vector 6.70006 111.605 24.9) (float-vector 11.6048 106.7 24.9) (float-vector 13.4001 100.0 24.9) (float-vector 11.6048 93.3 24.9) (float-vector 6.70004 88.3952 24.9) (float-vector 3.051758e-05 86.6 24.9) (float-vector -6.69997 88.3952 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -13.3999 100.0 24.9)))
))
         (instance face :init :vertices (list (float-vector 14.4001 114.0 -24.9) (float-vector -14.3999 114.0 -24.9) (float-vector -14.3999 114.0 24.9) (float-vector 14.4001 114.0 24.9)))
         (instance face :init :vertices (list (float-vector -14.3999 114.0 -24.9) (float-vector 14.4001 114.0 -24.9) (float-vector 14.4 55.0 -24.9) (float-vector -14.4 55.0 -24.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -6.69994 111.605 -24.9) (float-vector -11.6047 106.7 -24.9) (float-vector -13.3999 100.0 -24.9) (float-vector -11.6047 93.3 -24.9) (float-vector -6.69995 88.3953 -24.9) (float-vector 4.577637e-05 86.6 -24.9) (float-vector 6.70004 88.3952 -24.9) (float-vector 11.6048 93.3 -24.9) (float-vector 13.4001 100.0 -24.9) (float-vector 11.6048 106.7 -24.9) (float-vector 6.70007 111.605 -24.9) (float-vector 7.629395e-05 113.4 -24.9)))
))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 26.9) (float-vector -13.3999 100.0 24.9) (float-vector -11.6047 93.3 24.9) (float-vector -11.6047 93.3 26.9)))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 -24.9) (float-vector -13.3999 100.0 -26.9) (float-vector -11.6047 93.3 -26.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector -6.69997 88.3952 24.9) (float-vector -6.69997 88.3952 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -11.6047 93.3 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 93.3 -26.9) (float-vector -6.69995 88.3953 -26.9) (float-vector -6.69995 88.3953 -24.9) (float-vector -11.6047 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 86.6 24.9) (float-vector 3.051758e-05 86.6 26.9) (float-vector -6.69997 88.3952 26.9) (float-vector -6.69997 88.3952 24.9)))
         (instance face :init :vertices (list (float-vector -6.69995 88.3953 -26.9) (float-vector 4.577637e-05 86.6 -26.9) (float-vector 4.577637e-05 86.6 -24.9) (float-vector -6.69995 88.3953 -24.9)))
         (instance face :init :vertices (list (float-vector 6.70004 88.3952 24.9) (float-vector 6.70004 88.3952 26.9) (float-vector 3.051758e-05 86.6 26.9) (float-vector 3.051758e-05 86.6 24.9)))
         (instance face :init :vertices (list (float-vector 4.577637e-05 86.6 -26.9) (float-vector 6.70004 88.3952 -26.9) (float-vector 6.70004 88.3952 -24.9) (float-vector 4.577637e-05 86.6 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 93.3 24.9) (float-vector 11.6048 93.3 26.9) (float-vector 6.70004 88.3952 26.9) (float-vector 6.70004 88.3952 24.9)))
         (instance face :init :vertices (list (float-vector 6.70004 88.3952 -26.9) (float-vector 11.6048 93.3 -26.9) (float-vector 11.6048 93.3 -24.9) (float-vector 6.70004 88.3952 -24.9)))
         (instance face :init :vertices (list (float-vector 13.4001 100.0 24.9) (float-vector 13.4 100.0 26.9) (float-vector 11.6048 93.3 26.9) (float-vector 11.6048 93.3 24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 93.3 -26.9) (float-vector 13.4001 100.0 -26.9) (float-vector 13.4001 100.0 -24.9) (float-vector 11.6048 93.3 -24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 106.7 24.9) (float-vector 11.6048 106.7 26.9) (float-vector 13.4 100.0 26.9) (float-vector 13.4001 100.0 24.9)))
         (instance face :init :vertices (list (float-vector 13.4001 100.0 -26.9) (float-vector 11.6048 106.7 -26.9) (float-vector 11.6048 106.7 -24.9) (float-vector 13.4001 100.0 -24.9)))
         (instance face :init :vertices (list (float-vector 6.70006 111.605 24.9) (float-vector 6.70006 111.605 26.9) (float-vector 11.6048 106.7 26.9) (float-vector 11.6048 106.7 24.9)))
         (instance face :init :vertices (list (float-vector 11.6048 106.7 -26.9) (float-vector 6.70007 111.605 -26.9) (float-vector 6.70007 111.605 -24.9) (float-vector 11.6048 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector 7.629395e-05 113.4 24.9) (float-vector 6.103516e-05 113.4 26.9) (float-vector 6.70006 111.605 26.9) (float-vector 6.70006 111.605 24.9)))
         (instance face :init :vertices (list (float-vector 6.70007 111.605 -26.9) (float-vector 7.629395e-05 113.4 -26.9) (float-vector 7.629395e-05 113.4 -24.9) (float-vector 6.70007 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -6.69992 111.605 24.9) (float-vector -6.69992 111.605 26.9) (float-vector 6.103516e-05 113.4 26.9) (float-vector 7.629395e-05 113.4 24.9)))
         (instance face :init :vertices (list (float-vector 7.629395e-05 113.4 -26.9) (float-vector -6.69994 111.605 -26.9) (float-vector -6.69994 111.605 -24.9) (float-vector 7.629395e-05 113.4 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 24.9) (float-vector -11.6047 106.7 26.9) (float-vector -6.69992 111.605 26.9) (float-vector -6.69992 111.605 24.9)))
         (instance face :init :vertices (list (float-vector -6.69994 111.605 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -11.6047 106.7 -24.9) (float-vector -6.69994 111.605 -24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 26.9) (float-vector -13.3999 100.0 26.9) (float-vector -11.6047 93.3 26.9) (float-vector -6.69997 88.3952 26.9) (float-vector 3.051758e-05 86.6 26.9) (float-vector 6.70004 88.3952 26.9) (float-vector 11.6048 93.3 26.9) (float-vector 13.4 100.0 26.9) (float-vector 11.6048 106.7 26.9) (float-vector 6.70006 111.605 26.9) (float-vector 6.103516e-05 113.4 26.9) (float-vector -6.69992 111.605 26.9)))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 26.9) (float-vector -11.6047 106.7 26.9) (float-vector -11.6047 106.7 24.9) (float-vector -13.3999 100.0 24.9)))
         (instance face :init :vertices (list (float-vector -11.6047 106.7 -26.9) (float-vector -13.3999 100.0 -26.9) (float-vector -13.3999 100.0 -24.9) (float-vector -11.6047 106.7 -24.9)))
         (instance face :init :vertices (list (float-vector -13.3999 100.0 -26.9) (float-vector -11.6047 106.7 -26.9) (float-vector -6.69994 111.605 -26.9) (float-vector 7.629395e-05 113.4 -26.9) (float-vector 6.70007 111.605 -26.9) (float-vector 11.6048 106.7 -26.9) (float-vector 13.4001 100.0 -26.9) (float-vector 11.6048 93.3 -26.9) (float-vector 6.70004 88.3952 -26.9) (float-vector 4.577637e-05 86.6 -26.9) (float-vector -6.69995 88.3953 -26.9) (float-vector -11.6047 93.3 -26.9)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lfleg-knee :weight 120.301 :centroid (float-vector 7.629395e-05 78.1659 1.907349e-06) :inertia-tensor #2f((1.112788e+05 -0.05531 -2.100716e-10) (-0.05531 40590.6 -0.001371) (-2.100716e-10 -0.001371 87475.0))))

     ;; definition of :lfleg-ankle
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 -7.629395e-06 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 -7.629395e-06 32.5) (float-vector 15.0 -7.629395e-06 31.5) (float-vector 15.0 69.0 31.5) (float-vector 15.0 69.0 -31.5) (float-vector 15.0 -7.629395e-06 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 70.0 -32.5) (float-vector -15.0 70.0 32.5) (float-vector 15.0 70.0 32.5) (float-vector 15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 69.0 -31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 70.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 -7.629395e-06 32.5) (float-vector 15.0 70.0 32.5) (float-vector -15.0 70.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 70.0 -32.5) (float-vector 15.0 70.0 -32.5) (float-vector 15.0 -7.629395e-06 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 -7.629395e-06 31.5) (float-vector 15.0 -7.629395e-06 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 -7.629395e-06 -32.5) (float-vector 15.0 -7.629395e-06 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 31.5) (float-vector 15.0 -7.629395e-06 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 69.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 69.0 -31.5) (float-vector 15.0 69.0 31.5) (float-vector -15.0 69.0 31.5) (float-vector -15.0 69.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 69.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 -7.629395e-06 -31.5) (float-vector 15.0 69.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5001) (float-vector 35.0 136.0 -4.577637e-05) (float-vector 30.3109 136.0 17.5) (float-vector 17.5 136.0 30.3108) (float-vector 3.051758e-05 136.0 35.0) (float-vector -17.5 136.0 30.3109) (float-vector -30.3109 136.0 17.5) (float-vector -35.0 136.0 -2.288818e-05) (float-vector -30.3109 136.0 -17.5) (float-vector -17.5 136.0 -30.3109) (float-vector -1.525879e-05 136.0 -35.0) (float-vector 17.5 136.0 -30.311)))
         (instance face :init :vertices (list (float-vector 35.0 140.0 -4.577637e-05) (float-vector 30.3109 140.0 -17.5001) (float-vector 17.5 140.0 -30.311) (float-vector -3.051758e-05 140.0 -35.0) (float-vector -17.5 140.0 -30.3109) (float-vector -30.3109 140.0 -17.5) (float-vector -35.0 140.0 -2.288818e-05) (float-vector -30.3109 140.0 17.5) (float-vector -17.5 140.0 30.3109) (float-vector 1.525879e-05 140.0 35.0) (float-vector 17.5 140.0 30.3108) (float-vector 30.3109 140.0 17.5)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 -17.5001) (float-vector 30.3109 140.0 -17.5001) (float-vector 35.0 140.0 -4.577637e-05) (float-vector 35.0 136.0 -4.577637e-05)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 -30.311) (float-vector 17.5 140.0 -30.311) (float-vector 30.3109 140.0 -17.5001) (float-vector 30.3109 136.0 -17.5001)))
         (instance face :init :vertices (list (float-vector -1.525879e-05 136.0 -35.0) (float-vector -3.051758e-05 140.0 -35.0) (float-vector 17.5 140.0 -30.311) (float-vector 17.5 136.0 -30.311)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 -30.3109) (float-vector -17.5 140.0 -30.3109) (float-vector -3.051758e-05 140.0 -35.0) (float-vector -1.525879e-05 136.0 -35.0)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 -17.5) (float-vector -30.3109 140.0 -17.5) (float-vector -17.5 140.0 -30.3109) (float-vector -17.5 136.0 -30.3109)))
         (instance face :init :vertices (list (float-vector -35.0 136.0 -2.288818e-05) (float-vector -35.0 140.0 -2.288818e-05) (float-vector -30.3109 140.0 -17.5) (float-vector -30.3109 136.0 -17.5)))
         (instance face :init :vertices (list (float-vector -30.3109 136.0 17.5) (float-vector -30.3109 140.0 17.5) (float-vector -35.0 140.0 -2.288818e-05) (float-vector -35.0 136.0 -2.288818e-05)))
         (instance face :init :vertices (list (float-vector -17.5 136.0 30.3109) (float-vector -17.5 140.0 30.3109) (float-vector -30.3109 140.0 17.5) (float-vector -30.3109 136.0 17.5)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 136.0 35.0) (float-vector 1.525879e-05 140.0 35.0) (float-vector -17.5 140.0 30.3109) (float-vector -17.5 136.0 30.3109)))
         (instance face :init :vertices (list (float-vector 17.5 136.0 30.3108) (float-vector 17.5 140.0 30.3108) (float-vector 1.525879e-05 140.0 35.0) (float-vector 3.051758e-05 136.0 35.0)))
         (instance face :init :vertices (list (float-vector 30.3109 136.0 17.5) (float-vector 30.3109 140.0 17.5) (float-vector 17.5 140.0 30.3108) (float-vector 17.5 136.0 30.3108)))
         (instance face :init :vertices (list (float-vector 35.0 136.0 -4.577637e-05) (float-vector 35.0 140.0 -4.577637e-05) (float-vector 30.3109 140.0 17.5) (float-vector 30.3109 136.0 17.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lfleg-ankle :weight 68.1613 :centroid (float-vector 1.335144e-05 112.104 -4.768372e-06) :inertia-tensor #2f((1.217509e+05 -0.017315 1.387475e-09) (-0.017315 16422.7 0.007409) (1.387475e-09 0.007409 1.080524e+05))))

     ;; definition of :head-pan1
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 30.0 -32.5) (float-vector 15.0 30.0 32.5) (float-vector 15.0 0.0 32.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 29.0 31.5) (float-vector 15.0 29.0 -31.5) (float-vector 15.0 0.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 30.0 -32.5) (float-vector -15.0 30.0 32.5) (float-vector 15.0 30.0 32.5) (float-vector 15.0 30.0 -32.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -32.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 29.0 -31.5) (float-vector -15.0 29.0 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 30.0 32.5) (float-vector -15.0 30.0 -32.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 32.5) (float-vector -15.0 0.0 32.5) (float-vector -15.0 0.0 31.5) (float-vector -10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -32.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector -10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -32.5) (float-vector 0.0 -15.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector -10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 0.0 -15.0 31.5) (float-vector 10.6066 -10.6066 31.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 0.0 -15.0 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 32.5) (float-vector 15.0 30.0 32.5) (float-vector -15.0 30.0 32.5) (float-vector -15.0 0.0 32.5) (float-vector -10.6066 -10.6066 32.5) (float-vector 0.0 -15.0 32.5) (float-vector 10.6066 -10.6066 32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -32.5) (float-vector 0.0 -15.0 -32.5) (float-vector -10.6066 -10.6066 -32.5) (float-vector -15.0 0.0 -32.5) (float-vector -15.0 30.0 -32.5) (float-vector 15.0 30.0 -32.5) (float-vector 15.0 0.0 -32.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 32.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 15.0 0.0 31.5) (float-vector 15.0 0.0 32.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -32.5) (float-vector 15.0 0.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 10.6066 -10.6066 -32.5)))
         (instance face :init :vertices (list (float-vector 15.0 29.0 31.5) (float-vector 15.0 0.0 31.5) (float-vector 10.6066 -10.6066 31.5) (float-vector 0.0 -15.0 31.5) (float-vector -10.6066 -10.6066 31.5) (float-vector -15.0 0.0 31.5) (float-vector -15.0 29.0 31.5)))
         (instance face :init :vertices (list (float-vector 15.0 29.0 -31.5) (float-vector 15.0 29.0 31.5) (float-vector -15.0 29.0 31.5) (float-vector -15.0 29.0 -31.5)))
         (instance face :init :vertices (list (float-vector -15.0 29.0 -31.5) (float-vector -15.0 0.0 -31.5) (float-vector -10.6066 -10.6066 -31.5) (float-vector 0.0 -15.0 -31.5) (float-vector 10.6066 -10.6066 -31.5) (float-vector 15.0 0.0 -31.5) (float-vector 15.0 29.0 -31.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -9.89998 20.0 81.0) (float-vector -9.89998 20.0 45.0) (float-vector -9.90001 -20.0 45.0) (float-vector -9.90001 -20.0 81.0)))
         (instance face :init :vertices (list (float-vector -9.90001 -20.0 45.0) (float-vector 9.89998 -20.0 45.0) (float-vector 9.89998 -20.0 81.0) (float-vector -9.90001 -20.0 81.0)))
         (instance face :init :vertices (list (float-vector 9.89998 -20.0 45.0) (float-vector 9.90001 20.0 45.0) (float-vector 9.90001 20.0 81.0) (float-vector 9.89998 -20.0 81.0)))
         (instance face :init :vertices (list (float-vector 9.90001 20.0 81.0) (float-vector -9.89998 20.0 81.0) (float-vector -9.90001 -20.0 81.0) (float-vector 9.89998 -20.0 81.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -7.70761 14.45 81.0) (float-vector -4.44998 17.7076 81.0) (float-vector 2.029997e-05 18.9 81.0) (float-vector 4.45002 17.7076 81.0) (float-vector 7.70764 14.45 81.0) (float-vector 8.9 9.99999 81.0) (float-vector 7.70762 5.55 81.0) (float-vector 4.45 2.29237 81.0) (float-vector -2.183275e-06 1.1 81.0) (float-vector -4.45 2.29238 81.0) (float-vector -7.70762 5.55 81.0) (float-vector -8.89999 10.0 81.0)))
))
         (instance face :init :vertices (list (float-vector 9.90001 20.0 45.0) (float-vector -9.89998 20.0 45.0) (float-vector -9.89998 20.0 81.0) (float-vector 9.90001 20.0 81.0)))
         (instance face :init :vertices (list (float-vector -9.89998 20.0 45.0) (float-vector 9.90001 20.0 45.0) (float-vector 9.89998 -20.0 45.0) (float-vector -9.90001 -20.0 45.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -4.44998 17.7076 45.0) (float-vector -7.70761 14.45 45.0) (float-vector -8.89999 10.0 45.0) (float-vector -7.70762 5.55 45.0) (float-vector -4.45 2.29238 45.0) (float-vector -2.183275e-06 1.1 45.0) (float-vector 4.45 2.29237 45.0) (float-vector 7.70762 5.55 45.0) (float-vector 8.9 9.99999 45.0) (float-vector 7.70764 14.45 45.0) (float-vector 4.45002 17.7076 45.0) (float-vector 2.029997e-05 18.9 45.0)))
))
         (instance face :init :vertices (list (float-vector -8.89999 10.0 83.0) (float-vector -8.89999 10.0 81.0) (float-vector -7.70762 5.55 81.0) (float-vector -7.70762 5.55 83.0)))
         (instance face :init :vertices (list (float-vector -8.89999 10.0 45.0) (float-vector -8.89999 10.0 43.0) (float-vector -7.70762 5.55 43.0) (float-vector -7.70762 5.55 45.0)))
         (instance face :init :vertices (list (float-vector -4.45 2.29238 81.0) (float-vector -4.45 2.29238 83.0) (float-vector -7.70762 5.55 83.0) (float-vector -7.70762 5.55 81.0)))
         (instance face :init :vertices (list (float-vector -7.70762 5.55 43.0) (float-vector -4.45 2.29238 43.0) (float-vector -4.45 2.29238 45.0) (float-vector -7.70762 5.55 45.0)))
         (instance face :init :vertices (list (float-vector -2.183275e-06 1.1 81.0) (float-vector -2.183275e-06 1.1 83.0) (float-vector -4.45 2.29238 83.0) (float-vector -4.45 2.29238 81.0)))
         (instance face :init :vertices (list (float-vector -4.45 2.29238 43.0) (float-vector -2.183275e-06 1.1 43.0) (float-vector -2.183275e-06 1.1 45.0) (float-vector -4.45 2.29238 45.0)))
         (instance face :init :vertices (list (float-vector 4.45 2.29237 81.0) (float-vector 4.45 2.29237 83.0) (float-vector -2.183275e-06 1.1 83.0) (float-vector -2.183275e-06 1.1 81.0)))
         (instance face :init :vertices (list (float-vector -2.183275e-06 1.1 43.0) (float-vector 4.45 2.29237 43.0) (float-vector 4.45 2.29237 45.0) (float-vector -2.183275e-06 1.1 45.0)))
         (instance face :init :vertices (list (float-vector 7.70762 5.55 81.0) (float-vector 7.70762 5.55 83.0) (float-vector 4.45 2.29237 83.0) (float-vector 4.45 2.29237 81.0)))
         (instance face :init :vertices (list (float-vector 4.45 2.29237 43.0) (float-vector 7.70762 5.55 43.0) (float-vector 7.70762 5.55 45.0) (float-vector 4.45 2.29237 45.0)))
         (instance face :init :vertices (list (float-vector 8.9 9.99999 81.0) (float-vector 8.9 9.99999 83.0) (float-vector 7.70762 5.55 83.0) (float-vector 7.70762 5.55 81.0)))
         (instance face :init :vertices (list (float-vector 7.70762 5.55 43.0) (float-vector 8.9 9.99999 43.0) (float-vector 8.9 9.99999 45.0) (float-vector 7.70762 5.55 45.0)))
         (instance face :init :vertices (list (float-vector 7.70764 14.45 81.0) (float-vector 7.70764 14.45 83.0) (float-vector 8.9 9.99999 83.0) (float-vector 8.9 9.99999 81.0)))
         (instance face :init :vertices (list (float-vector 8.9 9.99999 43.0) (float-vector 7.70764 14.45 43.0) (float-vector 7.70764 14.45 45.0) (float-vector 8.9 9.99999 45.0)))
         (instance face :init :vertices (list (float-vector 4.45002 17.7076 81.0) (float-vector 4.45002 17.7076 83.0) (float-vector 7.70764 14.45 83.0) (float-vector 7.70764 14.45 81.0)))
         (instance face :init :vertices (list (float-vector 7.70764 14.45 43.0) (float-vector 4.45002 17.7076 43.0) (float-vector 4.45002 17.7076 45.0) (float-vector 7.70764 14.45 45.0)))
         (instance face :init :vertices (list (float-vector 2.029997e-05 18.9 81.0) (float-vector 2.029997e-05 18.9 83.0) (float-vector 4.45002 17.7076 83.0) (float-vector 4.45002 17.7076 81.0)))
         (instance face :init :vertices (list (float-vector 4.45002 17.7076 43.0) (float-vector 2.029997e-05 18.9 43.0) (float-vector 2.029997e-05 18.9 45.0) (float-vector 4.45002 17.7076 45.0)))
         (instance face :init :vertices (list (float-vector -4.44998 17.7076 81.0) (float-vector -4.44998 17.7076 83.0) (float-vector 2.029997e-05 18.9 83.0) (float-vector 2.029997e-05 18.9 81.0)))
         (instance face :init :vertices (list (float-vector 2.029997e-05 18.9 43.0) (float-vector -4.44998 17.7076 43.0) (float-vector -4.44998 17.7076 45.0) (float-vector 2.029997e-05 18.9 45.0)))
         (instance face :init :vertices (list (float-vector -7.70761 14.45 81.0) (float-vector -7.70761 14.45 83.0) (float-vector -4.44998 17.7076 83.0) (float-vector -4.44998 17.7076 81.0)))
         (instance face :init :vertices (list (float-vector -4.44998 17.7076 43.0) (float-vector -7.70761 14.45 43.0) (float-vector -7.70761 14.45 45.0) (float-vector -4.44998 17.7076 45.0)))
         (instance face :init :vertices (list (float-vector -7.70761 14.45 83.0) (float-vector -8.89999 10.0 83.0) (float-vector -7.70762 5.55 83.0) (float-vector -4.45 2.29238 83.0) (float-vector -2.183275e-06 1.1 83.0) (float-vector 4.45 2.29237 83.0) (float-vector 7.70762 5.55 83.0) (float-vector 8.9 9.99999 83.0) (float-vector 7.70764 14.45 83.0) (float-vector 4.45002 17.7076 83.0) (float-vector 2.029997e-05 18.9 83.0) (float-vector -4.44998 17.7076 83.0)))
         (instance face :init :vertices (list (float-vector -8.89999 10.0 83.0) (float-vector -7.70761 14.45 83.0) (float-vector -7.70761 14.45 81.0) (float-vector -8.89999 10.0 81.0)))
         (instance face :init :vertices (list (float-vector -7.70761 14.45 43.0) (float-vector -8.89999 10.0 43.0) (float-vector -8.89999 10.0 45.0) (float-vector -7.70761 14.45 45.0)))
         (instance face :init :vertices (list (float-vector -8.89999 10.0 43.0) (float-vector -7.70761 14.45 43.0) (float-vector -4.44998 17.7076 43.0) (float-vector 2.029997e-05 18.9 43.0) (float-vector 4.45002 17.7076 43.0) (float-vector 7.70764 14.45 43.0) (float-vector 8.9 9.99999 43.0) (float-vector 7.70762 5.55 43.0) (float-vector 4.45 2.29237 43.0) (float-vector -2.183275e-06 1.1 43.0) (float-vector -4.45 2.29238 43.0) (float-vector -7.70762 5.55 43.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink15 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-pan1 :weight 56.7812 :centroid (float-vector 5.838367e-07 4.00868 50.0394) :inertia-tensor #2f((61602.9 -0.003096 0.00081) (-0.003096 52469.7 10473.2) (0.00081 10473.2 13832.3))))

     ;; definition of :head-pan2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 0.0 -25.0) (float-vector 15.0 20.0 -25.0) (float-vector 15.0 20.0 25.0) (float-vector 15.0 0.0 25.0) (float-vector 15.0 0.0 24.0) (float-vector 15.0 19.0 24.0) (float-vector 15.0 19.0 -24.0) (float-vector 15.0 0.0 -24.0)))
         (instance face :init :vertices (list (float-vector -15.0 20.0 -25.0) (float-vector -15.0 20.0 25.0) (float-vector 15.0 20.0 25.0) (float-vector 15.0 20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -25.0) (float-vector -15.0 0.0 -24.0) (float-vector -15.0 19.0 -24.0) (float-vector -15.0 19.0 24.0) (float-vector -15.0 0.0 24.0) (float-vector -15.0 0.0 25.0) (float-vector -15.0 20.0 25.0) (float-vector -15.0 20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 25.0) (float-vector -15.0 0.0 25.0) (float-vector -15.0 0.0 24.0) (float-vector -10.6066 -10.6066 24.0)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -25.0) (float-vector -10.6066 -10.6066 -24.0) (float-vector -15.0 0.0 -24.0) (float-vector -15.0 0.0 -25.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 25.0) (float-vector -10.6066 -10.6066 25.0) (float-vector -10.6066 -10.6066 24.0) (float-vector 0.0 -15.0 24.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -25.0) (float-vector 0.0 -15.0 -24.0) (float-vector -10.6066 -10.6066 -24.0) (float-vector -10.6066 -10.6066 -25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 25.0) (float-vector 0.0 -15.0 25.0) (float-vector 0.0 -15.0 24.0) (float-vector 10.6066 -10.6066 24.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -25.0) (float-vector 10.6066 -10.6066 -24.0) (float-vector 0.0 -15.0 -24.0) (float-vector 0.0 -15.0 -25.0)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 25.0) (float-vector 15.0 20.0 25.0) (float-vector -15.0 20.0 25.0) (float-vector -15.0 0.0 25.0) (float-vector -10.6066 -10.6066 25.0) (float-vector 0.0 -15.0 25.0) (float-vector 10.6066 -10.6066 25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -25.0) (float-vector 0.0 -15.0 -25.0) (float-vector -10.6066 -10.6066 -25.0) (float-vector -15.0 0.0 -25.0) (float-vector -15.0 20.0 -25.0) (float-vector 15.0 20.0 -25.0) (float-vector 15.0 0.0 -25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 25.0) (float-vector 10.6066 -10.6066 24.0) (float-vector 15.0 0.0 24.0) (float-vector 15.0 0.0 25.0)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 -25.0) (float-vector 15.0 0.0 -24.0) (float-vector 10.6066 -10.6066 -24.0) (float-vector 10.6066 -10.6066 -25.0)))
         (instance face :init :vertices (list (float-vector 15.0 19.0 24.0) (float-vector 15.0 0.0 24.0) (float-vector 10.6066 -10.6066 24.0) (float-vector 0.0 -15.0 24.0) (float-vector -10.6066 -10.6066 24.0) (float-vector -15.0 0.0 24.0) (float-vector -15.0 19.0 24.0)))
         (instance face :init :vertices (list (float-vector 15.0 19.0 -24.0) (float-vector 15.0 19.0 24.0) (float-vector -15.0 19.0 24.0) (float-vector -15.0 19.0 -24.0)))
         (instance face :init :vertices (list (float-vector -15.0 19.0 -24.0) (float-vector -15.0 0.0 -24.0) (float-vector -10.6066 -10.6066 -24.0) (float-vector 0.0 -15.0 -24.0) (float-vector 10.6066 -10.6066 -24.0) (float-vector 15.0 0.0 -24.0) (float-vector 15.0 19.0 -24.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 18.0 9.99999 59.9) (float-vector -18.0 10.0 59.9) (float-vector -18.0 -30.0 59.9) (float-vector 18.0 -30.0 59.9)))
         (instance face :init :vertices (list (float-vector -18.0 -30.0 59.9) (float-vector -18.0 -30.0 40.1) (float-vector 18.0 -30.0 40.1) (float-vector 18.0 -30.0 59.9)))
         (instance face :init :vertices (list (float-vector -18.0 -30.0 40.1) (float-vector -18.0 10.0 40.1) (float-vector 18.0 9.99999 40.1) (float-vector 18.0 -30.0 40.1)))
         (instance face :init :vertices (list (float-vector 18.0 9.99999 40.1) (float-vector 18.0 9.99999 59.9) (float-vector 18.0 -30.0 59.9) (float-vector 18.0 -30.0 40.1))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 18.0 4.45 57.7076) (float-vector 18.0 7.70762 54.45) (float-vector 18.0 8.89999 50.0) (float-vector 18.0 7.70761 45.55) (float-vector 18.0 4.44998 42.2924) (float-vector 18.0 -1.525879e-05 41.1) (float-vector 18.0 -4.45001 42.2924) (float-vector 18.0 -7.70764 45.55) (float-vector 18.0 -8.90001 50.0) (float-vector 18.0 -7.70763 54.45) (float-vector 18.0 -4.45 57.7076) (float-vector 18.0 -7.629395e-06 58.9)))
))
         (instance face :init :vertices (list (float-vector -18.0 10.0 40.1) (float-vector -18.0 10.0 59.9) (float-vector 18.0 9.99999 59.9) (float-vector 18.0 9.99999 40.1)))
         (instance face :init :vertices (list (float-vector -18.0 10.0 59.9) (float-vector -18.0 10.0 40.1) (float-vector -18.0 -30.0 40.1) (float-vector -18.0 -30.0 59.9))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -18.0 7.70763 54.45) (float-vector -18.0 4.45001 57.7076) (float-vector -18.0 7.629395e-06 58.9) (float-vector -18.0 -4.44999 57.7076) (float-vector -18.0 -7.70761 54.45) (float-vector -18.0 -8.89999 50.0) (float-vector -18.0 -7.70761 45.55) (float-vector -18.0 -4.45 42.2924) (float-vector -18.0 0.0 41.1) (float-vector -18.0 4.45 42.2924) (float-vector -18.0 7.70763 45.55) (float-vector -18.0 8.9 50.0)))
))
         (instance face :init :vertices (list (float-vector 20.0 -1.525879e-05 58.9) (float-vector 18.0 -7.629395e-06 58.9) (float-vector 18.0 -4.45 57.7076) (float-vector 20.0 -4.45001 57.7076)))
         (instance face :init :vertices (list (float-vector -18.0 7.629395e-06 58.9) (float-vector -20.0 1.525879e-05 58.9) (float-vector -20.0 -4.44998 57.7076) (float-vector -18.0 -4.44999 57.7076)))
         (instance face :init :vertices (list (float-vector 18.0 -7.70763 54.45) (float-vector 20.0 -7.70763 54.45) (float-vector 20.0 -4.45001 57.7076) (float-vector 18.0 -4.45 57.7076)))
         (instance face :init :vertices (list (float-vector -20.0 -4.44998 57.7076) (float-vector -20.0 -7.70761 54.45) (float-vector -18.0 -7.70761 54.45) (float-vector -18.0 -4.44999 57.7076)))
         (instance face :init :vertices (list (float-vector 18.0 -8.90001 50.0) (float-vector 20.0 -8.90001 50.0) (float-vector 20.0 -7.70763 54.45) (float-vector 18.0 -7.70763 54.45)))
         (instance face :init :vertices (list (float-vector -20.0 -7.70761 54.45) (float-vector -20.0 -8.89999 50.0) (float-vector -18.0 -8.89999 50.0) (float-vector -18.0 -7.70761 54.45)))
         (instance face :init :vertices (list (float-vector 18.0 -7.70764 45.55) (float-vector 20.0 -7.70764 45.55) (float-vector 20.0 -8.90001 50.0) (float-vector 18.0 -8.90001 50.0)))
         (instance face :init :vertices (list (float-vector -20.0 -8.89999 50.0) (float-vector -20.0 -7.70761 45.55) (float-vector -18.0 -7.70761 45.55) (float-vector -18.0 -8.89999 50.0)))
         (instance face :init :vertices (list (float-vector 18.0 -4.45001 42.2924) (float-vector 20.0 -4.45001 42.2924) (float-vector 20.0 -7.70764 45.55) (float-vector 18.0 -7.70764 45.55)))
         (instance face :init :vertices (list (float-vector -20.0 -7.70761 45.55) (float-vector -20.0 -4.44999 42.2924) (float-vector -18.0 -4.45 42.2924) (float-vector -18.0 -7.70761 45.55)))
         (instance face :init :vertices (list (float-vector 18.0 -1.525879e-05 41.1) (float-vector 20.0 -1.525879e-05 41.1) (float-vector 20.0 -4.45001 42.2924) (float-vector 18.0 -4.45001 42.2924)))
         (instance face :init :vertices (list (float-vector -20.0 -4.44999 42.2924) (float-vector -20.0 7.629395e-06 41.1) (float-vector -18.0 0.0 41.1) (float-vector -18.0 -4.45 42.2924)))
         (instance face :init :vertices (list (float-vector 18.0 4.44998 42.2924) (float-vector 20.0 4.44998 42.2924) (float-vector 20.0 -1.525879e-05 41.1) (float-vector 18.0 -1.525879e-05 41.1)))
         (instance face :init :vertices (list (float-vector -20.0 7.629395e-06 41.1) (float-vector -20.0 4.45 42.2924) (float-vector -18.0 4.45 42.2924) (float-vector -18.0 0.0 41.1)))
         (instance face :init :vertices (list (float-vector 18.0 7.70761 45.55) (float-vector 20.0 7.7076 45.55) (float-vector 20.0 4.44998 42.2924) (float-vector 18.0 4.44998 42.2924)))
         (instance face :init :vertices (list (float-vector -20.0 4.45 42.2924) (float-vector -20.0 7.70763 45.55) (float-vector -18.0 7.70763 45.55) (float-vector -18.0 4.45 42.2924)))
         (instance face :init :vertices (list (float-vector 18.0 8.89999 50.0) (float-vector 20.0 8.89999 50.0) (float-vector 20.0 7.7076 45.55) (float-vector 18.0 7.70761 45.55)))
         (instance face :init :vertices (list (float-vector -20.0 7.70763 45.55) (float-vector -20.0 8.90001 50.0) (float-vector -18.0 8.9 50.0) (float-vector -18.0 7.70763 45.55)))
         (instance face :init :vertices (list (float-vector 18.0 7.70762 54.45) (float-vector 20.0 7.70762 54.45) (float-vector 20.0 8.89999 50.0) (float-vector 18.0 8.89999 50.0)))
         (instance face :init :vertices (list (float-vector -20.0 8.90001 50.0) (float-vector -20.0 7.70764 54.45) (float-vector -18.0 7.70763 54.45) (float-vector -18.0 8.9 50.0)))
         (instance face :init :vertices (list (float-vector 18.0 4.45 57.7076) (float-vector 20.0 4.45 57.7076) (float-vector 20.0 7.70762 54.45) (float-vector 18.0 7.70762 54.45)))
         (instance face :init :vertices (list (float-vector -20.0 7.70764 54.45) (float-vector -20.0 4.45002 57.7076) (float-vector -18.0 4.45001 57.7076) (float-vector -18.0 7.70763 54.45)))
         (instance face :init :vertices (list (float-vector 20.0 4.45 57.7076) (float-vector 20.0 -1.525879e-05 58.9) (float-vector 20.0 -4.45001 57.7076) (float-vector 20.0 -7.70763 54.45) (float-vector 20.0 -8.90001 50.0) (float-vector 20.0 -7.70764 45.55) (float-vector 20.0 -4.45001 42.2924) (float-vector 20.0 -1.525879e-05 41.1) (float-vector 20.0 4.44998 42.2924) (float-vector 20.0 7.7076 45.55) (float-vector 20.0 8.89999 50.0) (float-vector 20.0 7.70762 54.45)))
         (instance face :init :vertices (list (float-vector 20.0 -1.525879e-05 58.9) (float-vector 20.0 4.45 57.7076) (float-vector 18.0 4.45 57.7076) (float-vector 18.0 -7.629395e-06 58.9)))
         (instance face :init :vertices (list (float-vector -20.0 4.45002 57.7076) (float-vector -20.0 1.525879e-05 58.9) (float-vector -18.0 7.629395e-06 58.9) (float-vector -18.0 4.45001 57.7076)))
         (instance face :init :vertices (list (float-vector -20.0 1.525879e-05 58.9) (float-vector -20.0 4.45002 57.7076) (float-vector -20.0 7.70764 54.45) (float-vector -20.0 8.90001 50.0) (float-vector -20.0 7.70763 45.55) (float-vector -20.0 4.45 42.2924) (float-vector -20.0 7.629395e-06 41.1) (float-vector -20.0 -4.44999 42.2924) (float-vector -20.0 -7.70761 45.55) (float-vector -20.0 -8.89999 50.0) (float-vector -20.0 -7.70761 54.45) (float-vector -20.0 -4.44998 57.7076)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-pan2 :weight 53.9462 :centroid (float-vector 8.637460e-06 -6.27671 41.8008) :inertia-tensor #2f((34009.4 0.000796 -0.002214) (0.000796 29219.9 7668.52) (-0.002214 7668.52 15858.1))))

     ;; definition of :head-tilt
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 39.9999 -113.0 -25.0001) (float-vector 19.9999 -113.0 -25.0001) (float-vector 20.0001 -113.0 24.9999) (float-vector 40.0 -113.0 24.9999) (float-vector 40.0 -113.0 23.9999) (float-vector 21.0001 -113.0 23.9999) (float-vector 20.9999 -113.0 -24.0001) (float-vector 39.9999 -113.0 -24.0001)))
         (instance face :init :vertices (list (float-vector 19.9999 -143.0 -25.0) (float-vector 20.0 -143.0 25.0) (float-vector 20.0001 -113.0 24.9999) (float-vector 19.9999 -113.0 -25.0001)))
         (instance face :init :vertices (list (float-vector 39.9999 -143.0 -25.0001) (float-vector 39.9999 -143.0 -24.0001) (float-vector 20.9999 -143.0 -24.0) (float-vector 21.0 -143.0 23.9999) (float-vector 40.0 -143.0 23.9999) (float-vector 40.0 -143.0 24.9999) (float-vector 20.0 -143.0 25.0) (float-vector 19.9999 -143.0 -25.0)))
         (instance face :init :vertices (list (float-vector 50.6066 -138.607 24.9999) (float-vector 40.0 -143.0 24.9999) (float-vector 40.0 -143.0 23.9999) (float-vector 50.6066 -138.607 23.9999)))
         (instance face :init :vertices (list (float-vector 50.6065 -138.607 -25.0001) (float-vector 50.6065 -138.607 -24.0001) (float-vector 39.9999 -143.0 -24.0001) (float-vector 39.9999 -143.0 -25.0001)))
         (instance face :init :vertices (list (float-vector 55.0 -128.0 24.9998) (float-vector 50.6066 -138.607 24.9999) (float-vector 50.6066 -138.607 23.9999) (float-vector 55.0 -128.0 23.9998)))
         (instance face :init :vertices (list (float-vector 54.9999 -128.0 -25.0002) (float-vector 54.9999 -128.0 -24.0002) (float-vector 50.6065 -138.607 -24.0001) (float-vector 50.6065 -138.607 -25.0001)))
         (instance face :init :vertices (list (float-vector 50.6066 -117.393 24.9998) (float-vector 55.0 -128.0 24.9998) (float-vector 55.0 -128.0 23.9998) (float-vector 50.6066 -117.393 23.9998)))
         (instance face :init :vertices (list (float-vector 50.6065 -117.393 -25.0002) (float-vector 50.6065 -117.393 -24.0002) (float-vector 54.9999 -128.0 -24.0002) (float-vector 54.9999 -128.0 -25.0002)))
         (instance face :init :vertices (list (float-vector 40.0 -113.0 24.9999) (float-vector 20.0001 -113.0 24.9999) (float-vector 20.0 -143.0 25.0) (float-vector 40.0 -143.0 24.9999) (float-vector 50.6066 -138.607 24.9999) (float-vector 55.0 -128.0 24.9998) (float-vector 50.6066 -117.393 24.9998)))
         (instance face :init :vertices (list (float-vector 50.6065 -117.393 -25.0002) (float-vector 54.9999 -128.0 -25.0002) (float-vector 50.6065 -138.607 -25.0001) (float-vector 39.9999 -143.0 -25.0001) (float-vector 19.9999 -143.0 -25.0) (float-vector 19.9999 -113.0 -25.0001) (float-vector 39.9999 -113.0 -25.0001)))
         (instance face :init :vertices (list (float-vector 50.6066 -117.393 24.9998) (float-vector 50.6066 -117.393 23.9998) (float-vector 40.0 -113.0 23.9999) (float-vector 40.0 -113.0 24.9999)))
         (instance face :init :vertices (list (float-vector 39.9999 -113.0 -25.0001) (float-vector 39.9999 -113.0 -24.0001) (float-vector 50.6065 -117.393 -24.0002) (float-vector 50.6065 -117.393 -25.0002)))
         (instance face :init :vertices (list (float-vector 21.0001 -113.0 23.9999) (float-vector 40.0 -113.0 23.9999) (float-vector 50.6066 -117.393 23.9998) (float-vector 55.0 -128.0 23.9998) (float-vector 50.6066 -138.607 23.9999) (float-vector 40.0 -143.0 23.9999) (float-vector 21.0 -143.0 23.9999)))
         (instance face :init :vertices (list (float-vector 20.9999 -113.0 -24.0001) (float-vector 21.0001 -113.0 23.9999) (float-vector 21.0 -143.0 23.9999) (float-vector 20.9999 -143.0 -24.0)))
         (instance face :init :vertices (list (float-vector 20.9999 -143.0 -24.0) (float-vector 39.9999 -143.0 -24.0001) (float-vector 50.6065 -138.607 -24.0001) (float-vector 54.9999 -128.0 -24.0002) (float-vector 50.6065 -117.393 -24.0002) (float-vector 39.9999 -113.0 -24.0001) (float-vector 20.9999 -113.0 -24.0001)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 -3.051758e-05 -22.5) (float-vector 15.0 20.0 -22.5) (float-vector 15.0 20.0 22.5) (float-vector 15.0 0.0 22.5) (float-vector 15.0 0.0 21.5) (float-vector 15.0 19.0 21.5) (float-vector 15.0 19.0 -21.5) (float-vector 15.0 -3.051758e-05 -21.5)))
         (instance face :init :vertices (list (float-vector -15.0 20.0 -22.5) (float-vector -15.0 20.0 22.5) (float-vector 15.0 20.0 22.5) (float-vector 15.0 20.0 -22.5)))
         (instance face :init :vertices (list (float-vector -15.0 0.0 -22.5) (float-vector -15.0 0.0 -21.5) (float-vector -15.0 19.0 -21.5) (float-vector -15.0 19.0 21.5) (float-vector -15.0 0.0 21.5) (float-vector -15.0 0.0 22.5) (float-vector -15.0 20.0 22.5) (float-vector -15.0 20.0 -22.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 22.5) (float-vector -15.0 0.0 22.5) (float-vector -15.0 0.0 21.5) (float-vector -10.6066 -10.6066 21.5)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -22.5) (float-vector -10.6066 -10.6066 -21.5) (float-vector -15.0 0.0 -21.5) (float-vector -15.0 0.0 -22.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 22.5) (float-vector -10.6066 -10.6066 22.5) (float-vector -10.6066 -10.6066 21.5) (float-vector 0.0 -15.0 21.5)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -22.5) (float-vector 7.629395e-06 -15.0 -21.5) (float-vector -10.6066 -10.6066 -21.5) (float-vector -10.6066 -10.6066 -22.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 22.5) (float-vector 0.0 -15.0 22.5) (float-vector 0.0 -15.0 21.5) (float-vector 10.6066 -10.6066 21.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -22.5) (float-vector 10.6066 -10.6066 -21.5) (float-vector 7.629395e-06 -15.0 -21.5) (float-vector 0.0 -15.0 -22.5)))
         (instance face :init :vertices (list (float-vector 15.0 0.0 22.5) (float-vector 15.0 20.0 22.5) (float-vector -15.0 20.0 22.5) (float-vector -15.0 0.0 22.5) (float-vector -10.6066 -10.6066 22.5) (float-vector 0.0 -15.0 22.5) (float-vector 10.6066 -10.6066 22.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -22.5) (float-vector 0.0 -15.0 -22.5) (float-vector -10.6066 -10.6066 -22.5) (float-vector -15.0 0.0 -22.5) (float-vector -15.0 20.0 -22.5) (float-vector 15.0 20.0 -22.5) (float-vector 15.0 -3.051758e-05 -22.5)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 22.5) (float-vector 10.6066 -10.6066 21.5) (float-vector 15.0 0.0 21.5) (float-vector 15.0 0.0 22.5)))
         (instance face :init :vertices (list (float-vector 15.0 -3.051758e-05 -22.5) (float-vector 15.0 -3.051758e-05 -21.5) (float-vector 10.6066 -10.6066 -21.5) (float-vector 10.6066 -10.6066 -22.5)))
         (instance face :init :vertices (list (float-vector 15.0 19.0 21.5) (float-vector 15.0 0.0 21.5) (float-vector 10.6066 -10.6066 21.5) (float-vector 0.0 -15.0 21.5) (float-vector -10.6066 -10.6066 21.5) (float-vector -15.0 0.0 21.5) (float-vector -15.0 19.0 21.5)))
         (instance face :init :vertices (list (float-vector 15.0 19.0 -21.5) (float-vector 15.0 19.0 21.5) (float-vector -15.0 19.0 21.5) (float-vector -15.0 19.0 -21.5)))
         (instance face :init :vertices (list (float-vector -15.0 19.0 -21.5) (float-vector -15.0 0.0 -21.5) (float-vector -10.6066 -10.6066 -21.5) (float-vector 7.629395e-06 -15.0 -21.5) (float-vector 10.6066 -10.6066 -21.5) (float-vector 15.0 -3.051758e-05 -21.5) (float-vector 15.0 19.0 -21.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 35.0 54.5 22.0) (float-vector -35.0 54.5 22.0) (float-vector -35.0 25.5 22.0) (float-vector 35.0 25.5 22.0)))
         (instance face :init :vertices (list (float-vector -35.0 25.5 22.0) (float-vector -35.0 25.5 -22.0) (float-vector 35.0 25.5 -22.0) (float-vector 35.0 25.5 22.0)))
         (instance face :init :vertices (list (float-vector -35.0 25.5 -22.0) (float-vector -35.0 54.5 -22.0) (float-vector 35.0 54.5 -22.0) (float-vector 35.0 25.5 -22.0)))
         (instance face :init :vertices (list (float-vector 35.0 54.5 -22.0) (float-vector 35.0 54.5 22.0) (float-vector 35.0 25.5 22.0) (float-vector 35.0 25.5 -22.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 35.0 33.5 -11.2583) (float-vector 35.0 28.7416 -6.49997) (float-vector 35.0 27.0 2.874207e-05) (float-vector 35.0 28.7416 6.50002) (float-vector 35.0 33.5 11.2584) (float-vector 35.0 40.0 13.0) (float-vector 35.0 46.5 11.2583) (float-vector 35.0 51.2583 6.50001) (float-vector 35.0 53.0 1.489519e-05) (float-vector 35.0 51.2583 -6.49998) (float-vector 35.0 46.5 -11.2583) (float-vector 35.0 40.0 -13.0)))
))
         (instance face :init :vertices (list (float-vector -35.0 54.5 -22.0) (float-vector -35.0 54.5 22.0) (float-vector 35.0 54.5 22.0) (float-vector 35.0 54.5 -22.0)))
         (instance face :init :vertices (list (float-vector -35.0 54.5 22.0) (float-vector -35.0 54.5 -22.0) (float-vector -35.0 25.5 -22.0) (float-vector -35.0 25.5 22.0)))
         (instance face :init :vertices (list (float-vector 72.0 40.0 -13.0) (float-vector 35.0 40.0 -13.0) (float-vector 35.0 46.5 -11.2583) (float-vector 72.0 46.5 -11.2583)))
         (instance face :init :vertices (list (float-vector 35.0 51.2583 -6.49998) (float-vector 72.0 51.2583 -6.49997) (float-vector 72.0 46.5 -11.2583) (float-vector 35.0 46.5 -11.2583)))
         (instance face :init :vertices (list (float-vector 35.0 53.0 1.489519e-05) (float-vector 72.0 53.0 3.137617e-05) (float-vector 72.0 51.2583 -6.49997) (float-vector 35.0 51.2583 -6.49998)))
         (instance face :init :vertices (list (float-vector 35.0 51.2583 6.50001) (float-vector 72.0 51.2583 6.50003) (float-vector 72.0 53.0 3.137617e-05) (float-vector 35.0 53.0 1.489519e-05)))
         (instance face :init :vertices (list (float-vector 35.0 46.5 11.2583) (float-vector 72.0 46.5 11.2584) (float-vector 72.0 51.2583 6.50003) (float-vector 35.0 51.2583 6.50001)))
         (instance face :init :vertices (list (float-vector 35.0 40.0 13.0) (float-vector 72.0 40.0 13.0) (float-vector 72.0 46.5 11.2584) (float-vector 35.0 46.5 11.2583)))
         (instance face :init :vertices (list (float-vector 35.0 33.5 11.2584) (float-vector 72.0 33.5 11.2584) (float-vector 72.0 40.0 13.0) (float-vector 35.0 40.0 13.0)))
         (instance face :init :vertices (list (float-vector 35.0 28.7416 6.50002) (float-vector 72.0 28.7417 6.50004) (float-vector 72.0 33.5 11.2584) (float-vector 35.0 33.5 11.2584)))
         (instance face :init :vertices (list (float-vector 35.0 27.0 2.874207e-05) (float-vector 72.0 27.0 4.522293e-05) (float-vector 72.0 28.7417 6.50004) (float-vector 35.0 28.7416 6.50002)))
         (instance face :init :vertices (list (float-vector 35.0 28.7416 -6.49997) (float-vector 72.0 28.7417 -6.49995) (float-vector 72.0 27.0 4.522293e-05) (float-vector 35.0 27.0 2.874207e-05)))
         (instance face :init :vertices (list (float-vector 35.0 33.5 -11.2583) (float-vector 72.0 33.5 -11.2583) (float-vector 72.0 28.7417 -6.49995) (float-vector 35.0 28.7416 -6.49997)))
         (instance face :init :vertices (list (float-vector 72.0 33.5 -11.2583) (float-vector 72.0 40.0 -13.0) (float-vector 72.0 46.5 -11.2583) (float-vector 72.0 51.2583 -6.49997) (float-vector 72.0 53.0 3.137617e-05) (float-vector 72.0 51.2583 6.50003) (float-vector 72.0 46.5 11.2584) (float-vector 72.0 40.0 13.0) (float-vector 72.0 33.5 11.2584) (float-vector 72.0 28.7417 6.50004) (float-vector 72.0 27.0 4.522293e-05) (float-vector 72.0 28.7417 -6.49995)))
         (instance face :init :vertices (list (float-vector 72.0 40.0 -13.0) (float-vector 72.0 33.5 -11.2583) (float-vector 35.0 33.5 -11.2583) (float-vector 35.0 40.0 -13.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (send (elt bc 2) :set-color :gray40)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :head-tilt :weight 37.2875 :centroid (float-vector 11.8464 -6.50041 -2.060058e-05) :inertia-tensor #2f((1.414918e+05 20087.4 0.003537) (20087.4 12192.2 -0.082374) (0.003537 -0.082374 1.403641e+05))))

     ;; definition of :arm-shoulder2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -10.0 20.0) (float-vector 10.0 -10.0 -20.0) (float-vector 10.0 30.0 -20.0) (float-vector 10.0 30.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 30.0 -20.0) (float-vector -10.0 30.0 -20.0) (float-vector -10.0 30.0 20.0) (float-vector 10.0 30.0 20.0)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -20.0) (float-vector -10.0 -10.0 -20.0) (float-vector -10.0 -10.0 20.0) (float-vector -10.0 30.0 20.0)))
         (instance face :init :vertices (list (float-vector -10.0 -10.0 20.0) (float-vector 10.0 -10.0 20.0) (float-vector 10.0 30.0 20.0) (float-vector -10.0 30.0 20.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 7.79422 -4.50002 20.0) (float-vector 4.49999 -7.79424 20.0) (float-vector -7.629395e-06 -9.00002 20.0) (float-vector -4.50001 -7.79424 20.0) (float-vector -7.79424 -4.5 20.0) (float-vector -9.0 0.0 20.0) (float-vector -7.79423 4.5 20.0) (float-vector -4.49999 7.79422 20.0) (float-vector 0.0 8.99998 20.0) (float-vector 4.5 7.79424 20.0) (float-vector 7.79423 4.5 20.0) (float-vector 9.0 0.0 20.0)))
))
         (instance face :init :vertices (list (float-vector -10.0 -10.0 -20.0) (float-vector 10.0 -10.0 -20.0) (float-vector 10.0 -10.0 20.0) (float-vector -10.0 -10.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 -10.0 -20.0) (float-vector -10.0 -10.0 -20.0) (float-vector -10.0 30.0 -20.0) (float-vector 10.0 30.0 -20.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 4.49999 -7.79424 -20.0) (float-vector 7.79422 -4.50002 -20.0) (float-vector 9.0 0.0 -20.0) (float-vector 7.79423 4.5 -20.0) (float-vector 4.5 7.79424 -20.0) (float-vector 0.0 9.0 -20.0) (float-vector -4.5 7.79424 -20.0) (float-vector -7.79423 4.5 -20.0) (float-vector -9.0 1.525879e-05 -20.0) (float-vector -7.79424 -4.5 -20.0) (float-vector -4.50001 -7.79422 -20.0) (float-vector -7.629395e-06 -9.0 -20.0)))
))
         (instance face :init :vertices (list (float-vector 9.0 0.0 22.0) (float-vector 9.0 0.0 20.0) (float-vector 7.79423 4.5 20.0) (float-vector 7.79423 4.5 22.0)))
         (instance face :init :vertices (list (float-vector 9.0 0.0 -20.0) (float-vector 9.0 0.0 -22.0) (float-vector 7.79423 4.5 -22.0) (float-vector 7.79423 4.5 -20.0)))
         (instance face :init :vertices (list (float-vector 4.5 7.79424 20.0) (float-vector 4.5 7.79424 22.0) (float-vector 7.79423 4.5 22.0) (float-vector 7.79423 4.5 20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 4.5 -22.0) (float-vector 4.5 7.79424 -22.0) (float-vector 4.5 7.79424 -20.0) (float-vector 7.79423 4.5 -20.0)))
         (instance face :init :vertices (list (float-vector 0.0 8.99998 20.0) (float-vector 0.0 8.99998 22.0) (float-vector 4.5 7.79424 22.0) (float-vector 4.5 7.79424 20.0)))
         (instance face :init :vertices (list (float-vector 4.5 7.79424 -22.0) (float-vector 7.629395e-06 9.0 -22.0) (float-vector 0.0 9.0 -20.0) (float-vector 4.5 7.79424 -20.0)))
         (instance face :init :vertices (list (float-vector -4.49999 7.79422 20.0) (float-vector -4.5 7.79422 22.0) (float-vector 0.0 8.99998 22.0) (float-vector 0.0 8.99998 20.0)))
         (instance face :init :vertices (list (float-vector 7.629395e-06 9.0 -22.0) (float-vector -4.5 7.79424 -22.0) (float-vector -4.5 7.79424 -20.0) (float-vector 0.0 9.0 -20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 4.5 20.0) (float-vector -7.79423 4.5 22.0) (float-vector -4.5 7.79422 22.0) (float-vector -4.49999 7.79422 20.0)))
         (instance face :init :vertices (list (float-vector -4.5 7.79424 -22.0) (float-vector -7.79423 4.5 -22.0) (float-vector -7.79423 4.5 -20.0) (float-vector -4.5 7.79424 -20.0)))
         (instance face :init :vertices (list (float-vector -9.0 0.0 20.0) (float-vector -9.0 0.0 22.0) (float-vector -7.79423 4.5 22.0) (float-vector -7.79423 4.5 20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 4.5 -22.0) (float-vector -9.0 1.525879e-05 -22.0) (float-vector -9.0 1.525879e-05 -20.0) (float-vector -7.79423 4.5 -20.0)))
         (instance face :init :vertices (list (float-vector -7.79424 -4.5 20.0) (float-vector -7.79424 -4.5 22.0) (float-vector -9.0 0.0 22.0) (float-vector -9.0 0.0 20.0)))
         (instance face :init :vertices (list (float-vector -9.0 1.525879e-05 -22.0) (float-vector -7.79424 -4.49998 -22.0) (float-vector -7.79424 -4.5 -20.0) (float-vector -9.0 1.525879e-05 -20.0)))
         (instance face :init :vertices (list (float-vector -4.50001 -7.79424 20.0) (float-vector -4.50001 -7.79424 22.0) (float-vector -7.79424 -4.5 22.0) (float-vector -7.79424 -4.5 20.0)))
         (instance face :init :vertices (list (float-vector -7.79424 -4.49998 -22.0) (float-vector -4.50001 -7.79422 -22.0) (float-vector -4.50001 -7.79422 -20.0) (float-vector -7.79424 -4.5 -20.0)))
         (instance face :init :vertices (list (float-vector -7.629395e-06 -9.00002 20.0) (float-vector -7.629395e-06 -9.00002 22.0) (float-vector -4.50001 -7.79424 22.0) (float-vector -4.50001 -7.79424 20.0)))
         (instance face :init :vertices (list (float-vector -4.50001 -7.79422 -22.0) (float-vector -7.629395e-06 -9.0 -22.0) (float-vector -7.629395e-06 -9.0 -20.0) (float-vector -4.50001 -7.79422 -20.0)))
         (instance face :init :vertices (list (float-vector 4.49999 -7.79424 20.0) (float-vector 4.49999 -7.79424 22.0) (float-vector -7.629395e-06 -9.00002 22.0) (float-vector -7.629395e-06 -9.00002 20.0)))
         (instance face :init :vertices (list (float-vector -7.629395e-06 -9.0 -22.0) (float-vector 4.49999 -7.79424 -22.0) (float-vector 4.49999 -7.79424 -20.0) (float-vector -7.629395e-06 -9.0 -20.0)))
         (instance face :init :vertices (list (float-vector 7.79422 -4.50002 20.0) (float-vector 7.79422 -4.50002 22.0) (float-vector 4.49999 -7.79424 22.0) (float-vector 4.49999 -7.79424 20.0)))
         (instance face :init :vertices (list (float-vector 4.49999 -7.79424 -22.0) (float-vector 7.79422 -4.5 -22.0) (float-vector 7.79422 -4.50002 -20.0) (float-vector 4.49999 -7.79424 -20.0)))
         (instance face :init :vertices (list (float-vector 7.79422 -4.50002 22.0) (float-vector 9.0 0.0 22.0) (float-vector 7.79423 4.5 22.0) (float-vector 4.5 7.79424 22.0) (float-vector 0.0 8.99998 22.0) (float-vector -4.5 7.79422 22.0) (float-vector -7.79423 4.5 22.0) (float-vector -9.0 0.0 22.0) (float-vector -7.79424 -4.5 22.0) (float-vector -4.50001 -7.79424 22.0) (float-vector -7.629395e-06 -9.00002 22.0) (float-vector 4.49999 -7.79424 22.0)))
         (instance face :init :vertices (list (float-vector 9.0 0.0 22.0) (float-vector 7.79422 -4.50002 22.0) (float-vector 7.79422 -4.50002 20.0) (float-vector 9.0 0.0 20.0)))
         (instance face :init :vertices (list (float-vector 7.79422 -4.5 -22.0) (float-vector 9.0 0.0 -22.0) (float-vector 9.0 0.0 -20.0) (float-vector 7.79422 -4.50002 -20.0)))
         (instance face :init :vertices (list (float-vector 9.0 0.0 -22.0) (float-vector 7.79422 -4.5 -22.0) (float-vector 4.49999 -7.79424 -22.0) (float-vector -7.629395e-06 -9.0 -22.0) (float-vector -4.50001 -7.79422 -22.0) (float-vector -7.79424 -4.49998 -22.0) (float-vector -9.0 1.525879e-05 -22.0) (float-vector -7.79423 4.5 -22.0) (float-vector -4.5 7.79424 -22.0) (float-vector 7.629395e-06 9.0 -22.0) (float-vector 4.5 7.79424 -22.0) (float-vector 7.79423 4.5 -22.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -9.99995 80.0 20.0) (float-vector -9.99995 80.0 -20.0) (float-vector -9.99997 40.0 -20.0) (float-vector -9.99998 40.0 20.0)))
         (instance face :init :vertices (list (float-vector -9.99997 40.0 -20.0) (float-vector 10.0 40.0 -20.0) (float-vector 10.0 40.0 20.0) (float-vector -9.99998 40.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 40.0 -20.0) (float-vector 10.0001 80.0 -20.0) (float-vector 10.0 80.0 20.0) (float-vector 10.0 40.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 80.0 20.0) (float-vector -9.99995 80.0 20.0) (float-vector -9.99998 40.0 20.0) (float-vector 10.0 40.0 20.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -7.79417 74.5 20.0) (float-vector -4.49994 77.7942 20.0) (float-vector 5.340576e-05 79.0 20.0) (float-vector 4.50006 77.7942 20.0) (float-vector 7.79428 74.5 20.0) (float-vector 9.00005 70.0 20.0) (float-vector 7.79427 65.5 20.0) (float-vector 4.50004 62.2058 20.0) (float-vector 3.814697e-05 61.0 20.0) (float-vector -4.49996 62.2058 20.0) (float-vector -7.79419 65.5 20.0) (float-vector -8.99995 70.0 20.0)))
))
         (instance face :init :vertices (list (float-vector 10.0001 80.0 -20.0) (float-vector -9.99995 80.0 -20.0) (float-vector -9.99995 80.0 20.0) (float-vector 10.0 80.0 20.0)))
         (instance face :init :vertices (list (float-vector -9.99995 80.0 -20.0) (float-vector 10.0001 80.0 -20.0) (float-vector 10.0 40.0 -20.0) (float-vector -9.99997 40.0 -20.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -4.49994 77.7942 -20.0) (float-vector -7.79418 74.5 -20.0) (float-vector -8.99995 70.0 -20.0) (float-vector -7.79419 65.5 -20.0) (float-vector -4.49996 62.2058 -20.0) (float-vector 3.814697e-05 61.0 -20.0) (float-vector 4.50004 62.2058 -20.0) (float-vector 7.79427 65.5 -20.0) (float-vector 9.00005 70.0 -20.0) (float-vector 7.79427 74.5 -20.0) (float-vector 4.50005 77.7942 -20.0) (float-vector 6.103516e-05 79.0 -20.0)))
))
         (instance face :init :vertices (list (float-vector -8.99995 70.0 22.0) (float-vector -8.99995 70.0 20.0) (float-vector -7.79419 65.5 20.0) (float-vector -7.79419 65.5 22.0)))
         (instance face :init :vertices (list (float-vector -8.99995 70.0 -20.0) (float-vector -8.99995 70.0 -22.0) (float-vector -7.79419 65.5 -22.0) (float-vector -7.79419 65.5 -20.0)))
         (instance face :init :vertices (list (float-vector -4.49996 62.2058 20.0) (float-vector -4.49996 62.2058 22.0) (float-vector -7.79419 65.5 22.0) (float-vector -7.79419 65.5 20.0)))
         (instance face :init :vertices (list (float-vector -7.79419 65.5 -22.0) (float-vector -4.49996 62.2058 -22.0) (float-vector -4.49996 62.2058 -20.0) (float-vector -7.79419 65.5 -20.0)))
         (instance face :init :vertices (list (float-vector 3.814697e-05 61.0 20.0) (float-vector 3.814697e-05 61.0 22.0) (float-vector -4.49996 62.2058 22.0) (float-vector -4.49996 62.2058 20.0)))
         (instance face :init :vertices (list (float-vector -4.49996 62.2058 -22.0) (float-vector 3.814697e-05 61.0 -22.0) (float-vector 3.814697e-05 61.0 -20.0) (float-vector -4.49996 62.2058 -20.0)))
         (instance face :init :vertices (list (float-vector 4.50004 62.2058 20.0) (float-vector 4.50004 62.2058 22.0) (float-vector 3.814697e-05 61.0 22.0) (float-vector 3.814697e-05 61.0 20.0)))
         (instance face :init :vertices (list (float-vector 3.814697e-05 61.0 -22.0) (float-vector 4.50004 62.2058 -22.0) (float-vector 4.50004 62.2058 -20.0) (float-vector 3.814697e-05 61.0 -20.0)))
         (instance face :init :vertices (list (float-vector 7.79427 65.5 20.0) (float-vector 7.79427 65.5 22.0) (float-vector 4.50004 62.2058 22.0) (float-vector 4.50004 62.2058 20.0)))
         (instance face :init :vertices (list (float-vector 4.50004 62.2058 -22.0) (float-vector 7.79427 65.5 -22.0) (float-vector 7.79427 65.5 -20.0) (float-vector 4.50004 62.2058 -20.0)))
         (instance face :init :vertices (list (float-vector 9.00005 70.0 20.0) (float-vector 9.00005 70.0 22.0) (float-vector 7.79427 65.5 22.0) (float-vector 7.79427 65.5 20.0)))
         (instance face :init :vertices (list (float-vector 7.79427 65.5 -22.0) (float-vector 9.00005 70.0 -22.0) (float-vector 9.00005 70.0 -20.0) (float-vector 7.79427 65.5 -20.0)))
         (instance face :init :vertices (list (float-vector 7.79428 74.5 20.0) (float-vector 7.79427 74.5 22.0) (float-vector 9.00005 70.0 22.0) (float-vector 9.00005 70.0 20.0)))
         (instance face :init :vertices (list (float-vector 9.00005 70.0 -22.0) (float-vector 7.79428 74.5 -22.0) (float-vector 7.79427 74.5 -20.0) (float-vector 9.00005 70.0 -20.0)))
         (instance face :init :vertices (list (float-vector 4.50006 77.7942 20.0) (float-vector 4.50005 77.7942 22.0) (float-vector 7.79427 74.5 22.0) (float-vector 7.79428 74.5 20.0)))
         (instance face :init :vertices (list (float-vector 7.79428 74.5 -22.0) (float-vector 4.50006 77.7942 -22.0) (float-vector 4.50005 77.7942 -20.0) (float-vector 7.79427 74.5 -20.0)))
         (instance face :init :vertices (list (float-vector 5.340576e-05 79.0 20.0) (float-vector 6.103516e-05 79.0 22.0) (float-vector 4.50005 77.7942 22.0) (float-vector 4.50006 77.7942 20.0)))
         (instance face :init :vertices (list (float-vector 4.50006 77.7942 -22.0) (float-vector 5.340576e-05 79.0 -22.0) (float-vector 6.103516e-05 79.0 -20.0) (float-vector 4.50005 77.7942 -20.0)))
         (instance face :init :vertices (list (float-vector -4.49994 77.7942 20.0) (float-vector -4.49994 77.7942 22.0) (float-vector 6.103516e-05 79.0 22.0) (float-vector 5.340576e-05 79.0 20.0)))
         (instance face :init :vertices (list (float-vector 5.340576e-05 79.0 -22.0) (float-vector -4.49994 77.7942 -22.0) (float-vector -4.49994 77.7942 -20.0) (float-vector 6.103516e-05 79.0 -20.0)))
         (instance face :init :vertices (list (float-vector -7.79417 74.5 20.0) (float-vector -7.79418 74.5 22.0) (float-vector -4.49994 77.7942 22.0) (float-vector -4.49994 77.7942 20.0)))
         (instance face :init :vertices (list (float-vector -4.49994 77.7942 -22.0) (float-vector -7.79417 74.5 -22.0) (float-vector -7.79418 74.5 -20.0) (float-vector -4.49994 77.7942 -20.0)))
         (instance face :init :vertices (list (float-vector -7.79418 74.5 22.0) (float-vector -8.99995 70.0 22.0) (float-vector -7.79419 65.5 22.0) (float-vector -4.49996 62.2058 22.0) (float-vector 3.814697e-05 61.0 22.0) (float-vector 4.50004 62.2058 22.0) (float-vector 7.79427 65.5 22.0) (float-vector 9.00005 70.0 22.0) (float-vector 7.79427 74.5 22.0) (float-vector 4.50005 77.7942 22.0) (float-vector 6.103516e-05 79.0 22.0) (float-vector -4.49994 77.7942 22.0)))
         (instance face :init :vertices (list (float-vector -8.99995 70.0 22.0) (float-vector -7.79418 74.5 22.0) (float-vector -7.79417 74.5 20.0) (float-vector -8.99995 70.0 20.0)))
         (instance face :init :vertices (list (float-vector -7.79417 74.5 -22.0) (float-vector -8.99995 70.0 -22.0) (float-vector -8.99995 70.0 -20.0) (float-vector -7.79418 74.5 -20.0)))
         (instance face :init :vertices (list (float-vector -8.99995 70.0 -22.0) (float-vector -7.79417 74.5 -22.0) (float-vector -4.49994 77.7942 -22.0) (float-vector 5.340576e-05 79.0 -22.0) (float-vector 4.50006 77.7942 -22.0) (float-vector 7.79428 74.5 -22.0) (float-vector 9.00005 70.0 -22.0) (float-vector 7.79427 65.5 -22.0) (float-vector 4.50004 62.2058 -22.0) (float-vector 3.814697e-05 61.0 -22.0) (float-vector -4.49996 62.2058 -22.0) (float-vector -7.79419 65.5 -22.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink16 (instance bodyset-link :init (make-cascoords) :bodies bc :name :arm-shoulder2 :weight 129.0 :centroid (float-vector 1.914093e-05 35.0 1.066223e-06) :inertia-tensor #2f((1.169376e+05 -0.065752 -4.648263e-10) (-0.065752 21500.0 -5.384209e-09) (-4.648263e-10 -5.384209e-09 1.040376e+05))))

     ;; definition of :arm-shoulder1
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 15.0 -9.536743e-07 -25.0) (float-vector 15.0 20.0 -25.0) (float-vector 15.0 20.0 25.0) (float-vector 15.0 3.814697e-06 25.0) (float-vector 15.0 -1.430511e-06 24.0) (float-vector 15.0 19.0 24.0) (float-vector 15.0 19.0 -24.0) (float-vector 15.0 -9.536743e-07 -24.0)))
         (instance face :init :vertices (list (float-vector -15.0 20.0 -25.0) (float-vector -15.0 20.0 25.0) (float-vector 15.0 20.0 25.0) (float-vector 15.0 20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -15.0 -4.291534e-06 -25.0) (float-vector -15.0 9.536743e-07 -24.0) (float-vector -15.0 19.0 -24.0) (float-vector -15.0 19.0 24.0) (float-vector -15.0 9.536743e-07 24.0) (float-vector -15.0 4.768372e-07 25.0) (float-vector -15.0 20.0 25.0) (float-vector -15.0 20.0 -25.0)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 25.0) (float-vector -15.0 4.768372e-07 25.0) (float-vector -15.0 9.536743e-07 24.0) (float-vector -10.6066 -10.6066 24.0)))
         (instance face :init :vertices (list (float-vector -10.6066 -10.6066 -25.0) (float-vector -10.6066 -10.6066 -24.0) (float-vector -15.0 9.536743e-07 -24.0) (float-vector -15.0 -4.291534e-06 -25.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 25.0) (float-vector -10.6066 -10.6066 25.0) (float-vector -10.6066 -10.6066 24.0) (float-vector 0.0 -15.0 24.0)))
         (instance face :init :vertices (list (float-vector 0.0 -15.0 -25.0) (float-vector 0.0 -15.0 -24.0) (float-vector -10.6066 -10.6066 -24.0) (float-vector -10.6066 -10.6066 -25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 25.0) (float-vector 0.0 -15.0 25.0) (float-vector 0.0 -15.0 24.0) (float-vector 10.6066 -10.6066 24.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -25.0) (float-vector 10.6066 -10.6066 -24.0) (float-vector 0.0 -15.0 -24.0) (float-vector 0.0 -15.0 -25.0)))
         (instance face :init :vertices (list (float-vector 15.0 3.814697e-06 25.0) (float-vector 15.0 20.0 25.0) (float-vector -15.0 20.0 25.0) (float-vector -15.0 4.768372e-07 25.0) (float-vector -10.6066 -10.6066 25.0) (float-vector 0.0 -15.0 25.0) (float-vector 10.6066 -10.6066 25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 -25.0) (float-vector 0.0 -15.0 -25.0) (float-vector -10.6066 -10.6066 -25.0) (float-vector -15.0 -4.291534e-06 -25.0) (float-vector -15.0 20.0 -25.0) (float-vector 15.0 20.0 -25.0) (float-vector 15.0 -9.536743e-07 -25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 -10.6066 25.0) (float-vector 10.6066 -10.6066 24.0) (float-vector 15.0 -1.430511e-06 24.0) (float-vector 15.0 3.814697e-06 25.0)))
         (instance face :init :vertices (list (float-vector 15.0 -9.536743e-07 -25.0) (float-vector 15.0 -9.536743e-07 -24.0) (float-vector 10.6066 -10.6066 -24.0) (float-vector 10.6066 -10.6066 -25.0)))
         (instance face :init :vertices (list (float-vector 15.0 19.0 24.0) (float-vector 15.0 -1.430511e-06 24.0) (float-vector 10.6066 -10.6066 24.0) (float-vector 0.0 -15.0 24.0) (float-vector -10.6066 -10.6066 24.0) (float-vector -15.0 9.536743e-07 24.0) (float-vector -15.0 19.0 24.0)))
         (instance face :init :vertices (list (float-vector 15.0 19.0 -24.0) (float-vector 15.0 19.0 24.0) (float-vector -15.0 19.0 24.0) (float-vector -15.0 19.0 -24.0)))
         (instance face :init :vertices (list (float-vector -15.0 19.0 -24.0) (float-vector -15.0 9.536743e-07 -24.0) (float-vector -10.6066 -10.6066 -24.0) (float-vector 0.0 -15.0 -24.0) (float-vector 10.6066 -10.6066 -24.0) (float-vector 15.0 -9.536743e-07 -24.0) (float-vector 15.0 19.0 -24.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -15.0 40.0 -25.0) (float-vector -15.0 20.0 -25.0) (float-vector -15.0 20.0 25.0) (float-vector -15.0 40.0 25.0) (float-vector -15.0 40.0 24.0) (float-vector -15.0 21.0 24.0) (float-vector -15.0 21.0 -24.0) (float-vector -15.0 40.0 -24.0)))
         (instance face :init :vertices (list (float-vector 15.0 20.0 -25.0) (float-vector 15.0 20.0 25.0) (float-vector -15.0 20.0 25.0) (float-vector -15.0 20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 15.0 40.0 -25.0) (float-vector 15.0 40.0 -24.0) (float-vector 15.0 21.0 -24.0) (float-vector 15.0 21.0 24.0) (float-vector 15.0 40.0 24.0) (float-vector 15.0 40.0 25.0) (float-vector 15.0 20.0 25.0) (float-vector 15.0 20.0 -25.0)))
         (instance face :init :vertices (list (float-vector 10.6066 50.6066 25.0) (float-vector 15.0 40.0 25.0) (float-vector 15.0 40.0 24.0) (float-vector 10.6066 50.6066 24.0)))
         (instance face :init :vertices (list (float-vector 10.6066 50.6066 -25.0) (float-vector 10.6066 50.6066 -24.0) (float-vector 15.0 40.0 -24.0) (float-vector 15.0 40.0 -25.0)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 55.0 25.0) (float-vector 10.6066 50.6066 25.0) (float-vector 10.6066 50.6066 24.0) (float-vector 3.051758e-05 55.0 24.0)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 55.0 -25.0) (float-vector 3.051758e-05 55.0 -24.0) (float-vector 10.6066 50.6066 -24.0) (float-vector 10.6066 50.6066 -25.0)))
         (instance face :init :vertices (list (float-vector -10.6066 50.6066 25.0) (float-vector 3.051758e-05 55.0 25.0) (float-vector 3.051758e-05 55.0 24.0) (float-vector -10.6066 50.6066 24.0)))
         (instance face :init :vertices (list (float-vector -10.6066 50.6066 -25.0) (float-vector -10.6066 50.6066 -24.0) (float-vector 3.051758e-05 55.0 -24.0) (float-vector 3.051758e-05 55.0 -25.0)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 25.0) (float-vector -15.0 20.0 25.0) (float-vector 15.0 20.0 25.0) (float-vector 15.0 40.0 25.0) (float-vector 10.6066 50.6066 25.0) (float-vector 3.051758e-05 55.0 25.0) (float-vector -10.6066 50.6066 25.0)))
         (instance face :init :vertices (list (float-vector -10.6066 50.6066 -25.0) (float-vector 3.051758e-05 55.0 -25.0) (float-vector 10.6066 50.6066 -25.0) (float-vector 15.0 40.0 -25.0) (float-vector 15.0 20.0 -25.0) (float-vector -15.0 20.0 -25.0) (float-vector -15.0 40.0 -25.0)))
         (instance face :init :vertices (list (float-vector -10.6066 50.6066 25.0) (float-vector -10.6066 50.6066 24.0) (float-vector -15.0 40.0 24.0) (float-vector -15.0 40.0 25.0)))
         (instance face :init :vertices (list (float-vector -15.0 40.0 -25.0) (float-vector -15.0 40.0 -24.0) (float-vector -10.6066 50.6066 -24.0) (float-vector -10.6066 50.6066 -25.0)))
         (instance face :init :vertices (list (float-vector -15.0 21.0 24.0) (float-vector -15.0 40.0 24.0) (float-vector -10.6066 50.6066 24.0) (float-vector 3.051758e-05 55.0 24.0) (float-vector 10.6066 50.6066 24.0) (float-vector 15.0 40.0 24.0) (float-vector 15.0 21.0 24.0)))
         (instance face :init :vertices (list (float-vector -15.0 21.0 -24.0) (float-vector -15.0 21.0 24.0) (float-vector 15.0 21.0 24.0) (float-vector 15.0 21.0 -24.0)))
         (instance face :init :vertices (list (float-vector 15.0 21.0 -24.0) (float-vector 15.0 40.0 -24.0) (float-vector 10.6066 50.6066 -24.0) (float-vector 3.051758e-05 55.0 -24.0) (float-vector -10.6066 50.6066 -24.0) (float-vector -15.0 40.0 -24.0) (float-vector -15.0 21.0 -24.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray90)
     (setq blink17 (instance bodyset-link :init (make-cascoords) :bodies bc :name :arm-shoulder1 :weight 17.6925 :centroid (float-vector 5.993628e-06 20.0001 -2.265278e-05) :inertia-tensor #2f((11119.9 -0.001682 -6.442823e-10) (-0.001682 8773.15 1.309672e-08) (-6.442822e-10 1.309672e-08 5000.6))))

     ;; definition of :arm-elbow
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -10.0 20.0) (float-vector 10.0 -10.0 -20.0) (float-vector 10.0 30.0 -20.0) (float-vector 10.0 30.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 30.0 -20.0) (float-vector -10.0 30.0 -20.0) (float-vector -9.99999 30.0 20.0) (float-vector 10.0 30.0 20.0)))
         (instance face :init :vertices (list (float-vector -10.0 30.0 -20.0) (float-vector -10.0 -10.0 -20.0) (float-vector -10.0 -10.0 20.0) (float-vector -9.99999 30.0 20.0)))
         (instance face :init :vertices (list (float-vector -10.0 -10.0 20.0) (float-vector 10.0 -10.0 20.0) (float-vector 10.0 30.0 20.0) (float-vector -9.99999 30.0 20.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 7.79423 -4.5 20.0) (float-vector 4.49999 -7.79424 20.0) (float-vector -1.144409e-05 -9.0 20.0) (float-vector -4.50001 -7.79422 20.0) (float-vector -7.79423 -4.49998 20.0) (float-vector -9.0 0.0 20.0) (float-vector -7.79423 4.50002 20.0) (float-vector -4.5 7.79424 20.0) (float-vector 0.0 9.0 20.0) (float-vector 4.5 7.79424 20.0) (float-vector 7.79423 4.50002 20.0) (float-vector 9.0 0.0 20.0)))
))
         (instance face :init :vertices (list (float-vector -10.0 -10.0 -20.0) (float-vector 10.0 -10.0 -20.0) (float-vector 10.0 -10.0 20.0) (float-vector -10.0 -10.0 20.0)))
         (instance face :init :vertices (list (float-vector 10.0 -10.0 -20.0) (float-vector -10.0 -10.0 -20.0) (float-vector -10.0 30.0 -20.0) (float-vector 10.0 30.0 -20.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 4.49999 -7.79424 -20.0) (float-vector 7.79423 -4.5 -20.0) (float-vector 9.0 0.0 -20.0) (float-vector 7.79423 4.5 -20.0) (float-vector 4.5 7.79424 -20.0) (float-vector -3.814697e-06 9.0 -20.0) (float-vector -4.5 7.79424 -20.0) (float-vector -7.79423 4.5 -20.0) (float-vector -9.0 0.0 -20.0) (float-vector -7.79423 -4.49998 -20.0) (float-vector -4.50001 -7.79422 -20.0) (float-vector -1.144409e-05 -9.0 -20.0)))
))
         (instance face :init :vertices (list (float-vector 9.0 0.0 22.0) (float-vector 9.0 0.0 20.0) (float-vector 7.79423 4.50002 20.0) (float-vector 7.79423 4.5 22.0)))
         (instance face :init :vertices (list (float-vector 9.0 0.0 -20.0) (float-vector 9.0 0.0 -22.0) (float-vector 7.79422 4.5 -22.0) (float-vector 7.79423 4.5 -20.0)))
         (instance face :init :vertices (list (float-vector 4.5 7.79424 20.0) (float-vector 4.5 7.79424 22.0) (float-vector 7.79423 4.5 22.0) (float-vector 7.79423 4.50002 20.0)))
         (instance face :init :vertices (list (float-vector 7.79422 4.5 -22.0) (float-vector 4.5 7.79424 -22.0) (float-vector 4.5 7.79424 -20.0) (float-vector 7.79423 4.5 -20.0)))
         (instance face :init :vertices (list (float-vector 0.0 9.0 20.0) (float-vector 1.144409e-05 9.0 22.0) (float-vector 4.5 7.79424 22.0) (float-vector 4.5 7.79424 20.0)))
         (instance face :init :vertices (list (float-vector 4.5 7.79424 -22.0) (float-vector -3.814697e-06 9.0 -22.0) (float-vector -3.814697e-06 9.0 -20.0) (float-vector 4.5 7.79424 -20.0)))
         (instance face :init :vertices (list (float-vector -4.5 7.79424 20.0) (float-vector -4.5 7.79424 22.0) (float-vector 1.144409e-05 9.0 22.0) (float-vector 0.0 9.0 20.0)))
         (instance face :init :vertices (list (float-vector -3.814697e-06 9.0 -22.0) (float-vector -4.5 7.79424 -22.0) (float-vector -4.5 7.79424 -20.0) (float-vector -3.814697e-06 9.0 -20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 4.50002 20.0) (float-vector -7.79423 4.50002 22.0) (float-vector -4.5 7.79424 22.0) (float-vector -4.5 7.79424 20.0)))
         (instance face :init :vertices (list (float-vector -4.5 7.79424 -22.0) (float-vector -7.79423 4.50002 -22.0) (float-vector -7.79423 4.5 -20.0) (float-vector -4.5 7.79424 -20.0)))
         (instance face :init :vertices (list (float-vector -9.0 0.0 20.0) (float-vector -8.99999 1.525879e-05 22.0) (float-vector -7.79423 4.50002 22.0) (float-vector -7.79423 4.50002 20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 4.50002 -22.0) (float-vector -9.0 0.0 -22.0) (float-vector -9.0 0.0 -20.0) (float-vector -7.79423 4.5 -20.0)))
         (instance face :init :vertices (list (float-vector -7.79423 -4.49998 20.0) (float-vector -7.79423 -4.49998 22.0) (float-vector -8.99999 1.525879e-05 22.0) (float-vector -9.0 0.0 20.0)))
         (instance face :init :vertices (list (float-vector -9.0 0.0 -22.0) (float-vector -7.79424 -4.5 -22.0) (float-vector -7.79423 -4.49998 -20.0) (float-vector -9.0 0.0 -20.0)))
         (instance face :init :vertices (list (float-vector -4.50001 -7.79422 20.0) (float-vector -4.50001 -7.79422 22.0) (float-vector -7.79423 -4.49998 22.0) (float-vector -7.79423 -4.49998 20.0)))
         (instance face :init :vertices (list (float-vector -7.79424 -4.5 -22.0) (float-vector -4.50001 -7.79422 -22.0) (float-vector -4.50001 -7.79422 -20.0) (float-vector -7.79423 -4.49998 -20.0)))
         (instance face :init :vertices (list (float-vector -1.144409e-05 -9.0 20.0) (float-vector -1.144409e-05 -9.0 22.0) (float-vector -4.50001 -7.79422 22.0) (float-vector -4.50001 -7.79422 20.0)))
         (instance face :init :vertices (list (float-vector -4.50001 -7.79422 -22.0) (float-vector -1.144409e-05 -9.0 -22.0) (float-vector -1.144409e-05 -9.0 -20.0) (float-vector -4.50001 -7.79422 -20.0)))
         (instance face :init :vertices (list (float-vector 4.49999 -7.79424 20.0) (float-vector 4.49999 -7.79424 22.0) (float-vector -1.144409e-05 -9.0 22.0) (float-vector -1.144409e-05 -9.0 20.0)))
         (instance face :init :vertices (list (float-vector -1.144409e-05 -9.0 -22.0) (float-vector 4.49999 -7.79424 -22.0) (float-vector 4.49999 -7.79424 -20.0) (float-vector -1.144409e-05 -9.0 -20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -4.5 20.0) (float-vector 7.79422 -4.5 22.0) (float-vector 4.49999 -7.79424 22.0) (float-vector 4.49999 -7.79424 20.0)))
         (instance face :init :vertices (list (float-vector 4.49999 -7.79424 -22.0) (float-vector 7.79423 -4.5 -22.0) (float-vector 7.79423 -4.5 -20.0) (float-vector 4.49999 -7.79424 -20.0)))
         (instance face :init :vertices (list (float-vector 7.79422 -4.5 22.0) (float-vector 9.0 0.0 22.0) (float-vector 7.79423 4.5 22.0) (float-vector 4.5 7.79424 22.0) (float-vector 1.144409e-05 9.0 22.0) (float-vector -4.5 7.79424 22.0) (float-vector -7.79423 4.50002 22.0) (float-vector -8.99999 1.525879e-05 22.0) (float-vector -7.79423 -4.49998 22.0) (float-vector -4.50001 -7.79422 22.0) (float-vector -1.144409e-05 -9.0 22.0) (float-vector 4.49999 -7.79424 22.0)))
         (instance face :init :vertices (list (float-vector 9.0 0.0 22.0) (float-vector 7.79422 -4.5 22.0) (float-vector 7.79423 -4.5 20.0) (float-vector 9.0 0.0 20.0)))
         (instance face :init :vertices (list (float-vector 7.79423 -4.5 -22.0) (float-vector 9.0 0.0 -22.0) (float-vector 9.0 0.0 -20.0) (float-vector 7.79423 -4.5 -20.0)))
         (instance face :init :vertices (list (float-vector 9.0 0.0 -22.0) (float-vector 7.79423 -4.5 -22.0) (float-vector 4.49999 -7.79424 -22.0) (float-vector -1.144409e-05 -9.0 -22.0) (float-vector -4.50001 -7.79422 -22.0) (float-vector -7.79424 -4.5 -22.0) (float-vector -9.0 0.0 -22.0) (float-vector -7.79423 4.50002 -22.0) (float-vector -4.5 7.79424 -22.0) (float-vector -3.814697e-06 9.0 -22.0) (float-vector 4.5 7.79424 -22.0) (float-vector 7.79422 4.5 -22.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -6.49999 64.5 -6.99998) (float-vector -6.49999 35.5 -6.99999) (float-vector -6.50001 35.5 21.0) (float-vector -6.50001 64.5 21.0)))
         (instance face :init :vertices (list (float-vector -6.50001 35.5 21.0) (float-vector 6.49999 35.5 21.0) (float-vector 6.5 64.5 21.0) (float-vector -6.50001 64.5 21.0)))
         (instance face :init :vertices (list (float-vector 6.49999 35.5 21.0) (float-vector 6.5 35.5 -6.99998) (float-vector 6.5 64.5 -6.99998) (float-vector 6.5 64.5 21.0)))
         (instance face :init :vertices (list (float-vector 6.5 64.5 -6.99998) (float-vector -6.49999 64.5 -6.99998) (float-vector -6.50001 64.5 21.0) (float-vector 6.5 64.5 21.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -4.76313 64.5 -2.74999) (float-vector -2.74999 64.5 -4.76312) (float-vector 1.907349e-05 64.5 -5.49998) (float-vector 2.75002 64.5 -4.76311) (float-vector 4.76315 64.5 -2.74997) (float-vector 5.5 64.5 2.726800e-05) (float-vector 4.76313 64.5 2.75003) (float-vector 2.74999 64.5 4.76316) (float-vector -7.629395e-06 64.5 5.50002) (float-vector -2.75 64.5 4.76316) (float-vector -4.76314 64.5 2.75002) (float-vector -5.5 64.5 1.685446e-05)))
))
         (instance face :init :vertices (list (float-vector 6.5 35.5 -6.99998) (float-vector -6.49999 35.5 -6.99999) (float-vector -6.49999 64.5 -6.99998) (float-vector 6.5 64.5 -6.99998)))
         (instance face :init :vertices (list (float-vector -6.49999 35.5 -6.99999) (float-vector 6.5 35.5 -6.99998) (float-vector 6.49999 35.5 21.0) (float-vector -6.50001 35.5 21.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -2.74999 35.5 -4.76313) (float-vector -4.76314 35.5 -2.75) (float-vector -5.49999 35.5 7.454895e-06) (float-vector -4.76314 35.5 2.75001) (float-vector -2.75001 35.5 4.76315) (float-vector -1.144409e-05 35.5 5.50001) (float-vector 2.75 35.5 4.76315) (float-vector 4.76313 35.5 2.75002) (float-vector 5.5 35.5 1.786843e-05) (float-vector 4.76314 35.5 -2.74998) (float-vector 2.75001 35.5 -4.76312) (float-vector 1.144409e-05 35.5 -5.49999)))
))
         (instance face :init :vertices (list (float-vector -5.5 66.5 1.750272e-05) (float-vector -5.5 64.5 1.685446e-05) (float-vector -4.76314 64.5 2.75002) (float-vector -4.76315 66.5 2.75002)))
         (instance face :init :vertices (list (float-vector -5.49999 35.5 7.454895e-06) (float-vector -5.5 33.5 6.806637e-06) (float-vector -4.76314 33.5 2.75001) (float-vector -4.76314 35.5 2.75001)))
         (instance face :init :vertices (list (float-vector -2.75 64.5 4.76316) (float-vector -2.75 66.5 4.76316) (float-vector -4.76315 66.5 2.75002) (float-vector -4.76314 64.5 2.75002)))
         (instance face :init :vertices (list (float-vector -4.76314 33.5 2.75001) (float-vector -2.75001 33.5 4.76315) (float-vector -2.75001 35.5 4.76315) (float-vector -4.76314 35.5 2.75001)))
         (instance face :init :vertices (list (float-vector -7.629395e-06 64.5 5.50002) (float-vector -3.814697e-06 66.5 5.50002) (float-vector -2.75 66.5 4.76316) (float-vector -2.75 64.5 4.76316)))
         (instance face :init :vertices (list (float-vector -2.75001 33.5 4.76315) (float-vector -7.629395e-06 33.5 5.50001) (float-vector -1.144409e-05 35.5 5.50001) (float-vector -2.75001 35.5 4.76315)))
         (instance face :init :vertices (list (float-vector 2.74999 64.5 4.76316) (float-vector 2.74999 66.5 4.76316) (float-vector -3.814697e-06 66.5 5.50002) (float-vector -7.629395e-06 64.5 5.50002)))
         (instance face :init :vertices (list (float-vector -7.629395e-06 33.5 5.50001) (float-vector 2.74999 33.5 4.76315) (float-vector 2.75 35.5 4.76315) (float-vector -1.144409e-05 35.5 5.50001)))
         (instance face :init :vertices (list (float-vector 4.76313 64.5 2.75003) (float-vector 4.76314 66.5 2.75003) (float-vector 2.74999 66.5 4.76316) (float-vector 2.74999 64.5 4.76316)))
         (instance face :init :vertices (list (float-vector 2.74999 33.5 4.76315) (float-vector 4.76314 33.5 2.75002) (float-vector 4.76313 35.5 2.75002) (float-vector 2.75 35.5 4.76315)))
         (instance face :init :vertices (list (float-vector 5.5 64.5 2.726800e-05) (float-vector 5.5 66.5 2.791626e-05) (float-vector 4.76314 66.5 2.75003) (float-vector 4.76313 64.5 2.75003)))
         (instance face :init :vertices (list (float-vector 4.76314 33.5 2.75002) (float-vector 5.5 33.5 1.722017e-05) (float-vector 5.5 35.5 1.786843e-05) (float-vector 4.76313 35.5 2.75002)))
         (instance face :init :vertices (list (float-vector 4.76315 64.5 -2.74997) (float-vector 4.76314 66.5 -2.74997) (float-vector 5.5 66.5 2.791626e-05) (float-vector 5.5 64.5 2.726800e-05)))
         (instance face :init :vertices (list (float-vector 5.5 33.5 1.722017e-05) (float-vector 4.76315 33.5 -2.74998) (float-vector 4.76314 35.5 -2.74998) (float-vector 5.5 35.5 1.786843e-05)))
         (instance face :init :vertices (list (float-vector 2.75002 64.5 -4.76311) (float-vector 2.75001 66.5 -4.76311) (float-vector 4.76314 66.5 -2.74997) (float-vector 4.76315 64.5 -2.74997)))
         (instance face :init :vertices (list (float-vector 4.76315 33.5 -2.74998) (float-vector 2.75 33.5 -4.76312) (float-vector 2.75001 35.5 -4.76312) (float-vector 4.76314 35.5 -2.74998)))
         (instance face :init :vertices (list (float-vector 1.907349e-05 64.5 -5.49998) (float-vector 1.144409e-05 66.5 -5.49998) (float-vector 2.75001 66.5 -4.76311) (float-vector 2.75002 64.5 -4.76311)))
         (instance face :init :vertices (list (float-vector 2.75 33.5 -4.76312) (float-vector 3.814697e-06 33.5 -5.49999) (float-vector 1.144409e-05 35.5 -5.49999) (float-vector 2.75001 35.5 -4.76312)))
         (instance face :init :vertices (list (float-vector -2.74999 64.5 -4.76312) (float-vector -2.74999 66.5 -4.76312) (float-vector 1.144409e-05 66.5 -5.49998) (float-vector 1.907349e-05 64.5 -5.49998)))
         (instance face :init :vertices (list (float-vector 3.814697e-06 33.5 -5.49999) (float-vector -2.74999 33.5 -4.76313) (float-vector -2.74999 35.5 -4.76313) (float-vector 1.144409e-05 35.5 -5.49999)))
         (instance face :init :vertices (list (float-vector -4.76313 64.5 -2.74999) (float-vector -4.76314 66.5 -2.74999) (float-vector -2.74999 66.5 -4.76312) (float-vector -2.74999 64.5 -4.76312)))
         (instance face :init :vertices (list (float-vector -2.74999 33.5 -4.76313) (float-vector -4.76313 33.5 -2.75) (float-vector -4.76314 35.5 -2.75) (float-vector -2.74999 35.5 -4.76313)))
         (instance face :init :vertices (list (float-vector -4.76314 66.5 -2.74999) (float-vector -5.5 66.5 1.750272e-05) (float-vector -4.76315 66.5 2.75002) (float-vector -2.75 66.5 4.76316) (float-vector -3.814697e-06 66.5 5.50002) (float-vector 2.74999 66.5 4.76316) (float-vector 4.76314 66.5 2.75003) (float-vector 5.5 66.5 2.791626e-05) (float-vector 4.76314 66.5 -2.74997) (float-vector 2.75001 66.5 -4.76311) (float-vector 1.144409e-05 66.5 -5.49998) (float-vector -2.74999 66.5 -4.76312)))
         (instance face :init :vertices (list (float-vector -5.5 66.5 1.750272e-05) (float-vector -4.76314 66.5 -2.74999) (float-vector -4.76313 64.5 -2.74999) (float-vector -5.5 64.5 1.685446e-05)))
         (instance face :init :vertices (list (float-vector -4.76313 33.5 -2.75) (float-vector -5.5 33.5 6.806637e-06) (float-vector -5.49999 35.5 7.454895e-06) (float-vector -4.76314 35.5 -2.75)))
         (instance face :init :vertices (list (float-vector -5.5 33.5 6.806637e-06) (float-vector -4.76313 33.5 -2.75) (float-vector -2.74999 33.5 -4.76313) (float-vector 3.814697e-06 33.5 -5.49999) (float-vector 2.75 33.5 -4.76312) (float-vector 4.76315 33.5 -2.74998) (float-vector 5.5 33.5 1.722017e-05) (float-vector 4.76314 33.5 2.75002) (float-vector 2.74999 33.5 4.76315) (float-vector -7.629395e-06 33.5 5.50001) (float-vector -2.75001 33.5 4.76315) (float-vector -4.76314 33.5 2.75001)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray40)
     (send (elt bc 1) :set-color :gray40)
     (setq blink18 (instance bodyset-link :init (make-cascoords) :bodies bc :name :arm-elbow :weight 86.5 :centroid (float-vector -1.450302e-06 19.9536 1.72116) :inertia-tensor #2f((47566.1 0.002763 0.001169) (0.002763 13248.4 -4473.33) (0.001169 -4473.33 39237.4))))

     ;; definition of :arm-wrist
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 5.0 15.0 10.0) (float-vector -5.0 15.0 10.0) (float-vector -5.0 -15.0 10.0) (float-vector 5.0 -15.0 10.0)))
         (instance face :init :vertices (list (float-vector -5.0 15.0 -10.0) (float-vector 5.0 15.0 -9.99998) (float-vector 5.0 -15.0 -9.99998) (float-vector -5.0 -15.0 -10.0)))
         (instance face :init :vertices (list (float-vector 5.0 15.0 10.0) (float-vector 5.0 15.0 -9.99998) (float-vector -5.0 15.0 -10.0) (float-vector -5.0 15.0 10.0)))
         (instance face :init :vertices (list (float-vector 5.0 -15.0 10.0) (float-vector 5.0 -15.0 -9.99998) (float-vector 5.0 15.0 -9.99998) (float-vector 5.0 15.0 10.0)))
         (instance face :init :vertices (list (float-vector -5.0 -15.0 10.0) (float-vector -5.0 -15.0 -10.0) (float-vector 5.0 -15.0 -9.99998) (float-vector 5.0 -15.0 10.0)))
         (instance face :init :vertices (list (float-vector -5.0 15.0 10.0) (float-vector -5.0 15.0 -10.0) (float-vector -5.0 -15.0 -10.0) (float-vector -5.0 -15.0 10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -10.5 -14.0 -6.49998) (float-vector -39.5 -14.0 -6.5) (float-vector -39.5 14.0 -6.5) (float-vector -10.5 14.0 -6.49998)))
         (instance face :init :vertices (list (float-vector -39.5 14.0 -6.5) (float-vector -39.5 14.0 6.5) (float-vector -10.5 14.0 6.5) (float-vector -10.5 14.0 -6.49998)))
         (instance face :init :vertices (list (float-vector -39.5 14.0 6.5) (float-vector -39.5 -14.0 6.5) (float-vector -10.5 -14.0 6.50002) (float-vector -10.5 14.0 6.5)))
         (instance face :init :vertices (list (float-vector -10.5 -14.0 6.50002) (float-vector -10.5 -14.0 -6.49998) (float-vector -10.5 14.0 -6.49998) (float-vector -10.5 14.0 6.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -10.5 -9.75 -4.76314) (float-vector -10.5 -11.7631 -2.74997) (float-vector -10.5 -12.5 1.525879e-05) (float-vector -10.5 -11.7631 2.75002) (float-vector -10.5 -9.74999 4.76315) (float-vector -10.5 -6.99999 5.50002) (float-vector -10.5 -4.25 4.76315) (float-vector -10.5 -2.23686 2.75002) (float-vector -10.5 -1.5 0.0) (float-vector -10.5 -2.23686 -2.74998) (float-vector -10.5 -4.25 -4.76314) (float-vector -10.5 -7.0 -5.49998)))
))
         (instance face :init :vertices (list (float-vector -39.5 -14.0 6.5) (float-vector -39.5 -14.0 -6.5) (float-vector -10.5 -14.0 -6.49998) (float-vector -10.5 -14.0 6.50002)))
         (instance face :init :vertices (list (float-vector -39.5 -14.0 -6.5) (float-vector -39.5 -14.0 6.5) (float-vector -39.5 14.0 6.5) (float-vector -39.5 14.0 -6.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -39.5 -11.7631 -2.75) (float-vector -39.5 -9.75 -4.76314) (float-vector -39.5 -7.0 -5.5) (float-vector -39.5 -4.25 -4.76314) (float-vector -39.5 -2.23686 -2.75) (float-vector -39.5 -1.5 0.0) (float-vector -39.5 -2.23686 2.75) (float-vector -39.5 -4.25 4.76314) (float-vector -39.5 -6.99999 5.5) (float-vector -39.5 -9.74999 4.76314) (float-vector -39.5 -11.7631 2.75) (float-vector -39.5 -12.5 0.0)))
))
         (instance face :init :vertices (list (float-vector -8.5 -7.0 -5.5) (float-vector -10.5 -7.0 -5.49998) (float-vector -10.5 -4.25 -4.76314) (float-vector -8.5 -4.25 -4.76314)))
         (instance face :init :vertices (list (float-vector -39.5 -7.0 -5.5) (float-vector -41.5 -7.0 -5.5) (float-vector -41.5 -4.25 -4.76314) (float-vector -39.5 -4.25 -4.76314)))
         (instance face :init :vertices (list (float-vector -10.5 -2.23686 -2.74998) (float-vector -8.50001 -2.23686 -2.74998) (float-vector -8.5 -4.25 -4.76314) (float-vector -10.5 -4.25 -4.76314)))
         (instance face :init :vertices (list (float-vector -41.5 -4.25 -4.76314) (float-vector -41.5 -2.23686 -2.75) (float-vector -39.5 -2.23686 -2.75) (float-vector -39.5 -4.25 -4.76314)))
         (instance face :init :vertices (list (float-vector -10.5 -1.5 0.0) (float-vector -8.50001 -1.5 1.525879e-05) (float-vector -8.50001 -2.23686 -2.74998) (float-vector -10.5 -2.23686 -2.74998)))
         (instance face :init :vertices (list (float-vector -41.5 -2.23686 -2.75) (float-vector -41.5 -1.5 0.0) (float-vector -39.5 -1.5 0.0) (float-vector -39.5 -2.23686 -2.75)))
         (instance face :init :vertices (list (float-vector -10.5 -2.23686 2.75002) (float-vector -8.50001 -2.23686 2.75) (float-vector -8.50001 -1.5 1.525879e-05) (float-vector -10.5 -1.5 0.0)))
         (instance face :init :vertices (list (float-vector -41.5 -1.5 0.0) (float-vector -41.5 -2.23686 2.74998) (float-vector -39.5 -2.23686 2.75) (float-vector -39.5 -1.5 0.0)))
         (instance face :init :vertices (list (float-vector -10.5 -4.25 4.76315) (float-vector -8.5 -4.25 4.76315) (float-vector -8.50001 -2.23686 2.75) (float-vector -10.5 -2.23686 2.75002)))
         (instance face :init :vertices (list (float-vector -41.5 -2.23686 2.74998) (float-vector -41.5 -4.25 4.76314) (float-vector -39.5 -4.25 4.76314) (float-vector -39.5 -2.23686 2.75)))
         (instance face :init :vertices (list (float-vector -10.5 -6.99999 5.50002) (float-vector -8.5 -6.99999 5.5) (float-vector -8.5 -4.25 4.76315) (float-vector -10.5 -4.25 4.76315)))
         (instance face :init :vertices (list (float-vector -41.5 -4.25 4.76314) (float-vector -41.5 -6.99999 5.5) (float-vector -39.5 -6.99999 5.5) (float-vector -39.5 -4.25 4.76314)))
         (instance face :init :vertices (list (float-vector -10.5 -9.74999 4.76315) (float-vector -8.5 -9.74999 4.76315) (float-vector -8.5 -6.99999 5.5) (float-vector -10.5 -6.99999 5.50002)))
         (instance face :init :vertices (list (float-vector -41.5 -6.99999 5.5) (float-vector -41.5 -9.74999 4.76314) (float-vector -39.5 -9.74999 4.76314) (float-vector -39.5 -6.99999 5.5)))
         (instance face :init :vertices (list (float-vector -10.5 -11.7631 2.75002) (float-vector -8.5 -11.7631 2.75002) (float-vector -8.5 -9.74999 4.76315) (float-vector -10.5 -9.74999 4.76315)))
         (instance face :init :vertices (list (float-vector -41.5 -9.74999 4.76314) (float-vector -41.5 -11.7631 2.75) (float-vector -39.5 -11.7631 2.75) (float-vector -39.5 -9.74999 4.76314)))
         (instance face :init :vertices (list (float-vector -10.5 -12.5 1.525879e-05) (float-vector -8.5 -12.5 1.525879e-05) (float-vector -8.5 -11.7631 2.75002) (float-vector -10.5 -11.7631 2.75002)))
         (instance face :init :vertices (list (float-vector -41.5 -11.7631 2.75) (float-vector -41.5 -12.5 0.0) (float-vector -39.5 -12.5 0.0) (float-vector -39.5 -11.7631 2.75)))
         (instance face :init :vertices (list (float-vector -10.5 -11.7631 -2.74997) (float-vector -8.5 -11.7631 -2.74998) (float-vector -8.5 -12.5 1.525879e-05) (float-vector -10.5 -12.5 1.525879e-05)))
         (instance face :init :vertices (list (float-vector -41.5 -12.5 0.0) (float-vector -41.5 -11.7631 -2.75) (float-vector -39.5 -11.7631 -2.75) (float-vector -39.5 -12.5 0.0)))
         (instance face :init :vertices (list (float-vector -10.5 -9.75 -4.76314) (float-vector -8.5 -9.75 -4.76312) (float-vector -8.5 -11.7631 -2.74998) (float-vector -10.5 -11.7631 -2.74997)))
         (instance face :init :vertices (list (float-vector -41.5 -11.7631 -2.75) (float-vector -41.5 -9.75 -4.76314) (float-vector -39.5 -9.75 -4.76314) (float-vector -39.5 -11.7631 -2.75)))
         (instance face :init :vertices (list (float-vector -8.5 -9.75 -4.76312) (float-vector -8.5 -7.0 -5.5) (float-vector -8.5 -4.25 -4.76314) (float-vector -8.50001 -2.23686 -2.74998) (float-vector -8.50001 -1.5 1.525879e-05) (float-vector -8.50001 -2.23686 2.75) (float-vector -8.5 -4.25 4.76315) (float-vector -8.5 -6.99999 5.5) (float-vector -8.5 -9.74999 4.76315) (float-vector -8.5 -11.7631 2.75002) (float-vector -8.5 -12.5 1.525879e-05) (float-vector -8.5 -11.7631 -2.74998)))
         (instance face :init :vertices (list (float-vector -8.5 -7.0 -5.5) (float-vector -8.5 -9.75 -4.76312) (float-vector -10.5 -9.75 -4.76314) (float-vector -10.5 -7.0 -5.49998)))
         (instance face :init :vertices (list (float-vector -41.5 -9.75 -4.76314) (float-vector -41.5 -7.0 -5.5) (float-vector -39.5 -7.0 -5.5) (float-vector -39.5 -9.75 -4.76314)))
         (instance face :init :vertices (list (float-vector -41.5 -7.0 -5.5) (float-vector -41.5 -9.75 -4.76314) (float-vector -41.5 -11.7631 -2.75) (float-vector -41.5 -12.5 0.0) (float-vector -41.5 -11.7631 2.75) (float-vector -41.5 -9.74999 4.76314) (float-vector -41.5 -6.99999 5.5) (float-vector -41.5 -4.25 4.76314) (float-vector -41.5 -2.23686 2.74998) (float-vector -41.5 -1.5 0.0) (float-vector -41.5 -2.23686 -2.75) (float-vector -41.5 -4.25 -4.76314)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (setq blink19 (instance bodyset-link :init (make-cascoords) :bodies bc :name :arm-wrist :weight 27 :centroid (float-vector -20.3704 -0.189623 -3.051758e-05) :inertia-tensor #2f((1747.21 -4.38849 0.002586) (-4.38849 2323.2 3.946907e-05) (0.002586 3.946907e-05 3450.74))))

     ;; definition of :arm-gripper
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 3.637979e-12 -27.5) (float-vector 10.0 35.0 -27.5) (float-vector 10.0 35.0 27.5) (float-vector 10.0 -5.456968e-12 27.5) (float-vector 10.0 -1.818989e-12 26.5) (float-vector 10.0 34.0 26.5) (float-vector 10.0 34.0 -26.5) (float-vector 10.0 0.0 -26.5)))
         (instance face :init :vertices (list (float-vector -9.99998 35.0 -27.5) (float-vector -9.99998 35.0 27.5) (float-vector 10.0 35.0 27.5) (float-vector 10.0 35.0 -27.5)))
         (instance face :init :vertices (list (float-vector -10.0 0.0 -27.5) (float-vector -9.99998 -3.637979e-12 -26.5) (float-vector -9.99998 34.0 -26.5) (float-vector -9.99998 34.0 26.5) (float-vector -9.99998 -1.818989e-12 26.5) (float-vector -9.99998 -5.456968e-12 27.5) (float-vector -9.99998 35.0 27.5) (float-vector -9.99998 35.0 -27.5)))
         (instance face :init :vertices (list (float-vector -7.07106 -7.07107 27.5) (float-vector -9.99998 -5.456968e-12 27.5) (float-vector -9.99998 -1.818989e-12 26.5) (float-vector -7.07106 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector -7.07106 -7.07107 -27.5) (float-vector -7.07106 -7.07107 -26.5) (float-vector -9.99998 -3.637979e-12 -26.5) (float-vector -10.0 0.0 -27.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 27.5) (float-vector -7.07106 -7.07107 27.5) (float-vector -7.07106 -7.07107 26.5) (float-vector 1.525879e-05 -10.0 26.5)))
         (instance face :init :vertices (list (float-vector 0.0 -10.0 -27.5) (float-vector 1.525879e-05 -10.0 -26.5) (float-vector -7.07106 -7.07107 -26.5) (float-vector -7.07106 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07108 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 1.525879e-05 -10.0 26.5) (float-vector 7.07108 -7.07107 26.5)))
         (instance face :init :vertices (list (float-vector 7.07108 -7.07107 -27.5) (float-vector 7.07108 -7.07107 -26.5) (float-vector 1.525879e-05 -10.0 -26.5) (float-vector 0.0 -10.0 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 -5.456968e-12 27.5) (float-vector 10.0 35.0 27.5) (float-vector -9.99998 35.0 27.5) (float-vector -9.99998 -5.456968e-12 27.5) (float-vector -7.07106 -7.07107 27.5) (float-vector 0.0 -10.0 27.5) (float-vector 7.07108 -7.07107 27.5)))
         (instance face :init :vertices (list (float-vector 7.07108 -7.07107 -27.5) (float-vector 0.0 -10.0 -27.5) (float-vector -7.07106 -7.07107 -27.5) (float-vector -10.0 0.0 -27.5) (float-vector -9.99998 35.0 -27.5) (float-vector 10.0 35.0 -27.5) (float-vector 10.0 3.637979e-12 -27.5)))
         (instance face :init :vertices (list (float-vector 7.07108 -7.07107 27.5) (float-vector 7.07108 -7.07107 26.5) (float-vector 10.0 -1.818989e-12 26.5) (float-vector 10.0 -5.456968e-12 27.5)))
         (instance face :init :vertices (list (float-vector 10.0 3.637979e-12 -27.5) (float-vector 10.0 0.0 -26.5) (float-vector 7.07108 -7.07107 -26.5) (float-vector 7.07108 -7.07107 -27.5)))
         (instance face :init :vertices (list (float-vector 10.0 34.0 26.5) (float-vector 10.0 -1.818989e-12 26.5) (float-vector 7.07108 -7.07107 26.5) (float-vector 1.525879e-05 -10.0 26.5) (float-vector -7.07106 -7.07107 26.5) (float-vector -9.99998 -1.818989e-12 26.5) (float-vector -9.99998 34.0 26.5)))
         (instance face :init :vertices (list (float-vector 10.0 34.0 -26.5) (float-vector 10.0 34.0 26.5) (float-vector -9.99998 34.0 26.5) (float-vector -9.99998 34.0 -26.5)))
         (instance face :init :vertices (list (float-vector -9.99998 34.0 -26.5) (float-vector -9.99998 -3.637979e-12 -26.5) (float-vector -7.07106 -7.07107 -26.5) (float-vector 1.525879e-05 -10.0 -26.5) (float-vector 7.07108 -7.07107 -26.5) (float-vector 10.0 0.0 -26.5) (float-vector 10.0 34.0 -26.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (setq blink20 (instance bodyset-link :init (make-cascoords) :bodies bc :name :arm-gripper :weight 7.40569 :centroid (float-vector 0.00473 21.8497 0.00034) :inertia-tensor #2f((5594.49 1.367686e-05 -1.229398e-05) (1.367685e-05 4229.53 6.228439e-05) (-1.229398e-05 6.228438e-05 1858.67))))

     ;; definition of assoc
     (send blink12 :newcoords (make-coords :pos (float-vector 7.629395e-05 100.0 0.0) :rot #2f((1.0 1.490116e-06 -2.482936e-13) (-1.490116e-06 1.0 -5.960499e-08) (1.594753e-13 5.960499e-08 1.0))))
     (send blink13 :assoc blink12)
     (send blink13 :newcoords (make-coords :pos (float-vector -9.99994 100.0 -30.0) :rot #2f((4.241200e-07 5.406779e-07 -1.0) (-7.152559e-07 1.0 5.406777e-07) (1.0 7.152557e-07 4.241204e-07))))
     (send blink14 :assoc blink13)
     (send blink9 :newcoords (make-coords :pos (float-vector 6.103516e-05 100.0 7.629395e-06) :rot #2f((1.0 1.221895e-06 7.874314e-13) (-1.221895e-06 1.0 -2.980265e-08) (-8.238472e-13 2.980265e-08 1.0))))
     (send blink10 :assoc blink9)
     (send blink10 :newcoords (make-coords :pos (float-vector 10.0001 100.0 -30.0) :rot #2f((4.241200e-07 6.276036e-07 -1.0) (-6.854534e-07 1.0 6.276034e-07) (1.0 6.854532e-07 4.241204e-07))))
     (send blink11 :assoc blink10)
     (send blink4 :newcoords (make-coords :pos (float-vector 4.577637e-05 100.0 0.0) :rot #2f((1.0 1.370907e-06 -1.685878e-07) (-1.370907e-06 1.0 3.115067e-13) (1.685878e-07 -8.038843e-14 1.0))))
     (send blink5 :assoc blink4)
     (send blink5 :newcoords (make-coords :pos (float-vector -9.99994 100.0 30.0) :rot #2f((3.645154e-07 6.351980e-07 1.0) (-5.682284e-07 1.0 -6.351978e-07) (-1.0 -5.682282e-07 3.645158e-07))))
     (send blink6 :assoc blink5)
     (send blink1 :newcoords (make-coords :pos (float-vector 6.103516e-05 100.0 -7.629395e-06) :rot #2f((1.0 1.400709e-06 8.429316e-08) (-1.400709e-06 1.0 2.980263e-08) (-8.429311e-08 -2.980275e-08 1.0))))
     (send blink2 :assoc blink1)
     (send blink2 :newcoords (make-coords :pos (float-vector 10.0001 100.0 30.0) :rot #2f((4.241200e-07 6.650006e-07 1.0) (-6.536672e-07 1.0 -6.650004e-07) (-1.0 -6.536669e-07 4.241205e-07))))
     (send blink3 :assoc blink2)
     (send blink20 :newcoords (make-coords :pos (float-vector -25.0 -7.0 0.0) :rot #2f((4.241202e-07 -4.262047e-14 1.0) (-9.349038e-09 1.0 4.656079e-14) (-1.0 -9.349038e-09 4.241202e-07))))
     (send blink19 :assoc blink20)
     (send blink19 :newcoords (make-coords :pos (float-vector -10.0 80.0 7.00002) :rot #2f((-1.0 -6.216121e-07 5.258636e-08) (5.258656e-08 -3.371748e-07 1.0) (-6.216121e-07 1.0 3.371748e-07))))
     (send blink18 :assoc blink19)
     (send blink18 :newcoords (make-coords :pos (float-vector 3.051758e-05 40.0 2.837405e-07) :rot #2f((1.0 1.281500e-06 -2.980195e-08) (-1.281500e-06 1.0 2.980250e-08) (2.980199e-08 -2.980246e-08 1.0))))
     (send blink17 :assoc blink18)
     (send blink17 :newcoords (make-coords :pos (float-vector 4.577637e-05 70.0 0.0) :rot #2f((1.0 1.281500e-06 2.980277e-08) (-1.281500e-06 1.0 -2.980218e-08) (-2.980281e-08 2.980214e-08 1.0))))
     (send blink16 :assoc blink17)
     (send blink16 :newcoords (make-coords :pos (float-vector 40.0 -128.0 -0.000118) :rot #2f((-1.690089e-06 1.0 3.190453e-06) (-1.0 -1.690091e-06 7.194906e-07) (7.194959e-07 -3.190452e-06 1.0))))
     (send blink7 :assoc blink16)
     (send blink7 :newcoords (make-coords :pos (float-vector 1.569583e-05 0.0 50.0) :rot #2f((5.662441e-07 3.874301e-07 1.0) (1.0 -2.682209e-07 -5.662441e-07) (2.682209e-07 1.0 -3.874302e-07))))
     (send blink8 :assoc blink7)
     (send blink8 :newcoords (make-coords :pos (float-vector 6.278329e-06 10.0 63.0) :rot #2f((1.0 1.180112e-06 0.0) (-1.180112e-06 1.0 0.0) (0.0 0.0 1.0))))
     (send blink15 :assoc blink8)
     (send blink15 :newcoords (make-coords :pos (float-vector 60.0 2.544721e-05 70.0) :rot #2f((-7.619822e-07 1.0 0.0) (-1.0 -7.619822e-07 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink15)
     (send blink3 :newcoords (make-coords :pos (float-vector 105.0 85.0 0.0) :rot #2f((-1.0 -8.429368e-08 1.627879e-13) (-8.429368e-08 1.0 6.278329e-07) (-2.157102e-13 6.278329e-07 -1.0))))
     (send blink0 :assoc blink3)
     (send blink6 :newcoords (make-coords :pos (float-vector -100.0 84.9999 0.0) :rot #2f((-1.0 7.938603e-20 2.528890e-13) (-7.938603e-20 1.0 -6.278329e-07) (-2.528890e-13 -6.278329e-07 -1.0))))
     (send blink0 :assoc blink6)
     (send blink11 :newcoords (make-coords :pos (float-vector 105.0 -84.9999 0.0) :rot #2f((-1.0 -6.743496e-07 0.0) (6.743496e-07 -1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink11)
     (send blink14 :newcoords (make-coords :pos (float-vector -99.9999 -85.0 0.0) :rot #2f((-1.0 8.429370e-07 0.0) (-8.429370e-07 -1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink14)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of head-end-coords
     (setq head-end-coords
       (make-cascoords
	:coords (send (send blink7 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 0.0 80.0 5.820766e-11) :rot #2f((4.241202e-07 -2.980198e-08 1.0) (2.556631e-08 1.0 2.980197e-08) (-1.0 2.556630e-08 4.241202e-07))))))
     (send blink7 :assoc head-end-coords)

     ;; definition of arm-end-coords
     (setq arm-end-coords
       (make-cascoords
	:coords (send (send blink19 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -25.0 -7.0 0.0) :rot #2f((5.084139e-07 -1.836263e-14 1.0) (4.873259e-15 1.0 1.836263e-14) (-1.0 4.873250e-15 5.084139e-07))))))
     (send blink19 :assoc arm-end-coords)

     ;; definition of lfleg-end-coords
     (setq lfleg-end-coords
       (make-cascoords
	:coords (send (send blink1 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 1.525879e-05 140.0 -4.577637e-05) :rot #2f((1.0 -6.393262e-08 1.595125e-08) (1.595128e-08 4.172325e-07 -1.0) (6.393260e-08 1.0 4.172325e-07))))))
     (send blink1 :assoc lfleg-end-coords)

     ;; definition of lbleg-end-coords
     (setq lbleg-end-coords
       (make-cascoords
	:coords (send (send blink4 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 1.525879e-05 140.0 -4.577637e-05) :rot #2f((1.0 1.826500e-08 3.605267e-08) (3.605266e-08 4.172325e-07 -1.0) (-1.826501e-08 1.0 4.172325e-07))))))
     (send blink4 :assoc lbleg-end-coords)

     ;; definition of rfleg-end-coords
     (setq rfleg-end-coords
       (make-cascoords
	:coords (send (send blink9 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 1.525879e-05 140.0 -4.577637e-05) :rot #2f((1.0 -4.422011e-08 4.445205e-08) (4.445207e-08 4.172325e-07 -1.0) (4.422009e-08 1.0 4.172325e-07))))))
     (send blink9 :assoc rfleg-end-coords)

     ;; definition of rbleg-end-coords
     (setq rbleg-end-coords
       (make-cascoords
	:coords (send (send blink12 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -1.525879e-05 140.0 -4.577637e-05) :rot #2f((1.0 -2.286376e-08 -4.320681e-08) (-4.320680e-08 4.172325e-07 -1.0) (2.286378e-08 1.0 4.172325e-07))))))
     (send blink12 :assoc rbleg-end-coords)

     ;; definition of joint

     ;; definition of :pan1
     (setq joint14 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink15 :name :head-pan1 :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :pan2
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink15 :child-link blink8 :name :head-pan2 :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :tilt
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink8 :child-link blink7 :name :head-tilt :axis :-z
			     :min -180.0 :max    0.0))

     ;; definition of :shoulder2
     (setq joint15 (instance rotational-joint :init
			     :parent-link blink7 :child-link blink16 :name :arm-shoulder2 :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :shoulder1
     (setq joint16 (instance rotational-joint :init
			     :parent-link blink16 :child-link blink17 :name :arm-shoulder1 :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :elbow
     (setq joint17 (instance rotational-joint :init
			     :parent-link blink17 :child-link blink18 :name :arm-elbow :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :wrist
     (setq joint18 (instance rotational-joint :init
			     :parent-link blink18 :child-link blink19 :name :arm-wrist :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :gripper
     (setq joint19 (instance rotational-joint :init
			     :parent-link blink19 :child-link blink20 :name :arm-gripper :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :crotch
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink3 :name :lfleg-crotch :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :knee
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink3 :child-link blink2 :name :lfleg-knee :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :ankle
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink1 :name :lfleg-ankle :axis :-z
			     :min  -45.0 :max  135.0))

     ;; definition of :crotch
     (setq joint5 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink6 :name :lbleg-crotch :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :knee
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink6 :child-link blink5 :name :lbleg-knee :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :ankle
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink5 :child-link blink4 :name :lbleg-ankle :axis :-z
			     :min  -45.0 :max  135.0))

     ;; definition of :crotch
     (setq joint10 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink11 :name :rfleg-crotch :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :knee
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink11 :child-link blink10 :name :rfleg-knee :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :ankle
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink9 :name :rfleg-ankle :axis :-z
			     :min  -45.0 :max  135.0))

     ;; definition of :crotch
     (setq joint13 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink14 :name :rbleg-crotch :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :knee
     (setq joint12 (instance rotational-joint :init
			     :parent-link blink14 :child-link blink13 :name :rbleg-knee :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :ankle
     (setq joint11 (instance rotational-joint :init
			     :parent-link blink13 :child-link blink12 :name :rbleg-ankle :axis :-z
			     :min  -45.0 :max  135.0))

     (setq head-root-link blink15)
     (setq head (list blink15 blink8 blink7))
     (setq arm-root-link blink16)
     (setq arm (list blink16 blink17 blink18 blink19 blink20))
     (setq lfleg-root-link blink3)
     (setq lfleg (list blink3 blink2 blink1))
     (setq lbleg-root-link blink6)
     (setq lbleg (list blink6 blink5 blink4))
     (setq rfleg-root-link blink11)
     (setq rfleg (list blink11 blink10 blink9))
     (setq rbleg-root-link blink14)
     (setq rbleg (list blink14 blink13 blink12))
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14 blink15 blink16 blink17 blink18 blink19 blink20))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14 joint15 joint16 joint17 joint18 joint19))
     ;; definition of collision-avoidance-links
     (setq collision-avoidance-links
       (list
        ))

     (setq sensors (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)
     self))
  )

(defun tamaii (&rest args) (instance* tamaii-robot :init args))
;; (format *error-output* "(instance tamaii-robot :init) for generating model~%")
