;;
;;
;; this file is automatically generated from euslisp+euslib version EusLisp 8.26(r478M 647M 47109:47930) for Linux64 created on k-okada-t410s(Fri May 27 16:12:08 JST 2011)
;;
;;
(defclass elevator_call_panel_eng2-object
  :super cascaded-link
  :slots (sensors
         ))
(defmethod elevator_call_panel_eng2-object
  (:init
   (&rest args &key (name "elevator_call_panel_eng2") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 button0 button1
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :bodyset124604600
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 0.5 66.5 120.5) (float-vector -0.5 66.5 120.5) (float-vector -0.5 -66.5 120.5) (float-vector 0.5 -66.5 120.5)))
         (instance face :init :vertices (list (float-vector -0.5 66.5 -120.5) (float-vector 0.5 66.5 -120.5) (float-vector 0.5 -66.5 -120.5) (float-vector -0.5 -66.5 -120.5)))
         (instance face :init :vertices (list (float-vector 0.5 66.5 120.5) (float-vector 0.5 66.5 -120.5) (float-vector -0.5 66.5 -120.5) (float-vector -0.5 66.5 120.5)))
         (instance face :init :vertices (list (float-vector 0.5 -66.5 120.5) (float-vector 0.5 -66.5 -120.5) (float-vector 0.5 66.5 -120.5) (float-vector 0.5 66.5 120.5)))
         (instance face :init :vertices (list (float-vector -0.5 -66.5 120.5) (float-vector -0.5 -66.5 -120.5) (float-vector 0.5 -66.5 -120.5) (float-vector 0.5 -66.5 120.5)))
         (instance face :init :vertices (list (float-vector -0.5 66.5 120.5) (float-vector -0.5 66.5 -120.5) (float-vector -0.5 -66.5 -120.5) (float-vector -0.5 -66.5 120.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     ;; paste texture elevator_call_panel_eng2.png
     (send (elt bc 0) :paste-texture-to-face (elt (send (elt bc 0) :faces)3) :file "models/elevator_call_panel_eng2.png")
     (send (elt bc 0) :set-color (list))
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset124604600 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; definition of :button
     (setq button0 (make-cascoords :pos (float-vector 0.0 0.0 -10.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "down"))
     (send self :assoc button0)
     (setq button1 (make-cascoords :pos (float-vector 0.0 0.0 35.0) :rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) :name "up"))
     (send self :assoc button1)

     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))
  (:cameras (&rest args)
   (forward-message-to-all (list) args))

  (:handle () (list ))
  (:attention () (list ))
  (:button () (list  button0 button1))
  (:button-down () button0)
  (:button-up () button1)
  )

(defun elevator_call_panel_eng2 (&rest args) (instance* elevator_call_panel_eng2-object :init args))
;; (format *error-output* "(instance elevator_call_panel_eng2-object :init) for generating model~%")
