;;
;;
;; this file is automatically generated from euslisp+euslib
;;
;;
(defclass room73b2-uchida-shelf-1300-object
  :super cascaded-link
  :slots (sensors))
(defmethod room73b2-uchida-shelf-1300-object
  (:init
   (&rest args &key (name "room73b2-uchida-shelf-1300") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
         joint0
        
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :bodyset301274576
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 222.5 650.0 2100.0) (float-vector -222.5 650.0 2100.0) (float-vector -222.5 -650.0 2100.0) (float-vector 222.5 -650.0 2100.0)))
         (instance face :init :vertices (list (float-vector -222.5 650.0 2065.0) (float-vector 222.5 650.0 2065.0) (float-vector 222.5 -650.0 2065.0) (float-vector -222.5 -650.0 2065.0)))
         (instance face :init :vertices (list (float-vector 222.5 650.0 2100.0) (float-vector 222.5 650.0 2065.0) (float-vector -222.5 650.0 2065.0) (float-vector -222.5 650.0 2100.0)))
         (instance face :init :vertices (list (float-vector 222.5 -650.0 2100.0) (float-vector 222.5 -650.0 2065.0) (float-vector 222.5 650.0 2065.0) (float-vector 222.5 650.0 2100.0)))
         (instance face :init :vertices (list (float-vector -222.5 -650.0 2100.0) (float-vector -222.5 -650.0 2065.0) (float-vector 222.5 -650.0 2065.0) (float-vector 222.5 -650.0 2100.0)))
         (instance face :init :vertices (list (float-vector -222.5 650.0 2100.0) (float-vector -222.5 650.0 2065.0) (float-vector -222.5 -650.0 2065.0) (float-vector -222.5 -650.0 2100.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -187.5 -615.5 2065.5) (float-vector -222.5 -615.5 2065.5) (float-vector -222.5 -650.5 2065.5) (float-vector -187.5 -650.5 2065.5)))
         (instance face :init :vertices (list (float-vector -222.5 -615.5 0.5) (float-vector -187.5 -615.5 0.5) (float-vector -187.5 -650.5 0.5) (float-vector -222.5 -650.5 0.5)))
         (instance face :init :vertices (list (float-vector -187.5 -615.5 2065.5) (float-vector -187.5 -615.5 0.5) (float-vector -222.5 -615.5 0.5) (float-vector -222.5 -615.5 2065.5)))
         (instance face :init :vertices (list (float-vector -187.5 -650.5 2065.5) (float-vector -187.5 -650.5 0.5) (float-vector -187.5 -615.5 0.5) (float-vector -187.5 -615.5 2065.5)))
         (instance face :init :vertices (list (float-vector -222.5 -650.5 2065.5) (float-vector -222.5 -650.5 0.5) (float-vector -187.5 -650.5 0.5) (float-vector -187.5 -650.5 2065.5)))
         (instance face :init :vertices (list (float-vector -222.5 -615.5 2065.5) (float-vector -222.5 -615.5 0.5) (float-vector -222.5 -650.5 0.5) (float-vector -222.5 -650.5 2065.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -187.5 650.5 2065.5) (float-vector -222.5 650.5 2065.5) (float-vector -222.5 615.5 2065.5) (float-vector -187.5 615.5 2065.5)))
         (instance face :init :vertices (list (float-vector -222.5 650.5 0.5) (float-vector -187.5 650.5 0.5) (float-vector -187.5 615.5 0.5) (float-vector -222.5 615.5 0.5)))
         (instance face :init :vertices (list (float-vector -187.5 650.5 2065.5) (float-vector -187.5 650.5 0.5) (float-vector -222.5 650.5 0.5) (float-vector -222.5 650.5 2065.5)))
         (instance face :init :vertices (list (float-vector -187.5 615.5 2065.5) (float-vector -187.5 615.5 0.5) (float-vector -187.5 650.5 0.5) (float-vector -187.5 650.5 2065.5)))
         (instance face :init :vertices (list (float-vector -222.5 615.5 2065.5) (float-vector -222.5 615.5 0.5) (float-vector -187.5 615.5 0.5) (float-vector -187.5 615.5 2065.5)))
         (instance face :init :vertices (list (float-vector -222.5 650.5 2065.5) (float-vector -222.5 650.5 0.5) (float-vector -222.5 615.5 0.5) (float-vector -222.5 615.5 2065.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 222.5 -615.5 2065.5) (float-vector 187.5 -615.5 2065.5) (float-vector 187.5 -650.5 2065.5) (float-vector 222.5 -650.5 2065.5)))
         (instance face :init :vertices (list (float-vector 187.5 -615.5 0.5) (float-vector 222.5 -615.5 0.5) (float-vector 222.5 -650.5 0.5) (float-vector 187.5 -650.5 0.5)))
         (instance face :init :vertices (list (float-vector 222.5 -615.5 2065.5) (float-vector 222.5 -615.5 0.5) (float-vector 187.5 -615.5 0.5) (float-vector 187.5 -615.5 2065.5)))
         (instance face :init :vertices (list (float-vector 222.5 -650.5 2065.5) (float-vector 222.5 -650.5 0.5) (float-vector 222.5 -615.5 0.5) (float-vector 222.5 -615.5 2065.5)))
         (instance face :init :vertices (list (float-vector 187.5 -650.5 2065.5) (float-vector 187.5 -650.5 0.5) (float-vector 222.5 -650.5 0.5) (float-vector 222.5 -650.5 2065.5)))
         (instance face :init :vertices (list (float-vector 187.5 -615.5 2065.5) (float-vector 187.5 -615.5 0.5) (float-vector 187.5 -650.5 0.5) (float-vector 187.5 -650.5 2065.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 222.5 650.5 2065.5) (float-vector 187.5 650.5 2065.5) (float-vector 187.5 615.5 2065.5) (float-vector 222.5 615.5 2065.5)))
         (instance face :init :vertices (list (float-vector 187.5 650.5 0.5) (float-vector 222.5 650.5 0.5) (float-vector 222.5 615.5 0.5) (float-vector 187.5 615.5 0.5)))
         (instance face :init :vertices (list (float-vector 222.5 650.5 2065.5) (float-vector 222.5 650.5 0.5) (float-vector 187.5 650.5 0.5) (float-vector 187.5 650.5 2065.5)))
         (instance face :init :vertices (list (float-vector 222.5 615.5 2065.5) (float-vector 222.5 615.5 0.5) (float-vector 222.5 650.5 0.5) (float-vector 222.5 650.5 2065.5)))
         (instance face :init :vertices (list (float-vector 187.5 615.5 2065.5) (float-vector 187.5 615.5 0.5) (float-vector 222.5 615.5 0.5) (float-vector 222.5 615.5 2065.5)))
         (instance face :init :vertices (list (float-vector 187.5 650.5 2065.5) (float-vector 187.5 650.5 0.5) (float-vector 187.5 615.5 0.5) (float-vector 187.5 615.5 2065.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 214.0 641.5 1417.5) (float-vector -214.0 641.5 1417.5) (float-vector -214.0 -641.5 1417.5) (float-vector 214.0 -641.5 1417.5)))
         (instance face :init :vertices (list (float-vector -214.0 641.5 1382.5) (float-vector 214.0 641.5 1382.5) (float-vector 214.0 -641.5 1382.5) (float-vector -214.0 -641.5 1382.5)))
         (instance face :init :vertices (list (float-vector 214.0 641.5 1417.5) (float-vector 214.0 641.5 1382.5) (float-vector -214.0 641.5 1382.5) (float-vector -214.0 641.5 1417.5)))
         (instance face :init :vertices (list (float-vector 214.0 -641.5 1417.5) (float-vector 214.0 -641.5 1382.5) (float-vector 214.0 641.5 1382.5) (float-vector 214.0 641.5 1417.5)))
         (instance face :init :vertices (list (float-vector -214.0 -641.5 1417.5) (float-vector -214.0 -641.5 1382.5) (float-vector 214.0 -641.5 1382.5) (float-vector 214.0 -641.5 1417.5)))
         (instance face :init :vertices (list (float-vector -214.0 641.5 1417.5) (float-vector -214.0 641.5 1382.5) (float-vector -214.0 -641.5 1382.5) (float-vector -214.0 -641.5 1417.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 214.0 641.5 1767.5) (float-vector -214.0 641.5 1767.5) (float-vector -214.0 -641.5 1767.5) (float-vector 214.0 -641.5 1767.5)))
         (instance face :init :vertices (list (float-vector -214.0 641.5 1732.5) (float-vector 214.0 641.5 1732.5) (float-vector 214.0 -641.5 1732.5) (float-vector -214.0 -641.5 1732.5)))
         (instance face :init :vertices (list (float-vector 214.0 641.5 1767.5) (float-vector 214.0 641.5 1732.5) (float-vector -214.0 641.5 1732.5) (float-vector -214.0 641.5 1767.5)))
         (instance face :init :vertices (list (float-vector 214.0 -641.5 1767.5) (float-vector 214.0 -641.5 1732.5) (float-vector 214.0 641.5 1732.5) (float-vector 214.0 641.5 1767.5)))
         (instance face :init :vertices (list (float-vector -214.0 -641.5 1767.5) (float-vector -214.0 -641.5 1732.5) (float-vector 214.0 -641.5 1732.5) (float-vector 214.0 -641.5 1767.5)))
         (instance face :init :vertices (list (float-vector -214.0 641.5 1767.5) (float-vector -214.0 641.5 1732.5) (float-vector -214.0 -641.5 1732.5) (float-vector -214.0 -641.5 1767.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :lightgoldenrodyellow)
     (send (elt bc 1) :set-color :lightgoldenrodyellow)
     (send (elt bc 2) :set-color :lightgoldenrodyellow)
     (send (elt bc 3) :set-color :lightgoldenrodyellow)
     (send (elt bc 4) :set-color :lightgoldenrodyellow)
     (send (elt bc 5) :set-color :lightgoldenrodyellow)
     (send (elt bc 6) :set-color :lightgoldenrodyellow)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset301274576 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)
     self))
  )

(defun room73b2-uchida-shelf-1300 (&rest args) (instance* room73b2-uchida-shelf-1300-object :init args))
;; (format *error-output* "(instance room73b2-uchida-shelf-1300-object :init) for generating model~%")
