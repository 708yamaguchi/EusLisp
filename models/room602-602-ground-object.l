;;
;;
;; this file is automatically generated from euslisp+euslib version EusLisp 8.26(r478M 647M 47109:47930) for Linux64 created on k-okada-t410s(Fri May 27 16:12:08 JST 2011)
;;
;;
(defclass room602-602-ground-object
  :super cascaded-link
  :slots (sensors
         ))
(defmethod room602-602-ground-object
  (:init
   (&rest args &key (name "room602-602-ground") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :bodyset222620024
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 4600.0 4195.0 5.0) (float-vector -4600.0 4195.0 5.0) (float-vector -4600.0 -4195.0 5.0) (float-vector 4600.0 -4195.0 5.0)))
         (instance face :init :vertices (list (float-vector -4600.0 4195.0 -5.0) (float-vector 4600.0 4195.0 -5.0) (float-vector 4600.0 -4195.0 -5.0) (float-vector -4600.0 -4195.0 -5.0)))
         (instance face :init :vertices (list (float-vector 4600.0 4195.0 5.0) (float-vector 4600.0 4195.0 -5.0) (float-vector -4600.0 4195.0 -5.0) (float-vector -4600.0 4195.0 5.0)))
         (instance face :init :vertices (list (float-vector 4600.0 -4195.0 5.0) (float-vector 4600.0 -4195.0 -5.0) (float-vector 4600.0 4195.0 -5.0) (float-vector 4600.0 4195.0 5.0)))
         (instance face :init :vertices (list (float-vector -4600.0 -4195.0 5.0) (float-vector -4600.0 -4195.0 -5.0) (float-vector 4600.0 -4195.0 -5.0) (float-vector 4600.0 -4195.0 5.0)))
         (instance face :init :vertices (list (float-vector -4600.0 4195.0 5.0) (float-vector -4600.0 4195.0 -5.0) (float-vector -4600.0 -4195.0 -5.0) (float-vector -4600.0 -4195.0 5.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     ;; paste texture akihabara-floor-tex.jpg
     (send (elt bc 0) :paste-texture-to-face (elt (send (elt bc 0) :faces)0) :file "models/akihabara-floor-tex.jpg")
     (send (elt bc 0) :set-color :black)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :bodyset222620024 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))
  (:cameras (&rest args)
   (forward-message-to-all (list) args))

  (:handle () (list ))
  (:attention () (list ))
  (:button () (list ))
  )

(defun room602-602-ground (&rest args) (instance* room602-602-ground-object :init args))
;; (format *error-output* "(instance room602-602-ground-object :init) for generating model~%")
