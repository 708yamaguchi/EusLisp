;;
;;
;; this file is automatically generated from euslisp+euslib
;;
;;
(defclass jrob1-robot
  :super robot-model
  :slots (sensors))
(defmethod jrob1-robot
  (:init
   (&rest args &key (name "jrob1") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14
         joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13 joint14
        
         )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -227.0 2.99997 63.0001) (float-vector -77.0 2.99992 63.0001) (float-vector -77.0 3.00001 -86.9999) (float-vector -227.0 3.00006 -86.9999)))
         (instance face :init :vertices (list (float-vector -77.0 -67.0001 63.0) (float-vector -77.0 -67.0 -87.0) (float-vector -77.0 3.00001 -86.9999) (float-vector -77.0 2.99992 63.0001)))
         (instance face :init :vertices (list (float-vector -227.0 -67.0 63.0) (float-vector -227.0 -67.0 53.0) (float-vector -87.0 -67.0001 53.0) (float-vector -87.0 -67.0 -77.0) (float-vector -227.0 -66.9999 -76.9999) (float-vector -227.0 -66.9999 -87.0) (float-vector -77.0 -67.0 -87.0) (float-vector -77.0 -67.0001 63.0)))
         (instance face :init :vertices (list (float-vector -227.0 3.00006 -86.9999) (float-vector -77.0 3.00001 -86.9999) (float-vector -77.0 -67.0 -87.0) (float-vector -227.0 -66.9999 -87.0)))
         (instance face :init :vertices (list (float-vector -227.0 -67.0 63.0) (float-vector -77.0 -67.0001 63.0) (float-vector -77.0 2.99992 63.0001) (float-vector -227.0 2.99997 63.0001)))
         (instance face :init :vertices (list (float-vector -227.0 2.99997 63.0001) (float-vector -227.0 3.00006 -86.9999) (float-vector -227.0 -66.9999 -87.0) (float-vector -227.0 -66.9999 -76.9999) (float-vector -227.0 -6.99994 -76.9999) (float-vector -227.0 -7.00002 53.0001) (float-vector -227.0 -67.0 53.0) (float-vector -227.0 -67.0 63.0)))
         (instance face :init :vertices (list (float-vector -227.0 -7.00002 53.0001) (float-vector -227.0 -6.99994 -76.9999) (float-vector -87.0 -6.99999 -76.9999) (float-vector -87.0 -7.00007 53.0001)))
         (instance face :init :vertices (list (float-vector -87.0 -6.99999 -76.9999) (float-vector -227.0 -6.99994 -76.9999) (float-vector -227.0 -66.9999 -76.9999) (float-vector -87.0 -67.0 -77.0)))
         (instance face :init :vertices (list (float-vector -87.0 -7.00007 53.0001) (float-vector -87.0 -6.99999 -76.9999) (float-vector -87.0 -67.0 -77.0) (float-vector -87.0 -67.0001 53.0)))
         (instance face :init :vertices (list (float-vector -87.0 -67.0001 53.0) (float-vector -227.0 -67.0 53.0) (float-vector -227.0 -7.00002 53.0001) (float-vector -87.0 -7.00007 53.0001)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 227.0 2.99991 -87.0) (float-vector 77.0001 3.00007 -87.0) (float-vector 77.0001 3.00007 63.0) (float-vector 227.0 2.99991 63.0)))
         (instance face :init :vertices (list (float-vector 77.0 -66.9999 -87.0) (float-vector 77.0 -66.9999 63.0) (float-vector 77.0001 3.00007 63.0) (float-vector 77.0001 3.00007 -87.0)))
         (instance face :init :vertices (list (float-vector 227.0 -67.0001 -87.0) (float-vector 227.0 -67.0001 -77.0) (float-vector 87.0 -66.9999 -77.0) (float-vector 87.0 -66.9999 53.0) (float-vector 227.0 -67.0001 53.0) (float-vector 227.0 -67.0001 63.0) (float-vector 77.0 -66.9999 63.0) (float-vector 77.0 -66.9999 -87.0)))
         (instance face :init :vertices (list (float-vector 227.0 2.99991 63.0) (float-vector 77.0001 3.00007 63.0) (float-vector 77.0 -66.9999 63.0) (float-vector 227.0 -67.0001 63.0)))
         (instance face :init :vertices (list (float-vector 227.0 -67.0001 -87.0) (float-vector 77.0 -66.9999 -87.0) (float-vector 77.0001 3.00007 -87.0) (float-vector 227.0 2.99991 -87.0)))
         (instance face :init :vertices (list (float-vector 227.0 2.99991 -87.0) (float-vector 227.0 2.99991 63.0) (float-vector 227.0 -67.0001 63.0) (float-vector 227.0 -67.0001 53.0) (float-vector 227.0 -7.00009 53.0) (float-vector 227.0 -7.00009 -77.0) (float-vector 227.0 -67.0001 -77.0) (float-vector 227.0 -67.0001 -87.0)))
         (instance face :init :vertices (list (float-vector 227.0 -7.00009 -77.0) (float-vector 227.0 -7.00009 53.0) (float-vector 87.0001 -6.99994 53.0) (float-vector 87.0001 -6.99994 -77.0)))
         (instance face :init :vertices (list (float-vector 87.0001 -6.99994 53.0) (float-vector 227.0 -7.00009 53.0) (float-vector 227.0 -67.0001 53.0) (float-vector 87.0 -66.9999 53.0)))
         (instance face :init :vertices (list (float-vector 87.0001 -6.99994 -77.0) (float-vector 87.0001 -6.99994 53.0) (float-vector 87.0 -66.9999 53.0) (float-vector 87.0 -66.9999 -77.0)))
         (instance face :init :vertices (list (float-vector 87.0 -66.9999 -77.0) (float-vector 227.0 -67.0001 -77.0) (float-vector 227.0 -7.00009 -77.0) (float-vector 87.0001 -6.99994 -77.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -227.0 -3.00006 -87.0) (float-vector -77.0001 -3.00012 -87.0) (float-vector -77.0001 -3.00012 63.0) (float-vector -227.0 -3.00006 63.0)))
         (instance face :init :vertices (list (float-vector -77.0 66.9999 -87.0) (float-vector -77.0 66.9999 63.0) (float-vector -77.0001 -3.00012 63.0) (float-vector -77.0001 -3.00012 -87.0)))
         (instance face :init :vertices (list (float-vector -227.0 66.9999 -87.0) (float-vector -227.0 66.9999 -77.0) (float-vector -87.0 66.9999 -77.0) (float-vector -87.0 66.9999 53.0) (float-vector -227.0 66.9999 53.0) (float-vector -227.0 66.9999 63.0) (float-vector -77.0 66.9999 63.0) (float-vector -77.0 66.9999 -87.0)))
         (instance face :init :vertices (list (float-vector -227.0 -3.00006 63.0) (float-vector -77.0001 -3.00012 63.0) (float-vector -77.0 66.9999 63.0) (float-vector -227.0 66.9999 63.0)))
         (instance face :init :vertices (list (float-vector -227.0 66.9999 -87.0) (float-vector -77.0 66.9999 -87.0) (float-vector -77.0001 -3.00012 -87.0) (float-vector -227.0 -3.00006 -87.0)))
         (instance face :init :vertices (list (float-vector -227.0 -3.00006 -87.0) (float-vector -227.0 -3.00006 63.0) (float-vector -227.0 66.9999 63.0) (float-vector -227.0 66.9999 53.0) (float-vector -227.0 6.99994 53.0) (float-vector -227.0 6.99994 -77.0) (float-vector -227.0 66.9999 -77.0) (float-vector -227.0 66.9999 -87.0)))
         (instance face :init :vertices (list (float-vector -227.0 6.99994 -77.0) (float-vector -227.0 6.99994 53.0) (float-vector -87.0001 6.99989 53.0) (float-vector -87.0001 6.99989 -77.0)))
         (instance face :init :vertices (list (float-vector -87.0001 6.99989 53.0) (float-vector -227.0 6.99994 53.0) (float-vector -227.0 66.9999 53.0) (float-vector -87.0 66.9999 53.0)))
         (instance face :init :vertices (list (float-vector -87.0001 6.99989 -77.0) (float-vector -87.0001 6.99989 53.0) (float-vector -87.0 66.9999 53.0) (float-vector -87.0 66.9999 -77.0)))
         (instance face :init :vertices (list (float-vector -87.0 66.9999 -77.0) (float-vector -227.0 66.9999 -77.0) (float-vector -227.0 6.99994 -77.0) (float-vector -87.0001 6.99989 -77.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 227.0 -2.99982 63.0001) (float-vector 77.0 -2.99988 63.0001) (float-vector 77.0 -2.99997 -86.9999) (float-vector 227.0 -2.99991 -86.9999)))
         (instance face :init :vertices (list (float-vector 77.0 67.0001 63.0) (float-vector 77.0 67.0 -87.0) (float-vector 77.0 -2.99997 -86.9999) (float-vector 77.0 -2.99988 63.0001)))
         (instance face :init :vertices (list (float-vector 227.0 67.0002 63.0) (float-vector 227.0 67.0002 53.0) (float-vector 87.0 67.0001 53.0) (float-vector 87.0 67.0 -77.0) (float-vector 227.0 67.0001 -76.9999) (float-vector 227.0 67.0001 -87.0) (float-vector 77.0 67.0 -87.0) (float-vector 77.0 67.0001 63.0)))
         (instance face :init :vertices (list (float-vector 227.0 -2.99991 -86.9999) (float-vector 77.0 -2.99997 -86.9999) (float-vector 77.0 67.0 -87.0) (float-vector 227.0 67.0001 -87.0)))
         (instance face :init :vertices (list (float-vector 227.0 67.0002 63.0) (float-vector 77.0 67.0001 63.0) (float-vector 77.0 -2.99988 63.0001) (float-vector 227.0 -2.99982 63.0001)))
         (instance face :init :vertices (list (float-vector 227.0 -2.99982 63.0001) (float-vector 227.0 -2.99991 -86.9999) (float-vector 227.0 67.0001 -87.0) (float-vector 227.0 67.0001 -76.9999) (float-vector 227.0 7.0001 -76.9999) (float-vector 227.0 7.00018 53.0001) (float-vector 227.0 67.0002 53.0) (float-vector 227.0 67.0002 63.0)))
         (instance face :init :vertices (list (float-vector 227.0 7.00018 53.0001) (float-vector 227.0 7.0001 -76.9999) (float-vector 87.0 7.00004 -76.9999) (float-vector 87.0 7.00012 53.0001)))
         (instance face :init :vertices (list (float-vector 87.0 7.00004 -76.9999) (float-vector 227.0 7.0001 -76.9999) (float-vector 227.0 67.0001 -76.9999) (float-vector 87.0 67.0 -77.0)))
         (instance face :init :vertices (list (float-vector 87.0 7.00012 53.0001) (float-vector 87.0 7.00004 -76.9999) (float-vector 87.0 67.0 -77.0) (float-vector 87.0 67.0001 53.0)))
         (instance face :init :vertices (list (float-vector 87.0 67.0001 53.0) (float-vector 227.0 67.0002 53.0) (float-vector 227.0 7.00018 53.0001) (float-vector 87.0 7.00012 53.0001)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 200.0 -35.9999 194.0) (float-vector 193.5 -34.2582 194.0) (float-vector 188.742 -29.4999 194.0) (float-vector 187.0 -22.9999 194.0) (float-vector 188.742 -16.4999 194.0) (float-vector 193.5 -11.7416 194.0) (float-vector 200.0 -9.99991 194.0) (float-vector 206.5 -11.7416 194.0) (float-vector 211.258 -16.4999 194.0) (float-vector 213.0 -22.9999 194.0) (float-vector 211.258 -29.4999 194.0) (float-vector 206.5 -34.2582 194.0)))
         (instance face :init :vertices (list (float-vector 200.0 -35.9999 194.0) (float-vector 200.0 -35.9999 296.0) (float-vector 193.5 -34.2582 296.0) (float-vector 193.5 -34.2582 194.0)))
         (instance face :init :vertices (list (float-vector 193.5 -34.2582 296.0) (float-vector 188.742 -29.4999 296.0) (float-vector 188.742 -29.4999 194.0) (float-vector 193.5 -34.2582 194.0)))
         (instance face :init :vertices (list (float-vector 188.742 -29.4999 296.0) (float-vector 187.0 -22.9999 296.0) (float-vector 187.0 -22.9999 194.0) (float-vector 188.742 -29.4999 194.0)))
         (instance face :init :vertices (list (float-vector 187.0 -22.9999 296.0) (float-vector 188.742 -16.4999 296.0) (float-vector 188.742 -16.4999 194.0) (float-vector 187.0 -22.9999 194.0)))
         (instance face :init :vertices (list (float-vector 188.742 -16.4999 296.0) (float-vector 193.5 -11.7416 296.0) (float-vector 193.5 -11.7416 194.0) (float-vector 188.742 -16.4999 194.0)))
         (instance face :init :vertices (list (float-vector 193.5 -11.7416 296.0) (float-vector 200.0 -9.99991 296.0) (float-vector 200.0 -9.99991 194.0) (float-vector 193.5 -11.7416 194.0)))
         (instance face :init :vertices (list (float-vector 200.0 -9.99991 296.0) (float-vector 206.5 -11.7416 296.0) (float-vector 206.5 -11.7416 194.0) (float-vector 200.0 -9.99991 194.0)))
         (instance face :init :vertices (list (float-vector 206.5 -11.7416 296.0) (float-vector 211.258 -16.4999 296.0) (float-vector 211.258 -16.4999 194.0) (float-vector 206.5 -11.7416 194.0)))
         (instance face :init :vertices (list (float-vector 211.258 -16.4999 296.0) (float-vector 213.0 -22.9999 296.0) (float-vector 213.0 -22.9999 194.0) (float-vector 211.258 -16.4999 194.0)))
         (instance face :init :vertices (list (float-vector 213.0 -22.9999 296.0) (float-vector 211.258 -29.4999 296.0) (float-vector 211.258 -29.4999 194.0) (float-vector 213.0 -22.9999 194.0)))
         (instance face :init :vertices (list (float-vector 211.258 -29.4999 296.0) (float-vector 206.5 -34.2582 296.0) (float-vector 206.5 -34.2582 194.0) (float-vector 211.258 -29.4999 194.0)))
         (instance face :init :vertices (list (float-vector 206.5 -34.2582 296.0) (float-vector 200.0 -35.9999 296.0) (float-vector 200.0 -35.9999 194.0) (float-vector 206.5 -34.2582 194.0)))
         (instance face :init :vertices (list (float-vector 147.5 59.0001 296.0) (float-vector 147.5 59.0001 304.0) (float-vector 252.5 59.0001 304.0) (float-vector 252.5 59.0001 296.0)))
         (instance face :init :vertices (list (float-vector 147.5 59.0001 296.0) (float-vector 147.5 -58.9999 296.0) (float-vector 147.5 -58.9999 304.0) (float-vector 147.5 59.0001 304.0)))
         (instance face :init :vertices (list (float-vector 147.5 -58.9999 296.0) (float-vector 252.5 -58.9999 296.0) (float-vector 252.5 -58.9999 304.0) (float-vector 147.5 -58.9999 304.0)))
         (instance face :init :vertices (list (float-vector 252.5 -58.9999 304.0) (float-vector 252.5 59.0001 304.0) (float-vector 147.5 59.0001 304.0) (float-vector 147.5 -58.9999 304.0)))
         (instance face :init :vertices (list (float-vector 252.5 -58.9999 296.0) (float-vector 252.5 59.0001 296.0) (float-vector 252.5 59.0001 304.0) (float-vector 252.5 -58.9999 304.0)))
         (instance face :init :vertices (list (float-vector 252.5 59.0001 296.0) (float-vector 252.5 -58.9999 296.0) (float-vector 147.5 -58.9999 296.0) (float-vector 147.5 59.0001 296.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 210.0 17.0001 296.0) (float-vector 190.0 17.0001 296.0) (float-vector 190.0 -6.99992 296.0) (float-vector 210.0 -6.99991 296.0)))
         (instance hole :init :vertices (list (float-vector 200.0 -35.9999 296.0) (float-vector 206.5 -34.2582 296.0) (float-vector 211.258 -29.4999 296.0) (float-vector 213.0 -22.9999 296.0) (float-vector 211.258 -16.4999 296.0) (float-vector 206.5 -11.7416 296.0) (float-vector 200.0 -9.99991 296.0) (float-vector 193.5 -11.7416 296.0) (float-vector 188.742 -16.4999 296.0) (float-vector 187.0 -22.9999 296.0) (float-vector 188.742 -29.4999 296.0) (float-vector 193.5 -34.2582 296.0)))
         (instance hole :init :vertices (list (float-vector 187.876 26.0001 296.0) (float-vector 193.0 20.8757 296.0) (float-vector 200.0 19.0001 296.0) (float-vector 207.0 20.8757 296.0) (float-vector 212.124 26.0001 296.0) (float-vector 214.0 33.0001 296.0) (float-vector 212.124 40.0001 296.0) (float-vector 207.0 45.1244 296.0) (float-vector 200.0 47.0001 296.0) (float-vector 193.0 45.1244 296.0) (float-vector 187.876 40.0001 296.0) (float-vector 186.0 33.0001 296.0)))
))
         (instance face :init :vertices (list (float-vector 210.0 17.0001 296.0) (float-vector 210.0 17.0001 251.5) (float-vector 190.0 17.0001 251.5) (float-vector 190.0 17.0001 296.0)))
         (instance face :init :vertices (list (float-vector 190.0 17.0001 251.5) (float-vector 190.0 -6.99992 251.5) (float-vector 190.0 -6.99992 296.0) (float-vector 190.0 17.0001 296.0)))
         (instance face :init :vertices (list (float-vector 190.0 -6.99992 251.5) (float-vector 210.0 -6.99991 251.5) (float-vector 210.0 -6.99991 296.0) (float-vector 190.0 -6.99992 296.0)))
         (instance face :init :vertices (list (float-vector 210.0 -6.99991 251.5) (float-vector 210.0 17.0001 251.5) (float-vector 210.0 17.0001 296.0) (float-vector 210.0 -6.99991 296.0)))
         (instance face :init :vertices (list (float-vector 210.0 17.0001 251.5) (float-vector 210.0 -6.99991 251.5) (float-vector 190.0 -6.99992 251.5) (float-vector 190.0 17.0001 251.5)))
         (instance face :init :vertices (list (float-vector 200.0 19.0001 296.0) (float-vector 200.0 19.0001 286.0) (float-vector 207.0 20.8757 286.0) (float-vector 207.0 20.8757 296.0)))
         (instance face :init :vertices (list (float-vector 207.0 20.8757 286.0) (float-vector 212.124 26.0001 286.0) (float-vector 212.124 26.0001 296.0) (float-vector 207.0 20.8757 296.0)))
         (instance face :init :vertices (list (float-vector 212.124 26.0001 286.0) (float-vector 214.0 33.0001 286.0) (float-vector 214.0 33.0001 296.0) (float-vector 212.124 26.0001 296.0)))
         (instance face :init :vertices (list (float-vector 214.0 33.0001 286.0) (float-vector 212.124 40.0001 286.0) (float-vector 212.124 40.0001 296.0) (float-vector 214.0 33.0001 296.0)))
         (instance face :init :vertices (list (float-vector 212.124 40.0001 286.0) (float-vector 207.0 45.1244 286.0) (float-vector 207.0 45.1244 296.0) (float-vector 212.124 40.0001 296.0)))
         (instance face :init :vertices (list (float-vector 207.0 45.1244 286.0) (float-vector 200.0 47.0001 286.0) (float-vector 200.0 47.0001 296.0) (float-vector 207.0 45.1244 296.0)))
         (instance face :init :vertices (list (float-vector 200.0 47.0001 286.0) (float-vector 193.0 45.1244 286.0) (float-vector 193.0 45.1244 296.0) (float-vector 200.0 47.0001 296.0)))
         (instance face :init :vertices (list (float-vector 193.0 45.1244 286.0) (float-vector 187.876 40.0001 286.0) (float-vector 187.876 40.0001 296.0) (float-vector 193.0 45.1244 296.0)))
         (instance face :init :vertices (list (float-vector 187.876 40.0001 286.0) (float-vector 186.0 33.0001 286.0) (float-vector 186.0 33.0001 296.0) (float-vector 187.876 40.0001 296.0)))
         (instance face :init :vertices (list (float-vector 186.0 33.0001 286.0) (float-vector 187.876 26.0001 286.0) (float-vector 187.876 26.0001 296.0) (float-vector 186.0 33.0001 296.0)))
         (instance face :init :vertices (list (float-vector 187.876 26.0001 286.0) (float-vector 193.0 20.8757 286.0) (float-vector 193.0 20.8757 296.0) (float-vector 187.876 26.0001 296.0)))
         (instance face :init :vertices (list (float-vector 193.0 20.8757 286.0) (float-vector 200.0 19.0001 286.0) (float-vector 200.0 19.0001 296.0) (float-vector 193.0 20.8757 296.0)))
         (instance face :init :vertices (list (float-vector 200.0 19.0001 286.0) (float-vector 193.0 20.8757 286.0) (float-vector 187.876 26.0001 286.0) (float-vector 186.0 33.0001 286.0) (float-vector 187.876 40.0001 286.0) (float-vector 193.0 45.1244 286.0) (float-vector 200.0 47.0001 286.0) (float-vector 207.0 45.1244 286.0) (float-vector 212.124 40.0001 286.0) (float-vector 214.0 33.0001 286.0) (float-vector 212.124 26.0001 286.0) (float-vector 207.0 20.8757 286.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 77.0 -102.0 -71.0) (float-vector 76.9999 102.0 -71.0) (float-vector -77.0 102.0 -71.0) (float-vector -76.9999 -102.0 -71.0)))
         (instance face :init :vertices (list (float-vector 76.9999 102.0 63.0) (float-vector 76.9999 102.0 -71.0) (float-vector 77.0 -102.0 -71.0) (float-vector 77.0 -102.0 63.0)))
         (instance face :init :vertices (list (float-vector -77.0 102.0 63.0) (float-vector 76.9999 102.0 63.0) (float-vector 77.0 -102.0 63.0) (float-vector -76.9999 -102.0 63.0)))
         (instance face :init :vertices (list (float-vector -76.9999 -102.0 63.0) (float-vector -76.9999 -102.0 -71.0) (float-vector -77.0 102.0 -71.0) (float-vector -77.0 102.0 63.0)))
         (instance face :init :vertices (list (float-vector 79.0 -102.0 -87.0) (float-vector 78.9999 102.0 -87.0) (float-vector 78.9999 102.0 87.0) (float-vector 79.0 72.0 87.0) (float-vector 78.9999 72.0 82.0) (float-vector 79.0 -72.0 82.0) (float-vector 79.0 -71.9999 87.0) (float-vector 79.0 -102.0 87.0)))
         (instance face :init :vertices (list (float-vector -79.0 102.0 -87.0) (float-vector 78.9999 102.0 -87.0) (float-vector 79.0 -102.0 -87.0) (float-vector -78.9999 -102.0 -87.0)))
         (instance face :init :vertices (list (float-vector -79.0 102.0 87.0) (float-vector -79.0 71.9999 87.0) (float-vector 79.0 72.0 87.0) (float-vector 78.9999 102.0 87.0)))
         (instance face :init :vertices (list (float-vector -78.9999 -102.0 87.0) (float-vector 79.0 -102.0 87.0) (float-vector 79.0 -71.9999 87.0) (float-vector -79.0 -72.0 87.0)))
         (instance face :init :vertices (list (float-vector -78.9999 -102.0 87.0) (float-vector -78.9999 -102.0 -87.0) (float-vector 79.0 -102.0 -87.0) (float-vector 79.0 -102.0 87.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -76.9999 -102.0 -71.0) (float-vector -76.9999 -102.0 63.0) (float-vector 77.0 -102.0 63.0) (float-vector 77.0 -102.0 -71.0)))
))
         (instance face :init :vertices (list (float-vector -79.0 102.0 87.0) (float-vector -79.0 102.0 -87.0) (float-vector -78.9999 -102.0 -87.0) (float-vector -78.9999 -102.0 87.0) (float-vector -79.0 -72.0 87.0) (float-vector -78.9999 -72.0 82.0) (float-vector -79.0 72.0 82.0) (float-vector -79.0 71.9999 87.0)))
         (instance face :init :vertices (list (float-vector -79.0 102.0 -87.0) (float-vector -79.0 102.0 87.0) (float-vector 78.9999 102.0 87.0) (float-vector 78.9999 102.0 -87.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -77.0 102.0 63.0) (float-vector -77.0 102.0 -71.0) (float-vector 76.9999 102.0 -71.0) (float-vector 76.9999 102.0 63.0)))
))
         (instance face :init :vertices (list (float-vector 190.0 72.0001 302.0) (float-vector 190.0 72.0001 82.0) (float-vector 78.9999 72.0 82.0) (float-vector 79.0 72.0 87.0) (float-vector -79.0 71.9999 87.0) (float-vector -79.0 72.0 82.0) (float-vector -190.0 71.9999 82.0) (float-vector -190.0 71.9999 302.0)))
         (instance face :init :vertices (list (float-vector -190.0 71.9999 82.0) (float-vector -190.0 -72.0001 82.0) (float-vector -190.0 -72.0001 302.0) (float-vector -190.0 71.9999 302.0)))
         (instance face :init :vertices (list (float-vector -190.0 -72.0001 82.0) (float-vector -78.9999 -72.0 82.0) (float-vector -79.0 -72.0 87.0) (float-vector 79.0 -71.9999 87.0) (float-vector 79.0 -72.0 82.0) (float-vector 190.0 -71.9999 82.0) (float-vector 190.0 -71.9999 302.0) (float-vector -190.0 -72.0001 302.0)))
         (instance face :init :vertices (list (float-vector 190.0 -71.9999 302.0) (float-vector 190.0 72.0001 302.0) (float-vector -190.0 71.9999 302.0) (float-vector -190.0 -72.0001 302.0)))
         (instance face :init :vertices (list (float-vector 190.0 -71.9999 82.0) (float-vector 190.0 72.0001 82.0) (float-vector 190.0 72.0001 302.0) (float-vector 190.0 -71.9999 302.0)))
         (instance face :init :vertices (list (float-vector -78.9999 -72.0 82.0) (float-vector -190.0 -72.0001 82.0) (float-vector -190.0 71.9999 82.0) (float-vector -79.0 72.0 82.0)))
         (instance face :init :vertices (list (float-vector 190.0 72.0001 82.0) (float-vector 190.0 -71.9999 82.0) (float-vector 79.0 -72.0 82.0) (float-vector 78.9999 72.0 82.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -110.0 96.9999 297.5) (float-vector -110.0 96.9999 182.5) (float-vector -170.0 96.9999 182.5) (float-vector -170.0 96.9999 297.5)))
         (instance face :init :vertices (list (float-vector -170.0 96.9999 182.5) (float-vector -170.0 71.9999 182.5) (float-vector -170.0 71.9999 297.5) (float-vector -170.0 96.9999 297.5)))
         (instance face :init :vertices (list (float-vector -170.0 71.9999 182.5) (float-vector -110.0 71.9999 182.5) (float-vector -110.0 71.9999 297.5) (float-vector -170.0 71.9999 297.5)))
         (instance face :init :vertices (list (float-vector -110.0 71.9999 297.5) (float-vector -110.0 96.9999 297.5) (float-vector -170.0 96.9999 297.5) (float-vector -170.0 71.9999 297.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -121.5 81.9019 297.5) (float-vector -122.598 82.9999 297.5) (float-vector -123.0 84.4999 297.5) (float-vector -122.598 85.9999 297.5) (float-vector -121.5 87.098 297.5) (float-vector -120.0 87.4999 297.5) (float-vector -118.5 87.098 297.5) (float-vector -117.402 85.9999 297.5) (float-vector -117.0 84.4999 297.5) (float-vector -117.402 82.9999 297.5) (float-vector -118.5 81.9019 297.5) (float-vector -120.0 81.4999 297.5)))
))
         (instance face :init :vertices (list (float-vector -110.0 71.9999 182.5) (float-vector -110.0 96.9999 182.5) (float-vector -110.0 96.9999 297.5) (float-vector -110.0 71.9999 297.5)))
         (instance face :init :vertices (list (float-vector -110.0 96.9999 182.5) (float-vector -110.0 71.9999 182.5) (float-vector -170.0 71.9999 182.5) (float-vector -170.0 96.9999 182.5)))
         (instance face :init :vertices (list (float-vector -120.0 81.4999 359.0) (float-vector -120.0 81.4999 297.5) (float-vector -118.5 81.9019 297.5) (float-vector -118.5 81.9019 359.0)))
         (instance face :init :vertices (list (float-vector -117.402 82.9999 297.5) (float-vector -117.402 82.9999 359.0) (float-vector -118.5 81.9019 359.0) (float-vector -118.5 81.9019 297.5)))
         (instance face :init :vertices (list (float-vector -117.0 84.4999 297.5) (float-vector -117.0 84.4999 359.0) (float-vector -117.402 82.9999 359.0) (float-vector -117.402 82.9999 297.5)))
         (instance face :init :vertices (list (float-vector -117.402 85.9999 297.5) (float-vector -117.402 85.9999 359.0) (float-vector -117.0 84.4999 359.0) (float-vector -117.0 84.4999 297.5)))
         (instance face :init :vertices (list (float-vector -118.5 87.098 297.5) (float-vector -118.5 87.098 359.0) (float-vector -117.402 85.9999 359.0) (float-vector -117.402 85.9999 297.5)))
         (instance face :init :vertices (list (float-vector -120.0 87.4999 297.5) (float-vector -120.0 87.4999 359.0) (float-vector -118.5 87.098 359.0) (float-vector -118.5 87.098 297.5)))
         (instance face :init :vertices (list (float-vector -121.5 87.098 297.5) (float-vector -121.5 87.098 359.0) (float-vector -120.0 87.4999 359.0) (float-vector -120.0 87.4999 297.5)))
         (instance face :init :vertices (list (float-vector -122.598 85.9999 297.5) (float-vector -122.598 85.9999 359.0) (float-vector -121.5 87.098 359.0) (float-vector -121.5 87.098 297.5)))
         (instance face :init :vertices (list (float-vector -123.0 84.4999 297.5) (float-vector -123.0 84.4999 359.0) (float-vector -122.598 85.9999 359.0) (float-vector -122.598 85.9999 297.5)))
         (instance face :init :vertices (list (float-vector -122.598 82.9999 297.5) (float-vector -122.598 82.9999 359.0) (float-vector -123.0 84.4999 359.0) (float-vector -123.0 84.4999 297.5)))
         (instance face :init :vertices (list (float-vector -121.5 81.9019 297.5) (float-vector -121.5 81.9019 359.0) (float-vector -122.598 82.9999 359.0) (float-vector -122.598 82.9999 297.5)))
         (instance face :init :vertices (list (float-vector -121.5 81.9019 359.0) (float-vector -120.0 81.4999 359.0) (float-vector -118.5 81.9019 359.0) (float-vector -117.402 82.9999 359.0) (float-vector -117.0 84.4999 359.0) (float-vector -117.402 85.9999 359.0) (float-vector -118.5 87.098 359.0) (float-vector -120.0 87.4999 359.0) (float-vector -121.5 87.098 359.0) (float-vector -122.598 85.9999 359.0) (float-vector -123.0 84.4999 359.0) (float-vector -122.598 82.9999 359.0)))
         (instance face :init :vertices (list (float-vector -120.0 81.4999 359.0) (float-vector -121.5 81.9019 359.0) (float-vector -121.5 81.9019 297.5) (float-vector -120.0 81.4999 297.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 72.0 -45.0 20.0) (float-vector 72.0 45.0 20.0) (float-vector 1.99998 45.0 20.0) (float-vector 2.00002 -45.0 20.0)))
         (instance face :init :vertices (list (float-vector 72.0 45.0 -80.0) (float-vector 72.0 -45.0 -80.0) (float-vector 2.00002 -45.0 -80.0) (float-vector 1.99998 45.0 -80.0)))
         (instance face :init :vertices (list (float-vector 72.0 -45.0 20.0) (float-vector 72.0 -45.0 -80.0) (float-vector 72.0 45.0 -80.0) (float-vector 72.0 45.0 20.0)))
         (instance face :init :vertices (list (float-vector 2.00002 -45.0 20.0) (float-vector 2.00002 -45.0 -80.0) (float-vector 72.0 -45.0 -80.0) (float-vector 72.0 -45.0 20.0)))
         (instance face :init :vertices (list (float-vector 1.99998 45.0 20.0) (float-vector 1.99998 45.0 -80.0) (float-vector 2.00002 -45.0 -80.0) (float-vector 2.00002 -45.0 20.0)))
         (instance face :init :vertices (list (float-vector 72.0 45.0 20.0) (float-vector 72.0 45.0 -80.0) (float-vector 1.99998 45.0 -80.0) (float-vector 1.99998 45.0 20.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -1.99998 -45.0 20.0) (float-vector -2.00002 45.0 20.0) (float-vector -72.0 45.0 20.0) (float-vector -72.0 -45.0 20.0)))
         (instance face :init :vertices (list (float-vector -2.00002 45.0 -80.0) (float-vector -1.99998 -45.0 -80.0) (float-vector -72.0 -45.0 -80.0) (float-vector -72.0 45.0 -80.0)))
         (instance face :init :vertices (list (float-vector -1.99998 -45.0 20.0) (float-vector -1.99998 -45.0 -80.0) (float-vector -2.00002 45.0 -80.0) (float-vector -2.00002 45.0 20.0)))
         (instance face :init :vertices (list (float-vector -72.0 -45.0 20.0) (float-vector -72.0 -45.0 -80.0) (float-vector -1.99998 -45.0 -80.0) (float-vector -1.99998 -45.0 20.0)))
         (instance face :init :vertices (list (float-vector -72.0 45.0 20.0) (float-vector -72.0 45.0 -80.0) (float-vector -72.0 -45.0 -80.0) (float-vector -72.0 -45.0 20.0)))
         (instance face :init :vertices (list (float-vector -2.00002 45.0 20.0) (float-vector -2.00002 45.0 -80.0) (float-vector -72.0 45.0 -80.0) (float-vector -72.0 45.0 20.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -205.0 49.4999 274.5) (float-vector -190.0 49.4999 274.5) (float-vector -190.0 49.4999 249.5) (float-vector -205.0 49.4999 249.5)))
         (instance face :init :vertices (list (float-vector -190.0 49.4999 249.5) (float-vector -190.0 0.499918 249.5) (float-vector -205.0 0.499912 249.5) (float-vector -205.0 49.4999 249.5)))
         (instance face :init :vertices (list (float-vector -190.0 0.499918 249.5) (float-vector -190.0 0.499917 274.5) (float-vector -205.0 0.499912 274.5) (float-vector -205.0 0.499912 249.5)))
         (instance face :init :vertices (list (float-vector -205.0 0.499912 274.5) (float-vector -205.0 49.4999 274.5) (float-vector -205.0 49.4999 249.5) (float-vector -205.0 0.499912 249.5)))
         (instance face :init :vertices (list (float-vector -190.0 0.499917 274.5) (float-vector -190.0 49.4999 274.5) (float-vector -205.0 49.4999 274.5) (float-vector -205.0 0.499912 274.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -195.0 30.6698 274.5) (float-vector -197.5 29.9999 274.5) (float-vector -200.0 30.6698 274.5) (float-vector -201.83 32.4999 274.5) (float-vector -202.5 34.9999 274.5) (float-vector -201.83 37.4999 274.5) (float-vector -200.0 39.33 274.5) (float-vector -197.5 39.9999 274.5) (float-vector -195.0 39.33 274.5) (float-vector -193.17 37.4999 274.5) (float-vector -192.5 34.9999 274.5) (float-vector -193.17 32.4999 274.5)))
))
         (instance face :init :vertices (list (float-vector -190.0 49.4999 274.5) (float-vector -190.0 0.499917 274.5) (float-vector -190.0 0.499918 249.5) (float-vector -190.0 49.4999 249.5)))
         (instance face :init :vertices (list (float-vector -197.5 33.9999 387.5) (float-vector -198.0 34.1339 387.5) (float-vector -198.0 34.1339 288.5) (float-vector -197.5 33.9999 288.5)))
         (instance face :init :vertices (list (float-vector -197.5 33.9999 387.5) (float-vector -197.0 34.1339 387.5) (float-vector -196.634 34.4999 387.5) (float-vector -196.5 34.9999 387.5) (float-vector -196.634 35.4999 387.5) (float-vector -197.0 35.8659 387.5) (float-vector -197.5 35.9999 387.5) (float-vector -198.0 35.8659 387.5) (float-vector -198.366 35.4999 387.5) (float-vector -198.5 34.9999 387.5) (float-vector -198.366 34.4999 387.5) (float-vector -198.0 34.1339 387.5)))
         (instance face :init :vertices (list (float-vector -198.366 34.4999 387.5) (float-vector -198.366 34.4999 288.5) (float-vector -198.0 34.1339 288.5) (float-vector -198.0 34.1339 387.5)))
         (instance face :init :vertices (list (float-vector -198.5 34.9999 387.5) (float-vector -198.5 34.9999 288.5) (float-vector -198.366 34.4999 288.5) (float-vector -198.366 34.4999 387.5)))
         (instance face :init :vertices (list (float-vector -198.366 35.4999 387.5) (float-vector -198.366 35.4999 288.5) (float-vector -198.5 34.9999 288.5) (float-vector -198.5 34.9999 387.5)))
         (instance face :init :vertices (list (float-vector -198.0 35.8659 387.5) (float-vector -198.0 35.8659 288.5) (float-vector -198.366 35.4999 288.5) (float-vector -198.366 35.4999 387.5)))
         (instance face :init :vertices (list (float-vector -197.5 35.9999 387.5) (float-vector -197.5 35.9999 288.5) (float-vector -198.0 35.8659 288.5) (float-vector -198.0 35.8659 387.5)))
         (instance face :init :vertices (list (float-vector -197.0 35.8659 387.5) (float-vector -197.0 35.8659 288.5) (float-vector -197.5 35.9999 288.5) (float-vector -197.5 35.9999 387.5)))
         (instance face :init :vertices (list (float-vector -196.634 35.4999 387.5) (float-vector -196.634 35.4999 288.5) (float-vector -197.0 35.8659 288.5) (float-vector -197.0 35.8659 387.5)))
         (instance face :init :vertices (list (float-vector -196.5 34.9999 387.5) (float-vector -196.5 34.9999 288.5) (float-vector -196.634 35.4999 288.5) (float-vector -196.634 35.4999 387.5)))
         (instance face :init :vertices (list (float-vector -196.634 34.4999 387.5) (float-vector -196.634 34.4999 288.5) (float-vector -196.5 34.9999 288.5) (float-vector -196.5 34.9999 387.5)))
         (instance face :init :vertices (list (float-vector -197.0 34.1339 387.5) (float-vector -197.0 34.1339 288.5) (float-vector -196.634 34.4999 288.5) (float-vector -196.634 34.4999 387.5)))
         (instance face :init :vertices (list (float-vector -197.5 33.9999 288.5) (float-vector -197.0 34.1339 288.5) (float-vector -197.0 34.1339 387.5) (float-vector -197.5 33.9999 387.5)))
         (instance face :init :vertices (list (float-vector -197.5 29.9999 274.5) (float-vector -197.5 29.9999 288.5) (float-vector -200.0 30.6698 288.5) (float-vector -200.0 30.6698 274.5)))
         (instance face :init :vertices (list (float-vector -197.5 29.9999 288.5) (float-vector -195.0 30.6698 288.5) (float-vector -193.17 32.4999 288.5) (float-vector -192.5 34.9999 288.5) (float-vector -193.17 37.4999 288.5) (float-vector -195.0 39.33 288.5) (float-vector -197.5 39.9999 288.5) (float-vector -200.0 39.33 288.5) (float-vector -201.83 37.4999 288.5) (float-vector -202.5 34.9999 288.5) (float-vector -201.83 32.4999 288.5) (float-vector -200.0 30.6698 288.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -197.0 34.1339 288.5) (float-vector -197.5 33.9999 288.5) (float-vector -198.0 34.1339 288.5) (float-vector -198.366 34.4999 288.5) (float-vector -198.5 34.9999 288.5) (float-vector -198.366 35.4999 288.5) (float-vector -198.0 35.8659 288.5) (float-vector -197.5 35.9999 288.5) (float-vector -197.0 35.8659 288.5) (float-vector -196.634 35.4999 288.5) (float-vector -196.5 34.9999 288.5) (float-vector -196.634 34.4999 288.5)))
))
         (instance face :init :vertices (list (float-vector -201.83 32.4999 288.5) (float-vector -201.83 32.4999 274.5) (float-vector -200.0 30.6698 274.5) (float-vector -200.0 30.6698 288.5)))
         (instance face :init :vertices (list (float-vector -202.5 34.9999 288.5) (float-vector -202.5 34.9999 274.5) (float-vector -201.83 32.4999 274.5) (float-vector -201.83 32.4999 288.5)))
         (instance face :init :vertices (list (float-vector -201.83 37.4999 288.5) (float-vector -201.83 37.4999 274.5) (float-vector -202.5 34.9999 274.5) (float-vector -202.5 34.9999 288.5)))
         (instance face :init :vertices (list (float-vector -200.0 39.33 288.5) (float-vector -200.0 39.33 274.5) (float-vector -201.83 37.4999 274.5) (float-vector -201.83 37.4999 288.5)))
         (instance face :init :vertices (list (float-vector -197.5 39.9999 288.5) (float-vector -197.5 39.9999 274.5) (float-vector -200.0 39.33 274.5) (float-vector -200.0 39.33 288.5)))
         (instance face :init :vertices (list (float-vector -195.0 39.33 288.5) (float-vector -195.0 39.33 274.5) (float-vector -197.5 39.9999 274.5) (float-vector -197.5 39.9999 288.5)))
         (instance face :init :vertices (list (float-vector -193.17 37.4999 288.5) (float-vector -193.17 37.4999 274.5) (float-vector -195.0 39.33 274.5) (float-vector -195.0 39.33 288.5)))
         (instance face :init :vertices (list (float-vector -192.5 34.9999 288.5) (float-vector -192.5 34.9999 274.5) (float-vector -193.17 37.4999 274.5) (float-vector -193.17 37.4999 288.5)))
         (instance face :init :vertices (list (float-vector -193.17 32.4999 288.5) (float-vector -193.17 32.4999 274.5) (float-vector -192.5 34.9999 274.5) (float-vector -192.5 34.9999 288.5)))
         (instance face :init :vertices (list (float-vector -195.0 30.6698 288.5) (float-vector -195.0 30.6698 274.5) (float-vector -193.17 32.4999 274.5) (float-vector -193.17 32.4999 288.5)))
         (instance face :init :vertices (list (float-vector -195.0 30.6698 274.5) (float-vector -195.0 30.6698 288.5) (float-vector -197.5 29.9999 288.5) (float-vector -197.5 29.9999 274.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 180.0 65.0 100.0) (float-vector -40.0001 65.0 100.0) (float-vector -50.0001 125.0 100.0) (float-vector -40.0001 164.0 100.0) (float-vector -20.0001 181.0 100.0) (float-vector -7.629395e-05 191.0 100.0) (float-vector 19.9999 192.0 100.0) (float-vector 39.9999 189.0 100.0) (float-vector 59.9999 176.0 100.0) (float-vector 79.9999 155.0 100.0) (float-vector 99.9999 121.0 100.0) (float-vector 120.0 88.0 100.0) (float-vector 140.0 75.0 100.0) (float-vector 160.0 67.0 100.0)))
         (instance face :init :vertices (list (float-vector -40.0002 65.0 300.0) (float-vector 180.0 65.0 300.0) (float-vector 160.0 67.0 300.0) (float-vector 140.0 75.0 300.0) (float-vector 120.0 88.0 300.0) (float-vector 99.9998 121.0 300.0) (float-vector 79.9998 155.0 300.0) (float-vector 59.9998 176.0 300.0) (float-vector 39.9998 189.0 300.0) (float-vector 19.9998 192.0 300.0) (float-vector -0.000214 191.0 300.0) (float-vector -20.0002 181.0 300.0) (float-vector -40.0002 164.0 300.0) (float-vector -50.0002 125.0 300.0)))
         (instance face :init :vertices (list (float-vector 180.0 65.0 100.0) (float-vector 180.0 65.0 300.0) (float-vector -40.0002 65.0 300.0) (float-vector -40.0001 65.0 100.0)))
         (instance face :init :vertices (list (float-vector 160.0 67.0 100.0) (float-vector 160.0 67.0 300.0) (float-vector 180.0 65.0 300.0) (float-vector 180.0 65.0 100.0)))
         (instance face :init :vertices (list (float-vector 140.0 75.0 100.0) (float-vector 140.0 75.0 300.0) (float-vector 160.0 67.0 300.0) (float-vector 160.0 67.0 100.0)))
         (instance face :init :vertices (list (float-vector 120.0 88.0 100.0) (float-vector 120.0 88.0 300.0) (float-vector 140.0 75.0 300.0) (float-vector 140.0 75.0 100.0)))
         (instance face :init :vertices (list (float-vector 99.9999 121.0 100.0) (float-vector 99.9998 121.0 300.0) (float-vector 120.0 88.0 300.0) (float-vector 120.0 88.0 100.0)))
         (instance face :init :vertices (list (float-vector 79.9999 155.0 100.0) (float-vector 79.9998 155.0 300.0) (float-vector 99.9998 121.0 300.0) (float-vector 99.9999 121.0 100.0)))
         (instance face :init :vertices (list (float-vector 59.9999 176.0 100.0) (float-vector 59.9998 176.0 300.0) (float-vector 79.9998 155.0 300.0) (float-vector 79.9999 155.0 100.0)))
         (instance face :init :vertices (list (float-vector 39.9999 189.0 100.0) (float-vector 39.9998 189.0 300.0) (float-vector 59.9998 176.0 300.0) (float-vector 59.9999 176.0 100.0)))
         (instance face :init :vertices (list (float-vector 19.9999 192.0 100.0) (float-vector 19.9998 192.0 300.0) (float-vector 39.9998 189.0 300.0) (float-vector 39.9999 189.0 100.0)))
         (instance face :init :vertices (list (float-vector -7.629395e-05 191.0 100.0) (float-vector -0.000214 191.0 300.0) (float-vector 19.9998 192.0 300.0) (float-vector 19.9999 192.0 100.0)))
         (instance face :init :vertices (list (float-vector -20.0001 181.0 100.0) (float-vector -20.0002 181.0 300.0) (float-vector -0.000214 191.0 300.0) (float-vector -7.629395e-05 191.0 100.0)))
         (instance face :init :vertices (list (float-vector -40.0001 164.0 100.0) (float-vector -40.0002 164.0 300.0) (float-vector -20.0002 181.0 300.0) (float-vector -20.0001 181.0 100.0)))
         (instance face :init :vertices (list (float-vector -50.0001 125.0 100.0) (float-vector -50.0002 125.0 300.0) (float-vector -40.0002 164.0 300.0) (float-vector -40.0001 164.0 100.0)))
         (instance face :init :vertices (list (float-vector -40.0001 65.0 100.0) (float-vector -40.0002 65.0 300.0) (float-vector -50.0002 125.0 300.0) (float-vector -50.0001 125.0 100.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 180.0 -64.9998 300.0) (float-vector -40.0 -65.0 300.0) (float-vector -49.9999 -125.0 300.0) (float-vector -39.9999 -164.0 300.0) (float-vector -19.9999 -181.0 300.0) (float-vector 0.000153 -191.0 300.0) (float-vector 20.0002 -192.0 300.0) (float-vector 40.0002 -189.0 300.0) (float-vector 60.0001 -176.0 300.0) (float-vector 80.0001 -155.0 300.0) (float-vector 100.0 -121.0 300.0) (float-vector 120.0 -87.9999 300.0) (float-vector 140.0 -74.9999 300.0) (float-vector 160.0 -66.9999 300.0)))
         (instance face :init :vertices (list (float-vector -40.0 -65.0 100.0) (float-vector 180.0 -64.9998 100.0) (float-vector 160.0 -66.9999 100.0) (float-vector 140.0 -74.9999 100.0) (float-vector 120.0 -87.9999 100.0) (float-vector 100.0 -121.0 100.0) (float-vector 80.0001 -155.0 100.0) (float-vector 60.0001 -176.0 100.0) (float-vector 40.0002 -189.0 100.0) (float-vector 20.0002 -192.0 100.0) (float-vector 0.000153 -191.0 100.0) (float-vector -19.9999 -181.0 100.0) (float-vector -39.9999 -164.0 100.0) (float-vector -49.9999 -125.0 100.0)))
         (instance face :init :vertices (list (float-vector 180.0 -64.9998 300.0) (float-vector 180.0 -64.9998 100.0) (float-vector -40.0 -65.0 100.0) (float-vector -40.0 -65.0 300.0)))
         (instance face :init :vertices (list (float-vector 160.0 -66.9999 300.0) (float-vector 160.0 -66.9999 100.0) (float-vector 180.0 -64.9998 100.0) (float-vector 180.0 -64.9998 300.0)))
         (instance face :init :vertices (list (float-vector 140.0 -74.9999 300.0) (float-vector 140.0 -74.9999 100.0) (float-vector 160.0 -66.9999 100.0) (float-vector 160.0 -66.9999 300.0)))
         (instance face :init :vertices (list (float-vector 120.0 -87.9999 300.0) (float-vector 120.0 -87.9999 100.0) (float-vector 140.0 -74.9999 100.0) (float-vector 140.0 -74.9999 300.0)))
         (instance face :init :vertices (list (float-vector 100.0 -121.0 300.0) (float-vector 100.0 -121.0 100.0) (float-vector 120.0 -87.9999 100.0) (float-vector 120.0 -87.9999 300.0)))
         (instance face :init :vertices (list (float-vector 80.0001 -155.0 300.0) (float-vector 80.0001 -155.0 100.0) (float-vector 100.0 -121.0 100.0) (float-vector 100.0 -121.0 300.0)))
         (instance face :init :vertices (list (float-vector 60.0001 -176.0 300.0) (float-vector 60.0001 -176.0 100.0) (float-vector 80.0001 -155.0 100.0) (float-vector 80.0001 -155.0 300.0)))
         (instance face :init :vertices (list (float-vector 40.0002 -189.0 300.0) (float-vector 40.0002 -189.0 100.0) (float-vector 60.0001 -176.0 100.0) (float-vector 60.0001 -176.0 300.0)))
         (instance face :init :vertices (list (float-vector 20.0002 -192.0 300.0) (float-vector 20.0002 -192.0 100.0) (float-vector 40.0002 -189.0 100.0) (float-vector 40.0002 -189.0 300.0)))
         (instance face :init :vertices (list (float-vector 0.000153 -191.0 300.0) (float-vector 0.000153 -191.0 100.0) (float-vector 20.0002 -192.0 100.0) (float-vector 20.0002 -192.0 300.0)))
         (instance face :init :vertices (list (float-vector -19.9999 -181.0 300.0) (float-vector -19.9999 -181.0 100.0) (float-vector 0.000153 -191.0 100.0) (float-vector 0.000153 -191.0 300.0)))
         (instance face :init :vertices (list (float-vector -39.9999 -164.0 300.0) (float-vector -39.9999 -164.0 100.0) (float-vector -19.9999 -181.0 100.0) (float-vector -19.9999 -181.0 300.0)))
         (instance face :init :vertices (list (float-vector -49.9999 -125.0 300.0) (float-vector -49.9999 -125.0 100.0) (float-vector -39.9999 -164.0 100.0) (float-vector -39.9999 -164.0 300.0)))
         (instance face :init :vertices (list (float-vector -40.0 -65.0 300.0) (float-vector -40.0 -65.0 100.0) (float-vector -49.9999 -125.0 100.0) (float-vector -49.9999 -125.0 300.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 205.0 69.5 299.5) (float-vector 190.0 69.5 299.5) (float-vector 190.0 44.5 299.5) (float-vector 205.0 44.5 299.5)))
         (instance face :init :vertices (list (float-vector 190.0 44.5 299.5) (float-vector 190.0 44.5 250.5) (float-vector 205.0 44.5 250.5) (float-vector 205.0 44.5 299.5)))
         (instance face :init :vertices (list (float-vector 190.0 44.5 250.5) (float-vector 190.0 69.5 250.5) (float-vector 205.0 69.5 250.5) (float-vector 205.0 44.5 250.5)))
         (instance face :init :vertices (list (float-vector 205.0 69.5 250.5) (float-vector 205.0 69.5 299.5) (float-vector 205.0 44.5 299.5) (float-vector 205.0 44.5 250.5)))
         (instance face :init :vertices (list (float-vector 190.0 69.5 250.5) (float-vector 190.0 69.5 299.5) (float-vector 205.0 69.5 299.5) (float-vector 205.0 69.5 250.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 195.0 69.5 280.67) (float-vector 197.5 69.5 280.0) (float-vector 200.0 69.5 280.67) (float-vector 201.83 69.5 282.5) (float-vector 202.5 69.5 285.0) (float-vector 201.83 69.5 287.5) (float-vector 200.0 69.5 289.33) (float-vector 197.5 69.5 290.0) (float-vector 195.0 69.5 289.33) (float-vector 193.17 69.5 287.5) (float-vector 192.5 69.5 285.0) (float-vector 193.17 69.5 282.5)))
))
         (instance face :init :vertices (list (float-vector 190.0 69.5 299.5) (float-vector 190.0 69.5 250.5) (float-vector 190.0 44.5 250.5) (float-vector 190.0 44.5 299.5)))
         (instance face :init :vertices (list (float-vector 197.5 182.5 284.0) (float-vector 198.0 182.5 284.134) (float-vector 198.0 83.5 284.134) (float-vector 197.5 83.5 284.0)))
         (instance face :init :vertices (list (float-vector 197.5 182.5 284.0) (float-vector 197.0 182.5 284.134) (float-vector 196.634 182.5 284.5) (float-vector 196.5 182.5 285.0) (float-vector 196.634 182.5 285.5) (float-vector 197.0 182.5 285.866) (float-vector 197.5 182.5 286.0) (float-vector 198.0 182.5 285.866) (float-vector 198.366 182.5 285.5) (float-vector 198.5 182.5 285.0) (float-vector 198.366 182.5 284.5) (float-vector 198.0 182.5 284.134)))
         (instance face :init :vertices (list (float-vector 198.366 182.5 284.5) (float-vector 198.366 83.5 284.5) (float-vector 198.0 83.5 284.134) (float-vector 198.0 182.5 284.134)))
         (instance face :init :vertices (list (float-vector 198.5 182.5 285.0) (float-vector 198.5 83.5 285.0) (float-vector 198.366 83.5 284.5) (float-vector 198.366 182.5 284.5)))
         (instance face :init :vertices (list (float-vector 198.366 182.5 285.5) (float-vector 198.366 83.5 285.5) (float-vector 198.5 83.5 285.0) (float-vector 198.5 182.5 285.0)))
         (instance face :init :vertices (list (float-vector 198.0 182.5 285.866) (float-vector 198.0 83.5 285.866) (float-vector 198.366 83.5 285.5) (float-vector 198.366 182.5 285.5)))
         (instance face :init :vertices (list (float-vector 197.5 182.5 286.0) (float-vector 197.5 83.5 286.0) (float-vector 198.0 83.5 285.866) (float-vector 198.0 182.5 285.866)))
         (instance face :init :vertices (list (float-vector 197.0 182.5 285.866) (float-vector 197.0 83.5 285.866) (float-vector 197.5 83.5 286.0) (float-vector 197.5 182.5 286.0)))
         (instance face :init :vertices (list (float-vector 196.634 182.5 285.5) (float-vector 196.634 83.5 285.5) (float-vector 197.0 83.5 285.866) (float-vector 197.0 182.5 285.866)))
         (instance face :init :vertices (list (float-vector 196.5 182.5 285.0) (float-vector 196.5 83.5 285.0) (float-vector 196.634 83.5 285.5) (float-vector 196.634 182.5 285.5)))
         (instance face :init :vertices (list (float-vector 196.634 182.5 284.5) (float-vector 196.634 83.5 284.5) (float-vector 196.5 83.5 285.0) (float-vector 196.5 182.5 285.0)))
         (instance face :init :vertices (list (float-vector 197.0 182.5 284.134) (float-vector 197.0 83.5 284.134) (float-vector 196.634 83.5 284.5) (float-vector 196.634 182.5 284.5)))
         (instance face :init :vertices (list (float-vector 197.5 83.5 284.0) (float-vector 197.0 83.5 284.134) (float-vector 197.0 182.5 284.134) (float-vector 197.5 182.5 284.0)))
         (instance face :init :vertices (list (float-vector 197.5 69.5 280.0) (float-vector 197.5 83.5 280.0) (float-vector 200.0 83.5 280.67) (float-vector 200.0 69.5 280.67)))
         (instance face :init :vertices (list (float-vector 197.5 83.5 280.0) (float-vector 195.0 83.5 280.67) (float-vector 193.17 83.5 282.5) (float-vector 192.5 83.5 285.0) (float-vector 193.17 83.5 287.5) (float-vector 195.0 83.5 289.33) (float-vector 197.5 83.5 290.0) (float-vector 200.0 83.5 289.33) (float-vector 201.83 83.5 287.5) (float-vector 202.5 83.5 285.0) (float-vector 201.83 83.5 282.5) (float-vector 200.0 83.5 280.67))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 197.0 83.5 284.134) (float-vector 197.5 83.5 284.0) (float-vector 198.0 83.5 284.134) (float-vector 198.366 83.5 284.5) (float-vector 198.5 83.5 285.0) (float-vector 198.366 83.5 285.5) (float-vector 198.0 83.5 285.866) (float-vector 197.5 83.5 286.0) (float-vector 197.0 83.5 285.866) (float-vector 196.634 83.5 285.5) (float-vector 196.5 83.5 285.0) (float-vector 196.634 83.5 284.5)))
))
         (instance face :init :vertices (list (float-vector 201.83 83.5 282.5) (float-vector 201.83 69.5 282.5) (float-vector 200.0 69.5 280.67) (float-vector 200.0 83.5 280.67)))
         (instance face :init :vertices (list (float-vector 202.5 83.5 285.0) (float-vector 202.5 69.5 285.0) (float-vector 201.83 69.5 282.5) (float-vector 201.83 83.5 282.5)))
         (instance face :init :vertices (list (float-vector 201.83 83.5 287.5) (float-vector 201.83 69.5 287.5) (float-vector 202.5 69.5 285.0) (float-vector 202.5 83.5 285.0)))
         (instance face :init :vertices (list (float-vector 200.0 83.5 289.33) (float-vector 200.0 69.5 289.33) (float-vector 201.83 69.5 287.5) (float-vector 201.83 83.5 287.5)))
         (instance face :init :vertices (list (float-vector 197.5 83.5 290.0) (float-vector 197.5 69.5 290.0) (float-vector 200.0 69.5 289.33) (float-vector 200.0 83.5 289.33)))
         (instance face :init :vertices (list (float-vector 195.0 83.5 289.33) (float-vector 195.0 69.5 289.33) (float-vector 197.5 69.5 290.0) (float-vector 197.5 83.5 290.0)))
         (instance face :init :vertices (list (float-vector 193.17 83.5 287.5) (float-vector 193.17 69.5 287.5) (float-vector 195.0 69.5 289.33) (float-vector 195.0 83.5 289.33)))
         (instance face :init :vertices (list (float-vector 192.5 83.5 285.0) (float-vector 192.5 69.5 285.0) (float-vector 193.17 69.5 287.5) (float-vector 193.17 83.5 287.5)))
         (instance face :init :vertices (list (float-vector 193.17 83.5 282.5) (float-vector 193.17 69.5 282.5) (float-vector 192.5 69.5 285.0) (float-vector 192.5 83.5 285.0)))
         (instance face :init :vertices (list (float-vector 195.0 83.5 280.67) (float-vector 195.0 69.5 280.67) (float-vector 193.17 69.5 282.5) (float-vector 193.17 83.5 282.5)))
         (instance face :init :vertices (list (float-vector 195.0 69.5 280.67) (float-vector 195.0 83.5 280.67) (float-vector 197.5 83.5 280.0) (float-vector 197.5 69.5 280.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 190.0 -69.4998 299.5) (float-vector 205.0 -69.4998 299.5) (float-vector 205.0 -44.4998 299.5) (float-vector 190.0 -44.4999 299.5)))
         (instance face :init :vertices (list (float-vector 205.0 -44.4998 299.5) (float-vector 205.0 -44.4998 250.5) (float-vector 190.0 -44.4998 250.5) (float-vector 190.0 -44.4999 299.5)))
         (instance face :init :vertices (list (float-vector 205.0 -44.4998 250.5) (float-vector 205.0 -69.4998 250.5) (float-vector 190.0 -69.4998 250.5) (float-vector 190.0 -44.4998 250.5)))
         (instance face :init :vertices (list (float-vector 190.0 -69.4998 250.5) (float-vector 190.0 -69.4998 299.5) (float-vector 190.0 -44.4999 299.5) (float-vector 190.0 -44.4998 250.5)))
         (instance face :init :vertices (list (float-vector 205.0 -69.4998 250.5) (float-vector 205.0 -69.4998 299.5) (float-vector 190.0 -69.4998 299.5) (float-vector 190.0 -69.4998 250.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 200.0 -69.4998 280.67) (float-vector 197.5 -69.4998 280.0) (float-vector 195.0 -69.4998 280.67) (float-vector 193.17 -69.4998 282.5) (float-vector 192.5 -69.4998 285.0) (float-vector 193.17 -69.4998 287.5) (float-vector 195.0 -69.4998 289.33) (float-vector 197.5 -69.4998 290.0) (float-vector 200.0 -69.4998 289.33) (float-vector 201.83 -69.4998 287.5) (float-vector 202.5 -69.4998 285.0) (float-vector 201.83 -69.4998 282.5)))
))
         (instance face :init :vertices (list (float-vector 205.0 -69.4998 299.5) (float-vector 205.0 -69.4998 250.5) (float-vector 205.0 -44.4998 250.5) (float-vector 205.0 -44.4998 299.5)))
         (instance face :init :vertices (list (float-vector 197.5 -182.5 284.0) (float-vector 197.0 -182.5 284.134) (float-vector 197.0 -83.4998 284.134) (float-vector 197.5 -83.4998 284.0)))
         (instance face :init :vertices (list (float-vector 197.5 -182.5 284.0) (float-vector 198.0 -182.5 284.134) (float-vector 198.366 -182.5 284.5) (float-vector 198.5 -182.5 285.0) (float-vector 198.366 -182.5 285.5) (float-vector 198.0 -182.5 285.866) (float-vector 197.5 -182.5 286.0) (float-vector 197.0 -182.5 285.866) (float-vector 196.634 -182.5 285.5) (float-vector 196.5 -182.5 285.0) (float-vector 196.634 -182.5 284.5) (float-vector 197.0 -182.5 284.134)))
         (instance face :init :vertices (list (float-vector 196.634 -182.5 284.5) (float-vector 196.634 -83.4998 284.5) (float-vector 197.0 -83.4998 284.134) (float-vector 197.0 -182.5 284.134)))
         (instance face :init :vertices (list (float-vector 196.5 -182.5 285.0) (float-vector 196.5 -83.4998 285.0) (float-vector 196.634 -83.4998 284.5) (float-vector 196.634 -182.5 284.5)))
         (instance face :init :vertices (list (float-vector 196.634 -182.5 285.5) (float-vector 196.634 -83.4998 285.5) (float-vector 196.5 -83.4998 285.0) (float-vector 196.5 -182.5 285.0)))
         (instance face :init :vertices (list (float-vector 197.0 -182.5 285.866) (float-vector 197.0 -83.4998 285.866) (float-vector 196.634 -83.4998 285.5) (float-vector 196.634 -182.5 285.5)))
         (instance face :init :vertices (list (float-vector 197.5 -182.5 286.0) (float-vector 197.5 -83.4998 286.0) (float-vector 197.0 -83.4998 285.866) (float-vector 197.0 -182.5 285.866)))
         (instance face :init :vertices (list (float-vector 198.0 -182.5 285.866) (float-vector 198.0 -83.4998 285.866) (float-vector 197.5 -83.4998 286.0) (float-vector 197.5 -182.5 286.0)))
         (instance face :init :vertices (list (float-vector 198.366 -182.5 285.5) (float-vector 198.366 -83.4998 285.5) (float-vector 198.0 -83.4998 285.866) (float-vector 198.0 -182.5 285.866)))
         (instance face :init :vertices (list (float-vector 198.5 -182.5 285.0) (float-vector 198.5 -83.4998 285.0) (float-vector 198.366 -83.4998 285.5) (float-vector 198.366 -182.5 285.5)))
         (instance face :init :vertices (list (float-vector 198.366 -182.5 284.5) (float-vector 198.366 -83.4998 284.5) (float-vector 198.5 -83.4998 285.0) (float-vector 198.5 -182.5 285.0)))
         (instance face :init :vertices (list (float-vector 198.0 -182.5 284.134) (float-vector 198.0 -83.4998 284.134) (float-vector 198.366 -83.4998 284.5) (float-vector 198.366 -182.5 284.5)))
         (instance face :init :vertices (list (float-vector 197.5 -83.4998 284.0) (float-vector 198.0 -83.4998 284.134) (float-vector 198.0 -182.5 284.134) (float-vector 197.5 -182.5 284.0)))
         (instance face :init :vertices (list (float-vector 197.5 -69.4998 280.0) (float-vector 197.5 -83.4998 280.0) (float-vector 195.0 -83.4998 280.67) (float-vector 195.0 -69.4998 280.67)))
         (instance face :init :vertices (list (float-vector 197.5 -83.4998 280.0) (float-vector 200.0 -83.4998 280.67) (float-vector 201.83 -83.4998 282.5) (float-vector 202.5 -83.4998 285.0) (float-vector 201.83 -83.4998 287.5) (float-vector 200.0 -83.4998 289.33) (float-vector 197.5 -83.4998 290.0) (float-vector 195.0 -83.4998 289.33) (float-vector 193.17 -83.4998 287.5) (float-vector 192.5 -83.4998 285.0) (float-vector 193.17 -83.4998 282.5) (float-vector 195.0 -83.4998 280.67))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 198.0 -83.4998 284.134) (float-vector 197.5 -83.4998 284.0) (float-vector 197.0 -83.4998 284.134) (float-vector 196.634 -83.4998 284.5) (float-vector 196.5 -83.4998 285.0) (float-vector 196.634 -83.4998 285.5) (float-vector 197.0 -83.4998 285.866) (float-vector 197.5 -83.4998 286.0) (float-vector 198.0 -83.4998 285.866) (float-vector 198.366 -83.4998 285.5) (float-vector 198.5 -83.4998 285.0) (float-vector 198.366 -83.4998 284.5)))
))
         (instance face :init :vertices (list (float-vector 193.17 -83.4998 282.5) (float-vector 193.17 -69.4998 282.5) (float-vector 195.0 -69.4998 280.67) (float-vector 195.0 -83.4998 280.67)))
         (instance face :init :vertices (list (float-vector 192.5 -83.4998 285.0) (float-vector 192.5 -69.4998 285.0) (float-vector 193.17 -69.4998 282.5) (float-vector 193.17 -83.4998 282.5)))
         (instance face :init :vertices (list (float-vector 193.17 -83.4998 287.5) (float-vector 193.17 -69.4998 287.5) (float-vector 192.5 -69.4998 285.0) (float-vector 192.5 -83.4998 285.0)))
         (instance face :init :vertices (list (float-vector 195.0 -83.4998 289.33) (float-vector 195.0 -69.4998 289.33) (float-vector 193.17 -69.4998 287.5) (float-vector 193.17 -83.4998 287.5)))
         (instance face :init :vertices (list (float-vector 197.5 -83.4998 290.0) (float-vector 197.5 -69.4998 290.0) (float-vector 195.0 -69.4998 289.33) (float-vector 195.0 -83.4998 289.33)))
         (instance face :init :vertices (list (float-vector 200.0 -83.4998 289.33) (float-vector 200.0 -69.4998 289.33) (float-vector 197.5 -69.4998 290.0) (float-vector 197.5 -83.4998 290.0)))
         (instance face :init :vertices (list (float-vector 201.83 -83.4998 287.5) (float-vector 201.83 -69.4998 287.5) (float-vector 200.0 -69.4998 289.33) (float-vector 200.0 -83.4998 289.33)))
         (instance face :init :vertices (list (float-vector 202.5 -83.4998 285.0) (float-vector 202.5 -69.4998 285.0) (float-vector 201.83 -69.4998 287.5) (float-vector 201.83 -83.4998 287.5)))
         (instance face :init :vertices (list (float-vector 201.83 -83.4998 282.5) (float-vector 201.83 -69.4998 282.5) (float-vector 202.5 -69.4998 285.0) (float-vector 202.5 -83.4998 285.0)))
         (instance face :init :vertices (list (float-vector 200.0 -83.4998 280.67) (float-vector 200.0 -69.4998 280.67) (float-vector 201.83 -69.4998 282.5) (float-vector 201.83 -83.4998 282.5)))
         (instance face :init :vertices (list (float-vector 200.0 -69.4998 280.67) (float-vector 200.0 -83.4998 280.67) (float-vector 197.5 -83.4998 280.0) (float-vector 197.5 -69.4998 280.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 1.145124e-05 -27.0 424.0) (float-vector -13.5 -23.3827 424.0) (float-vector -13.5 -23.3827 396.0) (float-vector 1.145124e-05 -27.0 396.0)))
         (instance face :init :vertices (list (float-vector 1.145124e-05 -27.0 424.0) (float-vector 13.5 -23.3827 424.0) (float-vector 23.3827 -13.5 424.0) (float-vector 27.0 2.945523e-06 424.0) (float-vector 23.3827 13.5 424.0) (float-vector 13.5 23.3827 424.0) (float-vector 5.569073e-06 27.0 424.0) (float-vector -13.5 23.3827 424.0) (float-vector -23.3827 13.5 424.0) (float-vector -27.0 1.408367e-05 424.0) (float-vector -23.3827 -13.5 424.0) (float-vector -13.5 -23.3827 424.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -2.25 -3.89711 424.0) (float-vector -3.89712 -2.25 424.0) (float-vector -4.5 2.426751e-06 424.0) (float-vector -3.89711 2.25 424.0) (float-vector -2.25 3.89711 424.0) (float-vector 1.036741e-06 4.5 424.0) (float-vector 2.25 3.89711 424.0) (float-vector 3.89711 2.25 424.0) (float-vector 4.5 5.597460e-07 424.0) (float-vector 3.89711 -2.25 424.0) (float-vector 2.25 -3.89711 424.0) (float-vector 1.908541e-06 -4.5 424.0)))
))
         (instance face :init :vertices (list (float-vector -23.3827 -13.5 424.0) (float-vector -23.3827 -13.5 396.0) (float-vector -13.5 -23.3827 396.0) (float-vector -13.5 -23.3827 424.0)))
         (instance face :init :vertices (list (float-vector -27.0 1.408367e-05 424.0) (float-vector -27.0 1.408367e-05 396.0) (float-vector -23.3827 -13.5 396.0) (float-vector -23.3827 -13.5 424.0)))
         (instance face :init :vertices (list (float-vector -23.3827 13.5 424.0) (float-vector -23.3827 13.5 396.0) (float-vector -27.0 1.408367e-05 396.0) (float-vector -27.0 1.408367e-05 424.0)))
         (instance face :init :vertices (list (float-vector -13.5 23.3827 424.0) (float-vector -13.5 23.3827 396.0) (float-vector -23.3827 13.5 396.0) (float-vector -23.3827 13.5 424.0)))
         (instance face :init :vertices (list (float-vector 5.569073e-06 27.0 424.0) (float-vector 5.569073e-06 27.0 396.0) (float-vector -13.5 23.3827 396.0) (float-vector -13.5 23.3827 424.0)))
         (instance face :init :vertices (list (float-vector 13.5 23.3827 424.0) (float-vector 13.5 23.3827 396.0) (float-vector 5.569073e-06 27.0 396.0) (float-vector 5.569073e-06 27.0 424.0)))
         (instance face :init :vertices (list (float-vector 23.3827 13.5 424.0) (float-vector 23.3827 13.5 396.0) (float-vector 13.5 23.3827 396.0) (float-vector 13.5 23.3827 424.0)))
         (instance face :init :vertices (list (float-vector 27.0 2.945523e-06 424.0) (float-vector 27.0 2.945523e-06 396.0) (float-vector 23.3827 13.5 396.0) (float-vector 23.3827 13.5 424.0)))
         (instance face :init :vertices (list (float-vector 23.3827 -13.5 424.0) (float-vector 23.3827 -13.5 396.0) (float-vector 27.0 2.945523e-06 396.0) (float-vector 27.0 2.945523e-06 424.0)))
         (instance face :init :vertices (list (float-vector 13.5 -23.3827 424.0) (float-vector 13.5 -23.3827 396.0) (float-vector 23.3827 -13.5 396.0) (float-vector 23.3827 -13.5 424.0)))
         (instance face :init :vertices (list (float-vector 1.145124e-05 -27.0 396.0) (float-vector 13.5 -23.3827 396.0) (float-vector 13.5 -23.3827 424.0) (float-vector 1.145124e-05 -27.0 424.0)))
         (instance face :init :vertices (list (float-vector 2.756781e-05 -65.0 384.0) (float-vector 2.756781e-05 -65.0 352.0) (float-vector 73.5526 -45.2916 352.0) (float-vector 73.5526 -45.2916 341.0) (float-vector 85.0321 -42.2157 341.0) (float-vector 51.2639 -51.2639 377.722) (float-vector 39.4215 -54.437 384.0) (float-vector 34.366 -55.7916 384.0) (float-vector 34.366 -55.7916 381.0) (float-vector 13.0622 -61.5 381.0) (float-vector 13.0622 -61.5 384.0)))
         (instance face :init :vertices (list (float-vector 2.756781e-05 -65.0 384.0) (float-vector -13.0621 -61.5 384.0) (float-vector -13.0621 -61.5 381.0) (float-vector -34.3661 -55.7916 381.0) (float-vector -34.3661 -55.7916 384.0) (float-vector -39.4215 -54.437 384.0) (float-vector -51.2644 -51.2637 377.721) (float-vector -85.032 -42.2157 341.0) (float-vector -73.5526 -45.2916 341.0) (float-vector -73.5525 -45.2917 352.0) (float-vector 2.756781e-05 -65.0 352.0)))
         (instance face :init :vertices (list (float-vector -39.4215 -54.437 384.0) (float-vector -48.423 -48.4223 384.0) (float-vector -51.2644 -51.2637 377.721)))
         (instance face :init :vertices (list (float-vector -48.423 -48.4223 384.0) (float-vector -63.2674 -26.2058 384.0) (float-vector -88.6927 -36.7371 341.0) (float-vector -85.032 -42.2157 341.0) (float-vector -51.2644 -51.2637 377.721)))
         (instance face :init :vertices (list (float-vector -63.2674 -26.2058 384.0) (float-vector -68.48 0.000362 384.0) (float-vector -96.0 0.000507 341.0) (float-vector -88.6927 -36.7371 341.0)))
         (instance face :init :vertices (list (float-vector -68.48 0.000362 384.0) (float-vector -63.2671 26.2064 384.0) (float-vector -88.6923 36.738 341.0) (float-vector -96.0 0.000507 341.0)))
         (instance face :init :vertices (list (float-vector -63.2671 26.2064 384.0) (float-vector -48.4224 48.4229 384.0) (float-vector -51.2635 51.264 377.722) (float-vector -85.0321 42.2157 341.0) (float-vector -88.6923 36.738 341.0)))
         (instance face :init :vertices (list (float-vector -48.4224 48.4229 384.0) (float-vector -39.4215 54.437 384.0) (float-vector -51.2635 51.264 377.722)))
         (instance face :init :vertices (list (float-vector 48.4227 48.4226 384.0) (float-vector 51.264 51.2639 377.722) (float-vector 39.4214 54.4371 384.0)))
         (instance face :init :vertices (list (float-vector 48.4227 48.4226 384.0) (float-vector 63.2673 26.2061 384.0) (float-vector 88.6924 36.7375 341.0) (float-vector 85.032 42.2157 341.0) (float-vector 51.264 51.2639 377.722)))
         (instance face :init :vertices (list (float-vector 63.2673 26.2061 384.0) (float-vector 68.48 -2.510705e-05 384.0) (float-vector 96.0 -3.519680e-05 341.0) (float-vector 88.6924 36.7375 341.0)))
         (instance face :init :vertices (list (float-vector 68.48 -2.510705e-05 384.0) (float-vector 63.2672 -26.2062 384.0) (float-vector 88.6924 -36.7376 341.0) (float-vector 96.0 -3.519680e-05 341.0)))
         (instance face :init :vertices (list (float-vector 88.6924 -36.7376 341.0) (float-vector 85.0321 -42.2157 341.0) (float-vector 73.5526 -45.2916 341.0) (float-vector 75.3442 -43.5 341.0) (float-vector 87.0 9.582898e-06 341.0) (float-vector 75.3442 43.5 341.0) (float-vector 73.5525 45.2917 341.0) (float-vector 85.032 42.2157 341.0) (float-vector 88.6924 36.7375 341.0) (float-vector 96.0 -3.519680e-05 341.0)))
         (instance face :init :vertices (list (float-vector -85.0321 42.2157 341.0) (float-vector -73.5526 45.2916 341.0) (float-vector -75.3442 43.5 341.0) (float-vector -87.0 4.480832e-05 341.0) (float-vector -75.3442 -43.5 341.0) (float-vector -73.5526 -45.2916 341.0) (float-vector -85.032 -42.2157 341.0) (float-vector -88.6927 -36.7371 341.0) (float-vector -96.0 0.000507 341.0) (float-vector -88.6923 36.738 341.0)))
         (instance face :init :vertices (list (float-vector 63.2672 -26.2062 384.0) (float-vector 48.4227 -48.4226 384.0) (float-vector 51.2639 -51.2639 377.722) (float-vector 85.0321 -42.2157 341.0) (float-vector 88.6924 -36.7376 341.0)))
         (instance face :init :vertices (list (float-vector 48.4227 -48.4226 384.0) (float-vector 39.4215 -54.437 384.0) (float-vector 51.2639 -51.2639 377.722)))
         (instance face :init :vertices (list (float-vector 13.0622 -61.5 384.0) (float-vector -13.0621 -61.5 384.0) (float-vector 2.756781e-05 -65.0 384.0)))
         (instance face :init :vertices (list (float-vector -34.3661 -55.7916 384.0) (float-vector -57.1577 -33.0 384.0) (float-vector -61.5 -16.7943 384.0) (float-vector -61.5 16.7942 384.0) (float-vector -57.1577 33.0 384.0) (float-vector -34.3661 55.7916 384.0) (float-vector -39.4215 54.437 384.0) (float-vector -48.4224 48.4229 384.0) (float-vector -63.2671 26.2064 384.0) (float-vector -68.48 0.000362 384.0) (float-vector -63.2674 -26.2058 384.0) (float-vector -48.423 -48.4223 384.0) (float-vector -39.4215 -54.437 384.0)))
         (instance face :init :vertices (list (float-vector 39.4214 54.4371 384.0) (float-vector 34.366 55.7917 384.0) (float-vector 57.1577 33.0 384.0) (float-vector 61.5 16.7943 384.0) (float-vector 61.5 -16.7942 384.0) (float-vector 57.1577 -33.0 384.0) (float-vector 34.366 -55.7916 384.0) (float-vector 39.4215 -54.437 384.0) (float-vector 48.4227 -48.4226 384.0) (float-vector 63.2672 -26.2062 384.0) (float-vector 68.48 -2.510705e-05 384.0) (float-vector 63.2673 26.2061 384.0) (float-vector 48.4227 48.4226 384.0)))
         (instance face :init :vertices (list (float-vector -34.3661 55.7916 384.0) (float-vector -34.366 55.7916 381.0) (float-vector -13.0621 61.5 381.0) (float-vector -13.0621 61.5 384.0) (float-vector 9.685106e-05 65.0 384.0) (float-vector 9.685106e-05 65.0 352.0) (float-vector -73.5526 45.2916 352.0) (float-vector -73.5526 45.2916 341.0) (float-vector -85.0321 42.2157 341.0) (float-vector -51.2635 51.264 377.722) (float-vector -39.4215 54.437 384.0)))
         (instance face :init :vertices (list (float-vector -13.0621 61.5 384.0) (float-vector 13.0622 61.5 384.0) (float-vector 9.685106e-05 65.0 384.0)))
         (instance face :init :vertices (list (float-vector 13.0622 61.5 384.0) (float-vector 13.0623 61.5 381.0) (float-vector 34.366 55.7917 381.0) (float-vector 34.366 55.7917 384.0) (float-vector 39.4214 54.4371 384.0) (float-vector 51.264 51.2639 377.722) (float-vector 85.032 42.2157 341.0) (float-vector 73.5525 45.2917 341.0) (float-vector 73.5525 45.2917 352.0) (float-vector 9.685106e-05 65.0 352.0) (float-vector 9.685106e-05 65.0 384.0)))
         (instance face :init :vertices (list (float-vector 3.689845e-05 -87.0 340.0) (float-vector -43.5001 -75.3442 340.0) (float-vector -75.3442 -43.5 340.0) (float-vector -87.0 4.480832e-05 340.0) (float-vector -75.3442 43.5 340.0) (float-vector -43.5 75.3442 340.0) (float-vector 1.735717e-05 87.0 340.0) (float-vector 43.5 75.3442 340.0) (float-vector 75.3442 43.5 340.0) (float-vector 87.0 9.582898e-06 340.0) (float-vector 75.3442 -43.5 340.0) (float-vector 43.5 -75.3442 340.0)))
         (instance face :init :vertices (list (float-vector 3.689845e-05 -87.0 340.0) (float-vector 3.689845e-05 -87.0 352.0) (float-vector -43.5001 -75.3442 352.0) (float-vector -43.5001 -75.3442 340.0)))
         (instance face :init :vertices (list (float-vector -73.5525 -45.2917 352.0) (float-vector -43.5001 -75.3442 352.0) (float-vector 3.689845e-05 -87.0 352.0) (float-vector 43.5 -75.3442 352.0) (float-vector 73.5526 -45.2916 352.0) (float-vector 2.756781e-05 -65.0 352.0)))
         (instance face :init :vertices (list (float-vector 73.5525 45.2917 352.0) (float-vector 43.5 75.3442 352.0) (float-vector 1.735717e-05 87.0 352.0) (float-vector -43.5 75.3442 352.0) (float-vector -73.5526 45.2916 352.0) (float-vector 9.685106e-05 65.0 352.0)))
         (instance face :init :vertices (list (float-vector -75.3442 -43.5 341.0) (float-vector -75.3442 -43.5 340.0) (float-vector -43.5001 -75.3442 340.0) (float-vector -43.5001 -75.3442 352.0) (float-vector -73.5525 -45.2917 352.0) (float-vector -73.5526 -45.2916 341.0)))
         (instance face :init :vertices (list (float-vector -87.0 4.480832e-05 341.0) (float-vector -87.0 4.480832e-05 340.0) (float-vector -75.3442 -43.5 340.0) (float-vector -75.3442 -43.5 341.0)))
         (instance face :init :vertices (list (float-vector -75.3442 43.5 341.0) (float-vector -75.3442 43.5 340.0) (float-vector -87.0 4.480832e-05 340.0) (float-vector -87.0 4.480832e-05 341.0)))
         (instance face :init :vertices (list (float-vector -43.5 75.3442 352.0) (float-vector -43.5 75.3442 340.0) (float-vector -75.3442 43.5 340.0) (float-vector -75.3442 43.5 341.0) (float-vector -73.5526 45.2916 341.0) (float-vector -73.5526 45.2916 352.0)))
         (instance face :init :vertices (list (float-vector 1.735717e-05 87.0 352.0) (float-vector 1.735717e-05 87.0 340.0) (float-vector -43.5 75.3442 340.0) (float-vector -43.5 75.3442 352.0)))
         (instance face :init :vertices (list (float-vector 43.5 75.3442 352.0) (float-vector 43.5 75.3442 340.0) (float-vector 1.735717e-05 87.0 340.0) (float-vector 1.735717e-05 87.0 352.0)))
         (instance face :init :vertices (list (float-vector 75.3442 43.5 341.0) (float-vector 75.3442 43.5 340.0) (float-vector 43.5 75.3442 340.0) (float-vector 43.5 75.3442 352.0) (float-vector 73.5525 45.2917 352.0) (float-vector 73.5525 45.2917 341.0)))
         (instance face :init :vertices (list (float-vector 87.0 9.582898e-06 341.0) (float-vector 87.0 9.582898e-06 340.0) (float-vector 75.3442 43.5 340.0) (float-vector 75.3442 43.5 341.0)))
         (instance face :init :vertices (list (float-vector 75.3442 -43.5 341.0) (float-vector 75.3442 -43.5 340.0) (float-vector 87.0 9.582898e-06 340.0) (float-vector 87.0 9.582898e-06 341.0)))
         (instance face :init :vertices (list (float-vector 43.5 -75.3442 352.0) (float-vector 43.5 -75.3442 340.0) (float-vector 75.3442 -43.5 340.0) (float-vector 75.3442 -43.5 341.0) (float-vector 73.5526 -45.2916 341.0) (float-vector 73.5526 -45.2916 352.0)))
         (instance face :init :vertices (list (float-vector 43.5 -75.3442 340.0) (float-vector 43.5 -75.3442 352.0) (float-vector 3.689845e-05 -87.0 352.0) (float-vector 3.689845e-05 -87.0 340.0)))
         (instance face :init :vertices (list (float-vector 61.5 16.7943 384.0) (float-vector 61.5 16.7943 396.0) (float-vector 61.5 -16.7942 396.0) (float-vector 61.5 -16.7942 384.0)))
         (instance face :init :vertices (list (float-vector 61.5 16.7943 396.0) (float-vector 57.1577 33.0 396.0) (float-vector 33.0 57.1577 396.0) (float-vector 16.7942 61.5 396.0) (float-vector -16.7943 61.5 396.0) (float-vector -33.0 57.1577 396.0) (float-vector -57.1577 33.0 396.0) (float-vector -61.5 16.7942 396.0) (float-vector -61.5 -16.7943 396.0) (float-vector -57.1577 -33.0 396.0) (float-vector -33.0 -57.1577 396.0) (float-vector -16.7942 -61.5 396.0) (float-vector 16.7942 -61.5 396.0) (float-vector 33.0 -57.1577 396.0) (float-vector 57.1577 -33.0 396.0) (float-vector 61.5 -16.7942 396.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 13.5 -23.3827 396.0) (float-vector 1.145124e-05 -27.0 396.0) (float-vector -13.5 -23.3827 396.0) (float-vector -23.3827 -13.5 396.0) (float-vector -27.0 1.408367e-05 396.0) (float-vector -23.3827 13.5 396.0) (float-vector -13.5 23.3827 396.0) (float-vector 5.569073e-06 27.0 396.0) (float-vector 13.5 23.3827 396.0) (float-vector 23.3827 13.5 396.0) (float-vector 27.0 2.945523e-06 396.0) (float-vector 23.3827 -13.5 396.0)))
))
         (instance face :init :vertices (list (float-vector 13.0622 -61.5 381.0) (float-vector 16.7942 -61.5 381.0) (float-vector 16.7942 -61.5 396.0) (float-vector -16.7942 -61.5 396.0) (float-vector -16.7942 -61.5 381.0) (float-vector -13.0621 -61.5 381.0) (float-vector -13.0621 -61.5 384.0) (float-vector 13.0622 -61.5 384.0)))
         (instance face :init :vertices (list (float-vector -61.5 -16.7943 384.0) (float-vector -61.5 -16.7943 396.0) (float-vector -61.5 16.7942 396.0) (float-vector -61.5 16.7942 384.0)))
         (instance face :init :vertices (list (float-vector -13.0621 61.5 381.0) (float-vector -16.7943 61.5 381.0) (float-vector -16.7943 61.5 396.0) (float-vector 16.7942 61.5 396.0) (float-vector 16.7942 61.5 381.0) (float-vector 13.0623 61.5 381.0) (float-vector 13.0622 61.5 384.0) (float-vector -13.0621 61.5 384.0)))
         (instance face :init :vertices (list (float-vector 34.366 -55.7916 381.0) (float-vector 33.0 -57.1577 381.0) (float-vector 16.7942 -61.5 381.0) (float-vector 13.0622 -61.5 381.0)))
         (instance face :init :vertices (list (float-vector 16.7942 61.5 381.0) (float-vector 33.0 57.1577 381.0) (float-vector 34.366 55.7917 381.0) (float-vector 13.0623 61.5 381.0)))
         (instance face :init :vertices (list (float-vector -34.366 55.7916 381.0) (float-vector -33.0 57.1577 381.0) (float-vector -16.7943 61.5 381.0) (float-vector -13.0621 61.5 381.0)))
         (instance face :init :vertices (list (float-vector -16.7942 -61.5 381.0) (float-vector -33.0 -57.1577 381.0) (float-vector -34.3661 -55.7916 381.0) (float-vector -13.0621 -61.5 381.0)))
         (instance face :init :vertices (list (float-vector -33.0 -57.1577 396.0) (float-vector -33.0 -57.1577 381.0) (float-vector -16.7942 -61.5 381.0) (float-vector -16.7942 -61.5 396.0)))
         (instance face :init :vertices (list (float-vector -57.1577 -33.0 396.0) (float-vector -57.1577 -33.0 384.0) (float-vector -34.3661 -55.7916 384.0) (float-vector -34.3661 -55.7916 381.0) (float-vector -33.0 -57.1577 381.0) (float-vector -33.0 -57.1577 396.0)))
         (instance face :init :vertices (list (float-vector -57.1577 -33.0 384.0) (float-vector -57.1577 -33.0 396.0) (float-vector -61.5 -16.7943 396.0) (float-vector -61.5 -16.7943 384.0)))
         (instance face :init :vertices (list (float-vector -57.1577 33.0 396.0) (float-vector -57.1577 33.0 384.0) (float-vector -61.5 16.7942 384.0) (float-vector -61.5 16.7942 396.0)))
         (instance face :init :vertices (list (float-vector -33.0 57.1577 396.0) (float-vector -33.0 57.1577 381.0) (float-vector -34.366 55.7916 381.0) (float-vector -34.3661 55.7916 384.0) (float-vector -57.1577 33.0 384.0) (float-vector -57.1577 33.0 396.0)))
         (instance face :init :vertices (list (float-vector -33.0 57.1577 381.0) (float-vector -33.0 57.1577 396.0) (float-vector -16.7943 61.5 396.0) (float-vector -16.7943 61.5 381.0)))
         (instance face :init :vertices (list (float-vector 33.0 57.1577 396.0) (float-vector 33.0 57.1577 381.0) (float-vector 16.7942 61.5 381.0) (float-vector 16.7942 61.5 396.0)))
         (instance face :init :vertices (list (float-vector 57.1577 33.0 396.0) (float-vector 57.1577 33.0 384.0) (float-vector 34.366 55.7917 384.0) (float-vector 34.366 55.7917 381.0) (float-vector 33.0 57.1577 381.0) (float-vector 33.0 57.1577 396.0)))
         (instance face :init :vertices (list (float-vector 57.1577 33.0 384.0) (float-vector 57.1577 33.0 396.0) (float-vector 61.5 16.7943 396.0) (float-vector 61.5 16.7943 384.0)))
         (instance face :init :vertices (list (float-vector 57.1577 -33.0 396.0) (float-vector 57.1577 -33.0 384.0) (float-vector 61.5 -16.7942 384.0) (float-vector 61.5 -16.7942 396.0)))
         (instance face :init :vertices (list (float-vector 33.0 -57.1577 396.0) (float-vector 33.0 -57.1577 381.0) (float-vector 34.366 -55.7916 381.0) (float-vector 34.366 -55.7916 384.0) (float-vector 57.1577 -33.0 384.0) (float-vector 57.1577 -33.0 396.0)))
         (instance face :init :vertices (list (float-vector 33.0 -57.1577 381.0) (float-vector 33.0 -57.1577 396.0) (float-vector 16.7942 -61.5 396.0) (float-vector 16.7942 -61.5 381.0)))
         (instance face :init :vertices (list (float-vector 1.908541e-06 -4.5 464.0) (float-vector 1.908541e-06 -4.5 424.0) (float-vector 2.25 -3.89711 424.0) (float-vector 2.25 -3.89711 464.0)))
         (instance face :init :vertices (list (float-vector 3.89711 -2.25 424.0) (float-vector 3.89711 -2.25 464.0) (float-vector 2.25 -3.89711 464.0) (float-vector 2.25 -3.89711 424.0)))
         (instance face :init :vertices (list (float-vector 4.5 5.597460e-07 424.0) (float-vector 4.5 5.597460e-07 464.0) (float-vector 3.89711 -2.25 464.0) (float-vector 3.89711 -2.25 424.0)))
         (instance face :init :vertices (list (float-vector 3.89711 2.25 424.0) (float-vector 3.89711 2.25 464.0) (float-vector 4.5 5.597460e-07 464.0) (float-vector 4.5 5.597460e-07 424.0)))
         (instance face :init :vertices (list (float-vector 2.25 3.89711 424.0) (float-vector 2.25 3.89711 464.0) (float-vector 3.89711 2.25 464.0) (float-vector 3.89711 2.25 424.0)))
         (instance face :init :vertices (list (float-vector 1.036741e-06 4.5 424.0) (float-vector 1.036741e-06 4.5 464.0) (float-vector 2.25 3.89711 464.0) (float-vector 2.25 3.89711 424.0)))
         (instance face :init :vertices (list (float-vector -2.25 3.89711 424.0) (float-vector -2.25 3.89711 464.0) (float-vector 1.036741e-06 4.5 464.0) (float-vector 1.036741e-06 4.5 424.0)))
         (instance face :init :vertices (list (float-vector -3.89711 2.25 424.0) (float-vector -3.89711 2.25 464.0) (float-vector -2.25 3.89711 464.0) (float-vector -2.25 3.89711 424.0)))
         (instance face :init :vertices (list (float-vector -4.5 2.426751e-06 424.0) (float-vector -4.5 2.426751e-06 464.0) (float-vector -3.89711 2.25 464.0) (float-vector -3.89711 2.25 424.0)))
         (instance face :init :vertices (list (float-vector -3.89712 -2.25 424.0) (float-vector -3.89712 -2.25 464.0) (float-vector -4.5 2.426751e-06 464.0) (float-vector -4.5 2.426751e-06 424.0)))
         (instance face :init :vertices (list (float-vector -2.25 -3.89711 424.0) (float-vector -2.25 -3.89711 464.0) (float-vector -3.89712 -2.25 464.0) (float-vector -3.89712 -2.25 424.0)))
         (instance face :init :vertices (list (float-vector -2.25 -3.89711 464.0) (float-vector 1.908541e-06 -4.5 464.0) (float-vector 2.25 -3.89711 464.0) (float-vector 3.89711 -2.25 464.0) (float-vector 4.5 5.597460e-07 464.0) (float-vector 3.89711 2.25 464.0) (float-vector 2.25 3.89711 464.0) (float-vector 1.036741e-06 4.5 464.0) (float-vector -2.25 3.89711 464.0) (float-vector -3.89711 2.25 464.0) (float-vector -4.5 2.426751e-06 464.0) (float-vector -3.89712 -2.25 464.0)))
         (instance face :init :vertices (list (float-vector 1.908541e-06 -4.5 464.0) (float-vector -2.25 -3.89711 464.0) (float-vector -2.25 -3.89711 424.0) (float-vector 1.908541e-06 -4.5 424.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -112.0 -102.0 290.0) (float-vector -112.0 -72.0 290.0) (float-vector -168.0 -72.0001 290.0) (float-vector -168.0 -102.0 290.0)))
         (instance face :init :vertices (list (float-vector -112.0 -72.0 190.0) (float-vector -112.0 -102.0 190.0) (float-vector -168.0 -102.0 190.0) (float-vector -168.0 -72.0001 190.0)))
         (instance face :init :vertices (list (float-vector -112.0 -102.0 290.0) (float-vector -112.0 -102.0 190.0) (float-vector -112.0 -72.0 190.0) (float-vector -112.0 -72.0 290.0)))
         (instance face :init :vertices (list (float-vector -168.0 -102.0 290.0) (float-vector -168.0 -102.0 190.0) (float-vector -112.0 -102.0 190.0) (float-vector -112.0 -102.0 290.0)))
         (instance face :init :vertices (list (float-vector -168.0 -72.0001 290.0) (float-vector -168.0 -72.0001 190.0) (float-vector -168.0 -102.0 190.0) (float-vector -168.0 -102.0 290.0)))
         (instance face :init :vertices (list (float-vector -112.0 -72.0 290.0) (float-vector -112.0 -72.0 190.0) (float-vector -168.0 -72.0001 190.0) (float-vector -168.0 -72.0001 290.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :white)
     (send (elt bc 3) :set-color :white)
     (send (elt bc 4) :set-color (list))
     (send (elt bc 5) :set-color :gray40)
     (send (elt bc 6) :set-color :gray90)
     (send (elt bc 7) :set-color :gray40)
     (send (elt bc 8) :set-color :gray40)
     (send (elt bc 9) :set-color :gray40)
     (send (elt bc 10) :set-color :white)
     (send (elt bc 11) :set-color :white)
     (send (elt bc 12) :set-color :gray40)
     (send (elt bc 13) :set-color :gray40)
     (send (elt bc 14) :set-color :gray40)
     (send (elt bc 15) :set-color (list))
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 16160 :centroid (float-vector 14.3139 0.627818 91.4832) :inertia-tensor #2f((3.018883e+08 3.303705e+06 -4.076340e+07) (3.303704e+06 4.498568e+08 -1.335018e+06) (-4.076339e+07 -1.335018e+06 2.387470e+08))))

     ;; definition of :rb-crotch-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 69.282 -40.0001 120.0) (float-vector 80.0 0.0 120.0) (float-vector 69.282 40.0 120.0) (float-vector 40.0 69.282 120.0) (float-vector 3.051758e-05 80.0 120.0) (float-vector -40.0 69.282 120.0) (float-vector -69.282 40.0 120.0) (float-vector -80.0 6.103516e-05 120.0) (float-vector -69.282 -40.0 120.0) (float-vector -40.0 -69.282 120.0) (float-vector -6.866455e-05 -80.0 120.0) (float-vector 39.9999 -69.2821 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 0.0) (float-vector 69.282 -40.0001 0.0) (float-vector 39.9999 -69.2821 0.0) (float-vector -6.866455e-05 -80.0 0.0) (float-vector -40.0 -69.282 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -80.0 6.103516e-05 0.0) (float-vector -69.282 40.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector 3.051758e-05 80.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 69.282 40.0 0.0)))
         (instance face :init :vertices (list (float-vector 69.282 -40.0001 120.0) (float-vector 69.282 -40.0001 0.0) (float-vector 80.0 0.0 0.0) (float-vector 80.0 0.0 120.0)))
         (instance face :init :vertices (list (float-vector 39.9999 -69.2821 120.0) (float-vector 39.9999 -69.2821 0.0) (float-vector 69.282 -40.0001 0.0) (float-vector 69.282 -40.0001 120.0)))
         (instance face :init :vertices (list (float-vector -6.866455e-05 -80.0 120.0) (float-vector -6.866455e-05 -80.0 0.0) (float-vector 39.9999 -69.2821 0.0) (float-vector 39.9999 -69.2821 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 -69.282 120.0) (float-vector -40.0 -69.282 0.0) (float-vector -6.866455e-05 -80.0 0.0) (float-vector -6.866455e-05 -80.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 -40.0 120.0) (float-vector -69.282 -40.0 0.0) (float-vector -40.0 -69.282 0.0) (float-vector -40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -80.0 6.103516e-05 120.0) (float-vector -80.0 6.103516e-05 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -69.282 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 40.0 120.0) (float-vector -69.282 40.0 0.0) (float-vector -80.0 6.103516e-05 0.0) (float-vector -80.0 6.103516e-05 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 69.282 120.0) (float-vector -40.0 69.282 0.0) (float-vector -69.282 40.0 0.0) (float-vector -69.282 40.0 120.0)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 80.0 120.0) (float-vector 3.051758e-05 80.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector -40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 40.0 69.282 120.0) (float-vector 40.0 69.282 0.0) (float-vector 3.051758e-05 80.0 0.0) (float-vector 3.051758e-05 80.0 120.0)))
         (instance face :init :vertices (list (float-vector 69.282 40.0 120.0) (float-vector 69.282 40.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 120.0) (float-vector 80.0 0.0 0.0) (float-vector 69.282 40.0 0.0) (float-vector 69.282 40.0 120.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink10 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rb-crotch-y :weight 2000 :centroid (float-vector 1.519098e-06 7.052954e-07 60.0) :inertia-tensor #2f((5.600000e+06 -1.550964e-22 -1.734723e-14) (-1.550964e-22 5.600000e+06 -6.505213e-15) (-1.734723e-14 -6.505213e-15 6.400000e+06))))

     ;; definition of :rb-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -37.0 162.5 34.9999) (float-vector 37.0 162.5 34.9999) (float-vector 37.0 162.5 -35.0001) (float-vector -37.0 162.5 -35.0001))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 31.9904 162.5 33.9999) (float-vector -31.9904 162.5 33.9999) (float-vector -31.9904 162.5 -34.0001) (float-vector 31.9904 162.5 -34.0001)))
))
         (instance face :init :vertices (list (float-vector -37.0 162.5 34.9999) (float-vector -37.0 31.3013 35.0) (float-vector -25.0 43.3013 35.0) (float-vector -6.103516e-05 50.0 35.0) (float-vector 24.9999 43.3013 35.0) (float-vector 37.0 31.3013 35.0) (float-vector 37.0 162.5 34.9999)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 162.5 -35.0001) (float-vector 37.0 162.5 34.9999)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector -6.103516e-05 50.0 -35.0) (float-vector -25.0 43.3012 -35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 162.5 -35.0001) (float-vector 37.0 162.5 -35.0001)))
         (instance face :init :vertices (list (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 162.5 34.9999) (float-vector -37.0 162.5 -35.0001)))
         (instance face :init :vertices (list (float-vector 50.0 3.051758e-05 43.0) (float-vector 43.3012 25.0001 43.0) (float-vector 25.0 43.3013 43.0) (float-vector -4.577637e-05 50.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -50.0 0.0 43.0) (float-vector -43.3012 -25.0 43.0) (float-vector -25.0 -43.3012 43.0) (float-vector 1.525879e-05 -50.0 43.0) (float-vector 25.0 -43.3012 43.0) (float-vector 43.3013 -25.0 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 3.051758e-05 43.0) (float-vector 50.0 -3.051758e-05 -43.0) (float-vector 43.3012 25.0 -43.0) (float-vector 43.3012 25.0001 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 -3.051758e-05 -43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 25.0 -43.3013 -43.0) (float-vector 1.525879e-05 -50.0 -43.0) (float-vector -25.0 -43.3013 -43.0) (float-vector -43.3013 -25.0 -43.0) (float-vector -50.0 -4.577637e-05 -43.0) (float-vector -43.3013 24.9999 -43.0) (float-vector -25.0 43.3012 -43.0) (float-vector -6.103516e-05 50.0 -43.0) (float-vector 24.9999 43.3013 -43.0) (float-vector 43.3012 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 24.9999 43.3013 -43.0) (float-vector 25.0 43.3013 -35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 31.3013 35.0) (float-vector 24.9999 43.3013 35.0) (float-vector 25.0 43.3013 43.0) (float-vector 43.3012 25.0001 43.0) (float-vector 43.3012 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 50.0 35.0) (float-vector -4.577637e-05 50.0 43.0) (float-vector 25.0 43.3013 43.0) (float-vector 24.9999 43.3013 35.0)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 50.0 -43.0) (float-vector -6.103516e-05 50.0 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector 24.9999 43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3013 35.0) (float-vector -25.0 43.3013 43.0) (float-vector -4.577637e-05 50.0 43.0) (float-vector -6.103516e-05 50.0 35.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3012 -43.0) (float-vector -25.0 43.3012 -35.0) (float-vector -6.103516e-05 50.0 -35.0) (float-vector -6.103516e-05 50.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 24.9999 -43.0) (float-vector -43.3013 25.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -25.0 43.3013 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -25.0 43.3012 -35.0) (float-vector -25.0 43.3012 -43.0)))
         (instance face :init :vertices (list (float-vector -50.0 -4.577637e-05 -43.0) (float-vector -50.0 0.0 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -43.3013 24.9999 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 -25.0 -43.0) (float-vector -43.3012 -25.0 43.0) (float-vector -50.0 0.0 43.0) (float-vector -50.0 -4.577637e-05 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 -43.3013 -43.0) (float-vector -25.0 -43.3012 43.0) (float-vector -43.3012 -25.0 43.0) (float-vector -43.3013 -25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 -50.0 -43.0) (float-vector 1.525879e-05 -50.0 43.0) (float-vector -25.0 -43.3012 43.0) (float-vector -25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 -43.3013 -43.0) (float-vector 25.0 -43.3012 43.0) (float-vector 1.525879e-05 -50.0 43.0) (float-vector 1.525879e-05 -50.0 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 -43.0) (float-vector 43.3013 -25.0 43.0) (float-vector 25.0 -43.3012 43.0) (float-vector 25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 50.0 -3.051758e-05 -43.0) (float-vector 50.0 3.051758e-05 43.0)))
         (instance face :init :vertices (list (float-vector -31.9904 162.5 33.9999) (float-vector -29.4449 172.0 33.9999) (float-vector -29.4449 172.0 -34.0001) (float-vector -31.9904 162.5 -34.0001)))
         (instance face :init :vertices (list (float-vector -29.4449 172.0 33.9999) (float-vector -17.0 184.445 33.9999) (float-vector -17.0 184.445 -34.0001) (float-vector -29.4449 172.0 -34.0001)))
         (instance face :init :vertices (list (float-vector -17.0 184.445 33.9999) (float-vector -4.577637e-05 189.0 33.9999) (float-vector -4.577637e-05 189.0 -34.0001) (float-vector -17.0 184.445 -34.0001)))
         (instance face :init :vertices (list (float-vector -4.577637e-05 189.0 33.9999) (float-vector 17.0 184.445 33.9999) (float-vector 17.0 184.445 -34.0001) (float-vector -4.577637e-05 189.0 -34.0001)))
         (instance face :init :vertices (list (float-vector 17.0 184.445 33.9999) (float-vector 29.4448 172.0 33.9999) (float-vector 29.4448 172.0 -34.0001) (float-vector 17.0 184.445 -34.0001)))
         (instance face :init :vertices (list (float-vector 29.4448 172.0 -34.0001) (float-vector 31.9904 162.5 -34.0001) (float-vector -31.9904 162.5 -34.0001) (float-vector -29.4449 172.0 -34.0001) (float-vector -17.0 184.445 -34.0001) (float-vector -4.577637e-05 189.0 -34.0001) (float-vector 17.0 184.445 -34.0001)))
         (instance face :init :vertices (list (float-vector 29.4448 172.0 33.9999) (float-vector 31.9904 162.5 33.9999) (float-vector 31.9904 162.5 -34.0001) (float-vector 29.4448 172.0 -34.0001)))
         (instance face :init :vertices (list (float-vector 31.9904 162.5 33.9999) (float-vector 29.4448 172.0 33.9999) (float-vector 17.0 184.445 33.9999) (float-vector -4.577637e-05 189.0 33.9999) (float-vector -17.0 184.445 33.9999) (float-vector -29.4449 172.0 33.9999) (float-vector -31.9904 162.5 33.9999)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink11 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rb-crotch-r :weight 1000 :centroid (float-vector 2.670288e-05 57.9865 -1.984817e-05) :inertia-tensor #2f((9.135295e+06 -1.76961 -1.76961) (-1.76961 5.820857e+06 -3.362440e+06) (-1.76961 -3.362439e+06 4.227104e+06))))

     ;; definition of :rb-knee-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 215.0 20.0) (float-vector 20.0 215.0 20.0) (float-vector 20.0 215.0 -20.0) (float-vector -20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 215.0 20.0) (float-vector -20.0 212.0 19.9999) (float-vector 20.0 212.0 20.0) (float-vector 20.0 215.0 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 23.7129 20.0) (float-vector 20.0 210.0 20.0) (float-vector -20.0 210.0 19.9999) (float-vector -20.0 23.7128 20.0) (float-vector -16.0 27.7128 20.0) (float-vector -3.051758e-05 32.0 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 20.0) (float-vector 20.0 212.0 -20.0) (float-vector 20.0 215.0 -20.0) (float-vector 20.0 215.0 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 210.0 -20.0) (float-vector 20.0 210.0 20.0) (float-vector 20.0 23.7129 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 -20.0) (float-vector -20.0 212.0 -20.0001) (float-vector -20.0 215.0 -20.0) (float-vector 20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 23.7129 -20.0) (float-vector -20.0 210.0 -20.0001) (float-vector 20.0 210.0 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 16.0 27.7128 -20.0) (float-vector 0.0 32.0 -20.0) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 212.0 -20.0001) (float-vector -20.0 212.0 19.9999) (float-vector -20.0 215.0 20.0) (float-vector -20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 210.0 19.9999) (float-vector -20.0 210.0 -20.0001) (float-vector -20.0 23.7129 -20.0) (float-vector -20.0 23.7128 20.0)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -6.103516e-05) (float-vector 25.9808 212.0 -15.0001) (float-vector 15.0 212.0 -25.9808) (float-vector -3.051758e-05 212.0 -30.0001) (float-vector -15.0 212.0 -25.9808) (float-vector -25.9807 212.0 -15.0) (float-vector -30.0 212.0 -4.577637e-05) (float-vector -25.9807 212.0 15.0) (float-vector -15.0 212.0 25.9807) (float-vector 0.0 212.0 29.9999) (float-vector 15.0 212.0 25.9807) (float-vector 25.9808 212.0 14.9999))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 212.0 19.9999) (float-vector -20.0 212.0 -20.0001) (float-vector 20.0 212.0 -20.0) (float-vector 20.0 212.0 20.0)))
))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -6.103516e-05) (float-vector 30.0 210.0 -6.103516e-05) (float-vector 25.9808 210.0 -15.0001) (float-vector 25.9808 212.0 -15.0001)))
         (instance face :init :vertices (list (float-vector 30.0 210.0 -6.103516e-05) (float-vector 25.9808 210.0 14.9999) (float-vector 15.0 210.0 25.9807) (float-vector 0.0 210.0 29.9999) (float-vector -15.0 210.0 25.9807) (float-vector -25.9807 210.0 15.0) (float-vector -30.0 210.0 -4.577637e-05) (float-vector -25.9807 210.0 -15.0) (float-vector -15.0 210.0 -25.9808) (float-vector -3.051758e-05 210.0 -30.0001) (float-vector 15.0 210.0 -25.9808) (float-vector 25.9808 210.0 -15.0001))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 210.0 -20.0001) (float-vector -20.0 210.0 19.9999) (float-vector 20.0 210.0 20.0) (float-vector 20.0 210.0 -20.0)))
))
         (instance face :init :vertices (list (float-vector 15.0 210.0 -25.9808) (float-vector 15.0 212.0 -25.9808) (float-vector 25.9808 212.0 -15.0001) (float-vector 25.9808 210.0 -15.0001)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 210.0 -30.0001) (float-vector -3.051758e-05 212.0 -30.0001) (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 -25.9808) (float-vector -15.0 212.0 -25.9808) (float-vector -3.051758e-05 212.0 -30.0001) (float-vector -3.051758e-05 210.0 -30.0001)))
         (instance face :init :vertices (list (float-vector -25.9807 210.0 -15.0) (float-vector -25.9807 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 210.0 -4.577637e-05) (float-vector -30.0 212.0 -4.577637e-05) (float-vector -25.9807 212.0 -15.0) (float-vector -25.9807 210.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9807 210.0 15.0) (float-vector -25.9807 212.0 15.0) (float-vector -30.0 212.0 -4.577637e-05) (float-vector -30.0 210.0 -4.577637e-05)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 25.9807) (float-vector -15.0 212.0 25.9807) (float-vector -25.9807 212.0 15.0) (float-vector -25.9807 210.0 15.0)))
         (instance face :init :vertices (list (float-vector 0.0 210.0 29.9999) (float-vector 0.0 212.0 29.9999) (float-vector -15.0 212.0 25.9807) (float-vector -15.0 210.0 25.9807)))
         (instance face :init :vertices (list (float-vector 15.0 210.0 25.9807) (float-vector 15.0 212.0 25.9807) (float-vector 0.0 212.0 29.9999) (float-vector 0.0 210.0 29.9999)))
         (instance face :init :vertices (list (float-vector 25.9808 210.0 14.9999) (float-vector 25.9808 212.0 14.9999) (float-vector 15.0 212.0 25.9807) (float-vector 15.0 210.0 25.9807)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 14.9999) (float-vector 25.9808 210.0 14.9999) (float-vector 30.0 210.0 -6.103516e-05) (float-vector 30.0 212.0 -6.103516e-05)))
         (instance face :init :vertices (list (float-vector 32.0 0.0 -29.5) (float-vector 32.0 3.051758e-05 29.5) (float-vector 27.7128 -16.0 29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 -16.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 16.0 -27.7128 29.5) (float-vector 3.051758e-05 -32.0 29.5) (float-vector 3.051758e-05 -32.0 -29.5) (float-vector 16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 -32.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector 3.051758e-05 -32.0 -29.5)))
         (instance face :init :vertices (list (float-vector -16.0 -27.7128 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 -16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -32.0 -3.051758e-05 -29.5) (float-vector -27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -32.0 0.0 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -32.0 -3.051758e-05 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 16.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -16.0 27.7128 20.0) (float-vector -20.0 23.7128 20.0) (float-vector -20.0 23.7129 -20.0) (float-vector -16.0 27.7128 -20.0) (float-vector -16.0 27.7128 -29.5) (float-vector -27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 0.0 32.0 -20.0) (float-vector 0.0 32.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -16.0 27.7128 29.5) (float-vector -3.051758e-05 32.0 29.5) (float-vector -3.051758e-05 32.0 20.0) (float-vector -16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 -20.0) (float-vector 16.0 27.7128 -29.5) (float-vector 0.0 32.0 -29.5) (float-vector 0.0 32.0 -20.0)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 32.0 29.5) (float-vector 16.0 27.7128 29.5) (float-vector 16.0 27.7128 20.0) (float-vector -3.051758e-05 32.0 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 29.5) (float-vector 27.7128 16.0001 29.5) (float-vector 27.7128 16.0 -29.5) (float-vector 16.0 27.7128 -29.5) (float-vector 16.0 27.7128 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 23.7129 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 -29.5) (float-vector 32.0 0.0 -29.5) (float-vector 27.7128 -16.0 -29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 3.051758e-05 -32.0 -29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -32.0 -3.051758e-05 -29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector 0.0 32.0 -29.5) (float-vector 16.0 27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0001 29.5) (float-vector 32.0 3.051758e-05 29.5) (float-vector 32.0 0.0 -29.5) (float-vector 27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 32.0 3.051758e-05 29.5) (float-vector 27.7128 16.0001 29.5) (float-vector 16.0 27.7128 29.5) (float-vector -3.051758e-05 32.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector 3.051758e-05 -32.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 27.7128 -16.0 29.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0001) (float-vector 30.0 212.0 -6.103516e-05) (float-vector 25.9808 212.0 14.9999) (float-vector 15.0 212.0 25.9807) (float-vector 3.051758e-05 212.0 29.9999) (float-vector -15.0 212.0 25.9807) (float-vector -25.9807 212.0 15.0) (float-vector -30.0 212.0 -4.577637e-05) (float-vector -25.9807 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0001) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector 30.0 250.0 -7.629395e-05) (float-vector 25.9808 250.0 -15.0001) (float-vector 15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0001) (float-vector -15.0 250.0 -25.9808) (float-vector -25.9807 250.0 -15.0001) (float-vector -30.0 250.0 -6.103516e-05) (float-vector -25.9807 250.0 14.9999) (float-vector -15.0 250.0 25.9807) (float-vector 3.051758e-05 250.0 29.9999) (float-vector 15.0 250.0 25.9807) (float-vector 25.9808 250.0 14.9999)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0001) (float-vector 25.9808 250.0 -15.0001) (float-vector 30.0 250.0 -7.629395e-05) (float-vector 30.0 212.0 -6.103516e-05)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 250.0 -25.9808) (float-vector 25.9808 250.0 -15.0001) (float-vector 25.9808 212.0 -15.0001)))
         (instance face :init :vertices (list (float-vector 0.0 212.0 -30.0001) (float-vector 0.0 250.0 -30.0001) (float-vector 15.0 250.0 -25.9808) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0001) (float-vector 0.0 212.0 -30.0001)))
         (instance face :init :vertices (list (float-vector -25.9807 212.0 -15.0) (float-vector -25.9807 250.0 -15.0001) (float-vector -15.0 250.0 -25.9808) (float-vector -15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 212.0 -4.577637e-05) (float-vector -30.0 250.0 -6.103516e-05) (float-vector -25.9807 250.0 -15.0001) (float-vector -25.9807 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9807 212.0 15.0) (float-vector -25.9807 250.0 14.9999) (float-vector -30.0 250.0 -6.103516e-05) (float-vector -30.0 212.0 -4.577637e-05)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 25.9807) (float-vector -15.0 250.0 25.9807) (float-vector -25.9807 250.0 14.9999) (float-vector -25.9807 212.0 15.0)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 212.0 29.9999) (float-vector 3.051758e-05 250.0 29.9999) (float-vector -15.0 250.0 25.9807) (float-vector -15.0 212.0 25.9807)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 25.9807) (float-vector 15.0 250.0 25.9807) (float-vector 3.051758e-05 250.0 29.9999) (float-vector 3.051758e-05 212.0 29.9999)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 14.9999) (float-vector 25.9808 250.0 14.9999) (float-vector 15.0 250.0 25.9807) (float-vector 15.0 212.0 25.9807)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -6.103516e-05) (float-vector 30.0 250.0 -7.629395e-05) (float-vector 25.9808 250.0 14.9999) (float-vector 25.9808 212.0 14.9999)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray40)
     (setq blink12 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rb-knee-r :weight 600 :centroid (float-vector 0.000137 102.198 -3.118528e-05) :inertia-tensor #2f((1.192042e+07 -5.24855 -5.24855) (-5.24855 5.049679e+06 -3.905877e+06) (-5.24855 -3.905877e+06 7.049073e+06))))

     ;; definition of :rf-crotch-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 69.282 -40.0001 120.0) (float-vector 80.0 0.0 120.0) (float-vector 69.282 40.0 120.0) (float-vector 40.0 69.282 120.0) (float-vector 2.288818e-05 80.0 120.0) (float-vector -40.0 69.282 120.0) (float-vector -69.282 40.0 120.0) (float-vector -80.0 6.103516e-05 120.0) (float-vector -69.282 -40.0 120.0) (float-vector -40.0001 -69.282 120.0) (float-vector -7.629395e-05 -80.0 120.0) (float-vector 39.9999 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 0.0) (float-vector 69.282 -40.0001 0.0) (float-vector 39.9999 -69.282 0.0) (float-vector -7.629395e-05 -80.0 0.0) (float-vector -40.0001 -69.282 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -80.0 6.103516e-05 0.0) (float-vector -69.282 40.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector 2.288818e-05 80.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 69.282 40.0 0.0)))
         (instance face :init :vertices (list (float-vector 69.282 -40.0001 120.0) (float-vector 69.282 -40.0001 0.0) (float-vector 80.0 0.0 0.0) (float-vector 80.0 0.0 120.0)))
         (instance face :init :vertices (list (float-vector 39.9999 -69.282 120.0) (float-vector 39.9999 -69.282 0.0) (float-vector 69.282 -40.0001 0.0) (float-vector 69.282 -40.0001 120.0)))
         (instance face :init :vertices (list (float-vector -7.629395e-05 -80.0 120.0) (float-vector -7.629395e-05 -80.0 0.0) (float-vector 39.9999 -69.282 0.0) (float-vector 39.9999 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -40.0001 -69.282 120.0) (float-vector -40.0001 -69.282 0.0) (float-vector -7.629395e-05 -80.0 0.0) (float-vector -7.629395e-05 -80.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 -40.0 120.0) (float-vector -69.282 -40.0 0.0) (float-vector -40.0001 -69.282 0.0) (float-vector -40.0001 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -80.0 6.103516e-05 120.0) (float-vector -80.0 6.103516e-05 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -69.282 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 40.0 120.0) (float-vector -69.282 40.0 0.0) (float-vector -80.0 6.103516e-05 0.0) (float-vector -80.0 6.103516e-05 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 69.282 120.0) (float-vector -40.0 69.282 0.0) (float-vector -69.282 40.0 0.0) (float-vector -69.282 40.0 120.0)))
         (instance face :init :vertices (list (float-vector 2.288818e-05 80.0 120.0) (float-vector 2.288818e-05 80.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector -40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 40.0 69.282 120.0) (float-vector 40.0 69.282 0.0) (float-vector 2.288818e-05 80.0 0.0) (float-vector 2.288818e-05 80.0 120.0)))
         (instance face :init :vertices (list (float-vector 69.282 40.0 120.0) (float-vector 69.282 40.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 120.0) (float-vector 80.0 0.0 0.0) (float-vector 69.282 40.0 0.0) (float-vector 69.282 40.0 120.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink7 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rf-crotch-y :weight 2000 :centroid (float-vector 1.519098e-06 7.052954e-07 60.0) :inertia-tensor #2f((5.600000e+06 -1.550964e-22 -1.734723e-14) (-1.550964e-22 5.600000e+06 -6.505213e-15) (-1.734723e-14 -6.505213e-15 6.400000e+06))))

     ;; definition of :rf-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -37.0 162.5 34.9999) (float-vector 37.0 162.5 34.9999) (float-vector 37.0 162.5 -35.0001) (float-vector -37.0 162.5 -35.0001))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 31.9904 162.5 33.9999) (float-vector -31.9904 162.5 33.9999) (float-vector -31.9904 162.5 -34.0001) (float-vector 31.9904 162.5 -34.0001)))
))
         (instance face :init :vertices (list (float-vector -37.0 162.5 34.9999) (float-vector -37.0 31.3013 35.0) (float-vector -25.0 43.3013 35.0) (float-vector -4.577637e-05 50.0 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 37.0 31.3013 35.0) (float-vector 37.0 162.5 34.9999)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 162.5 -35.0001) (float-vector 37.0 162.5 34.9999)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector -4.577637e-05 50.0 -35.0) (float-vector -25.0 43.3012 -35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 162.5 -35.0001) (float-vector 37.0 162.5 -35.0001)))
         (instance face :init :vertices (list (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 162.5 34.9999) (float-vector -37.0 162.5 -35.0001)))
         (instance face :init :vertices (list (float-vector 50.0 1.525879e-05 43.0) (float-vector 43.3013 25.0001 43.0) (float-vector 25.0 43.3013 43.0) (float-vector -4.577637e-05 50.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -50.0 0.0 43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -25.0 -43.3012 43.0) (float-vector 3.051758e-05 -50.0 43.0) (float-vector 25.0 -43.3012 43.0) (float-vector 43.3013 -25.0 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 1.525879e-05 43.0) (float-vector 50.0 -3.051758e-05 -43.0) (float-vector 43.3012 25.0 -43.0) (float-vector 43.3013 25.0001 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 -3.051758e-05 -43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 25.0 -43.3013 -43.0) (float-vector 1.525879e-05 -50.0 -43.0) (float-vector -25.0 -43.3013 -43.0) (float-vector -43.3013 -25.0 -43.0) (float-vector -50.0 -4.577637e-05 -43.0) (float-vector -43.3013 24.9999 -43.0) (float-vector -25.0 43.3012 -43.0) (float-vector -4.577637e-05 50.0 -43.0) (float-vector 25.0 43.3013 -43.0) (float-vector 43.3012 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 43.3013 -43.0) (float-vector 25.0 43.3013 -35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 31.3013 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 25.0 43.3013 43.0) (float-vector 43.3013 25.0001 43.0) (float-vector 43.3012 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -4.577637e-05 50.0 35.0) (float-vector -4.577637e-05 50.0 43.0) (float-vector 25.0 43.3013 43.0) (float-vector 25.0 43.3013 35.0)))
         (instance face :init :vertices (list (float-vector -4.577637e-05 50.0 -43.0) (float-vector -4.577637e-05 50.0 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector 25.0 43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3013 35.0) (float-vector -25.0 43.3013 43.0) (float-vector -4.577637e-05 50.0 43.0) (float-vector -4.577637e-05 50.0 35.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3012 -43.0) (float-vector -25.0 43.3012 -35.0) (float-vector -4.577637e-05 50.0 -35.0) (float-vector -4.577637e-05 50.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 24.9999 -43.0) (float-vector -43.3013 25.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -25.0 43.3013 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -25.0 43.3012 -35.0) (float-vector -25.0 43.3012 -43.0)))
         (instance face :init :vertices (list (float-vector -50.0 -4.577637e-05 -43.0) (float-vector -50.0 0.0 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -43.3013 24.9999 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 -25.0 -43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -50.0 0.0 43.0) (float-vector -50.0 -4.577637e-05 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 -43.3013 -43.0) (float-vector -25.0 -43.3012 43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -43.3013 -25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 -50.0 -43.0) (float-vector 3.051758e-05 -50.0 43.0) (float-vector -25.0 -43.3012 43.0) (float-vector -25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 -43.3013 -43.0) (float-vector 25.0 -43.3012 43.0) (float-vector 3.051758e-05 -50.0 43.0) (float-vector 1.525879e-05 -50.0 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 -43.0) (float-vector 43.3013 -25.0 43.0) (float-vector 25.0 -43.3012 43.0) (float-vector 25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 50.0 -3.051758e-05 -43.0) (float-vector 50.0 1.525879e-05 43.0)))
         (instance face :init :vertices (list (float-vector -31.9904 162.5 33.9999) (float-vector -29.4449 172.0 33.9999) (float-vector -29.4449 172.0 -34.0001) (float-vector -31.9904 162.5 -34.0001)))
         (instance face :init :vertices (list (float-vector -29.4449 172.0 33.9999) (float-vector -17.0 184.445 33.9999) (float-vector -17.0 184.445 -34.0001) (float-vector -29.4449 172.0 -34.0001)))
         (instance face :init :vertices (list (float-vector -17.0 184.445 33.9999) (float-vector -3.051758e-05 189.0 33.9999) (float-vector -3.051758e-05 189.0 -34.0001) (float-vector -17.0 184.445 -34.0001)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 189.0 33.9999) (float-vector 17.0 184.445 33.9999) (float-vector 17.0 184.445 -34.0001) (float-vector -3.051758e-05 189.0 -34.0001)))
         (instance face :init :vertices (list (float-vector 17.0 184.445 33.9999) (float-vector 29.4448 172.0 33.9999) (float-vector 29.4448 172.0 -34.0001) (float-vector 17.0 184.445 -34.0001)))
         (instance face :init :vertices (list (float-vector 29.4448 172.0 -34.0001) (float-vector 31.9904 162.5 -34.0001) (float-vector -31.9904 162.5 -34.0001) (float-vector -29.4449 172.0 -34.0001) (float-vector -17.0 184.445 -34.0001) (float-vector -3.051758e-05 189.0 -34.0001) (float-vector 17.0 184.445 -34.0001)))
         (instance face :init :vertices (list (float-vector 29.4448 172.0 33.9999) (float-vector 31.9904 162.5 33.9999) (float-vector 31.9904 162.5 -34.0001) (float-vector 29.4448 172.0 -34.0001)))
         (instance face :init :vertices (list (float-vector 31.9904 162.5 33.9999) (float-vector 29.4448 172.0 33.9999) (float-vector 17.0 184.445 33.9999) (float-vector -3.051758e-05 189.0 33.9999) (float-vector -17.0 184.445 33.9999) (float-vector -29.4449 172.0 33.9999) (float-vector -31.9904 162.5 33.9999)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink8 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rf-crotch-r :weight 1000 :centroid (float-vector 2.670288e-05 57.9865 -1.984817e-05) :inertia-tensor #2f((9.135295e+06 -1.76961 -1.76961) (-1.76961 5.820857e+06 -3.362440e+06) (-1.76961 -3.362439e+06 4.227104e+06))))

     ;; definition of :rf-knee-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 215.0 20.0) (float-vector 20.0 215.0 20.0) (float-vector 20.0 215.0 -20.0) (float-vector -20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 215.0 20.0) (float-vector -20.0 212.0 19.9999) (float-vector 20.0 212.0 20.0) (float-vector 20.0 215.0 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 23.7129 20.0) (float-vector 20.0 210.0 20.0) (float-vector -20.0 210.0 19.9999) (float-vector -20.0 23.7128 20.0) (float-vector -16.0 27.7128 20.0) (float-vector -3.051758e-05 32.0 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 20.0) (float-vector 20.0 212.0 -20.0) (float-vector 20.0 215.0 -20.0) (float-vector 20.0 215.0 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 210.0 -20.0) (float-vector 20.0 210.0 20.0) (float-vector 20.0 23.7129 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 -20.0) (float-vector -20.0 212.0 -20.0001) (float-vector -20.0 215.0 -20.0) (float-vector 20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 23.7129 -20.0) (float-vector -20.0 210.0 -20.0001) (float-vector 20.0 210.0 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 16.0 27.7128 -20.0) (float-vector -3.051758e-05 32.0 -20.0) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 212.0 -20.0001) (float-vector -20.0 212.0 19.9999) (float-vector -20.0 215.0 20.0) (float-vector -20.0 215.0 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 210.0 19.9999) (float-vector -20.0 210.0 -20.0001) (float-vector -20.0 23.7129 -20.0) (float-vector -20.0 23.7128 20.0)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -6.103516e-05) (float-vector 25.9808 212.0 -15.0001) (float-vector 15.0 212.0 -25.9808) (float-vector -3.051758e-05 212.0 -30.0001) (float-vector -15.0 212.0 -25.9808) (float-vector -25.9807 212.0 -15.0) (float-vector -30.0 212.0 -4.577637e-05) (float-vector -25.9807 212.0 15.0) (float-vector -15.0 212.0 25.9807) (float-vector 0.0 212.0 29.9999) (float-vector 15.0 212.0 25.9807) (float-vector 25.9808 212.0 14.9999))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 212.0 19.9999) (float-vector -20.0 212.0 -20.0001) (float-vector 20.0 212.0 -20.0) (float-vector 20.0 212.0 20.0)))
))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -6.103516e-05) (float-vector 30.0 210.0 -6.103516e-05) (float-vector 25.9808 210.0 -15.0001) (float-vector 25.9808 212.0 -15.0001)))
         (instance face :init :vertices (list (float-vector 30.0 210.0 -6.103516e-05) (float-vector 25.9808 210.0 14.9999) (float-vector 15.0 210.0 25.9807) (float-vector 0.0 210.0 29.9999) (float-vector -15.0 210.0 25.9807) (float-vector -25.9807 210.0 15.0) (float-vector -30.0 210.0 -4.577637e-05) (float-vector -25.9807 210.0 -15.0) (float-vector -15.0 210.0 -25.9808) (float-vector -3.051758e-05 210.0 -30.0001) (float-vector 15.0 210.0 -25.9808) (float-vector 25.9808 210.0 -15.0001))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 210.0 -20.0001) (float-vector -20.0 210.0 19.9999) (float-vector 20.0 210.0 20.0) (float-vector 20.0 210.0 -20.0)))
))
         (instance face :init :vertices (list (float-vector 15.0 210.0 -25.9808) (float-vector 15.0 212.0 -25.9808) (float-vector 25.9808 212.0 -15.0001) (float-vector 25.9808 210.0 -15.0001)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 210.0 -30.0001) (float-vector -3.051758e-05 212.0 -30.0001) (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 -25.9808) (float-vector -15.0 212.0 -25.9808) (float-vector -3.051758e-05 212.0 -30.0001) (float-vector -3.051758e-05 210.0 -30.0001)))
         (instance face :init :vertices (list (float-vector -25.9807 210.0 -15.0) (float-vector -25.9807 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 210.0 -4.577637e-05) (float-vector -30.0 212.0 -4.577637e-05) (float-vector -25.9807 212.0 -15.0) (float-vector -25.9807 210.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9807 210.0 15.0) (float-vector -25.9807 212.0 15.0) (float-vector -30.0 212.0 -4.577637e-05) (float-vector -30.0 210.0 -4.577637e-05)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 25.9807) (float-vector -15.0 212.0 25.9807) (float-vector -25.9807 212.0 15.0) (float-vector -25.9807 210.0 15.0)))
         (instance face :init :vertices (list (float-vector 0.0 210.0 29.9999) (float-vector 0.0 212.0 29.9999) (float-vector -15.0 212.0 25.9807) (float-vector -15.0 210.0 25.9807)))
         (instance face :init :vertices (list (float-vector 15.0 210.0 25.9807) (float-vector 15.0 212.0 25.9807) (float-vector 0.0 212.0 29.9999) (float-vector 0.0 210.0 29.9999)))
         (instance face :init :vertices (list (float-vector 25.9808 210.0 14.9999) (float-vector 25.9808 212.0 14.9999) (float-vector 15.0 212.0 25.9807) (float-vector 15.0 210.0 25.9807)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 14.9999) (float-vector 25.9808 210.0 14.9999) (float-vector 30.0 210.0 -6.103516e-05) (float-vector 30.0 212.0 -6.103516e-05)))
         (instance face :init :vertices (list (float-vector 32.0 -1.525879e-05 -29.5) (float-vector 32.0 1.525879e-05 29.5) (float-vector 27.7128 -16.0 29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 -16.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 16.0 -27.7128 29.5) (float-vector 3.051758e-05 -32.0 29.5) (float-vector 3.051758e-05 -32.0 -29.5) (float-vector 16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 -32.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector 3.051758e-05 -32.0 -29.5)))
         (instance face :init :vertices (list (float-vector -16.0 -27.7128 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 -16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -32.0 -4.577637e-05 -29.5) (float-vector -27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -32.0 0.0 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -32.0 -4.577637e-05 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 16.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -16.0 27.7128 20.0) (float-vector -20.0 23.7128 20.0) (float-vector -20.0 23.7129 -20.0) (float-vector -16.0 27.7128 -20.0) (float-vector -16.0 27.7128 -29.5) (float-vector -27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 32.0 -20.0) (float-vector 0.0 32.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -16.0 27.7128 29.5) (float-vector -3.051758e-05 32.0 29.5) (float-vector -3.051758e-05 32.0 20.0) (float-vector -16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 -20.0) (float-vector 16.0 27.7128 -29.5) (float-vector 0.0 32.0 -29.5) (float-vector -3.051758e-05 32.0 -20.0)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 32.0 29.5) (float-vector 16.0 27.7128 29.5) (float-vector 16.0 27.7128 20.0) (float-vector -3.051758e-05 32.0 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 29.5) (float-vector 27.7128 16.0 29.5) (float-vector 27.7128 16.0 -29.5) (float-vector 16.0 27.7128 -29.5) (float-vector 16.0 27.7128 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 23.7129 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 -29.5) (float-vector 32.0 -1.525879e-05 -29.5) (float-vector 27.7128 -16.0 -29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 3.051758e-05 -32.0 -29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -32.0 -4.577637e-05 -29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector 0.0 32.0 -29.5) (float-vector 16.0 27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 29.5) (float-vector 32.0 1.525879e-05 29.5) (float-vector 32.0 -1.525879e-05 -29.5) (float-vector 27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 32.0 1.525879e-05 29.5) (float-vector 27.7128 16.0 29.5) (float-vector 16.0 27.7128 29.5) (float-vector -3.051758e-05 32.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector 3.051758e-05 -32.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 27.7128 -16.0 29.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0001) (float-vector 30.0 212.0 -6.103516e-05) (float-vector 25.9808 212.0 14.9999) (float-vector 15.0 212.0 25.9807) (float-vector 3.051758e-05 212.0 29.9999) (float-vector -15.0 212.0 25.9807) (float-vector -25.9807 212.0 15.0) (float-vector -30.0 212.0 -4.577637e-05) (float-vector -25.9807 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0001) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector 30.0 250.0 -7.629395e-05) (float-vector 25.9808 250.0 -15.0001) (float-vector 15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0001) (float-vector -15.0 250.0 -25.9808) (float-vector -25.9807 250.0 -15.0001) (float-vector -30.0 250.0 -6.103516e-05) (float-vector -25.9807 250.0 14.9999) (float-vector -15.0 250.0 25.9807) (float-vector 3.051758e-05 250.0 29.9999) (float-vector 15.0 250.0 25.9807) (float-vector 25.9808 250.0 14.9999)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0001) (float-vector 25.9808 250.0 -15.0001) (float-vector 30.0 250.0 -7.629395e-05) (float-vector 30.0 212.0 -6.103516e-05)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 250.0 -25.9808) (float-vector 25.9808 250.0 -15.0001) (float-vector 25.9808 212.0 -15.0001)))
         (instance face :init :vertices (list (float-vector 0.0 212.0 -30.0001) (float-vector 0.0 250.0 -30.0001) (float-vector 15.0 250.0 -25.9808) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0001) (float-vector 0.0 212.0 -30.0001)))
         (instance face :init :vertices (list (float-vector -25.9807 212.0 -15.0) (float-vector -25.9807 250.0 -15.0001) (float-vector -15.0 250.0 -25.9808) (float-vector -15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 212.0 -4.577637e-05) (float-vector -30.0 250.0 -6.103516e-05) (float-vector -25.9807 250.0 -15.0001) (float-vector -25.9807 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9807 212.0 15.0) (float-vector -25.9807 250.0 14.9999) (float-vector -30.0 250.0 -6.103516e-05) (float-vector -30.0 212.0 -4.577637e-05)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 25.9807) (float-vector -15.0 250.0 25.9807) (float-vector -25.9807 250.0 14.9999) (float-vector -25.9807 212.0 15.0)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 212.0 29.9999) (float-vector 3.051758e-05 250.0 29.9999) (float-vector -15.0 250.0 25.9807) (float-vector -15.0 212.0 25.9807)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 25.9807) (float-vector 15.0 250.0 25.9807) (float-vector 3.051758e-05 250.0 29.9999) (float-vector 3.051758e-05 212.0 29.9999)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 14.9999) (float-vector 25.9808 250.0 14.9999) (float-vector 15.0 250.0 25.9807) (float-vector 15.0 212.0 25.9807)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -6.103516e-05) (float-vector 30.0 250.0 -7.629395e-05) (float-vector 25.9808 250.0 14.9999) (float-vector 25.9808 212.0 14.9999)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray40)
     (setq blink9 (instance bodyset-link :init (make-cascoords) :bodies bc :name :rf-knee-r :weight 600 :centroid (float-vector 0.000137 102.198 -3.118528e-05) :inertia-tensor #2f((1.192042e+07 -5.24855 -5.24855) (-5.24855 5.049679e+06 -3.905877e+06) (-5.24855 -3.905877e+06 7.049073e+06))))

     ;; definition of :lb-crotch-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 69.282 -40.0001 120.0) (float-vector 80.0 0.0 120.0) (float-vector 69.282 40.0 120.0) (float-vector 40.0 69.282 120.0) (float-vector 3.051758e-05 80.0 120.0) (float-vector -40.0 69.282 120.0) (float-vector -69.282 40.0 120.0) (float-vector -80.0 4.577637e-05 120.0) (float-vector -69.282 -40.0 120.0) (float-vector -40.0 -69.282 120.0) (float-vector -6.866455e-05 -80.0 120.0) (float-vector 39.9999 -69.2821 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 0.0) (float-vector 69.282 -40.0001 0.0) (float-vector 39.9999 -69.2821 0.0) (float-vector -6.866455e-05 -80.0 0.0) (float-vector -40.0 -69.282 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -80.0 4.577637e-05 0.0) (float-vector -69.282 40.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector 3.051758e-05 80.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 69.282 40.0 0.0)))
         (instance face :init :vertices (list (float-vector 69.282 -40.0001 120.0) (float-vector 69.282 -40.0001 0.0) (float-vector 80.0 0.0 0.0) (float-vector 80.0 0.0 120.0)))
         (instance face :init :vertices (list (float-vector 39.9999 -69.2821 120.0) (float-vector 39.9999 -69.2821 0.0) (float-vector 69.282 -40.0001 0.0) (float-vector 69.282 -40.0001 120.0)))
         (instance face :init :vertices (list (float-vector -6.866455e-05 -80.0 120.0) (float-vector -6.866455e-05 -80.0 0.0) (float-vector 39.9999 -69.2821 0.0) (float-vector 39.9999 -69.2821 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 -69.282 120.0) (float-vector -40.0 -69.282 0.0) (float-vector -6.866455e-05 -80.0 0.0) (float-vector -6.866455e-05 -80.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 -40.0 120.0) (float-vector -69.282 -40.0 0.0) (float-vector -40.0 -69.282 0.0) (float-vector -40.0 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -80.0 4.577637e-05 120.0) (float-vector -80.0 4.577637e-05 0.0) (float-vector -69.282 -40.0 0.0) (float-vector -69.282 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 40.0 120.0) (float-vector -69.282 40.0 0.0) (float-vector -80.0 4.577637e-05 0.0) (float-vector -80.0 4.577637e-05 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 69.282 120.0) (float-vector -40.0 69.282 0.0) (float-vector -69.282 40.0 0.0) (float-vector -69.282 40.0 120.0)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 80.0 120.0) (float-vector 3.051758e-05 80.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector -40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 40.0 69.282 120.0) (float-vector 40.0 69.282 0.0) (float-vector 3.051758e-05 80.0 0.0) (float-vector 3.051758e-05 80.0 120.0)))
         (instance face :init :vertices (list (float-vector 69.282 40.0 120.0) (float-vector 69.282 40.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 120.0) (float-vector 80.0 0.0 0.0) (float-vector 69.282 40.0 0.0) (float-vector 69.282 40.0 120.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lb-crotch-y :weight 2000 :centroid (float-vector 1.519098e-06 7.052954e-07 60.0) :inertia-tensor #2f((5.600000e+06 -1.550964e-22 -1.734723e-14) (-1.550964e-22 5.600000e+06 -6.505213e-15) (-1.734723e-14 -6.505213e-15 6.400000e+06))))

     ;; definition of :lb-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -37.0 162.5 35.0) (float-vector 37.0 162.5 35.0) (float-vector 37.0 162.5 -35.0) (float-vector -37.0 162.5 -35.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 31.9904 162.5 33.9999) (float-vector -31.9904 162.5 33.9999) (float-vector -31.9904 162.5 -34.0001) (float-vector 31.9904 162.5 -34.0001)))
))
         (instance face :init :vertices (list (float-vector -37.0 162.5 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -25.0 43.3013 35.0) (float-vector -4.577637e-05 50.0 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 37.0 31.3013 35.0) (float-vector 37.0 162.5 35.0)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 162.5 -35.0) (float-vector 37.0 162.5 35.0)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector -4.577637e-05 50.0 -35.0) (float-vector -25.0 43.3012 -35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 162.5 -35.0) (float-vector 37.0 162.5 -35.0)))
         (instance face :init :vertices (list (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 162.5 35.0) (float-vector -37.0 162.5 -35.0)))
         (instance face :init :vertices (list (float-vector 50.0 3.051758e-05 43.0) (float-vector 43.3013 25.0001 43.0) (float-vector 25.0 43.3013 43.0) (float-vector -4.577637e-05 50.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -50.0 0.0 43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -25.0 -43.3012 43.0) (float-vector 1.525879e-05 -50.0 43.0) (float-vector 25.0 -43.3012 43.0) (float-vector 43.3013 -25.0 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 3.051758e-05 43.0) (float-vector 50.0 -1.525879e-05 -43.0) (float-vector 43.3012 25.0 -43.0) (float-vector 43.3013 25.0001 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 -1.525879e-05 -43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 25.0 -43.3013 -43.0) (float-vector 1.525879e-05 -50.0 -43.0) (float-vector -25.0 -43.3013 -43.0) (float-vector -43.3013 -25.0 -43.0) (float-vector -50.0 -6.103516e-05 -43.0) (float-vector -43.3013 25.0 -43.0) (float-vector -25.0 43.3012 -43.0) (float-vector -4.577637e-05 50.0 -43.0) (float-vector 25.0 43.3013 -43.0) (float-vector 43.3012 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 43.3013 -43.0) (float-vector 25.0 43.3013 -35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 31.3013 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 25.0 43.3013 43.0) (float-vector 43.3013 25.0001 43.0) (float-vector 43.3012 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -4.577637e-05 50.0 35.0) (float-vector -4.577637e-05 50.0 43.0) (float-vector 25.0 43.3013 43.0) (float-vector 25.0 43.3013 35.0)))
         (instance face :init :vertices (list (float-vector -4.577637e-05 50.0 -43.0) (float-vector -4.577637e-05 50.0 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector 25.0 43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3013 35.0) (float-vector -25.0 43.3013 43.0) (float-vector -4.577637e-05 50.0 43.0) (float-vector -4.577637e-05 50.0 35.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3012 -43.0) (float-vector -25.0 43.3012 -35.0) (float-vector -4.577637e-05 50.0 -35.0) (float-vector -4.577637e-05 50.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 25.0 -43.0) (float-vector -43.3013 25.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -25.0 43.3013 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -25.0 43.3012 -35.0) (float-vector -25.0 43.3012 -43.0)))
         (instance face :init :vertices (list (float-vector -50.0 -6.103516e-05 -43.0) (float-vector -50.0 0.0 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -43.3013 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 -25.0 -43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -50.0 0.0 43.0) (float-vector -50.0 -6.103516e-05 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 -43.3013 -43.0) (float-vector -25.0 -43.3012 43.0) (float-vector -43.3013 -25.0 43.0) (float-vector -43.3013 -25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 -50.0 -43.0) (float-vector 1.525879e-05 -50.0 43.0) (float-vector -25.0 -43.3012 43.0) (float-vector -25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 -43.3013 -43.0) (float-vector 25.0 -43.3012 43.0) (float-vector 1.525879e-05 -50.0 43.0) (float-vector 1.525879e-05 -50.0 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 -43.0) (float-vector 43.3013 -25.0 43.0) (float-vector 25.0 -43.3012 43.0) (float-vector 25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 50.0 -1.525879e-05 -43.0) (float-vector 50.0 3.051758e-05 43.0)))
         (instance face :init :vertices (list (float-vector -31.9904 162.5 33.9999) (float-vector -29.4449 172.0 33.9999) (float-vector -29.4449 172.0 -34.0001) (float-vector -31.9904 162.5 -34.0001)))
         (instance face :init :vertices (list (float-vector -29.4449 172.0 33.9999) (float-vector -17.0 184.445 33.9999) (float-vector -17.0 184.445 -34.0001) (float-vector -29.4449 172.0 -34.0001)))
         (instance face :init :vertices (list (float-vector -17.0 184.445 33.9999) (float-vector -3.051758e-05 189.0 33.9999) (float-vector -3.051758e-05 189.0 -34.0001) (float-vector -17.0 184.445 -34.0001)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 189.0 33.9999) (float-vector 17.0 184.445 33.9999) (float-vector 17.0 184.445 -34.0001) (float-vector -3.051758e-05 189.0 -34.0001)))
         (instance face :init :vertices (list (float-vector 17.0 184.445 33.9999) (float-vector 29.4448 172.0 33.9999) (float-vector 29.4448 172.0 -34.0001) (float-vector 17.0 184.445 -34.0001)))
         (instance face :init :vertices (list (float-vector 29.4448 172.0 -34.0001) (float-vector 31.9904 162.5 -34.0001) (float-vector -31.9904 162.5 -34.0001) (float-vector -29.4449 172.0 -34.0001) (float-vector -17.0 184.445 -34.0001) (float-vector -3.051758e-05 189.0 -34.0001) (float-vector 17.0 184.445 -34.0001)))
         (instance face :init :vertices (list (float-vector 29.4448 172.0 33.9999) (float-vector 31.9904 162.5 33.9999) (float-vector 31.9904 162.5 -34.0001) (float-vector 29.4448 172.0 -34.0001)))
         (instance face :init :vertices (list (float-vector 31.9904 162.5 33.9999) (float-vector 29.4448 172.0 33.9999) (float-vector 17.0 184.445 33.9999) (float-vector -3.051758e-05 189.0 33.9999) (float-vector -17.0 184.445 33.9999) (float-vector -29.4449 172.0 33.9999) (float-vector -31.9904 162.5 33.9999)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lb-crotch-r :weight 1000 :centroid (float-vector 2.670288e-05 57.9865 -1.984817e-05) :inertia-tensor #2f((9.135295e+06 -1.76961 -1.76961) (-1.76961 5.820857e+06 -3.362440e+06) (-1.76961 -3.362439e+06 4.227104e+06))))

     ;; definition of :lb-knee-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 215.0 19.9999) (float-vector 20.0 215.0 19.9999) (float-vector 20.0 215.0 -20.0001) (float-vector -20.0 215.0 -20.0001)))
         (instance face :init :vertices (list (float-vector -20.0 215.0 19.9999) (float-vector -20.0 212.0 19.9999) (float-vector 20.0 212.0 19.9999) (float-vector 20.0 215.0 19.9999)))
         (instance face :init :vertices (list (float-vector 20.0 23.7129 20.0) (float-vector 20.0 210.0 19.9999) (float-vector -20.0 210.0 19.9999) (float-vector -20.0 23.7128 20.0) (float-vector -16.0 27.7128 20.0) (float-vector -3.051758e-05 32.0 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 19.9999) (float-vector 20.0 212.0 -20.0001) (float-vector 20.0 215.0 -20.0001) (float-vector 20.0 215.0 19.9999)))
         (instance face :init :vertices (list (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 210.0 -20.0001) (float-vector 20.0 210.0 19.9999) (float-vector 20.0 23.7129 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 -20.0001) (float-vector -20.0 212.0 -20.0001) (float-vector -20.0 215.0 -20.0001) (float-vector 20.0 215.0 -20.0001)))
         (instance face :init :vertices (list (float-vector -20.0 23.7129 -20.0) (float-vector -20.0 210.0 -20.0) (float-vector 20.0 210.0 -20.0001) (float-vector 20.0 23.7128 -20.0) (float-vector 15.9999 27.7128 -20.0) (float-vector -6.103516e-05 32.0 -20.0) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 212.0 -20.0001) (float-vector -20.0 212.0 19.9999) (float-vector -20.0 215.0 19.9999) (float-vector -20.0 215.0 -20.0001)))
         (instance face :init :vertices (list (float-vector -20.0 210.0 19.9999) (float-vector -20.0 210.0 -20.0) (float-vector -20.0 23.7129 -20.0) (float-vector -20.0 23.7128 20.0)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -6.103516e-05) (float-vector 25.9807 212.0 -15.0001) (float-vector 15.0 212.0 -25.9808) (float-vector -3.051758e-05 212.0 -30.0) (float-vector -15.0 212.0 -25.9808) (float-vector -25.9808 212.0 -15.0) (float-vector -30.0 212.0 -3.051758e-05) (float-vector -25.9807 212.0 15.0) (float-vector -15.0 212.0 25.9807) (float-vector 0.0 212.0 29.9999) (float-vector 15.0 212.0 25.9807) (float-vector 25.9807 212.0 14.9999))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 212.0 19.9999) (float-vector -20.0 212.0 -20.0001) (float-vector 20.0 212.0 -20.0001) (float-vector 20.0 212.0 19.9999)))
))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -6.103516e-05) (float-vector 30.0 210.0 -6.103516e-05) (float-vector 25.9807 210.0 -15.0001) (float-vector 25.9807 212.0 -15.0001)))
         (instance face :init :vertices (list (float-vector 30.0 210.0 -6.103516e-05) (float-vector 25.9807 210.0 14.9999) (float-vector 15.0 210.0 25.9807) (float-vector 0.0 210.0 29.9999) (float-vector -15.0 210.0 25.9807) (float-vector -25.9807 210.0 15.0) (float-vector -30.0 210.0 -3.051758e-05) (float-vector -25.9808 210.0 -15.0) (float-vector -15.0 210.0 -25.9808) (float-vector -3.051758e-05 210.0 -30.0) (float-vector 15.0 210.0 -25.9808) (float-vector 25.9807 210.0 -15.0001))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 210.0 -20.0) (float-vector -20.0 210.0 19.9999) (float-vector 20.0 210.0 19.9999) (float-vector 20.0 210.0 -20.0001)))
))
         (instance face :init :vertices (list (float-vector 15.0 210.0 -25.9808) (float-vector 15.0 212.0 -25.9808) (float-vector 25.9807 212.0 -15.0001) (float-vector 25.9807 210.0 -15.0001)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 210.0 -30.0) (float-vector -3.051758e-05 212.0 -30.0) (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 -25.9808) (float-vector -15.0 212.0 -25.9808) (float-vector -3.051758e-05 212.0 -30.0) (float-vector -3.051758e-05 210.0 -30.0)))
         (instance face :init :vertices (list (float-vector -25.9808 210.0 -15.0) (float-vector -25.9808 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 210.0 -3.051758e-05) (float-vector -30.0 212.0 -3.051758e-05) (float-vector -25.9808 212.0 -15.0) (float-vector -25.9808 210.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9807 210.0 15.0) (float-vector -25.9807 212.0 15.0) (float-vector -30.0 212.0 -3.051758e-05) (float-vector -30.0 210.0 -3.051758e-05)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 25.9807) (float-vector -15.0 212.0 25.9807) (float-vector -25.9807 212.0 15.0) (float-vector -25.9807 210.0 15.0)))
         (instance face :init :vertices (list (float-vector 0.0 210.0 29.9999) (float-vector 0.0 212.0 29.9999) (float-vector -15.0 212.0 25.9807) (float-vector -15.0 210.0 25.9807)))
         (instance face :init :vertices (list (float-vector 15.0 210.0 25.9807) (float-vector 15.0 212.0 25.9807) (float-vector 0.0 212.0 29.9999) (float-vector 0.0 210.0 29.9999)))
         (instance face :init :vertices (list (float-vector 25.9807 210.0 14.9999) (float-vector 25.9807 212.0 14.9999) (float-vector 15.0 212.0 25.9807) (float-vector 15.0 210.0 25.9807)))
         (instance face :init :vertices (list (float-vector 25.9807 212.0 14.9999) (float-vector 25.9807 210.0 14.9999) (float-vector 30.0 210.0 -6.103516e-05) (float-vector 30.0 212.0 -6.103516e-05)))
         (instance face :init :vertices (list (float-vector 32.0 -1.525879e-05 -29.5) (float-vector 32.0 3.051758e-05 29.5) (float-vector 27.7128 -16.0 29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 -16.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 16.0 -27.7128 29.5) (float-vector 0.0 -32.0 29.5) (float-vector 0.0 -32.0 -29.5) (float-vector 16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 0.0 -32.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector 0.0 -32.0 -29.5)))
         (instance face :init :vertices (list (float-vector -16.0 -27.7128 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 -16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -32.0 -4.577637e-05 -29.5) (float-vector -27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -32.0 0.0 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -32.0 -4.577637e-05 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 16.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -16.0 27.7128 20.0) (float-vector -20.0 23.7128 20.0) (float-vector -20.0 23.7129 -20.0) (float-vector -16.0 27.7128 -20.0) (float-vector -16.0 27.7128 -29.5) (float-vector -27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 32.0 -20.0) (float-vector -6.103516e-05 32.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -16.0 27.7128 29.5) (float-vector -6.103516e-05 32.0 29.5) (float-vector -3.051758e-05 32.0 20.0) (float-vector -16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 15.9999 27.7128 -20.0) (float-vector 15.9999 27.7128 -29.5) (float-vector -6.103516e-05 32.0 -29.5) (float-vector -6.103516e-05 32.0 -20.0)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 32.0 29.5) (float-vector 15.9999 27.7128 29.5) (float-vector 16.0 27.7128 20.0) (float-vector -3.051758e-05 32.0 20.0)))
         (instance face :init :vertices (list (float-vector 15.9999 27.7128 29.5) (float-vector 27.7128 16.0001 29.5) (float-vector 27.7128 16.0 -29.5) (float-vector 15.9999 27.7128 -29.5) (float-vector 15.9999 27.7128 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 23.7129 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 -29.5) (float-vector 32.0 -1.525879e-05 -29.5) (float-vector 27.7128 -16.0 -29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 0.0 -32.0 -29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -32.0 -4.577637e-05 -29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -6.103516e-05 32.0 -29.5) (float-vector 15.9999 27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0001 29.5) (float-vector 32.0 3.051758e-05 29.5) (float-vector 32.0 -1.525879e-05 -29.5) (float-vector 27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 32.0 3.051758e-05 29.5) (float-vector 27.7128 16.0001 29.5) (float-vector 15.9999 27.7128 29.5) (float-vector -6.103516e-05 32.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector 0.0 -32.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 27.7128 -16.0 29.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.9807 212.0 -15.0001) (float-vector 30.0 212.0 -4.577637e-05) (float-vector 25.9807 212.0 15.0) (float-vector 15.0 212.0 25.9807) (float-vector 3.051758e-05 212.0 30.0) (float-vector -15.0 212.0 25.9807) (float-vector -25.9807 212.0 15.0) (float-vector -30.0 212.0 -3.051758e-05) (float-vector -25.9808 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector 30.0 250.0 -6.103516e-05) (float-vector 25.9807 250.0 -15.0001) (float-vector 15.0 250.0 -25.9809) (float-vector 0.0 250.0 -30.0001) (float-vector -15.0 250.0 -25.9808) (float-vector -25.9808 250.0 -15.0) (float-vector -30.0 250.0 -4.577637e-05) (float-vector -25.9807 250.0 14.9999) (float-vector -15.0 250.0 25.9807) (float-vector 3.051758e-05 250.0 29.9999) (float-vector 15.0 250.0 25.9807) (float-vector 25.9807 250.0 14.9999)))
         (instance face :init :vertices (list (float-vector 25.9807 212.0 -15.0001) (float-vector 25.9807 250.0 -15.0001) (float-vector 30.0 250.0 -6.103516e-05) (float-vector 30.0 212.0 -4.577637e-05)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 250.0 -25.9809) (float-vector 25.9807 250.0 -15.0001) (float-vector 25.9807 212.0 -15.0001)))
         (instance face :init :vertices (list (float-vector 0.0 212.0 -30.0) (float-vector 0.0 250.0 -30.0001) (float-vector 15.0 250.0 -25.9809) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0001) (float-vector 0.0 212.0 -30.0)))
         (instance face :init :vertices (list (float-vector -25.9808 212.0 -15.0) (float-vector -25.9808 250.0 -15.0) (float-vector -15.0 250.0 -25.9808) (float-vector -15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 212.0 -3.051758e-05) (float-vector -30.0 250.0 -4.577637e-05) (float-vector -25.9808 250.0 -15.0) (float-vector -25.9808 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9807 212.0 15.0) (float-vector -25.9807 250.0 14.9999) (float-vector -30.0 250.0 -4.577637e-05) (float-vector -30.0 212.0 -3.051758e-05)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 25.9807) (float-vector -15.0 250.0 25.9807) (float-vector -25.9807 250.0 14.9999) (float-vector -25.9807 212.0 15.0)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 212.0 30.0) (float-vector 3.051758e-05 250.0 29.9999) (float-vector -15.0 250.0 25.9807) (float-vector -15.0 212.0 25.9807)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 25.9807) (float-vector 15.0 250.0 25.9807) (float-vector 3.051758e-05 250.0 29.9999) (float-vector 3.051758e-05 212.0 30.0)))
         (instance face :init :vertices (list (float-vector 25.9807 212.0 15.0) (float-vector 25.9807 250.0 14.9999) (float-vector 15.0 250.0 25.9807) (float-vector 15.0 212.0 25.9807)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -4.577637e-05) (float-vector 30.0 250.0 -6.103516e-05) (float-vector 25.9807 250.0 14.9999) (float-vector 25.9807 212.0 15.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray40)
     (setq blink6 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lb-knee-r :weight 600 :centroid (float-vector 0.000137 102.198 -3.118528e-05) :inertia-tensor #2f((1.192042e+07 -5.24855 -5.24855) (-5.24855 5.049679e+06 -3.905877e+06) (-5.24855 -3.905877e+06 7.049073e+06))))

     ;; definition of :lf-crotch-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 69.282 -40.0001 120.0) (float-vector 80.0 0.0 120.0) (float-vector 69.282 40.0 120.0) (float-vector 40.0 69.282 120.0) (float-vector 2.288818e-05 80.0 120.0) (float-vector -40.0 69.282 120.0) (float-vector -69.282 40.0 120.0) (float-vector -80.0 4.577637e-05 120.0) (float-vector -69.2821 -40.0 120.0) (float-vector -40.0001 -69.282 120.0) (float-vector -7.629395e-05 -80.0 120.0) (float-vector 39.9999 -69.2821 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 0.0) (float-vector 69.282 -40.0001 0.0) (float-vector 39.9999 -69.2821 0.0) (float-vector -7.629395e-05 -80.0 0.0) (float-vector -40.0001 -69.282 0.0) (float-vector -69.2821 -40.0 0.0) (float-vector -80.0 4.577637e-05 0.0) (float-vector -69.282 40.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector 2.288818e-05 80.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 69.282 40.0 0.0)))
         (instance face :init :vertices (list (float-vector 69.282 -40.0001 120.0) (float-vector 69.282 -40.0001 0.0) (float-vector 80.0 0.0 0.0) (float-vector 80.0 0.0 120.0)))
         (instance face :init :vertices (list (float-vector 39.9999 -69.2821 120.0) (float-vector 39.9999 -69.2821 0.0) (float-vector 69.282 -40.0001 0.0) (float-vector 69.282 -40.0001 120.0)))
         (instance face :init :vertices (list (float-vector -7.629395e-05 -80.0 120.0) (float-vector -7.629395e-05 -80.0 0.0) (float-vector 39.9999 -69.2821 0.0) (float-vector 39.9999 -69.2821 120.0)))
         (instance face :init :vertices (list (float-vector -40.0001 -69.282 120.0) (float-vector -40.0001 -69.282 0.0) (float-vector -7.629395e-05 -80.0 0.0) (float-vector -7.629395e-05 -80.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.2821 -40.0 120.0) (float-vector -69.2821 -40.0 0.0) (float-vector -40.0001 -69.282 0.0) (float-vector -40.0001 -69.282 120.0)))
         (instance face :init :vertices (list (float-vector -80.0 4.577637e-05 120.0) (float-vector -80.0 4.577637e-05 0.0) (float-vector -69.2821 -40.0 0.0) (float-vector -69.2821 -40.0 120.0)))
         (instance face :init :vertices (list (float-vector -69.282 40.0 120.0) (float-vector -69.282 40.0 0.0) (float-vector -80.0 4.577637e-05 0.0) (float-vector -80.0 4.577637e-05 120.0)))
         (instance face :init :vertices (list (float-vector -40.0 69.282 120.0) (float-vector -40.0 69.282 0.0) (float-vector -69.282 40.0 0.0) (float-vector -69.282 40.0 120.0)))
         (instance face :init :vertices (list (float-vector 2.288818e-05 80.0 120.0) (float-vector 2.288818e-05 80.0 0.0) (float-vector -40.0 69.282 0.0) (float-vector -40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 40.0 69.282 120.0) (float-vector 40.0 69.282 0.0) (float-vector 2.288818e-05 80.0 0.0) (float-vector 2.288818e-05 80.0 120.0)))
         (instance face :init :vertices (list (float-vector 69.282 40.0 120.0) (float-vector 69.282 40.0 0.0) (float-vector 40.0 69.282 0.0) (float-vector 40.0 69.282 120.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 120.0) (float-vector 80.0 0.0 0.0) (float-vector 69.282 40.0 0.0) (float-vector 69.282 40.0 120.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lf-crotch-y :weight 2000 :centroid (float-vector 1.519098e-06 7.052954e-07 60.0) :inertia-tensor #2f((5.600000e+06 -1.550964e-22 -1.734723e-14) (-1.550964e-22 5.600000e+06 -6.505213e-15) (-1.734723e-14 -6.505213e-15 6.400000e+06))))

     ;; definition of :lf-crotch-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -37.0 162.5 35.0) (float-vector 37.0 162.5 35.0) (float-vector 37.0 162.5 -35.0) (float-vector -37.0 162.5 -35.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 31.9904 162.5 33.9999) (float-vector -31.9904 162.5 33.9999) (float-vector -31.9904 162.5 -34.0001) (float-vector 31.9904 162.5 -34.0001)))
))
         (instance face :init :vertices (list (float-vector -37.0 162.5 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -25.0 43.3013 35.0) (float-vector -6.103516e-05 50.0 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 37.0 31.3013 35.0) (float-vector 37.0 162.5 35.0)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 162.5 -35.0) (float-vector 37.0 162.5 35.0)))
         (instance face :init :vertices (list (float-vector 37.0 31.3013 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector -4.577637e-05 50.0 -35.0) (float-vector -25.0 43.3012 -35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 162.5 -35.0) (float-vector 37.0 162.5 -35.0)))
         (instance face :init :vertices (list (float-vector -37.0 31.3013 -35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 162.5 35.0) (float-vector -37.0 162.5 -35.0)))
         (instance face :init :vertices (list (float-vector 50.0 3.051758e-05 43.0) (float-vector 43.3012 25.0001 43.0) (float-vector 25.0 43.3013 43.0) (float-vector -4.577637e-05 50.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -50.0 0.0 43.0) (float-vector -43.3012 -25.0 43.0) (float-vector -25.0 -43.3013 43.0) (float-vector 1.525879e-05 -50.0 43.0) (float-vector 25.0 -43.3012 43.0) (float-vector 43.3013 -25.0 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 3.051758e-05 43.0) (float-vector 50.0 -3.051758e-05 -43.0) (float-vector 43.3012 25.0 -43.0) (float-vector 43.3012 25.0001 43.0)))
         (instance face :init :vertices (list (float-vector 50.0 -3.051758e-05 -43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 25.0 -43.3013 -43.0) (float-vector 1.525879e-05 -50.0 -43.0) (float-vector -25.0 -43.3013 -43.0) (float-vector -43.3012 -25.0 -43.0) (float-vector -50.0 -6.103516e-05 -43.0) (float-vector -43.3013 24.9999 -43.0) (float-vector -25.0 43.3012 -43.0) (float-vector -6.103516e-05 50.0 -43.0) (float-vector 24.9999 43.3013 -43.0) (float-vector 43.3012 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 24.9999 43.3013 -43.0) (float-vector 25.0 43.3013 -35.0) (float-vector 37.0 31.3013 -35.0) (float-vector 37.0 31.3013 35.0) (float-vector 25.0 43.3013 35.0) (float-vector 25.0 43.3013 43.0) (float-vector 43.3012 25.0001 43.0) (float-vector 43.3012 25.0 -43.0)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 50.0 35.0) (float-vector -4.577637e-05 50.0 43.0) (float-vector 25.0 43.3013 43.0) (float-vector 25.0 43.3013 35.0)))
         (instance face :init :vertices (list (float-vector -6.103516e-05 50.0 -43.0) (float-vector -4.577637e-05 50.0 -35.0) (float-vector 25.0 43.3013 -35.0) (float-vector 24.9999 43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3013 35.0) (float-vector -25.0 43.3013 43.0) (float-vector -4.577637e-05 50.0 43.0) (float-vector -6.103516e-05 50.0 35.0)))
         (instance face :init :vertices (list (float-vector -25.0 43.3012 -43.0) (float-vector -25.0 43.3012 -35.0) (float-vector -4.577637e-05 50.0 -35.0) (float-vector -6.103516e-05 50.0 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3013 24.9999 -43.0) (float-vector -43.3013 25.0 43.0) (float-vector -25.0 43.3013 43.0) (float-vector -25.0 43.3013 35.0) (float-vector -37.0 31.3013 35.0) (float-vector -37.0 31.3013 -35.0) (float-vector -25.0 43.3012 -35.0) (float-vector -25.0 43.3012 -43.0)))
         (instance face :init :vertices (list (float-vector -50.0 -6.103516e-05 -43.0) (float-vector -50.0 0.0 43.0) (float-vector -43.3013 25.0 43.0) (float-vector -43.3013 24.9999 -43.0)))
         (instance face :init :vertices (list (float-vector -43.3012 -25.0 -43.0) (float-vector -43.3012 -25.0 43.0) (float-vector -50.0 0.0 43.0) (float-vector -50.0 -6.103516e-05 -43.0)))
         (instance face :init :vertices (list (float-vector -25.0 -43.3013 -43.0) (float-vector -25.0 -43.3013 43.0) (float-vector -43.3012 -25.0 43.0) (float-vector -43.3012 -25.0 -43.0)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 -50.0 -43.0) (float-vector 1.525879e-05 -50.0 43.0) (float-vector -25.0 -43.3013 43.0) (float-vector -25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 25.0 -43.3013 -43.0) (float-vector 25.0 -43.3012 43.0) (float-vector 1.525879e-05 -50.0 43.0) (float-vector 1.525879e-05 -50.0 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 -43.0) (float-vector 43.3013 -25.0 43.0) (float-vector 25.0 -43.3012 43.0) (float-vector 25.0 -43.3013 -43.0)))
         (instance face :init :vertices (list (float-vector 43.3013 -25.0 43.0) (float-vector 43.3013 -25.0 -43.0) (float-vector 50.0 -3.051758e-05 -43.0) (float-vector 50.0 3.051758e-05 43.0)))
         (instance face :init :vertices (list (float-vector -31.9904 162.5 33.9999) (float-vector -29.4449 172.0 33.9999) (float-vector -29.4449 172.0 -34.0001) (float-vector -31.9904 162.5 -34.0001)))
         (instance face :init :vertices (list (float-vector -29.4449 172.0 33.9999) (float-vector -17.0 184.445 33.9999) (float-vector -17.0 184.445 -34.0001) (float-vector -29.4449 172.0 -34.0001)))
         (instance face :init :vertices (list (float-vector -17.0 184.445 33.9999) (float-vector -4.577637e-05 189.0 33.9999) (float-vector -4.577637e-05 189.0 -34.0001) (float-vector -17.0 184.445 -34.0001)))
         (instance face :init :vertices (list (float-vector -4.577637e-05 189.0 33.9999) (float-vector 17.0 184.445 33.9999) (float-vector 17.0 184.445 -34.0001) (float-vector -4.577637e-05 189.0 -34.0001)))
         (instance face :init :vertices (list (float-vector 17.0 184.445 33.9999) (float-vector 29.4448 172.0 33.9999) (float-vector 29.4448 172.0 -34.0001) (float-vector 17.0 184.445 -34.0001)))
         (instance face :init :vertices (list (float-vector 29.4448 172.0 -34.0001) (float-vector 31.9904 162.5 -34.0001) (float-vector -31.9904 162.5 -34.0001) (float-vector -29.4449 172.0 -34.0001) (float-vector -17.0 184.445 -34.0001) (float-vector -4.577637e-05 189.0 -34.0001) (float-vector 17.0 184.445 -34.0001)))
         (instance face :init :vertices (list (float-vector 29.4448 172.0 33.9999) (float-vector 31.9904 162.5 33.9999) (float-vector 31.9904 162.5 -34.0001) (float-vector 29.4448 172.0 -34.0001)))
         (instance face :init :vertices (list (float-vector 31.9904 162.5 33.9999) (float-vector 29.4448 172.0 33.9999) (float-vector 17.0 184.445 33.9999) (float-vector -4.577637e-05 189.0 33.9999) (float-vector -17.0 184.445 33.9999) (float-vector -29.4449 172.0 33.9999) (float-vector -31.9904 162.5 33.9999)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lf-crotch-r :weight 1000 :centroid (float-vector 2.670288e-05 57.9865 -1.984817e-05) :inertia-tensor #2f((9.135295e+06 -1.76961 -1.76961) (-1.76961 5.820857e+06 -3.362440e+06) (-1.76961 -3.362439e+06 4.227104e+06))))

     ;; definition of :lf-knee-r
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -20.0 215.0 19.9999) (float-vector 20.0 215.0 19.9999) (float-vector 20.0 215.0 -20.0001) (float-vector -20.0 215.0 -20.0001)))
         (instance face :init :vertices (list (float-vector -20.0 215.0 19.9999) (float-vector -20.0 212.0 19.9999) (float-vector 20.0 212.0 19.9999) (float-vector 20.0 215.0 19.9999)))
         (instance face :init :vertices (list (float-vector 20.0 23.7129 20.0) (float-vector 20.0 210.0 19.9999) (float-vector -20.0 210.0 19.9999) (float-vector -20.0 23.7128 20.0) (float-vector -16.0 27.7128 20.0) (float-vector 0.0 32.0 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 19.9999) (float-vector 20.0 212.0 -20.0001) (float-vector 20.0 215.0 -20.0001) (float-vector 20.0 215.0 19.9999)))
         (instance face :init :vertices (list (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 210.0 -20.0001) (float-vector 20.0 210.0 19.9999) (float-vector 20.0 23.7129 20.0)))
         (instance face :init :vertices (list (float-vector 20.0 212.0 -20.0001) (float-vector -20.0 212.0 -20.0001) (float-vector -20.0 215.0 -20.0001) (float-vector 20.0 215.0 -20.0001)))
         (instance face :init :vertices (list (float-vector -20.0 23.7129 -20.0) (float-vector -20.0 210.0 -20.0001) (float-vector 20.0 210.0 -20.0001) (float-vector 20.0 23.7128 -20.0) (float-vector 16.0 27.7128 -20.0) (float-vector -3.051758e-05 32.0 -20.0) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -20.0 212.0 -20.0001) (float-vector -20.0 212.0 19.9999) (float-vector -20.0 215.0 19.9999) (float-vector -20.0 215.0 -20.0001)))
         (instance face :init :vertices (list (float-vector -20.0 210.0 19.9999) (float-vector -20.0 210.0 -20.0001) (float-vector -20.0 23.7129 -20.0) (float-vector -20.0 23.7128 20.0)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -7.629395e-05) (float-vector 25.9808 212.0 -15.0001) (float-vector 15.0 212.0 -25.9808) (float-vector -3.051758e-05 212.0 -30.0001) (float-vector -15.0 212.0 -25.9808) (float-vector -25.9807 212.0 -15.0) (float-vector -30.0 212.0 -4.577637e-05) (float-vector -25.9807 212.0 14.9999) (float-vector -15.0 212.0 25.9807) (float-vector 0.0 212.0 29.9999) (float-vector 15.0 212.0 25.9807) (float-vector 25.9808 212.0 14.9999))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 212.0 19.9999) (float-vector -20.0 212.0 -20.0001) (float-vector 20.0 212.0 -20.0001) (float-vector 20.0 212.0 19.9999)))
))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -7.629395e-05) (float-vector 30.0 210.0 -7.629395e-05) (float-vector 25.9808 210.0 -15.0001) (float-vector 25.9808 212.0 -15.0001)))
         (instance face :init :vertices (list (float-vector 30.0 210.0 -7.629395e-05) (float-vector 25.9808 210.0 14.9999) (float-vector 15.0 210.0 25.9807) (float-vector 0.0 210.0 29.9999) (float-vector -15.0 210.0 25.9807) (float-vector -25.9807 210.0 14.9999) (float-vector -30.0 210.0 -4.577637e-05) (float-vector -25.9807 210.0 -15.0) (float-vector -15.0 210.0 -25.9808) (float-vector -3.051758e-05 210.0 -30.0001) (float-vector 15.0 210.0 -25.9808) (float-vector 25.9808 210.0 -15.0001))
                              :holes (list
         (instance hole :init :vertices (list (float-vector -20.0 210.0 -20.0001) (float-vector -20.0 210.0 19.9999) (float-vector 20.0 210.0 19.9999) (float-vector 20.0 210.0 -20.0001)))
))
         (instance face :init :vertices (list (float-vector 15.0 210.0 -25.9808) (float-vector 15.0 212.0 -25.9808) (float-vector 25.9808 212.0 -15.0001) (float-vector 25.9808 210.0 -15.0001)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 210.0 -30.0001) (float-vector -3.051758e-05 212.0 -30.0001) (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 -25.9808) (float-vector -15.0 212.0 -25.9808) (float-vector -3.051758e-05 212.0 -30.0001) (float-vector -3.051758e-05 210.0 -30.0001)))
         (instance face :init :vertices (list (float-vector -25.9807 210.0 -15.0) (float-vector -25.9807 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 210.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 210.0 -4.577637e-05) (float-vector -30.0 212.0 -4.577637e-05) (float-vector -25.9807 212.0 -15.0) (float-vector -25.9807 210.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9807 210.0 14.9999) (float-vector -25.9807 212.0 14.9999) (float-vector -30.0 212.0 -4.577637e-05) (float-vector -30.0 210.0 -4.577637e-05)))
         (instance face :init :vertices (list (float-vector -15.0 210.0 25.9807) (float-vector -15.0 212.0 25.9807) (float-vector -25.9807 212.0 14.9999) (float-vector -25.9807 210.0 14.9999)))
         (instance face :init :vertices (list (float-vector 0.0 210.0 29.9999) (float-vector 0.0 212.0 29.9999) (float-vector -15.0 212.0 25.9807) (float-vector -15.0 210.0 25.9807)))
         (instance face :init :vertices (list (float-vector 15.0 210.0 25.9807) (float-vector 15.0 212.0 25.9807) (float-vector 0.0 212.0 29.9999) (float-vector 0.0 210.0 29.9999)))
         (instance face :init :vertices (list (float-vector 25.9808 210.0 14.9999) (float-vector 25.9808 212.0 14.9999) (float-vector 15.0 212.0 25.9807) (float-vector 15.0 210.0 25.9807)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 14.9999) (float-vector 25.9808 210.0 14.9999) (float-vector 30.0 210.0 -7.629395e-05) (float-vector 30.0 212.0 -7.629395e-05)))
         (instance face :init :vertices (list (float-vector 32.0 -1.525879e-05 -29.5) (float-vector 32.0 3.051758e-05 29.5) (float-vector 27.7128 -16.0 29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 -16.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 16.0 -27.7128 29.5) (float-vector 3.051758e-05 -32.0 29.5) (float-vector 3.051758e-05 -32.0 -29.5) (float-vector 16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 -32.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector 3.051758e-05 -32.0 -29.5)))
         (instance face :init :vertices (list (float-vector -16.0 -27.7128 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -16.0 -27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 -16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -32.0 -3.051758e-05 -29.5) (float-vector -27.7128 -16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -32.0 0.0 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -32.0 -3.051758e-05 -29.5)))
         (instance face :init :vertices (list (float-vector -27.7128 16.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -16.0 27.7128 20.0) (float-vector -20.0 23.7128 20.0) (float-vector -20.0 23.7129 -20.0) (float-vector -16.0 27.7128 -20.0) (float-vector -16.0 27.7128 -29.5) (float-vector -27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 32.0 -20.0) (float-vector -3.051758e-05 32.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -16.0 27.7128 -20.0)))
         (instance face :init :vertices (list (float-vector -16.0 27.7128 29.5) (float-vector -3.051758e-05 32.0 29.5) (float-vector 0.0 32.0 20.0) (float-vector -16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 -20.0) (float-vector 16.0 27.7128 -29.5) (float-vector -3.051758e-05 32.0 -29.5) (float-vector -3.051758e-05 32.0 -20.0)))
         (instance face :init :vertices (list (float-vector -3.051758e-05 32.0 29.5) (float-vector 16.0 27.7128 29.5) (float-vector 16.0 27.7128 20.0) (float-vector 0.0 32.0 20.0)))
         (instance face :init :vertices (list (float-vector 16.0 27.7128 29.5) (float-vector 27.7128 16.0001 29.5) (float-vector 27.7128 16.0 -29.5) (float-vector 16.0 27.7128 -29.5) (float-vector 16.0 27.7128 -20.0) (float-vector 20.0 23.7128 -20.0) (float-vector 20.0 23.7129 20.0) (float-vector 16.0 27.7128 20.0)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0 -29.5) (float-vector 32.0 -1.525879e-05 -29.5) (float-vector 27.7128 -16.0 -29.5) (float-vector 16.0 -27.7128 -29.5) (float-vector 3.051758e-05 -32.0 -29.5) (float-vector -16.0 -27.7128 -29.5) (float-vector -27.7128 -16.0 -29.5) (float-vector -32.0 -3.051758e-05 -29.5) (float-vector -27.7128 16.0 -29.5) (float-vector -16.0 27.7128 -29.5) (float-vector -3.051758e-05 32.0 -29.5) (float-vector 16.0 27.7128 -29.5)))
         (instance face :init :vertices (list (float-vector 27.7128 16.0001 29.5) (float-vector 32.0 3.051758e-05 29.5) (float-vector 32.0 -1.525879e-05 -29.5) (float-vector 27.7128 16.0 -29.5)))
         (instance face :init :vertices (list (float-vector 32.0 3.051758e-05 29.5) (float-vector 27.7128 16.0001 29.5) (float-vector 16.0 27.7128 29.5) (float-vector -3.051758e-05 32.0 29.5) (float-vector -16.0 27.7128 29.5) (float-vector -27.7128 16.0 29.5) (float-vector -32.0 0.0 29.5) (float-vector -27.7128 -16.0 29.5) (float-vector -16.0 -27.7128 29.5) (float-vector 3.051758e-05 -32.0 29.5) (float-vector 16.0 -27.7128 29.5) (float-vector 27.7128 -16.0 29.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0001) (float-vector 30.0 212.0 -6.103516e-05) (float-vector 25.9808 212.0 14.9999) (float-vector 15.0 212.0 25.9807) (float-vector 3.051758e-05 212.0 29.9999) (float-vector -15.0 212.0 25.9807) (float-vector -25.9807 212.0 15.0) (float-vector -30.0 212.0 -4.577637e-05) (float-vector -25.9807 212.0 -15.0) (float-vector -15.0 212.0 -25.9808) (float-vector 0.0 212.0 -30.0001) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector 30.0 250.0 -7.629395e-05) (float-vector 25.9808 250.0 -15.0001) (float-vector 15.0 250.0 -25.9809) (float-vector 0.0 250.0 -30.0001) (float-vector -15.0 250.0 -25.9808) (float-vector -25.9807 250.0 -15.0001) (float-vector -30.0 250.0 -6.103516e-05) (float-vector -25.9807 250.0 14.9999) (float-vector -15.0 250.0 25.9807) (float-vector 3.051758e-05 250.0 29.9999) (float-vector 15.0 250.0 25.9807) (float-vector 25.9808 250.0 14.9999)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 -15.0001) (float-vector 25.9808 250.0 -15.0001) (float-vector 30.0 250.0 -7.629395e-05) (float-vector 30.0 212.0 -6.103516e-05)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 -25.9808) (float-vector 15.0 250.0 -25.9809) (float-vector 25.9808 250.0 -15.0001) (float-vector 25.9808 212.0 -15.0001)))
         (instance face :init :vertices (list (float-vector 0.0 212.0 -30.0001) (float-vector 0.0 250.0 -30.0001) (float-vector 15.0 250.0 -25.9809) (float-vector 15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 -25.9808) (float-vector -15.0 250.0 -25.9808) (float-vector 0.0 250.0 -30.0001) (float-vector 0.0 212.0 -30.0001)))
         (instance face :init :vertices (list (float-vector -25.9807 212.0 -15.0) (float-vector -25.9807 250.0 -15.0001) (float-vector -15.0 250.0 -25.9808) (float-vector -15.0 212.0 -25.9808)))
         (instance face :init :vertices (list (float-vector -30.0 212.0 -4.577637e-05) (float-vector -30.0 250.0 -6.103516e-05) (float-vector -25.9807 250.0 -15.0001) (float-vector -25.9807 212.0 -15.0)))
         (instance face :init :vertices (list (float-vector -25.9807 212.0 15.0) (float-vector -25.9807 250.0 14.9999) (float-vector -30.0 250.0 -6.103516e-05) (float-vector -30.0 212.0 -4.577637e-05)))
         (instance face :init :vertices (list (float-vector -15.0 212.0 25.9807) (float-vector -15.0 250.0 25.9807) (float-vector -25.9807 250.0 14.9999) (float-vector -25.9807 212.0 15.0)))
         (instance face :init :vertices (list (float-vector 3.051758e-05 212.0 29.9999) (float-vector 3.051758e-05 250.0 29.9999) (float-vector -15.0 250.0 25.9807) (float-vector -15.0 212.0 25.9807)))
         (instance face :init :vertices (list (float-vector 15.0 212.0 25.9807) (float-vector 15.0 250.0 25.9807) (float-vector 3.051758e-05 250.0 29.9999) (float-vector 3.051758e-05 212.0 29.9999)))
         (instance face :init :vertices (list (float-vector 25.9808 212.0 14.9999) (float-vector 25.9808 250.0 14.9999) (float-vector 15.0 250.0 25.9807) (float-vector 15.0 212.0 25.9807)))
         (instance face :init :vertices (list (float-vector 30.0 212.0 -6.103516e-05) (float-vector 30.0 250.0 -7.629395e-05) (float-vector 25.9808 250.0 14.9999) (float-vector 25.9808 212.0 14.9999)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :gray40)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :lf-knee-r :weight 600 :centroid (float-vector 0.000137 102.198 -3.118528e-05) :inertia-tensor #2f((1.192042e+07 -5.24855 -5.24855) (-5.24855 5.049679e+06 -3.905877e+06) (-5.24855 -3.905877e+06 7.049073e+06))))

     ;; definition of :titan-head-neck-y
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -39.0 -69.0 16.0) (float-vector 39.0 -69.0 16.0) (float-vector 26.0 -69.0 41.0) (float-vector 16.0 -69.0 51.0) (float-vector 6.0 -69.0 59.0) (float-vector -4.0 -69.0 67.0) (float-vector -11.0 -69.0 72.0) (float-vector -19.0 -69.0 67.0) (float-vector -29.0 -69.0 56.0)))
         (instance face :init :vertices (list (float-vector 39.0 69.0 16.0) (float-vector -39.0 69.0 16.0) (float-vector -29.0 69.0 56.0) (float-vector -19.0 69.0 67.0) (float-vector -11.0 69.0 72.0) (float-vector -4.0 69.0 67.0) (float-vector 6.0 69.0 59.0) (float-vector 16.0 69.0 51.0) (float-vector 26.0 69.0 41.0)))
         (instance face :init :vertices (list (float-vector -39.0 -69.0 16.0) (float-vector -39.0 69.0 16.0) (float-vector 39.0 69.0 16.0) (float-vector 39.0 -69.0 16.0)))
         (instance face :init :vertices (list (float-vector -29.0 -69.0 56.0) (float-vector -29.0 69.0 56.0) (float-vector -39.0 69.0 16.0) (float-vector -39.0 -69.0 16.0)))
         (instance face :init :vertices (list (float-vector -19.0 -69.0 67.0) (float-vector -19.0 69.0 67.0) (float-vector -29.0 69.0 56.0) (float-vector -29.0 -69.0 56.0)))
         (instance face :init :vertices (list (float-vector -11.0 -69.0 72.0) (float-vector -11.0 69.0 72.0) (float-vector -19.0 69.0 67.0) (float-vector -19.0 -69.0 67.0)))
         (instance face :init :vertices (list (float-vector -4.0 -69.0 67.0) (float-vector -4.0 69.0 67.0) (float-vector -11.0 69.0 72.0) (float-vector -11.0 -69.0 72.0)))
         (instance face :init :vertices (list (float-vector 6.0 -69.0 59.0) (float-vector 6.0 69.0 59.0) (float-vector -4.0 69.0 67.0) (float-vector -4.0 -69.0 67.0)))
         (instance face :init :vertices (list (float-vector 16.0 -69.0 51.0) (float-vector 16.0 69.0 51.0) (float-vector 6.0 69.0 59.0) (float-vector 6.0 -69.0 59.0)))
         (instance face :init :vertices (list (float-vector 26.0 -69.0 41.0) (float-vector 26.0 69.0 41.0) (float-vector 16.0 69.0 51.0) (float-vector 16.0 -69.0 51.0)))
         (instance face :init :vertices (list (float-vector 39.0 -69.0 16.0) (float-vector 39.0 69.0 16.0) (float-vector 26.0 69.0 41.0) (float-vector 26.0 -69.0 41.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (setq blink13 (instance bodyset-link :init (make-cascoords) :bodies bc :name :titan-head-neck-y :weight 1000 :centroid (float-vector -3.86511 9.567702e-06 37.277) :inertia-tensor #2f((1.875726e+06 -8.298016e+05 -1.237198e+06) (-8.298015e+05 4.322683e+06 -6.749698e+05) (-1.237198e+06 -6.749698e+05 3.769042e+06))))

     ;; definition of :titan-head-neck-p
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -35.0 -20.0 88.0) (float-vector 35.0 -20.0001 88.0) (float-vector 15.0 16.9999 88.0) (float-vector 5.0 19.9999 88.0) (float-vector 1.525879e-05 22.9999 88.0) (float-vector -10.0 19.9999 88.0) (float-vector -15.0 16.9999 88.0)))
         (instance face :init :vertices (list (float-vector 35.0 -20.0 -88.0) (float-vector -35.0 -20.0 -88.0) (float-vector -15.0 17.0 -88.0) (float-vector -10.0 20.0 -88.0) (float-vector 0.0 23.0 -88.0) (float-vector 5.0 20.0 -88.0) (float-vector 15.0 17.0 -88.0)))
         (instance face :init :vertices (list (float-vector -35.0 -20.0 88.0) (float-vector -35.0 -20.0 -88.0) (float-vector 35.0 -20.0 -88.0) (float-vector 35.0 -20.0001 88.0)))
         (instance face :init :vertices (list (float-vector -15.0 16.9999 88.0) (float-vector -15.0 17.0 -88.0) (float-vector -35.0 -20.0 -88.0) (float-vector -35.0 -20.0 88.0)))
         (instance face :init :vertices (list (float-vector -10.0 19.9999 88.0) (float-vector -10.0 20.0 -88.0) (float-vector -15.0 17.0 -88.0) (float-vector -15.0 16.9999 88.0)))
         (instance face :init :vertices (list (float-vector 1.525879e-05 22.9999 88.0) (float-vector 0.0 23.0 -88.0) (float-vector -10.0 20.0 -88.0) (float-vector -10.0 19.9999 88.0)))
         (instance face :init :vertices (list (float-vector 5.0 19.9999 88.0) (float-vector 5.0 20.0 -88.0) (float-vector 0.0 23.0 -88.0) (float-vector 1.525879e-05 22.9999 88.0)))
         (instance face :init :vertices (list (float-vector 15.0 16.9999 88.0) (float-vector 15.0 17.0 -88.0) (float-vector 5.0 20.0 -88.0) (float-vector 5.0 19.9999 88.0)))
         (instance face :init :vertices (list (float-vector 35.0 -20.0001 88.0) (float-vector 35.0 -20.0 -88.0) (float-vector 15.0 17.0 -88.0) (float-vector 15.0 16.9999 88.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -51.0 -54.0 57.0) (float-vector -50.0 -54.0 57.0) (float-vector -50.0 -54.0 59.0) (float-vector -51.0 -54.0 59.0)))
         (instance face :init :vertices (list (float-vector -51.0 -56.0 57.0) (float-vector -50.0 -56.0 57.0) (float-vector -50.0 -54.0 57.0) (float-vector -51.0 -54.0 57.0)))
         (instance face :init :vertices (list (float-vector -51.0 -56.0 59.0) (float-vector -50.0 -56.0 59.0) (float-vector -50.0 -56.0 57.0) (float-vector -51.0 -56.0 57.0)))
         (instance face :init :vertices (list (float-vector -50.0 -56.0 59.0) (float-vector -50.0 -54.0 59.0) (float-vector -50.0 -54.0 57.0) (float-vector -50.0 -56.0 57.0)))
         (instance face :init :vertices (list (float-vector -50.0 -54.0 59.0) (float-vector -50.0 -56.0 59.0) (float-vector -51.0 -56.0 59.0) (float-vector -51.0 -54.0 59.0)))
         (instance face :init :vertices (list (float-vector -50.0 -37.4999 80.5) (float-vector -50.0 -37.5 35.5) (float-vector -50.0 -72.5 35.5) (float-vector -50.0 -72.4999 80.5)))
         (instance face :init :vertices (list (float-vector -50.0 -37.4999 80.5) (float-vector 50.0 -37.5 80.5) (float-vector 50.0 -37.5 35.5) (float-vector -50.0 -37.5 35.5)))
         (instance face :init :vertices (list (float-vector 50.0 -37.5 80.5) (float-vector 50.0 -72.5 80.5) (float-vector 50.0 -72.5 35.5) (float-vector 50.0 -37.5 35.5)))
         (instance face :init :vertices (list (float-vector 50.0 -72.5 35.5) (float-vector -50.0 -72.5 35.5) (float-vector -50.0 -37.5 35.5) (float-vector 50.0 -37.5 35.5)))
         (instance face :init :vertices (list (float-vector 50.0 -72.5 80.5) (float-vector -50.0 -72.4999 80.5) (float-vector -50.0 -72.5 35.5) (float-vector 50.0 -72.5 35.5)))
         (instance face :init :vertices (list (float-vector -50.0 -72.4999 80.5) (float-vector 50.0 -72.5 80.5) (float-vector 50.0 -37.5 80.5) (float-vector -50.0 -37.4999 80.5)))
         (instance face :init :vertices (list (float-vector -80.0 -54.9999 75.0) (float-vector -51.0 -54.9999 75.0) (float-vector -51.0 -46.4999 72.7224) (float-vector -80.0 -46.4999 72.7224)))
         (instance face :init :vertices (list (float-vector -51.0 -46.4999 72.7224) (float-vector -51.0 -40.2775 66.5) (float-vector -80.0 -40.2775 66.5) (float-vector -80.0 -46.4999 72.7224)))
         (instance face :init :vertices (list (float-vector -51.0 -40.2775 66.5) (float-vector -51.0 -38.0 58.0) (float-vector -80.0 -37.9999 58.0) (float-vector -80.0 -40.2775 66.5)))
         (instance face :init :vertices (list (float-vector -51.0 -38.0 58.0) (float-vector -51.0 -40.2776 49.5) (float-vector -80.0 -40.2775 49.5) (float-vector -80.0 -37.9999 58.0)))
         (instance face :init :vertices (list (float-vector -51.0 -40.2776 49.5) (float-vector -51.0 -46.5 43.2776) (float-vector -80.0 -46.4999 43.2776) (float-vector -80.0 -40.2775 49.5)))
         (instance face :init :vertices (list (float-vector -51.0 -46.5 43.2776) (float-vector -51.0 -55.0 41.0) (float-vector -80.0 -54.9999 41.0) (float-vector -80.0 -46.4999 43.2776)))
         (instance face :init :vertices (list (float-vector -51.0 -55.0 41.0) (float-vector -51.0 -63.5 43.2776) (float-vector -80.0 -63.4999 43.2776) (float-vector -80.0 -54.9999 41.0)))
         (instance face :init :vertices (list (float-vector -51.0 -63.5 43.2776) (float-vector -51.0 -69.7224 49.5) (float-vector -80.0 -69.7224 49.5) (float-vector -80.0 -63.4999 43.2776)))
         (instance face :init :vertices (list (float-vector -51.0 -69.7224 49.5) (float-vector -51.0 -71.9999 58.0) (float-vector -80.0 -71.9999 58.0) (float-vector -80.0 -69.7224 49.5)))
         (instance face :init :vertices (list (float-vector -51.0 -71.9999 58.0) (float-vector -51.0 -69.7224 66.5) (float-vector -80.0 -69.7224 66.5) (float-vector -80.0 -71.9999 58.0)))
         (instance face :init :vertices (list (float-vector -51.0 -69.7224 66.5) (float-vector -51.0 -63.4999 72.7224) (float-vector -80.0 -63.4999 72.7224) (float-vector -80.0 -69.7224 66.5)))
         (instance face :init :vertices (list (float-vector -80.0 -63.4999 72.7224) (float-vector -80.0 -54.9999 75.0) (float-vector -80.0 -46.4999 72.7224) (float-vector -80.0 -40.2775 66.5) (float-vector -80.0 -37.9999 58.0) (float-vector -80.0 -40.2775 49.5) (float-vector -80.0 -46.4999 43.2776) (float-vector -80.0 -54.9999 41.0) (float-vector -80.0 -63.4999 43.2776) (float-vector -80.0 -69.7224 49.5) (float-vector -80.0 -71.9999 58.0) (float-vector -80.0 -69.7224 66.5)))
         (instance face :init :vertices (list (float-vector -51.0 -63.4999 72.7224) (float-vector -51.0 -54.9999 75.0) (float-vector -80.0 -54.9999 75.0) (float-vector -80.0 -63.4999 72.7224)))
         (instance face :init :vertices (list (float-vector -51.0 -54.0 59.0) (float-vector -51.0 -56.0 59.0) (float-vector -51.0 -56.0 57.0) (float-vector -51.0 -54.0 57.0)))
         (instance face :init :vertices (list (float-vector -51.0 -54.9999 75.0) (float-vector -51.0 -63.4999 72.7224) (float-vector -51.0 -69.7224 66.5) (float-vector -51.0 -71.9999 58.0) (float-vector -51.0 -69.7224 49.5) (float-vector -51.0 -63.5 43.2776) (float-vector -51.0 -55.0 41.0) (float-vector -51.0 -46.5 43.2776) (float-vector -51.0 -40.2776 49.5) (float-vector -51.0 -38.0 58.0) (float-vector -51.0 -40.2775 66.5) (float-vector -51.0 -46.4999 72.7224)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -51.0 -54.0 -59.0) (float-vector -50.0 -54.0 -59.0) (float-vector -50.0 -54.0 -57.0) (float-vector -51.0 -54.0 -57.0)))
         (instance face :init :vertices (list (float-vector -51.0 -56.0 -59.0) (float-vector -50.0 -56.0 -59.0) (float-vector -50.0 -54.0 -59.0) (float-vector -51.0 -54.0 -59.0)))
         (instance face :init :vertices (list (float-vector -51.0 -56.0 -57.0) (float-vector -50.0 -56.0 -57.0) (float-vector -50.0 -56.0 -59.0) (float-vector -51.0 -56.0 -59.0)))
         (instance face :init :vertices (list (float-vector -50.0 -56.0 -57.0) (float-vector -50.0 -54.0 -57.0) (float-vector -50.0 -54.0 -59.0) (float-vector -50.0 -56.0 -59.0)))
         (instance face :init :vertices (list (float-vector -50.0 -54.0 -57.0) (float-vector -50.0 -56.0 -57.0) (float-vector -51.0 -56.0 -57.0) (float-vector -51.0 -54.0 -57.0)))
         (instance face :init :vertices (list (float-vector -50.0 -37.5 -35.5) (float-vector -50.0 -37.5001 -80.4999) (float-vector -50.0 -72.5001 -80.4999) (float-vector -50.0 -72.5 -35.5)))
         (instance face :init :vertices (list (float-vector -50.0 -37.5 -35.5) (float-vector 50.0 -37.5001 -35.5) (float-vector 50.0 -37.5001 -80.4999) (float-vector -50.0 -37.5001 -80.4999)))
         (instance face :init :vertices (list (float-vector 50.0 -37.5001 -35.5) (float-vector 50.0 -72.5001 -35.5) (float-vector 50.0 -72.5001 -80.4999) (float-vector 50.0 -37.5001 -80.4999)))
         (instance face :init :vertices (list (float-vector 50.0 -72.5001 -80.4999) (float-vector -50.0 -72.5001 -80.4999) (float-vector -50.0 -37.5001 -80.4999) (float-vector 50.0 -37.5001 -80.4999)))
         (instance face :init :vertices (list (float-vector 50.0 -72.5001 -35.5) (float-vector -50.0 -72.5 -35.5) (float-vector -50.0 -72.5001 -80.4999) (float-vector 50.0 -72.5001 -80.4999)))
         (instance face :init :vertices (list (float-vector -50.0 -72.5 -35.5) (float-vector 50.0 -72.5001 -35.5) (float-vector 50.0 -37.5001 -35.5) (float-vector -50.0 -37.5 -35.5)))
         (instance face :init :vertices (list (float-vector -80.0 -55.0 -41.0) (float-vector -51.0 -55.0 -41.0) (float-vector -51.0 -46.5 -43.2775) (float-vector -80.0 -46.5 -43.2775)))
         (instance face :init :vertices (list (float-vector -51.0 -46.5 -43.2775) (float-vector -51.0 -40.2776 -49.5) (float-vector -80.0 -40.2776 -49.5) (float-vector -80.0 -46.5 -43.2775)))
         (instance face :init :vertices (list (float-vector -51.0 -40.2776 -49.5) (float-vector -51.0 -38.0 -58.0) (float-vector -80.0 -38.0 -58.0) (float-vector -80.0 -40.2776 -49.5)))
         (instance face :init :vertices (list (float-vector -51.0 -38.0 -58.0) (float-vector -51.0 -40.2776 -66.4999) (float-vector -80.0 -40.2776 -66.4999) (float-vector -80.0 -38.0 -58.0)))
         (instance face :init :vertices (list (float-vector -51.0 -40.2776 -66.4999) (float-vector -51.0 -46.5001 -72.7224) (float-vector -80.0 -46.5 -72.7224) (float-vector -80.0 -40.2776 -66.4999)))
         (instance face :init :vertices (list (float-vector -51.0 -46.5001 -72.7224) (float-vector -51.0 -55.0001 -74.9999) (float-vector -80.0 -55.0 -74.9999) (float-vector -80.0 -46.5 -72.7224)))
         (instance face :init :vertices (list (float-vector -51.0 -55.0001 -74.9999) (float-vector -51.0 -63.5001 -72.7224) (float-vector -80.0 -63.5 -72.7224) (float-vector -80.0 -55.0 -74.9999)))
         (instance face :init :vertices (list (float-vector -51.0 -63.5001 -72.7224) (float-vector -51.0 -69.7225 -66.4999) (float-vector -80.0 -69.7224 -66.4999) (float-vector -80.0 -63.5 -72.7224)))
         (instance face :init :vertices (list (float-vector -51.0 -69.7225 -66.4999) (float-vector -51.0 -72.0 -58.0) (float-vector -80.0 -72.0 -58.0) (float-vector -80.0 -69.7224 -66.4999)))
         (instance face :init :vertices (list (float-vector -51.0 -72.0 -58.0) (float-vector -51.0 -69.7224 -49.5) (float-vector -80.0 -69.7225 -49.5) (float-vector -80.0 -72.0 -58.0)))
         (instance face :init :vertices (list (float-vector -51.0 -69.7224 -49.5) (float-vector -51.0 -63.5 -43.2775) (float-vector -80.0 -63.5 -43.2775) (float-vector -80.0 -69.7225 -49.5)))
         (instance face :init :vertices (list (float-vector -80.0 -63.5 -43.2775) (float-vector -80.0 -55.0 -41.0) (float-vector -80.0 -46.5 -43.2775) (float-vector -80.0 -40.2776 -49.5) (float-vector -80.0 -38.0 -58.0) (float-vector -80.0 -40.2776 -66.4999) (float-vector -80.0 -46.5 -72.7224) (float-vector -80.0 -55.0 -74.9999) (float-vector -80.0 -63.5 -72.7224) (float-vector -80.0 -69.7224 -66.4999) (float-vector -80.0 -72.0 -58.0) (float-vector -80.0 -69.7225 -49.5)))
         (instance face :init :vertices (list (float-vector -51.0 -63.5 -43.2775) (float-vector -51.0 -55.0 -41.0) (float-vector -80.0 -55.0 -41.0) (float-vector -80.0 -63.5 -43.2775)))
         (instance face :init :vertices (list (float-vector -51.0 -54.0 -57.0) (float-vector -51.0 -56.0 -57.0) (float-vector -51.0 -56.0 -59.0) (float-vector -51.0 -54.0 -59.0)))
         (instance face :init :vertices (list (float-vector -51.0 -55.0 -41.0) (float-vector -51.0 -63.5 -43.2775) (float-vector -51.0 -69.7224 -49.5) (float-vector -51.0 -72.0 -58.0) (float-vector -51.0 -69.7225 -66.4999) (float-vector -51.0 -63.5001 -72.7224) (float-vector -51.0 -55.0001 -74.9999) (float-vector -51.0 -46.5001 -72.7224) (float-vector -51.0 -40.2776 -66.4999) (float-vector -51.0 -38.0 -58.0) (float-vector -51.0 -40.2776 -49.5) (float-vector -51.0 -46.5 -43.2775)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray90)
     (send (elt bc 1) :set-color :gray40)
     (send (elt bc 2) :set-color :gray40)
     (setq blink14 (instance bodyset-link :init (make-cascoords) :bodies bc :name :titan-head-neck-p :weight 480 :centroid (float-vector -5.28347 -33.2922 1.154579e-05) :inertia-tensor #2f((3.284625e+06 -4.280865e+05 -7.079676e+05) (-4.280865e+05 3.769300e+06 -8.868803e+05) (-7.079675e+05 -8.868802e+05 1.902376e+06))))

     ;; definition of assoc
     (send blink12 :newcoords (make-coords :pos (float-vector 0.0 155.0 -3.051758e-05) :rot #2f((4.241202e-07 1.0 3.403835e-08) (-1.0 4.241202e-07 3.403819e-08) (3.403818e-08 -3.403836e-08 1.0))))
     (send blink11 :assoc blink12)
     (send blink11 :newcoords (make-coords :pos (float-vector -45.0 -1.525879e-05 60.0) :rot #2f((3.576278e-07 -1.0 0.0) (4.172325e-07 4.352074e-14 1.0) (-1.0 -3.576279e-07 4.172325e-07))))
     (send blink10 :assoc blink11)
     (send blink9 :newcoords (make-coords :pos (float-vector 1.525879e-05 155.0 -3.051758e-05) :rot #2f((4.241202e-07 1.0 3.403835e-08) (-1.0 4.241202e-07 3.403819e-08) (3.403818e-08 -3.403836e-08 1.0))))
     (send blink8 :assoc blink9)
     (send blink8 :newcoords (make-coords :pos (float-vector -45.0 -1.525879e-05 60.0) :rot #2f((3.576278e-07 -1.0 0.0) (4.172325e-07 4.352074e-14 1.0) (-1.0 -3.576279e-07 4.172325e-07))))
     (send blink7 :assoc blink8)
     (send blink6 :newcoords (make-coords :pos (float-vector 0.0 155.0 0.0) :rot #2f((4.241202e-07 1.0 4.235815e-09) (-1.0 4.241202e-07 1.149733e-07) (1.149733e-07 -4.235862e-09 1.0))))
     (send blink5 :assoc blink6)
     (send blink5 :newcoords (make-coords :pos (float-vector -45.0 -1.525879e-05 60.0) :rot #2f((3.576278e-07 -1.0 0.0) (4.172325e-07 4.352074e-14 1.0) (-1.0 -3.576279e-07 4.172325e-07))))
     (send blink4 :assoc blink5)
     (send blink3 :newcoords (make-coords :pos (float-vector 0.0 155.0 0.0) :rot #2f((4.241202e-07 1.0 4.235815e-09) (-1.0 4.241202e-07 1.149733e-07) (1.149733e-07 -4.235862e-09 1.0))))
     (send blink2 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector -45.0 -1.525879e-05 60.0) :rot #2f((3.576278e-07 -1.0 0.0) (4.172325e-07 4.352074e-14 1.0) (-1.0 -3.576279e-07 4.172325e-07))))
     (send blink1 :assoc blink2)
     (send blink14 :newcoords (make-coords :pos (float-vector 1.525879e-05 -1.883499e-05 60.0) :rot #2f((1.0 -3.278254e-07 3.916662e-07) (-3.916660e-07 5.066395e-07 1.0) (-3.278256e-07 -1.0 5.066394e-07))))
     (send blink13 :assoc blink14)
     (send blink13 :newcoords (make-coords :pos (float-vector 200.0 8.482405e-05 300.0) :rot #2f((-1.0 8.429370e-07 0.0) (-8.429370e-07 -1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink13)
     (send blink1 :newcoords (make-coords :pos (float-vector 190.0 110.0 -72.0) :rot #2f((4.241202e-07 1.0 0.0) (-1.0 4.241202e-07 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send blink4 :newcoords (make-coords :pos (float-vector -190.0 110.0 -72.0) :rot #2f((4.241202e-07 1.0 0.0) (-1.0 4.241202e-07 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink4)
     (send blink7 :newcoords (make-coords :pos (float-vector 190.0 -110.0 -72.0) :rot #2f((4.241202e-07 -1.0 0.0) (1.0 4.241202e-07 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink7)
     (send blink10 :newcoords (make-coords :pos (float-vector -190.0 -110.0 -72.0) :rot #2f((4.241202e-07 -1.0 0.0) (1.0 4.241202e-07 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink10)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of lf-end-coords
     (setq lf-end-coords
       (make-cascoords
	:coords (send (send blink0 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 190.0 110.0 -72.0) :rot #2f((4.241202e-07 1.0 1.172280e-14) (-1.0 4.241202e-07 -5.369721e-15) (-5.369726e-15 -1.172280e-14 1.0))))))
     (send blink0 :assoc lf-end-coords)

     ;; definition of lb-end-coords
     (setq lb-end-coords
       (make-cascoords
	:coords (send (send blink0 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -190.0 110.0 -72.0) :rot #2f((3.645156e-07 1.0 0.0) (-1.0 3.645156e-07 0.0) (0.0 0.0 1.0))))))
     (send blink0 :assoc lb-end-coords)

     ;; definition of rf-end-coords
     (setq rf-end-coords
       (make-cascoords
	:coords (send (send blink0 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector 190.0 -110.0 -72.0) :rot #2f((4.241202e-07 -1.0 0.0) (1.0 4.241202e-07 0.0) (0.0 0.0 1.0))))))
     (send blink0 :assoc rf-end-coords)

     ;; definition of rb-end-coords
     (setq rb-end-coords
       (make-cascoords
	:coords (send (send blink0 :copy-worldcoords) :transform 
		      (make-coords :pos (float-vector -190.0 -110.0 -72.0) :rot #2f((4.241202e-07 -1.0 5.358803e-15) (1.0 4.241202e-07 -9.942750e-16) (9.942727e-16 5.358804e-15 1.0))))))
     (send blink0 :assoc rb-end-coords)

     ;; definition of joint

     ;; definition of :neck-y
     (setq joint12 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink13 :name :titan-head-neck-y :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :neck-p
     (setq joint13 (instance rotational-joint :init
			     :parent-link blink13 :child-link blink14 :name :titan-head-neck-p :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :crotch-y
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :lf-crotch-y :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :crotch-r
     (setq joint1 (instance rotational-joint :init
			     :parent-link blink1 :child-link blink2 :name :lf-crotch-r :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :knee-r
     (setq joint2 (instance rotational-joint :init
			     :parent-link blink2 :child-link blink3 :name :lf-knee-r :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :crotch-y
     (setq joint3 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink4 :name :lb-crotch-y :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :crotch-r
     (setq joint4 (instance rotational-joint :init
			     :parent-link blink4 :child-link blink5 :name :lb-crotch-r :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :knee-r
     (setq joint5 (instance rotational-joint :init
			     :parent-link blink5 :child-link blink6 :name :lb-knee-r :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :crotch-y
     (setq joint6 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink7 :name :rf-crotch-y :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :crotch-r
     (setq joint7 (instance rotational-joint :init
			     :parent-link blink7 :child-link blink8 :name :rf-crotch-r :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :knee-r
     (setq joint8 (instance rotational-joint :init
			     :parent-link blink8 :child-link blink9 :name :rf-knee-r :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :crotch-y
     (setq joint9 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink10 :name :rb-crotch-y :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :crotch-r
     (setq joint10 (instance rotational-joint :init
			     :parent-link blink10 :child-link blink11 :name :rb-crotch-r :axis :-z
			     :min  -90.0 :max   90.0))

     ;; definition of :knee-r
     (setq joint11 (instance rotational-joint :init
			     :parent-link blink11 :child-link blink12 :name :rb-knee-r :axis :-z
			     :min  -90.0 :max   90.0))

     (setq titan-head-root-link blink13)
     (setq titan-head (list blink13 blink14))
     (setq lf-root-link blink1)
     (setq lf (list blink1 blink2 blink3))
     (setq lb-root-link blink4)
     (setq lb (list blink4 blink5 blink6))
     (setq rf-root-link blink7)
     (setq rf (list blink7 blink8 blink9))
     (setq rb-root-link blink10)
     (setq rb (list blink10 blink11 blink12))
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5 blink6 blink7 blink8 blink9 blink10 blink11 blink12 blink13 blink14))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4 joint5 joint6 joint7 joint8 joint9 joint10 joint11 joint12 joint13))
     ;; definition of collision-avoidance-links
     (setq collision-avoidance-links
       (list
        ))

     (setq sensors (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)
     self))
  )

(defun jrob1 (&rest args) (instance* jrob1-robot :init args))
;; (format *error-output* "(instance jrob1-robot :init) for generating model~%")
