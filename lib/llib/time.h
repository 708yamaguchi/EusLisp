static pointer (*ftab[13])();

#define QUOTE_STRINGS_SIZE 184
static char *quote_strings[QUOTE_STRINGS_SIZE]={
    "*month-days*",
    "/=",
    "#(:year :month :day :hour :minute :second)",
    "*month-names*",
    "assoc",
    ":test",
    "string-equal",
    "\"month name\"",
    "*weekday-names*",
    "\"weekday name <0 or >=7\"",
    "\"weekday name\"",
    ":make",
    ":second",
    "#(:year :month :day :hour :minute :second :micro)",
    "string",
    "minusp",
    "\"-\"",
    "zerop",
    "\"\"",
    "\"~a days \"",
    "\"~a:~a:~a\"",
    "digits-string",
    "\"\"",
    "\".~a\"",
    "send-message",
    "super",
    ":prin1",
    ":string",
    ":init",
    ":total-seconds",
    "\"~a:~a:~a\"",
    ":iso-time-string",
    "make-string-input-stream",
    "*time-readtable*",
    "*readtable*",
    "jst",
    "calendar-time",
    ":year",
    ":month",
    ":day",
    "interval-time",
    ":hour",
    ":minute",
    ":add",
    ":now",
    "#(:year :month :day :hour :minute :second :micro)",
    ":compute-seconds",
    "fourth",
    ":midnight",
    ":today",
    ":year-day",
    ":iso-string",
    ":full",
    "member",
    "\"~a, ~a GMT\"",
    ":weekday-string",
    "\"~a~a~a~a~a~a\"",
    "\"\"",
    "\"\"",
    "\"\"",
    "\"\"",
    "\"\"",
    "\"\"",
    "\"~d-~a-~a ~a:~a:~a\"",
    "\"~d-~a-~a\"",
    "\"~a:~a:~a\"",
    ":english",
    "((\"Sunday\" \"Sun\" \"ÆüÍË\" \"Æü\") (\"Monday\" \"Mon\" \"·îÍË\" \"·î\") (\"Tuesday\" \"Tue\" \"²ÐÍË\" \"²Ð\") (\"Wednesday\" \"Wed\" \"¿åÍË\" \"¿å\") (\"Thursday\" \"Thu\" \"ÌÚÍË\" \"ÌÚ\") (\"Friday\" \"Fri\" \"¶âÍË\" \"¶â\") (\"Saturday\" \"Sat\" \"ÅÚÍË\" \"ÅÚ\"))",
    "(japanese :japanese :jp jp)",
    ":lisp",
    "*package*",
    "\"no such package\"",
    "(leap-year-p secs-since-1970 seconds sec-to-date make-time now parse-time-string read-iso-date read-iso-time read-iso-datetime parse-iso-time-string *time-readtable* interval-time calendar-time *month-names*)",
    "tz",
    ":global",
    "read-from-string",
    "*day-seconds*",
    ":constant",
    "#(31 28 31 30 31 30 31 31 30 31 30 31)",
    "((jan 0) (feb 1) (mar 2) (apr 3) (may 4) (jun 5) (jul 6) (aug 7) (sep 8) (oct 9) (nov 10) (dec 11) (january 0) (february 1) (march 2) (april 3) (june 5) (july 6) (august 7) (september 8) (october 9) (november 10) (december 11))",
    "((sun 0) (sunday 0) (mon 1) (monday 1) (tue 2) (tuesday 2) (wed 3) (wednesday 3) (thr 4) (thursday 4) (thur 4) (thu 4) (fri 5) (friday 5) (sat 6) (saturday 6))",
    "year-day",
    "\"(month day &optional (year (aref (unix:localtime) 5)))\"",
    "leap-year-p",
    "\"(year)\"",
    "secs-since-1970",
    "\"(&key year month day (hour 0) (minute 0) (second 0))\"",
    "month-index",
    "\"(mname)\"",
    "weekday-index",
    "\"(wdname)\"",
    ":super",
    "propertied-object",
    ":slots",
    "(total-seconds seconds micros days (hours :type :integer) (minutes :type :integer))",
    ":metaclass",
    ":element-type",
    ":size",
    ":documentation",
    "make-class",
    "\"(self class secs)\"",
    "\"(self class &key (year 0) (month 0) (day 0) (hour 0) (minute 0) (second 0) (micro 0))\"",
    "\"(self class)\"",
    "\"(self class strm &rest mesg)\"",
    ":micro",
    "\"(self class)\"",
    "\"(self class)\"",
    ":seconds",
    "\"(self class)\"",
    ":total-minutes",
    "\"(self class)\"",
    ":minutes",
    "\"(self class)\"",
    ":total-hours",
    "\"(self class)\"",
    ":hours",
    "\"(self class)\"",
    ":days",
    "\"(self class)\"",
    ":total-days",
    "\"(self class)\"",
    "\"(self class tint)\"",
    ":subtract",
    "\"(self class tint)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    ":vtype",
    "copy-readtable",
    "(special *time-readtable*)",
    "set-syntax-from-char",
    "parse-time-string",
    "\"(time-string)\"",
    "read-iso-date",
    "\"(datestr)\"",
    "read-iso-time",
    "\"(timestr)\"",
    "read-iso-datetime",
    "\"(datetimestr)\"",
    "parse-iso-time-string",
    "\"(datetimestr)\"",
    "(weekday months years timezone dst)",
    "now",
    "\"nil\"",
    "\"(self class &optional (secs 0) (micro 0) (tzone 0) (daylight 0))\"",
    "\"(self class &key (year 0) (month 0) (day 0) (hour 0) (minute 0) (second 0) (micro 0))\"",
    ":make-localtime",
    "\"(self class ltime)\"",
    "\"(self class &optional (secs (unix:gettimeofday)))\"",
    ":noon",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    ":offset-day",
    "\"(self class offset)\"",
    ":offset-hour",
    "\"(self class offset)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    ":asctime",
    "\"(self class)\"",
    "\"combination of :year, :month, :day, :hour, :minute, and :second\"",
    ":parse-string",
    "\"(self class s)\"",
    "\"(self class)\"",
    ":iso-date-string",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class &optional (lang :english) (long nil))\"",
    ":parse-iso-string",
    "\"(self class s)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    ":weekday",
    "\"(self class)\"",
    "\"(self class)\"",
    "\"(self class)\"",
    ":day-seconds",
    "\"(self class)\"",
    ":time",
    "\"@(#)$Id: time.l,v 1.16 2001/02/04 05:59:27 matsui Exp $\"",
    "provide",
  };
