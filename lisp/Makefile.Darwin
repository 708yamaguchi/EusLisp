# makefile for EusLisp on sun4 with SunOS (Solaris)
# RCSid="@(#)$Id: Makefile.Linux.thread,v 1.8 2006/10/28 05:16:04 k-okada Exp $"
#	Copyright (1988) Toshihiro MATSUI, Electrotechnical Laboratory
#	1989/Oct
#	1990/Sep Second Tape Distribution
#	KOBJECTS --- eus kernel objects written in C
#	NOKOBJECTS-- eus kernel, but cannot be optimized with -O option
#	CLIBOBJECTS- functions written in C, not members of kernel
#	LOBJECTS --- functions coded in EUSLISP; must be compiled with euscomp
#	GEOOBJECTS-- geometric modeling functions and classes
#	XOBJECTS---- Xwindow interface
#	XTKOBJECTS---- Xwindow interface
#	IMGOBJECTS--- image processing
#	MTOBJECTS--- multithread functions
#
#########################################################################
# Customizable section begins
#########################################################################

ARCH=Darwin
include Makefile.generic1

THREAD= -DTHREADED -DPTHREAD
MFLAGS=
XVERSION=X_V11R6_1


#
# Select CFLAGS and XVERSION according to the version of SunOS and Xlib.
#
# for Linux

GCC_VERSION=$(shell gcc -dumpversion | sed s/\\..\*//)
ifeq ($(GCC_VERSION), 2)
 CPU_OPTIMIZE=-m486
 ALIGN_FUNCTIONS="-malign-functions=4"
else
 CPU_OPTIMIZE=#-mcpu=i486
 ALIGN_FUNCTIONS=-falign-functions=4
 GCC3=-DGCC3 -DGCC4
endif

# Pentium's arch returns 'i586', which is ignored by conditionals in c/*.[ch].
MACHINE=i486
DEBUG= -g

# If you use libc.so.5, remove -DLIB6 option.
# In order to include thread library, libc.so.6 is preferrable.

CFLAGS=-D$(MACHINE) -DLinux -D_REENTRANT -DVERSION=\"$(VERSION)\" -DDarwin \
	-DLIB6 $(ALIGN_FUNCTIONS) -falign-functions=4 \
        $(DEBUG) $(CPU_OPTIMIZE) $(THREAD) -D$(XVERSION) \
	-DGCC $(GCC3) \
        -I/usr/include -I/usr/X11R6/include -I$(EUSDIR)/include

# Use gcc for C-compiling on SunOS4. Sun's cc is ok on Solaris.
# /usr/ucb/cc cannot compile because of its incapability of recognizing
# prototype declarations.
#CC=cc
CC=gcc -m32 -DUSE_MULTI_LIB
LD=gcc -m32 

#
# L I B R A R I E S
# Three kinds of libraries are needed to build eus.
# 1. RAWLIB: unix libraries needed to make eus0-eus2
# 2. XLIB: X window libraries
#    When you use a window toolkit, you may need to override the 'read'
#    function in libc.a with a specific window library such as libXview.a.
# 3. EUSLIB: euslisp functions that cannot be linked in eus because of
#    'GLOBAL OFFSET TABLE OVERFLOW', that are xwindow interface functions.
# You may add any optional user-supplied library in EUSLIB.
# On Solaris, XLIB and EUSLIB are combined together into lib/libeusx.so.

RAWLIB=-ldl -lm -lpthread
XLIB= -L/usr/X11R6/lib -lX11

# specify directories where euslisp's libraries are located.
#EUSLIB= -Xlinker -R$(ADLIBDIR):$(EUSDIR)/lib/Linux -L$(ADLIBDIR)
EUSLIB= -L$(ADLIBDIR) 
#GLLIB= -L$(ADLIBDIR) -lGLU -lGL -lXext -leusgl
GLLIB= -L/usr/X11R6/lib -lGL -lGLU -lXext -lX11 -Wl,-dylib_file,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib:/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib

# POSIX Thread 
THREADDEP=mthread_posix.c
#THREADDEP=pthreads.c


# If you don't like optimization, comment out the next line.
# OFLAGS=-O2

# link-editor's default flags ?-rdynamic 
SOFLAGS= -dynamiclib --unresolved-symbols=ignore-all --enable-runtime-pseudo-reloc
LDFLAGS= -rdynamic -Xlinker -bind_at_load
MTCOBJECTS= $(OBJDIR)/mthread.o $(OBJDIR)/mthread_posix.o
#MTCOBJECTS= $(OBJDIR)/mthread.o $(OBJDIR)/pthreads.o
MAPOPTION=  $(OBJDIR)/par.o

#################################################################
# end of the customizable section
################################################################


include Makefile.generic2

$(BINDIR)/eusg $(ADLIBDIR)/$(LIBEUSGEO) $(GEOOBJECTS) $(GEOCOBJECTS) $(IMGCOBJECTS) $(IMGOBJECTS) \
$(BINDIR)/eusx $(ADLIBDIR)/$(LIBEUSX) $(XOBJECTS) $(XTKOBJECTS) $(XCOBJECTS) 	\
$(BINDIR)/eusgl $(ADLIBDIR)/$(LIBEUSGL) $(GLOBJECTS) $(GLCOBJECTS) 	:
	@echo ";; Do not compile $@ for Darwin"

# $(ADLIBDIR)/$(LIBEUSGEO):
# 	@echo ";; Do not compile $@ for Darwin"
# $(ADLIBDIR)/$(LIBEUSX):
# 	@echo ";; Do not compile $@ for Darwin"
# $(ADLIBDIR)/$(LIBEUSGL):
# 	@echo ";; Do not compile $@ for Darwin"

# $(BINDIR)/eusg:	 $(BINDIR)/eus2 $(MTOBJECTS) $(GEOOBJECTS) $(GEOCOBJECTS)  \
# 		$(IMGCOBJECTS) $(IMGOBJECTS)
# 	($(CC) -o $(BINDIR)/eusg $(LDFLAGS)  \
# 	 	$(NOKOBJECTS) $(KOBJECTS) $(KSOBJECTS) $(LOBJECTS) \
# 		$(LCOBJECTS) $(MTCOBJECTS) $(RGCOBJECTS) $(MTOBJECTS) \
# 		$(GEOOBJECTS) $(GEOCOBJECTS) \
# 		$(IMGCOBJECTS) $(IMGOBJECTS) \
# 		$(COMPOBJECTS) $(EUSLIB) $(RAWLIB) ; \
# 	cd $(BINDIR); rm -f euscomp; ln -sf eusg euscomp)

# $(BINDIR)/eusx:	 $(NOKOBJECTS) $(KOBJECTS) $(KSOBJECTS) $(LOBJECTS) \
# 		$(COMPOBJECTS) \
# 		$(MTCOBJECTS) $(RGCOBJECTS) $(MTOBJECTS) \
# 		$(XOBJECTS) $(XTKOBJECTS) $(XCOBJECTS) 
# 	($(CC) -o $(BINDIR)/eusx $(LDFLAGS)  \
# 		$(NOKOBJECTS) $(KOBJECTS) $(KSOBJECTS) \
# 		$(LOBJECTS)   $(LCOBJECTS) $(COMPOBJECTS) \
# 		$(MTCOBJECTS) $(RGCOBJECTS) $(MTOBJECTS) \
# 		$(GEOOBJECTS) $(GEOCOBJECTS) \
# 		$(IMGCOBJECTS) $(IMGOBJECTS) \
# 		$(XOBJECTS) $(XTKOBJECTS) $(XCOBJECTS) \
# 		$(XLIB)  $(RAWLIB);)

# $(BINDIR)/eusgl: $(NOKOBJECTS) $(KOBJECTS) $(KSOBJECTS) $(LOBJECTS) \
# 		$(LCOBJECTS) $(COMPOBJECTS) $(MAPOPTION) \
# 		$(LIBEUSGEO) $(LIBEUSX) $(LIBEUSGL) 
# 		$(CC) $(LDFLAGS) -o $(BINDIR)/eusgl \
# 		$(NOKOBJECTS) $(KOBJECTS) $(KSOBJECTS) \
# 		$(LOBJECTS) $(LCOBJECTS)  $(COMPOBJECTS) \
# 		$(MTCOBJECTS) $(RGCOBJECTS) $(MTOBJECTS) \
# 		$(MAPOPTION) $(GEOOBJECTS) $(GEOCOBJECTS) \
# 		$(IMGCOBJECTS) $(IMGOBJECTS) \
# 		$(XOBJECTS) $(XTKOBJECTS) $(XCOBJECTS) \
# 		$(GLCOBJECTS) $(GLOBJECTS) \
# 		$(GLLIB) $(RAWLIB)\
# 		>$(ADLIBDIR)/eusmap
# 		$(CC) $(SOFLAGS) -o $(ADLIBDIR)/libeusgl.dylib $(LDFLAGS) \
# 		$(NOKOBJECTS) $(KOBJECTS) $(KSOBJECTS) \
# 		$(LOBJECTS) $(LCOBJECTS)  $(COMPOBJECTS) \
# 		$(MTCOBJECTS) $(RGCOBJECTS) $(MTOBJECTS) \
# 		$(MAPOPTION) $(GEOOBJECTS) $(GEOCOBJECTS) \
# 		$(IMGCOBJECTS) $(IMGOBJECTS) \
# 		$(XOBJECTS) $(XTKOBJECTS) $(XCOBJECTS) \
# 		$(GLCOBJECTS) $(GLOBJECTS) \
# 		$(GLLIB) $(RAWLIB)\

		
# COMPOBJECTS =

